namespace eBay.Service
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
public partial class eBayClient {

#region 属性
#endregion

#region 方法

	public async System.Threading.Tasks.Task<Core.Soap.AddFixedPriceItemResponseType> AddFixedPriceItemAsync(Core.Soap.AddFixedPriceItemRequestType request)
	{
		var apiName = "AddFixedPriceItem";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.AddFixedPriceItemRequest
{
  AddFixedPriceItemRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.AddFixedPriceItemAsync(requestInfo);
return response.AddFixedPriceItemResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.AddItemResponseType> AddItemAsync(Core.Soap.AddItemRequestType request)
	{
		var apiName = "AddItem";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.AddItemRequest
{
  AddItemRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.AddItemAsync(requestInfo);
return response.AddItemResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.AddItemsResponseType> AddItemsAsync(Core.Soap.AddItemsRequestType request)
	{
		var apiName = "AddItems";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.AddItemsRequest
{
  AddItemsRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.AddItemsAsync(requestInfo);
return response.AddItemsResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.AddMemberMessageAAQToPartnerResponseType> AddMemberMessageAAQToPartnerAsync(Core.Soap.AddMemberMessageAAQToPartnerRequestType request)
	{
		var apiName = "AddMemberMessageAAQToPartner";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.AddMemberMessageAAQToPartnerRequest
{
  AddMemberMessageAAQToPartnerRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.AddMemberMessageAAQToPartnerAsync(requestInfo);
return response.AddMemberMessageAAQToPartnerResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.AddMemberMessageRTQResponseType> AddMemberMessageRTQAsync(Core.Soap.AddMemberMessageRTQRequestType request)
	{
		var apiName = "AddMemberMessageRTQ";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.AddMemberMessageRTQRequest
{
  AddMemberMessageRTQRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.AddMemberMessageRTQAsync(requestInfo);
return response.AddMemberMessageRTQResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.AddMemberMessagesAAQToBidderResponseType> AddMemberMessagesAAQToBidderAsync(Core.Soap.AddMemberMessagesAAQToBidderRequestType request)
	{
		var apiName = "AddMemberMessagesAAQToBidder";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.AddMemberMessagesAAQToBidderRequest
{
  AddMemberMessagesAAQToBidderRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.AddMemberMessagesAAQToBidderAsync(requestInfo);
return response.AddMemberMessagesAAQToBidderResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.AddOrderResponseType> AddOrderAsync(Core.Soap.AddOrderRequestType request)
	{
		var apiName = "AddOrder";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.AddOrderRequest
{
  AddOrderRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.AddOrderAsync(requestInfo);
return response.AddOrderResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.AddSecondChanceItemResponseType> AddSecondChanceItemAsync(Core.Soap.AddSecondChanceItemRequestType request)
	{
		var apiName = "AddSecondChanceItem";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.AddSecondChanceItemRequest
{
  AddSecondChanceItemRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.AddSecondChanceItemAsync(requestInfo);
return response.AddSecondChanceItemResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.AddToItemDescriptionResponseType> AddToItemDescriptionAsync(Core.Soap.AddToItemDescriptionRequestType request)
	{
		var apiName = "AddToItemDescription";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.AddToItemDescriptionRequest
{
  AddToItemDescriptionRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.AddToItemDescriptionAsync(requestInfo);
return response.AddToItemDescriptionResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.AddToWatchListResponseType> AddToWatchListAsync(Core.Soap.AddToWatchListRequestType request)
	{
		var apiName = "AddToWatchList";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.AddToWatchListRequest
{
  AddToWatchListRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.AddToWatchListAsync(requestInfo);
return response.AddToWatchListResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.CompleteSaleResponseType> CompleteSaleAsync(Core.Soap.CompleteSaleRequestType request)
	{
		var apiName = "CompleteSale";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.CompleteSaleRequest
{
  CompleteSaleRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.CompleteSaleAsync(requestInfo);
return response.CompleteSaleResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.ConfirmIdentityResponseType> ConfirmIdentityAsync(Core.Soap.ConfirmIdentityRequestType request)
	{
		var apiName = "ConfirmIdentity";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.ConfirmIdentityRequest
{
  ConfirmIdentityRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.ConfirmIdentityAsync(requestInfo);
return response.ConfirmIdentityResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.DeleteMyMessagesResponseType> DeleteMyMessagesAsync(Core.Soap.DeleteMyMessagesRequestType request)
	{
		var apiName = "DeleteMyMessages";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.DeleteMyMessagesRequest
{
  DeleteMyMessagesRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.DeleteMyMessagesAsync(requestInfo);
return response.DeleteMyMessagesResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.EndFixedPriceItemResponseType> EndFixedPriceItemAsync(Core.Soap.EndFixedPriceItemRequestType request)
	{
		var apiName = "EndFixedPriceItem";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.EndFixedPriceItemRequest
{
  EndFixedPriceItemRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.EndFixedPriceItemAsync(requestInfo);
return response.EndFixedPriceItemResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.EndItemResponseType> EndItemAsync(Core.Soap.EndItemRequestType request)
	{
		var apiName = "EndItem";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.EndItemRequest
{
  EndItemRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.EndItemAsync(requestInfo);
return response.EndItemResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.EndItemsResponseType> EndItemsAsync(Core.Soap.EndItemsRequestType request)
	{
		var apiName = "EndItems";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.EndItemsRequest
{
  EndItemsRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.EndItemsAsync(requestInfo);
return response.EndItemsResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.ExtendSiteHostedPicturesResponseType> ExtendSiteHostedPicturesAsync(Core.Soap.ExtendSiteHostedPicturesRequestType request)
	{
		var apiName = "ExtendSiteHostedPictures";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.ExtendSiteHostedPicturesRequest
{
  ExtendSiteHostedPicturesRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.ExtendSiteHostedPicturesAsync(requestInfo);
return response.ExtendSiteHostedPicturesResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.FetchTokenResponseType> FetchTokenAsync(Core.Soap.FetchTokenRequestType request)
	{
		var apiName = "FetchToken";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.FetchTokenRequest
{
  FetchTokenRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.FetchTokenAsync(requestInfo);
return response.FetchTokenResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.GetAccountResponseType> GetAccountAsync(Core.Soap.GetAccountRequestType request)
	{
		var apiName = "GetAccount";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.GetAccountRequest
{
  GetAccountRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.GetAccountAsync(requestInfo);
return response.GetAccountResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.GetAdFormatLeadsResponseType> GetAdFormatLeadsAsync(Core.Soap.GetAdFormatLeadsRequestType request)
	{
		var apiName = "GetAdFormatLeads";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.GetAdFormatLeadsRequest
{
  GetAdFormatLeadsRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.GetAdFormatLeadsAsync(requestInfo);
return response.GetAdFormatLeadsResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.GetAllBiddersResponseType> GetAllBiddersAsync(Core.Soap.GetAllBiddersRequestType request)
	{
		var apiName = "GetAllBidders";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.GetAllBiddersRequest
{
  GetAllBiddersRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.GetAllBiddersAsync(requestInfo);
return response.GetAllBiddersResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.GetBestOffersResponseType> GetBestOffersAsync(Core.Soap.GetBestOffersRequestType request)
	{
		var apiName = "GetBestOffers";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.GetBestOffersRequest
{
  GetBestOffersRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.GetBestOffersAsync(requestInfo);
return response.GetBestOffersResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.GetBidderListResponseType> GetBidderListAsync(Core.Soap.GetBidderListRequestType request)
	{
		var apiName = "GetBidderList";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.GetBidderListRequest
{
  GetBidderListRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.GetBidderListAsync(requestInfo);
return response.GetBidderListResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.GetCategoriesResponseType> GetCategoriesAsync(Core.Soap.GetCategoriesRequestType request)
	{
		var apiName = "GetCategories";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.GetCategoriesRequest
{
  GetCategoriesRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.GetCategoriesAsync(requestInfo);
return response.GetCategoriesResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.GetCategoryFeaturesResponseType> GetCategoryFeaturesAsync(Core.Soap.GetCategoryFeaturesRequestType request)
	{
		var apiName = "GetCategoryFeatures";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.GetCategoryFeaturesRequest
{
  GetCategoryFeaturesRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.GetCategoryFeaturesAsync(requestInfo);
return response.GetCategoryFeaturesResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.GetCategoryMappingsResponseType> GetCategoryMappingsAsync(Core.Soap.GetCategoryMappingsRequestType request)
	{
		var apiName = "GetCategoryMappings";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.GetCategoryMappingsRequest
{
  GetCategoryMappingsRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.GetCategoryMappingsAsync(requestInfo);
return response.GetCategoryMappingsResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.GetChallengeTokenResponseType> GetChallengeTokenAsync(Core.Soap.GetChallengeTokenRequestType request)
	{
		var apiName = "GetChallengeToken";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.GetChallengeTokenRequest
{
  GetChallengeTokenRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.GetChallengeTokenAsync(requestInfo);
return response.GetChallengeTokenResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.GetDescriptionTemplatesResponseType> GetDescriptionTemplatesAsync(Core.Soap.GetDescriptionTemplatesRequestType request)
	{
		var apiName = "GetDescriptionTemplates";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.GetDescriptionTemplatesRequest
{
  GetDescriptionTemplatesRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.GetDescriptionTemplatesAsync(requestInfo);
return response.GetDescriptionTemplatesResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.GetFeedbackResponseType> GetFeedbackAsync(Core.Soap.GetFeedbackRequestType request)
	{
		var apiName = "GetFeedback";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.GetFeedbackRequest
{
  GetFeedbackRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.GetFeedbackAsync(requestInfo);
return response.GetFeedbackResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.GetItemResponseType> GetItemAsync(Core.Soap.GetItemRequestType request)
	{
		var apiName = "GetItem";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.GetItemRequest
{
  GetItemRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.GetItemAsync(requestInfo);
return response.GetItemResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.GetItemShippingResponseType> GetItemShippingAsync(Core.Soap.GetItemShippingRequestType request)
	{
		var apiName = "GetItemShipping";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.GetItemShippingRequest
{
  GetItemShippingRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.GetItemShippingAsync(requestInfo);
return response.GetItemShippingResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.GetItemTransactionsResponseType> GetItemTransactionsAsync(Core.Soap.GetItemTransactionsRequestType request)
	{
		var apiName = "GetItemTransactions";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.GetItemTransactionsRequest
{
  GetItemTransactionsRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.GetItemTransactionsAsync(requestInfo);
return response.GetItemTransactionsResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.GetItemsAwaitingFeedbackResponseType> GetItemsAwaitingFeedbackAsync(Core.Soap.GetItemsAwaitingFeedbackRequestType request)
	{
		var apiName = "GetItemsAwaitingFeedback";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.GetItemsAwaitingFeedbackRequest
{
  GetItemsAwaitingFeedbackRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.GetItemsAwaitingFeedbackAsync(requestInfo);
return response.GetItemsAwaitingFeedbackResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.GetMemberMessagesResponseType> GetMemberMessagesAsync(Core.Soap.GetMemberMessagesRequestType request)
	{
		var apiName = "GetMemberMessages";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.GetMemberMessagesRequest
{
  GetMemberMessagesRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.GetMemberMessagesAsync(requestInfo);
return response.GetMemberMessagesResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.GetMessagePreferencesResponseType> GetMessagePreferencesAsync(Core.Soap.GetMessagePreferencesRequestType request)
	{
		var apiName = "GetMessagePreferences";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.GetMessagePreferencesRequest
{
  GetMessagePreferencesRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.GetMessagePreferencesAsync(requestInfo);
return response.GetMessagePreferencesResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.GetMyMessagesResponseType> GetMyMessagesAsync(Core.Soap.GetMyMessagesRequestType request)
	{
		var apiName = "GetMyMessages";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.GetMyMessagesRequest
{
  GetMyMessagesRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.GetMyMessagesAsync(requestInfo);
return response.GetMyMessagesResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.GetMyeBayBuyingResponseType> GetMyeBayBuyingAsync(Core.Soap.GetMyeBayBuyingRequestType request)
	{
		var apiName = "GetMyeBayBuying";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.GetMyeBayBuyingRequest
{
  GetMyeBayBuyingRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.GetMyeBayBuyingAsync(requestInfo);
return response.GetMyeBayBuyingResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.GetMyeBaySellingResponseType> GetMyeBaySellingAsync(Core.Soap.GetMyeBaySellingRequestType request)
	{
		var apiName = "GetMyeBaySelling";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.GetMyeBaySellingRequest
{
  GetMyeBaySellingRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.GetMyeBaySellingAsync(requestInfo);
return response.GetMyeBaySellingResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.GetNotificationPreferencesResponseType> GetNotificationPreferencesAsync(Core.Soap.GetNotificationPreferencesRequestType request)
	{
		var apiName = "GetNotificationPreferences";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.GetNotificationPreferencesRequest
{
  GetNotificationPreferencesRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.GetNotificationPreferencesAsync(requestInfo);
return response.GetNotificationPreferencesResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.GetNotificationsUsageResponseType> GetNotificationsUsageAsync(Core.Soap.GetNotificationsUsageRequestType request)
	{
		var apiName = "GetNotificationsUsage";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.GetNotificationsUsageRequest
{
  GetNotificationsUsageRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.GetNotificationsUsageAsync(requestInfo);
return response.GetNotificationsUsageResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.GetOrdersResponseType> GetOrdersAsync(Core.Soap.GetOrdersRequestType request)
	{
		var apiName = "GetOrders";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.GetOrdersRequest
{
  GetOrdersRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.GetOrdersAsync(requestInfo);
return response.GetOrdersResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.GetSellerEventsResponseType> GetSellerEventsAsync(Core.Soap.GetSellerEventsRequestType request)
	{
		var apiName = "GetSellerEvents";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.GetSellerEventsRequest
{
  GetSellerEventsRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.GetSellerEventsAsync(requestInfo);
return response.GetSellerEventsResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.GetSellerListResponseType> GetSellerListAsync(Core.Soap.GetSellerListRequestType request)
	{
		var apiName = "GetSellerList";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.GetSellerListRequest
{
  GetSellerListRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.GetSellerListAsync(requestInfo);
return response.GetSellerListResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.GetSellerTransactionsResponseType> GetSellerTransactionsAsync(Core.Soap.GetSellerTransactionsRequestType request)
	{
		var apiName = "GetSellerTransactions";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.GetSellerTransactionsRequest
{
  GetSellerTransactionsRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.GetSellerTransactionsAsync(requestInfo);
return response.GetSellerTransactionsResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.GetSessionIDResponseType> GetSessionIDAsync(Core.Soap.GetSessionIDRequestType request)
	{
		var apiName = "GetSessionID";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.GetSessionIDRequest
{
  GetSessionIDRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.GetSessionIDAsync(requestInfo);
return response.GetSessionIDResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.GetShippingDiscountProfilesResponseType> GetShippingDiscountProfilesAsync(Core.Soap.GetShippingDiscountProfilesRequestType request)
	{
		var apiName = "GetShippingDiscountProfiles";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.GetShippingDiscountProfilesRequest
{
  GetShippingDiscountProfilesRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.GetShippingDiscountProfilesAsync(requestInfo);
return response.GetShippingDiscountProfilesResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.GetStoreResponseType> GetStoreAsync(Core.Soap.GetStoreRequestType request)
	{
		var apiName = "GetStore";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.GetStoreRequest
{
  GetStoreRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.GetStoreAsync(requestInfo);
return response.GetStoreResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.GetStoreCategoryUpdateStatusResponseType> GetStoreCategoryUpdateStatusAsync(Core.Soap.GetStoreCategoryUpdateStatusRequestType request)
	{
		var apiName = "GetStoreCategoryUpdateStatus";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.GetStoreCategoryUpdateStatusRequest
{
  GetStoreCategoryUpdateStatusRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.GetStoreCategoryUpdateStatusAsync(requestInfo);
return response.GetStoreCategoryUpdateStatusResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.GetTaxTableResponseType> GetTaxTableAsync(Core.Soap.GetTaxTableRequestType request)
	{
		var apiName = "GetTaxTable";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.GetTaxTableRequest
{
  GetTaxTableRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.GetTaxTableAsync(requestInfo);
return response.GetTaxTableResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.GetTokenStatusResponseType> GetTokenStatusAsync(Core.Soap.GetTokenStatusRequestType request)
	{
		var apiName = "GetTokenStatus";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.GetTokenStatusRequest
{
  GetTokenStatusRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.GetTokenStatusAsync(requestInfo);
return response.GetTokenStatusResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.GetUserResponseType> GetUserAsync(Core.Soap.GetUserRequestType request)
	{
		var apiName = "GetUser";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.GetUserRequest
{
  GetUserRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.GetUserAsync(requestInfo);
return response.GetUserResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.GetUserContactDetailsResponseType> GetUserContactDetailsAsync(Core.Soap.GetUserContactDetailsRequestType request)
	{
		var apiName = "GetUserContactDetails";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.GetUserContactDetailsRequest
{
  GetUserContactDetailsRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.GetUserContactDetailsAsync(requestInfo);
return response.GetUserContactDetailsResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.GetUserPreferencesResponseType> GetUserPreferencesAsync(Core.Soap.GetUserPreferencesRequestType request)
	{
		var apiName = "GetUserPreferences";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.GetUserPreferencesRequest
{
  GetUserPreferencesRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.GetUserPreferencesAsync(requestInfo);
return response.GetUserPreferencesResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.GetVeROReasonCodeDetailsResponseType> GetVeROReasonCodeDetailsAsync(Core.Soap.GetVeROReasonCodeDetailsRequestType request)
	{
		var apiName = "GetVeROReasonCodeDetails";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.GetVeROReasonCodeDetailsRequest
{
  GetVeROReasonCodeDetailsRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.GetVeROReasonCodeDetailsAsync(requestInfo);
return response.GetVeROReasonCodeDetailsResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.GetVeROReportStatusResponseType> GetVeROReportStatusAsync(Core.Soap.GetVeROReportStatusRequestType request)
	{
		var apiName = "GetVeROReportStatus";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.GetVeROReportStatusRequest
{
  GetVeROReportStatusRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.GetVeROReportStatusAsync(requestInfo);
return response.GetVeROReportStatusResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.GeteBayDetailsResponseType> GeteBayDetailsAsync(Core.Soap.GeteBayDetailsRequestType request)
	{
		var apiName = "GeteBayDetails";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.GeteBayDetailsRequest
{
  GeteBayDetailsRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.GeteBayDetailsAsync(requestInfo);
return response.GeteBayDetailsResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.GeteBayOfficialTimeResponseType> GeteBayOfficialTimeAsync(Core.Soap.GeteBayOfficialTimeRequestType request)
	{
		var apiName = "GeteBayOfficialTime";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.GeteBayOfficialTimeRequest
{
  GeteBayOfficialTimeRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.GeteBayOfficialTimeAsync(requestInfo);
return response.GeteBayOfficialTimeResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.LeaveFeedbackResponseType> LeaveFeedbackAsync(Core.Soap.LeaveFeedbackRequestType request)
	{
		var apiName = "LeaveFeedback";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.LeaveFeedbackRequest
{
  LeaveFeedbackRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.LeaveFeedbackAsync(requestInfo);
return response.LeaveFeedbackResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.PlaceOfferResponseType> PlaceOfferAsync(Core.Soap.PlaceOfferRequestType request)
	{
		var apiName = "PlaceOffer";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.PlaceOfferRequest
{
  PlaceOfferRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.PlaceOfferAsync(requestInfo);
return response.PlaceOfferResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.RelistFixedPriceItemResponseType> RelistFixedPriceItemAsync(Core.Soap.RelistFixedPriceItemRequestType request)
	{
		var apiName = "RelistFixedPriceItem";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.RelistFixedPriceItemRequest
{
  RelistFixedPriceItemRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.RelistFixedPriceItemAsync(requestInfo);
return response.RelistFixedPriceItemResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.RelistItemResponseType> RelistItemAsync(Core.Soap.RelistItemRequestType request)
	{
		var apiName = "RelistItem";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.RelistItemRequest
{
  RelistItemRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.RelistItemAsync(requestInfo);
return response.RelistItemResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.RemoveFromWatchListResponseType> RemoveFromWatchListAsync(Core.Soap.RemoveFromWatchListRequestType request)
	{
		var apiName = "RemoveFromWatchList";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.RemoveFromWatchListRequest
{
  RemoveFromWatchListRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.RemoveFromWatchListAsync(requestInfo);
return response.RemoveFromWatchListResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.RespondToBestOfferResponseType> RespondToBestOfferAsync(Core.Soap.RespondToBestOfferRequestType request)
	{
		var apiName = "RespondToBestOffer";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.RespondToBestOfferRequest
{
  RespondToBestOfferRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.RespondToBestOfferAsync(requestInfo);
return response.RespondToBestOfferResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.RespondToFeedbackResponseType> RespondToFeedbackAsync(Core.Soap.RespondToFeedbackRequestType request)
	{
		var apiName = "RespondToFeedback";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.RespondToFeedbackRequest
{
  RespondToFeedbackRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.RespondToFeedbackAsync(requestInfo);
return response.RespondToFeedbackResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.ReviseFixedPriceItemResponseType> ReviseFixedPriceItemAsync(Core.Soap.ReviseFixedPriceItemRequestType request)
	{
		var apiName = "ReviseFixedPriceItem";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.ReviseFixedPriceItemRequest
{
  ReviseFixedPriceItemRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.ReviseFixedPriceItemAsync(requestInfo);
return response.ReviseFixedPriceItemResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.ReviseInventoryStatusResponseType> ReviseInventoryStatusAsync(Core.Soap.ReviseInventoryStatusRequestType request)
	{
		var apiName = "ReviseInventoryStatus";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.ReviseInventoryStatusRequest
{
  ReviseInventoryStatusRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.ReviseInventoryStatusAsync(requestInfo);
return response.ReviseInventoryStatusResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.ReviseItemResponseType> ReviseItemAsync(Core.Soap.ReviseItemRequestType request)
	{
		var apiName = "ReviseItem";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.ReviseItemRequest
{
  ReviseItemRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.ReviseItemAsync(requestInfo);
return response.ReviseItemResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.ReviseMyMessagesResponseType> ReviseMyMessagesAsync(Core.Soap.ReviseMyMessagesRequestType request)
	{
		var apiName = "ReviseMyMessages";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.ReviseMyMessagesRequest
{
  ReviseMyMessagesRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.ReviseMyMessagesAsync(requestInfo);
return response.ReviseMyMessagesResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.ReviseMyMessagesFoldersResponseType> ReviseMyMessagesFoldersAsync(Core.Soap.ReviseMyMessagesFoldersRequestType request)
	{
		var apiName = "ReviseMyMessagesFolders";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.ReviseMyMessagesFoldersRequest
{
  ReviseMyMessagesFoldersRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.ReviseMyMessagesFoldersAsync(requestInfo);
return response.ReviseMyMessagesFoldersResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.RevokeTokenResponseType> RevokeTokenAsync(Core.Soap.RevokeTokenRequestType request)
	{
		var apiName = "RevokeToken";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.RevokeTokenRequest
{
  RevokeTokenRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.RevokeTokenAsync(requestInfo);
return response.RevokeTokenResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.SendInvoiceResponseType> SendInvoiceAsync(Core.Soap.SendInvoiceRequestType request)
	{
		var apiName = "SendInvoice";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.SendInvoiceRequest
{
  SendInvoiceRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.SendInvoiceAsync(requestInfo);
return response.SendInvoiceResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.SetMessagePreferencesResponseType> SetMessagePreferencesAsync(Core.Soap.SetMessagePreferencesRequestType request)
	{
		var apiName = "SetMessagePreferences";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.SetMessagePreferencesRequest
{
  SetMessagePreferencesRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.SetMessagePreferencesAsync(requestInfo);
return response.SetMessagePreferencesResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.SetNotificationPreferencesResponseType> SetNotificationPreferencesAsync(Core.Soap.SetNotificationPreferencesRequestType request)
	{
		var apiName = "SetNotificationPreferences";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.SetNotificationPreferencesRequest
{
  SetNotificationPreferencesRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.SetNotificationPreferencesAsync(requestInfo);
return response.SetNotificationPreferencesResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.SetShippingDiscountProfilesResponseType> SetShippingDiscountProfilesAsync(Core.Soap.SetShippingDiscountProfilesRequestType request)
	{
		var apiName = "SetShippingDiscountProfiles";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.SetShippingDiscountProfilesRequest
{
  SetShippingDiscountProfilesRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.SetShippingDiscountProfilesAsync(requestInfo);
return response.SetShippingDiscountProfilesResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.SetStoreCategoriesResponseType> SetStoreCategoriesAsync(Core.Soap.SetStoreCategoriesRequestType request)
	{
		var apiName = "SetStoreCategories";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.SetStoreCategoriesRequest
{
  SetStoreCategoriesRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.SetStoreCategoriesAsync(requestInfo);
return response.SetStoreCategoriesResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.SetTaxTableResponseType> SetTaxTableAsync(Core.Soap.SetTaxTableRequestType request)
	{
		var apiName = "SetTaxTable";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.SetTaxTableRequest
{
  SetTaxTableRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.SetTaxTableAsync(requestInfo);
return response.SetTaxTableResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.SetUserNotesResponseType> SetUserNotesAsync(Core.Soap.SetUserNotesRequestType request)
	{
		var apiName = "SetUserNotes";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.SetUserNotesRequest
{
  SetUserNotesRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.SetUserNotesAsync(requestInfo);
return response.SetUserNotesResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.SetUserPreferencesResponseType> SetUserPreferencesAsync(Core.Soap.SetUserPreferencesRequestType request)
	{
		var apiName = "SetUserPreferences";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.SetUserPreferencesRequest
{
  SetUserPreferencesRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.SetUserPreferencesAsync(requestInfo);
return response.SetUserPreferencesResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.UploadSiteHostedPicturesResponseType> UploadSiteHostedPicturesAsync(Core.Soap.UploadSiteHostedPicturesRequestType request)
	{
		var apiName = "UploadSiteHostedPictures";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.UploadSiteHostedPicturesRequest
{
  UploadSiteHostedPicturesRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.UploadSiteHostedPicturesAsync(requestInfo);
return response.UploadSiteHostedPicturesResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.ValidateChallengeInputResponseType> ValidateChallengeInputAsync(Core.Soap.ValidateChallengeInputRequestType request)
	{
		var apiName = "ValidateChallengeInput";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.ValidateChallengeInputRequest
{
  ValidateChallengeInputRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.ValidateChallengeInputAsync(requestInfo);
return response.ValidateChallengeInputResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.ValidateTestUserRegistrationResponseType> ValidateTestUserRegistrationAsync(Core.Soap.ValidateTestUserRegistrationRequestType request)
	{
		var apiName = "ValidateTestUserRegistration";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.ValidateTestUserRegistrationRequest
{
  ValidateTestUserRegistrationRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.ValidateTestUserRegistrationAsync(requestInfo);
return response.ValidateTestUserRegistrationResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.VeROReportItemsResponseType> VeROReportItemsAsync(Core.Soap.VeROReportItemsRequestType request)
	{
		var apiName = "VeROReportItems";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.VeROReportItemsRequest
{
  VeROReportItemsRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.VeROReportItemsAsync(requestInfo);
return response.VeROReportItemsResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.VerifyAddFixedPriceItemResponseType> VerifyAddFixedPriceItemAsync(Core.Soap.VerifyAddFixedPriceItemRequestType request)
	{
		var apiName = "VerifyAddFixedPriceItem";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.VerifyAddFixedPriceItemRequest
{
  VerifyAddFixedPriceItemRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.VerifyAddFixedPriceItemAsync(requestInfo);
return response.VerifyAddFixedPriceItemResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.VerifyAddItemResponseType> VerifyAddItemAsync(Core.Soap.VerifyAddItemRequestType request)
	{
		var apiName = "VerifyAddItem";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.VerifyAddItemRequest
{
  VerifyAddItemRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.VerifyAddItemAsync(requestInfo);
return response.VerifyAddItemResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.VerifyAddSecondChanceItemResponseType> VerifyAddSecondChanceItemAsync(Core.Soap.VerifyAddSecondChanceItemRequestType request)
	{
		var apiName = "VerifyAddSecondChanceItem";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.VerifyAddSecondChanceItemRequest
{
  VerifyAddSecondChanceItemRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.VerifyAddSecondChanceItemAsync(requestInfo);
return response.VerifyAddSecondChanceItemResponseType;
	}

	public async System.Threading.Tasks.Task<Core.Soap.VerifyRelistItemResponseType> VerifyRelistItemAsync(Core.Soap.VerifyRelistItemRequestType request)
	{
		var apiName = "VerifyRelistItem";
var url = getUrl(apiName);
var client = this.GeteBayAPIClient(url);
var requestInfo = new Core.Soap.VerifyRelistItemRequest
{
  VerifyRelistItemRequestType = handleRequest(request),
  RequesterCredentials = this.securityHeader
};
var response = await client.VerifyRelistItemAsync(requestInfo);
return response.VerifyRelistItemResponseType;
	}

	public Core.Soap.AddFixedPriceItemResponseType AddFixedPriceItem(Core.Soap.AddFixedPriceItemRequestType request)
	{
		return this.AddFixedPriceItemAsync(request).Result;
	}

	public Core.Soap.AddItemResponseType AddItem(Core.Soap.AddItemRequestType request)
	{
		return this.AddItemAsync(request).Result;
	}

	public Core.Soap.AddItemsResponseType AddItems(Core.Soap.AddItemsRequestType request)
	{
		return this.AddItemsAsync(request).Result;
	}

	public Core.Soap.AddMemberMessageAAQToPartnerResponseType AddMemberMessageAAQToPartner(Core.Soap.AddMemberMessageAAQToPartnerRequestType request)
	{
		return this.AddMemberMessageAAQToPartnerAsync(request).Result;
	}

	public Core.Soap.AddMemberMessageRTQResponseType AddMemberMessageRTQ(Core.Soap.AddMemberMessageRTQRequestType request)
	{
		return this.AddMemberMessageRTQAsync(request).Result;
	}

	public Core.Soap.AddMemberMessagesAAQToBidderResponseType AddMemberMessagesAAQToBidder(Core.Soap.AddMemberMessagesAAQToBidderRequestType request)
	{
		return this.AddMemberMessagesAAQToBidderAsync(request).Result;
	}

	public Core.Soap.AddOrderResponseType AddOrder(Core.Soap.AddOrderRequestType request)
	{
		return this.AddOrderAsync(request).Result;
	}

	public Core.Soap.AddSecondChanceItemResponseType AddSecondChanceItem(Core.Soap.AddSecondChanceItemRequestType request)
	{
		return this.AddSecondChanceItemAsync(request).Result;
	}

	public Core.Soap.AddToItemDescriptionResponseType AddToItemDescription(Core.Soap.AddToItemDescriptionRequestType request)
	{
		return this.AddToItemDescriptionAsync(request).Result;
	}

	public Core.Soap.AddToWatchListResponseType AddToWatchList(Core.Soap.AddToWatchListRequestType request)
	{
		return this.AddToWatchListAsync(request).Result;
	}

	public Core.Soap.CompleteSaleResponseType CompleteSale(Core.Soap.CompleteSaleRequestType request)
	{
		return this.CompleteSaleAsync(request).Result;
	}

	public Core.Soap.ConfirmIdentityResponseType ConfirmIdentity(Core.Soap.ConfirmIdentityRequestType request)
	{
		return this.ConfirmIdentityAsync(request).Result;
	}

	public Core.Soap.DeleteMyMessagesResponseType DeleteMyMessages(Core.Soap.DeleteMyMessagesRequestType request)
	{
		return this.DeleteMyMessagesAsync(request).Result;
	}

	public Core.Soap.EndFixedPriceItemResponseType EndFixedPriceItem(Core.Soap.EndFixedPriceItemRequestType request)
	{
		return this.EndFixedPriceItemAsync(request).Result;
	}

	public Core.Soap.EndItemResponseType EndItem(Core.Soap.EndItemRequestType request)
	{
		return this.EndItemAsync(request).Result;
	}

	public Core.Soap.EndItemsResponseType EndItems(Core.Soap.EndItemsRequestType request)
	{
		return this.EndItemsAsync(request).Result;
	}

	public Core.Soap.ExtendSiteHostedPicturesResponseType ExtendSiteHostedPictures(Core.Soap.ExtendSiteHostedPicturesRequestType request)
	{
		return this.ExtendSiteHostedPicturesAsync(request).Result;
	}

	public Core.Soap.FetchTokenResponseType FetchToken(Core.Soap.FetchTokenRequestType request)
	{
		return this.FetchTokenAsync(request).Result;
	}

	public Core.Soap.GetAccountResponseType GetAccount(Core.Soap.GetAccountRequestType request)
	{
		return this.GetAccountAsync(request).Result;
	}

	public Core.Soap.GetAdFormatLeadsResponseType GetAdFormatLeads(Core.Soap.GetAdFormatLeadsRequestType request)
	{
		return this.GetAdFormatLeadsAsync(request).Result;
	}

	public Core.Soap.GetAllBiddersResponseType GetAllBidders(Core.Soap.GetAllBiddersRequestType request)
	{
		return this.GetAllBiddersAsync(request).Result;
	}

	public Core.Soap.GetBestOffersResponseType GetBestOffers(Core.Soap.GetBestOffersRequestType request)
	{
		return this.GetBestOffersAsync(request).Result;
	}

	public Core.Soap.GetBidderListResponseType GetBidderList(Core.Soap.GetBidderListRequestType request)
	{
		return this.GetBidderListAsync(request).Result;
	}

	public Core.Soap.GetCategoriesResponseType GetCategories(Core.Soap.GetCategoriesRequestType request)
	{
		return this.GetCategoriesAsync(request).Result;
	}

	public Core.Soap.GetCategoryFeaturesResponseType GetCategoryFeatures(Core.Soap.GetCategoryFeaturesRequestType request)
	{
		return this.GetCategoryFeaturesAsync(request).Result;
	}

	public Core.Soap.GetCategoryMappingsResponseType GetCategoryMappings(Core.Soap.GetCategoryMappingsRequestType request)
	{
		return this.GetCategoryMappingsAsync(request).Result;
	}

	public Core.Soap.GetChallengeTokenResponseType GetChallengeToken(Core.Soap.GetChallengeTokenRequestType request)
	{
		return this.GetChallengeTokenAsync(request).Result;
	}

	public Core.Soap.GetDescriptionTemplatesResponseType GetDescriptionTemplates(Core.Soap.GetDescriptionTemplatesRequestType request)
	{
		return this.GetDescriptionTemplatesAsync(request).Result;
	}

	public Core.Soap.GetFeedbackResponseType GetFeedback(Core.Soap.GetFeedbackRequestType request)
	{
		return this.GetFeedbackAsync(request).Result;
	}

	public Core.Soap.GetItemResponseType GetItem(Core.Soap.GetItemRequestType request)
	{
		return this.GetItemAsync(request).Result;
	}

	public Core.Soap.GetItemShippingResponseType GetItemShipping(Core.Soap.GetItemShippingRequestType request)
	{
		return this.GetItemShippingAsync(request).Result;
	}

	public Core.Soap.GetItemTransactionsResponseType GetItemTransactions(Core.Soap.GetItemTransactionsRequestType request)
	{
		return this.GetItemTransactionsAsync(request).Result;
	}

	public Core.Soap.GetItemsAwaitingFeedbackResponseType GetItemsAwaitingFeedback(Core.Soap.GetItemsAwaitingFeedbackRequestType request)
	{
		return this.GetItemsAwaitingFeedbackAsync(request).Result;
	}

	public Core.Soap.GetMemberMessagesResponseType GetMemberMessages(Core.Soap.GetMemberMessagesRequestType request)
	{
		return this.GetMemberMessagesAsync(request).Result;
	}

	public Core.Soap.GetMessagePreferencesResponseType GetMessagePreferences(Core.Soap.GetMessagePreferencesRequestType request)
	{
		return this.GetMessagePreferencesAsync(request).Result;
	}

	public Core.Soap.GetMyMessagesResponseType GetMyMessages(Core.Soap.GetMyMessagesRequestType request)
	{
		return this.GetMyMessagesAsync(request).Result;
	}

	public Core.Soap.GetMyeBayBuyingResponseType GetMyeBayBuying(Core.Soap.GetMyeBayBuyingRequestType request)
	{
		return this.GetMyeBayBuyingAsync(request).Result;
	}

	public Core.Soap.GetMyeBaySellingResponseType GetMyeBaySelling(Core.Soap.GetMyeBaySellingRequestType request)
	{
		return this.GetMyeBaySellingAsync(request).Result;
	}

	public Core.Soap.GetNotificationPreferencesResponseType GetNotificationPreferences(Core.Soap.GetNotificationPreferencesRequestType request)
	{
		return this.GetNotificationPreferencesAsync(request).Result;
	}

	public Core.Soap.GetNotificationsUsageResponseType GetNotificationsUsage(Core.Soap.GetNotificationsUsageRequestType request)
	{
		return this.GetNotificationsUsageAsync(request).Result;
	}

	public Core.Soap.GetOrdersResponseType GetOrders(Core.Soap.GetOrdersRequestType request)
	{
		return this.GetOrdersAsync(request).Result;
	}

	public Core.Soap.GetSellerEventsResponseType GetSellerEvents(Core.Soap.GetSellerEventsRequestType request)
	{
		return this.GetSellerEventsAsync(request).Result;
	}

	public Core.Soap.GetSellerListResponseType GetSellerList(Core.Soap.GetSellerListRequestType request)
	{
		return this.GetSellerListAsync(request).Result;
	}

	public Core.Soap.GetSellerTransactionsResponseType GetSellerTransactions(Core.Soap.GetSellerTransactionsRequestType request)
	{
		return this.GetSellerTransactionsAsync(request).Result;
	}

	public Core.Soap.GetSessionIDResponseType GetSessionID(Core.Soap.GetSessionIDRequestType request)
	{
		return this.GetSessionIDAsync(request).Result;
	}

	public Core.Soap.GetShippingDiscountProfilesResponseType GetShippingDiscountProfiles(Core.Soap.GetShippingDiscountProfilesRequestType request)
	{
		return this.GetShippingDiscountProfilesAsync(request).Result;
	}

	public Core.Soap.GetStoreResponseType GetStore(Core.Soap.GetStoreRequestType request)
	{
		return this.GetStoreAsync(request).Result;
	}

	public Core.Soap.GetStoreCategoryUpdateStatusResponseType GetStoreCategoryUpdateStatus(Core.Soap.GetStoreCategoryUpdateStatusRequestType request)
	{
		return this.GetStoreCategoryUpdateStatusAsync(request).Result;
	}

	public Core.Soap.GetTaxTableResponseType GetTaxTable(Core.Soap.GetTaxTableRequestType request)
	{
		return this.GetTaxTableAsync(request).Result;
	}

	public Core.Soap.GetTokenStatusResponseType GetTokenStatus(Core.Soap.GetTokenStatusRequestType request)
	{
		return this.GetTokenStatusAsync(request).Result;
	}

	public Core.Soap.GetUserResponseType GetUser(Core.Soap.GetUserRequestType request)
	{
		return this.GetUserAsync(request).Result;
	}

	public Core.Soap.GetUserContactDetailsResponseType GetUserContactDetails(Core.Soap.GetUserContactDetailsRequestType request)
	{
		return this.GetUserContactDetailsAsync(request).Result;
	}

	public Core.Soap.GetUserPreferencesResponseType GetUserPreferences(Core.Soap.GetUserPreferencesRequestType request)
	{
		return this.GetUserPreferencesAsync(request).Result;
	}

	public Core.Soap.GetVeROReasonCodeDetailsResponseType GetVeROReasonCodeDetails(Core.Soap.GetVeROReasonCodeDetailsRequestType request)
	{
		return this.GetVeROReasonCodeDetailsAsync(request).Result;
	}

	public Core.Soap.GetVeROReportStatusResponseType GetVeROReportStatus(Core.Soap.GetVeROReportStatusRequestType request)
	{
		return this.GetVeROReportStatusAsync(request).Result;
	}

	public Core.Soap.GeteBayDetailsResponseType GeteBayDetails(Core.Soap.GeteBayDetailsRequestType request)
	{
		return this.GeteBayDetailsAsync(request).Result;
	}

	public Core.Soap.GeteBayOfficialTimeResponseType GeteBayOfficialTime(Core.Soap.GeteBayOfficialTimeRequestType request)
	{
		return this.GeteBayOfficialTimeAsync(request).Result;
	}

	public Core.Soap.LeaveFeedbackResponseType LeaveFeedback(Core.Soap.LeaveFeedbackRequestType request)
	{
		return this.LeaveFeedbackAsync(request).Result;
	}

	public Core.Soap.PlaceOfferResponseType PlaceOffer(Core.Soap.PlaceOfferRequestType request)
	{
		return this.PlaceOfferAsync(request).Result;
	}

	public Core.Soap.RelistFixedPriceItemResponseType RelistFixedPriceItem(Core.Soap.RelistFixedPriceItemRequestType request)
	{
		return this.RelistFixedPriceItemAsync(request).Result;
	}

	public Core.Soap.RelistItemResponseType RelistItem(Core.Soap.RelistItemRequestType request)
	{
		return this.RelistItemAsync(request).Result;
	}

	public Core.Soap.RemoveFromWatchListResponseType RemoveFromWatchList(Core.Soap.RemoveFromWatchListRequestType request)
	{
		return this.RemoveFromWatchListAsync(request).Result;
	}

	public Core.Soap.RespondToBestOfferResponseType RespondToBestOffer(Core.Soap.RespondToBestOfferRequestType request)
	{
		return this.RespondToBestOfferAsync(request).Result;
	}

	public Core.Soap.RespondToFeedbackResponseType RespondToFeedback(Core.Soap.RespondToFeedbackRequestType request)
	{
		return this.RespondToFeedbackAsync(request).Result;
	}

	public Core.Soap.ReviseFixedPriceItemResponseType ReviseFixedPriceItem(Core.Soap.ReviseFixedPriceItemRequestType request)
	{
		return this.ReviseFixedPriceItemAsync(request).Result;
	}

	public Core.Soap.ReviseInventoryStatusResponseType ReviseInventoryStatus(Core.Soap.ReviseInventoryStatusRequestType request)
	{
		return this.ReviseInventoryStatusAsync(request).Result;
	}

	public Core.Soap.ReviseItemResponseType ReviseItem(Core.Soap.ReviseItemRequestType request)
	{
		return this.ReviseItemAsync(request).Result;
	}

	public Core.Soap.ReviseMyMessagesResponseType ReviseMyMessages(Core.Soap.ReviseMyMessagesRequestType request)
	{
		return this.ReviseMyMessagesAsync(request).Result;
	}

	public Core.Soap.ReviseMyMessagesFoldersResponseType ReviseMyMessagesFolders(Core.Soap.ReviseMyMessagesFoldersRequestType request)
	{
		return this.ReviseMyMessagesFoldersAsync(request).Result;
	}

	public Core.Soap.RevokeTokenResponseType RevokeToken(Core.Soap.RevokeTokenRequestType request)
	{
		return this.RevokeTokenAsync(request).Result;
	}

	public Core.Soap.SendInvoiceResponseType SendInvoice(Core.Soap.SendInvoiceRequestType request)
	{
		return this.SendInvoiceAsync(request).Result;
	}

	public Core.Soap.SetMessagePreferencesResponseType SetMessagePreferences(Core.Soap.SetMessagePreferencesRequestType request)
	{
		return this.SetMessagePreferencesAsync(request).Result;
	}

	public Core.Soap.SetNotificationPreferencesResponseType SetNotificationPreferences(Core.Soap.SetNotificationPreferencesRequestType request)
	{
		return this.SetNotificationPreferencesAsync(request).Result;
	}

	public Core.Soap.SetShippingDiscountProfilesResponseType SetShippingDiscountProfiles(Core.Soap.SetShippingDiscountProfilesRequestType request)
	{
		return this.SetShippingDiscountProfilesAsync(request).Result;
	}

	public Core.Soap.SetStoreCategoriesResponseType SetStoreCategories(Core.Soap.SetStoreCategoriesRequestType request)
	{
		return this.SetStoreCategoriesAsync(request).Result;
	}

	public Core.Soap.SetTaxTableResponseType SetTaxTable(Core.Soap.SetTaxTableRequestType request)
	{
		return this.SetTaxTableAsync(request).Result;
	}

	public Core.Soap.SetUserNotesResponseType SetUserNotes(Core.Soap.SetUserNotesRequestType request)
	{
		return this.SetUserNotesAsync(request).Result;
	}

	public Core.Soap.SetUserPreferencesResponseType SetUserPreferences(Core.Soap.SetUserPreferencesRequestType request)
	{
		return this.SetUserPreferencesAsync(request).Result;
	}

	public Core.Soap.UploadSiteHostedPicturesResponseType UploadSiteHostedPictures(Core.Soap.UploadSiteHostedPicturesRequestType request)
	{
		return this.UploadSiteHostedPicturesAsync(request).Result;
	}

	public Core.Soap.ValidateChallengeInputResponseType ValidateChallengeInput(Core.Soap.ValidateChallengeInputRequestType request)
	{
		return this.ValidateChallengeInputAsync(request).Result;
	}

	public Core.Soap.ValidateTestUserRegistrationResponseType ValidateTestUserRegistration(Core.Soap.ValidateTestUserRegistrationRequestType request)
	{
		return this.ValidateTestUserRegistrationAsync(request).Result;
	}

	public Core.Soap.VeROReportItemsResponseType VeROReportItems(Core.Soap.VeROReportItemsRequestType request)
	{
		return this.VeROReportItemsAsync(request).Result;
	}

	public Core.Soap.VerifyAddFixedPriceItemResponseType VerifyAddFixedPriceItem(Core.Soap.VerifyAddFixedPriceItemRequestType request)
	{
		return this.VerifyAddFixedPriceItemAsync(request).Result;
	}

	public Core.Soap.VerifyAddItemResponseType VerifyAddItem(Core.Soap.VerifyAddItemRequestType request)
	{
		return this.VerifyAddItemAsync(request).Result;
	}

	public Core.Soap.VerifyAddSecondChanceItemResponseType VerifyAddSecondChanceItem(Core.Soap.VerifyAddSecondChanceItemRequestType request)
	{
		return this.VerifyAddSecondChanceItemAsync(request).Result;
	}

	public Core.Soap.VerifyRelistItemResponseType VerifyRelistItem(Core.Soap.VerifyRelistItemRequestType request)
	{
		return this.VerifyRelistItemAsync(request).Result;
	}
#endregion
}

}
namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.ServiceModel.ServiceContractAttribute(Namespace = "urn:ebay:apis:eBLBaseComponents", ConfigurationName = "eBayApi.eBayAPIInterface")]
public interface eBayAPIInterface
{
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		AddFixedPriceItemResponse AddFixedPriceItem(AddFixedPriceItemRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		AddItemResponse AddItem(AddItemRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		AddItemsResponse AddItems(AddItemsRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		AddMemberMessageAAQToPartnerResponse AddMemberMessageAAQToPartner(AddMemberMessageAAQToPartnerRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		AddMemberMessageRTQResponse AddMemberMessageRTQ(AddMemberMessageRTQRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		AddMemberMessagesAAQToBidderResponse AddMemberMessagesAAQToBidder(AddMemberMessagesAAQToBidderRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		AddOrderResponse AddOrder(AddOrderRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		AddSecondChanceItemResponse AddSecondChanceItem(AddSecondChanceItemRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		AddToItemDescriptionResponse AddToItemDescription(AddToItemDescriptionRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		AddToWatchListResponse AddToWatchList(AddToWatchListRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		CompleteSaleResponse CompleteSale(CompleteSaleRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		ConfirmIdentityResponse ConfirmIdentity(ConfirmIdentityRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		DeleteMyMessagesResponse DeleteMyMessages(DeleteMyMessagesRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		EndFixedPriceItemResponse EndFixedPriceItem(EndFixedPriceItemRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		EndItemResponse EndItem(EndItemRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		EndItemsResponse EndItems(EndItemsRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		ExtendSiteHostedPicturesResponse ExtendSiteHostedPictures(ExtendSiteHostedPicturesRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		FetchTokenResponse FetchToken(FetchTokenRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		GetAccountResponse GetAccount(GetAccountRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		GetAdFormatLeadsResponse GetAdFormatLeads(GetAdFormatLeadsRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		GetAllBiddersResponse GetAllBidders(GetAllBiddersRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		GetBestOffersResponse GetBestOffers(GetBestOffersRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		GetBidderListResponse GetBidderList(GetBidderListRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		GetCategoriesResponse GetCategories(GetCategoriesRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		GetCategoryFeaturesResponse GetCategoryFeatures(GetCategoryFeaturesRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		GetCategoryMappingsResponse GetCategoryMappings(GetCategoryMappingsRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		GetChallengeTokenResponse GetChallengeToken(GetChallengeTokenRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		GetDescriptionTemplatesResponse GetDescriptionTemplates(GetDescriptionTemplatesRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		GetFeedbackResponse GetFeedback(GetFeedbackRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		GetItemResponse GetItem(GetItemRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		GetItemShippingResponse GetItemShipping(GetItemShippingRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		GetItemTransactionsResponse GetItemTransactions(GetItemTransactionsRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		GetItemsAwaitingFeedbackResponse GetItemsAwaitingFeedback(GetItemsAwaitingFeedbackRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		GetMemberMessagesResponse GetMemberMessages(GetMemberMessagesRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		GetMessagePreferencesResponse GetMessagePreferences(GetMessagePreferencesRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		GetMyMessagesResponse GetMyMessages(GetMyMessagesRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		GetMyeBayBuyingResponse GetMyeBayBuying(GetMyeBayBuyingRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		GetMyeBaySellingResponse GetMyeBaySelling(GetMyeBaySellingRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		GetNotificationPreferencesResponse GetNotificationPreferences(GetNotificationPreferencesRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		GetNotificationsUsageResponse GetNotificationsUsage(GetNotificationsUsageRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		GetOrdersResponse GetOrders(GetOrdersRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		GetSellerEventsResponse GetSellerEvents(GetSellerEventsRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		GetSellerListResponse GetSellerList(GetSellerListRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		GetSellerTransactionsResponse GetSellerTransactions(GetSellerTransactionsRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		GetSessionIDResponse GetSessionID(GetSessionIDRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		GetShippingDiscountProfilesResponse GetShippingDiscountProfiles(GetShippingDiscountProfilesRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		GetStoreResponse GetStore(GetStoreRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		GetStoreCategoryUpdateStatusResponse GetStoreCategoryUpdateStatus(GetStoreCategoryUpdateStatusRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		GetTaxTableResponse GetTaxTable(GetTaxTableRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		GetTokenStatusResponse GetTokenStatus(GetTokenStatusRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		GetUserResponse GetUser(GetUserRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		GetUserContactDetailsResponse GetUserContactDetails(GetUserContactDetailsRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		GetUserPreferencesResponse GetUserPreferences(GetUserPreferencesRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		GetVeROReasonCodeDetailsResponse GetVeROReasonCodeDetails(GetVeROReasonCodeDetailsRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		GetVeROReportStatusResponse GetVeROReportStatus(GetVeROReportStatusRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		GeteBayDetailsResponse GeteBayDetails(GeteBayDetailsRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		GeteBayOfficialTimeResponse GeteBayOfficialTime(GeteBayOfficialTimeRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		LeaveFeedbackResponse LeaveFeedback(LeaveFeedbackRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		PlaceOfferResponse PlaceOffer(PlaceOfferRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		RelistFixedPriceItemResponse RelistFixedPriceItem(RelistFixedPriceItemRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		RelistItemResponse RelistItem(RelistItemRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		RemoveFromWatchListResponse RemoveFromWatchList(RemoveFromWatchListRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		RespondToBestOfferResponse RespondToBestOffer(RespondToBestOfferRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		RespondToFeedbackResponse RespondToFeedback(RespondToFeedbackRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		ReviseFixedPriceItemResponse ReviseFixedPriceItem(ReviseFixedPriceItemRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		ReviseInventoryStatusResponse ReviseInventoryStatus(ReviseInventoryStatusRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		ReviseItemResponse ReviseItem(ReviseItemRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		ReviseMyMessagesResponse ReviseMyMessages(ReviseMyMessagesRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		ReviseMyMessagesFoldersResponse ReviseMyMessagesFolders(ReviseMyMessagesFoldersRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		RevokeTokenResponse RevokeToken(RevokeTokenRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		SendInvoiceResponse SendInvoice(SendInvoiceRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		SetMessagePreferencesResponse SetMessagePreferences(SetMessagePreferencesRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		SetNotificationPreferencesResponse SetNotificationPreferences(SetNotificationPreferencesRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		SetShippingDiscountProfilesResponse SetShippingDiscountProfiles(SetShippingDiscountProfilesRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		SetStoreCategoriesResponse SetStoreCategories(SetStoreCategoriesRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		SetTaxTableResponse SetTaxTable(SetTaxTableRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		SetUserNotesResponse SetUserNotes(SetUserNotesRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		SetUserPreferencesResponse SetUserPreferences(SetUserPreferencesRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		UploadSiteHostedPicturesResponse UploadSiteHostedPictures(UploadSiteHostedPicturesRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		ValidateChallengeInputResponse ValidateChallengeInput(ValidateChallengeInputRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		ValidateTestUserRegistrationResponse ValidateTestUserRegistration(ValidateTestUserRegistrationRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		VeROReportItemsResponse VeROReportItems(VeROReportItemsRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		VerifyAddFixedPriceItemResponse VerifyAddFixedPriceItem(VerifyAddFixedPriceItemRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		VerifyAddItemResponse VerifyAddItem(VerifyAddItemRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		VerifyAddSecondChanceItemResponse VerifyAddSecondChanceItem(VerifyAddSecondChanceItemRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		[System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractResponseType))]
		[System.ServiceModel.ServiceKnownType(typeof(AbstractRequestType))]
		VerifyRelistItemResponse VerifyRelistItem(VerifyRelistItemRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<AddFixedPriceItemResponse> AddFixedPriceItemAsync(AddFixedPriceItemRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<AddItemResponse> AddItemAsync(AddItemRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<AddItemsResponse> AddItemsAsync(AddItemsRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<AddMemberMessageAAQToPartnerResponse> AddMemberMessageAAQToPartnerAsync(AddMemberMessageAAQToPartnerRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<AddMemberMessageRTQResponse> AddMemberMessageRTQAsync(AddMemberMessageRTQRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<AddMemberMessagesAAQToBidderResponse> AddMemberMessagesAAQToBidderAsync(AddMemberMessagesAAQToBidderRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<AddOrderResponse> AddOrderAsync(AddOrderRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<AddSecondChanceItemResponse> AddSecondChanceItemAsync(AddSecondChanceItemRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<AddToItemDescriptionResponse> AddToItemDescriptionAsync(AddToItemDescriptionRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<AddToWatchListResponse> AddToWatchListAsync(AddToWatchListRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<CompleteSaleResponse> CompleteSaleAsync(CompleteSaleRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<ConfirmIdentityResponse> ConfirmIdentityAsync(ConfirmIdentityRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<DeleteMyMessagesResponse> DeleteMyMessagesAsync(DeleteMyMessagesRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<EndFixedPriceItemResponse> EndFixedPriceItemAsync(EndFixedPriceItemRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<EndItemResponse> EndItemAsync(EndItemRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<EndItemsResponse> EndItemsAsync(EndItemsRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<ExtendSiteHostedPicturesResponse> ExtendSiteHostedPicturesAsync(ExtendSiteHostedPicturesRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<FetchTokenResponse> FetchTokenAsync(FetchTokenRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<GetAccountResponse> GetAccountAsync(GetAccountRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<GetAdFormatLeadsResponse> GetAdFormatLeadsAsync(GetAdFormatLeadsRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<GetAllBiddersResponse> GetAllBiddersAsync(GetAllBiddersRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<GetBestOffersResponse> GetBestOffersAsync(GetBestOffersRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<GetBidderListResponse> GetBidderListAsync(GetBidderListRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<GetCategoriesResponse> GetCategoriesAsync(GetCategoriesRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<GetCategoryFeaturesResponse> GetCategoryFeaturesAsync(GetCategoryFeaturesRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<GetCategoryMappingsResponse> GetCategoryMappingsAsync(GetCategoryMappingsRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<GetChallengeTokenResponse> GetChallengeTokenAsync(GetChallengeTokenRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<GetDescriptionTemplatesResponse> GetDescriptionTemplatesAsync(GetDescriptionTemplatesRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<GetFeedbackResponse> GetFeedbackAsync(GetFeedbackRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<GetItemResponse> GetItemAsync(GetItemRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<GetItemShippingResponse> GetItemShippingAsync(GetItemShippingRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<GetItemTransactionsResponse> GetItemTransactionsAsync(GetItemTransactionsRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<GetItemsAwaitingFeedbackResponse> GetItemsAwaitingFeedbackAsync(GetItemsAwaitingFeedbackRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<GetMemberMessagesResponse> GetMemberMessagesAsync(GetMemberMessagesRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<GetMessagePreferencesResponse> GetMessagePreferencesAsync(GetMessagePreferencesRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<GetMyMessagesResponse> GetMyMessagesAsync(GetMyMessagesRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<GetMyeBayBuyingResponse> GetMyeBayBuyingAsync(GetMyeBayBuyingRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<GetMyeBaySellingResponse> GetMyeBaySellingAsync(GetMyeBaySellingRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<GetNotificationPreferencesResponse> GetNotificationPreferencesAsync(GetNotificationPreferencesRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<GetNotificationsUsageResponse> GetNotificationsUsageAsync(GetNotificationsUsageRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<GetOrdersResponse> GetOrdersAsync(GetOrdersRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<GetSellerEventsResponse> GetSellerEventsAsync(GetSellerEventsRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<GetSellerListResponse> GetSellerListAsync(GetSellerListRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<GetSellerTransactionsResponse> GetSellerTransactionsAsync(GetSellerTransactionsRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<GetSessionIDResponse> GetSessionIDAsync(GetSessionIDRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<GetShippingDiscountProfilesResponse> GetShippingDiscountProfilesAsync(GetShippingDiscountProfilesRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<GetStoreResponse> GetStoreAsync(GetStoreRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<GetStoreCategoryUpdateStatusResponse> GetStoreCategoryUpdateStatusAsync(GetStoreCategoryUpdateStatusRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<GetTaxTableResponse> GetTaxTableAsync(GetTaxTableRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<GetTokenStatusResponse> GetTokenStatusAsync(GetTokenStatusRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<GetUserResponse> GetUserAsync(GetUserRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<GetUserContactDetailsResponse> GetUserContactDetailsAsync(GetUserContactDetailsRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<GetUserPreferencesResponse> GetUserPreferencesAsync(GetUserPreferencesRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<GetVeROReasonCodeDetailsResponse> GetVeROReasonCodeDetailsAsync(GetVeROReasonCodeDetailsRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<GetVeROReportStatusResponse> GetVeROReportStatusAsync(GetVeROReportStatusRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<GeteBayDetailsResponse> GeteBayDetailsAsync(GeteBayDetailsRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<GeteBayOfficialTimeResponse> GeteBayOfficialTimeAsync(GeteBayOfficialTimeRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<LeaveFeedbackResponse> LeaveFeedbackAsync(LeaveFeedbackRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<PlaceOfferResponse> PlaceOfferAsync(PlaceOfferRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<RelistFixedPriceItemResponse> RelistFixedPriceItemAsync(RelistFixedPriceItemRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<RelistItemResponse> RelistItemAsync(RelistItemRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<RemoveFromWatchListResponse> RemoveFromWatchListAsync(RemoveFromWatchListRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<RespondToBestOfferResponse> RespondToBestOfferAsync(RespondToBestOfferRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<RespondToFeedbackResponse> RespondToFeedbackAsync(RespondToFeedbackRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<ReviseFixedPriceItemResponse> ReviseFixedPriceItemAsync(ReviseFixedPriceItemRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<ReviseInventoryStatusResponse> ReviseInventoryStatusAsync(ReviseInventoryStatusRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<ReviseItemResponse> ReviseItemAsync(ReviseItemRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<ReviseMyMessagesResponse> ReviseMyMessagesAsync(ReviseMyMessagesRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<ReviseMyMessagesFoldersResponse> ReviseMyMessagesFoldersAsync(ReviseMyMessagesFoldersRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<RevokeTokenResponse> RevokeTokenAsync(RevokeTokenRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<SendInvoiceResponse> SendInvoiceAsync(SendInvoiceRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<SetMessagePreferencesResponse> SetMessagePreferencesAsync(SetMessagePreferencesRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<SetNotificationPreferencesResponse> SetNotificationPreferencesAsync(SetNotificationPreferencesRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<SetShippingDiscountProfilesResponse> SetShippingDiscountProfilesAsync(SetShippingDiscountProfilesRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<SetStoreCategoriesResponse> SetStoreCategoriesAsync(SetStoreCategoriesRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<SetTaxTableResponse> SetTaxTableAsync(SetTaxTableRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<SetUserNotesResponse> SetUserNotesAsync(SetUserNotesRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<SetUserPreferencesResponse> SetUserPreferencesAsync(SetUserPreferencesRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<UploadSiteHostedPicturesResponse> UploadSiteHostedPicturesAsync(UploadSiteHostedPicturesRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<ValidateChallengeInputResponse> ValidateChallengeInputAsync(ValidateChallengeInputRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<ValidateTestUserRegistrationResponse> ValidateTestUserRegistrationAsync(ValidateTestUserRegistrationRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<VeROReportItemsResponse> VeROReportItemsAsync(VeROReportItemsRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<VerifyAddFixedPriceItemResponse> VerifyAddFixedPriceItemAsync(VerifyAddFixedPriceItemRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<VerifyAddItemResponse> VerifyAddItemAsync(VerifyAddItemRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<VerifyAddSecondChanceItemResponse> VerifyAddSecondChanceItemAsync(VerifyAddSecondChanceItemRequest request);
		[System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
		System.Threading.Tasks.Task<VerifyRelistItemResponse> VerifyRelistItemAsync(VerifyRelistItemRequest request);
}

}
namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class AddFixedPriceItemRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "AddFixedPriceItemRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public AddFixedPriceItemRequestType AddFixedPriceItemRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class AddFixedPriceItemResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "AddFixedPriceItemResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public AddFixedPriceItemResponseType AddFixedPriceItemResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class AddItemRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "AddItemRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public AddItemRequestType AddItemRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class AddItemResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "AddItemResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public AddItemResponseType AddItemResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class AddItemsRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "AddItemsRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public AddItemsRequestType AddItemsRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class AddItemsResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "AddItemsResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public AddItemsResponseType AddItemsResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class AddMemberMessageAAQToPartnerRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "AddMemberMessageAAQToPartnerRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public AddMemberMessageAAQToPartnerRequestType AddMemberMessageAAQToPartnerRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class AddMemberMessageAAQToPartnerResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "AddMemberMessageAAQToPartnerResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public AddMemberMessageAAQToPartnerResponseType AddMemberMessageAAQToPartnerResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class AddMemberMessageRTQRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "AddMemberMessageRTQRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public AddMemberMessageRTQRequestType AddMemberMessageRTQRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class AddMemberMessageRTQResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "AddMemberMessageRTQResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public AddMemberMessageRTQResponseType AddMemberMessageRTQResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class AddMemberMessagesAAQToBidderRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "AddMemberMessagesAAQToBidderRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public AddMemberMessagesAAQToBidderRequestType AddMemberMessagesAAQToBidderRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class AddMemberMessagesAAQToBidderResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "AddMemberMessagesAAQToBidderResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public AddMemberMessagesAAQToBidderResponseType AddMemberMessagesAAQToBidderResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class AddOrderRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "AddOrderRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public AddOrderRequestType AddOrderRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class AddOrderResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "AddOrderResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public AddOrderResponseType AddOrderResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class AddSecondChanceItemRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "AddSecondChanceItemRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public AddSecondChanceItemRequestType AddSecondChanceItemRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class AddSecondChanceItemResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "AddSecondChanceItemResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public AddSecondChanceItemResponseType AddSecondChanceItemResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class AddToItemDescriptionRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "AddToItemDescriptionRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public AddToItemDescriptionRequestType AddToItemDescriptionRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class AddToItemDescriptionResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "AddToItemDescriptionResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public AddToItemDescriptionResponseType AddToItemDescriptionResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class AddToWatchListRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "AddToWatchListRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public AddToWatchListRequestType AddToWatchListRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class AddToWatchListResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "AddToWatchListResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public AddToWatchListResponseType AddToWatchListResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class CompleteSaleRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "CompleteSaleRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public CompleteSaleRequestType CompleteSaleRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class CompleteSaleResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "CompleteSaleResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public CompleteSaleResponseType CompleteSaleResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class ConfirmIdentityRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "ConfirmIdentityRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public ConfirmIdentityRequestType ConfirmIdentityRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class ConfirmIdentityResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "ConfirmIdentityResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public ConfirmIdentityResponseType ConfirmIdentityResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class DeleteMyMessagesRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "DeleteMyMessagesRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public DeleteMyMessagesRequestType DeleteMyMessagesRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class DeleteMyMessagesResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "DeleteMyMessagesResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public DeleteMyMessagesResponseType DeleteMyMessagesResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class EndFixedPriceItemRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "EndFixedPriceItemRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public EndFixedPriceItemRequestType EndFixedPriceItemRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class EndFixedPriceItemResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "EndFixedPriceItemResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public EndFixedPriceItemResponseType EndFixedPriceItemResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class EndItemRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "EndItemRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public EndItemRequestType EndItemRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class EndItemResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "EndItemResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public EndItemResponseType EndItemResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class EndItemsRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "EndItemsRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public EndItemsRequestType EndItemsRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class EndItemsResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "EndItemsResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public EndItemsResponseType EndItemsResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class ExtendSiteHostedPicturesRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "ExtendSiteHostedPicturesRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public ExtendSiteHostedPicturesRequestType ExtendSiteHostedPicturesRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class ExtendSiteHostedPicturesResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "ExtendSiteHostedPicturesResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public ExtendSiteHostedPicturesResponseType ExtendSiteHostedPicturesResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class FetchTokenRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "FetchTokenRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public FetchTokenRequestType FetchTokenRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class FetchTokenResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "FetchTokenResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public FetchTokenResponseType FetchTokenResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetAccountRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetAccountRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetAccountRequestType GetAccountRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetAccountResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetAccountResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetAccountResponseType GetAccountResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetAdFormatLeadsRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetAdFormatLeadsRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetAdFormatLeadsRequestType GetAdFormatLeadsRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetAdFormatLeadsResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetAdFormatLeadsResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetAdFormatLeadsResponseType GetAdFormatLeadsResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetAllBiddersRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetAllBiddersRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetAllBiddersRequestType GetAllBiddersRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetAllBiddersResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetAllBiddersResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetAllBiddersResponseType GetAllBiddersResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetBestOffersRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetBestOffersRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetBestOffersRequestType GetBestOffersRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetBestOffersResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetBestOffersResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetBestOffersResponseType GetBestOffersResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetBidderListRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetBidderListRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetBidderListRequestType GetBidderListRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetBidderListResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetBidderListResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetBidderListResponseType GetBidderListResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetCategoriesRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetCategoriesRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetCategoriesRequestType GetCategoriesRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetCategoriesResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetCategoriesResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetCategoriesResponseType GetCategoriesResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetCategoryFeaturesRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetCategoryFeaturesRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetCategoryFeaturesRequestType GetCategoryFeaturesRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetCategoryFeaturesResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetCategoryFeaturesResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetCategoryFeaturesResponseType GetCategoryFeaturesResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetCategoryMappingsRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetCategoryMappingsRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetCategoryMappingsRequestType GetCategoryMappingsRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetCategoryMappingsResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetCategoryMappingsResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetCategoryMappingsResponseType GetCategoryMappingsResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetChallengeTokenRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetChallengeTokenRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetChallengeTokenRequestType GetChallengeTokenRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetChallengeTokenResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetChallengeTokenResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetChallengeTokenResponseType GetChallengeTokenResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Retrieves Listing Designer templates that are available for use by the seller.
/// 				<br>
/// 				<br>
/// 				<span class="tablenote"><b>Note:</b> As of May 31, 2020, sellers are no longer able to use Listing Designer templates when they create or revise listings. Existing listings that are already using a Listing Designer template will remain unchanged. The <b>GetDescriptionTemplates</b> call will eventually get deprecated and decommissioned, and more information will be provided on timing at a later date. The <b>GetDescriptionTemplates</b> call will still retrieve Listing Designer template data, but none of retrieved templates will be usable to create or revise a listing.</span>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetDescriptionTemplatesRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetDescriptionTemplatesRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetDescriptionTemplatesRequestType GetDescriptionTemplatesRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 					Retrieves detailed information on Listing Designer templates that are available for use by the seller.
/// 					<br>
/// 					<br>
/// 				  <span class="tablenote"><b>Note:</b> As of May 31, 2020, sellers are no longer able to use Listing Designer templates when they create or revise listings. Existing listings that are already using a Listing Designer template will remain unchanged. The <b>GetDescriptionTemplates</b> call will eventually get deprecated and decommissioned, and more information will be provided on timing at a later date. The <b>GetDescriptionTemplates</b> call will still retrieve Listing Designer template data, but none of retrieved templates will be usable to create or revise a listing.</span>
/// 				
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetDescriptionTemplatesResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetDescriptionTemplatesResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetDescriptionTemplatesResponseType GetDescriptionTemplatesResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetFeedbackRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetFeedbackRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetFeedbackRequestType GetFeedbackRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetFeedbackResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetFeedbackResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetFeedbackResponseType GetFeedbackResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetItemRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetItemRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetItemRequestType GetItemRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetItemResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetItemResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetItemResponseType GetItemResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetItemShippingRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetItemShippingRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetItemShippingRequestType GetItemShippingRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetItemShippingResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetItemShippingResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetItemShippingResponseType GetItemShippingResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetItemTransactionsRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetItemTransactionsRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetItemTransactionsRequestType GetItemTransactionsRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetItemTransactionsResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetItemTransactionsResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetItemTransactionsResponseType GetItemTransactionsResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetItemsAwaitingFeedbackRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetItemsAwaitingFeedbackRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetItemsAwaitingFeedbackRequestType GetItemsAwaitingFeedbackRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetItemsAwaitingFeedbackResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetItemsAwaitingFeedbackResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetItemsAwaitingFeedbackResponseType GetItemsAwaitingFeedbackResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetMemberMessagesRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetMemberMessagesRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetMemberMessagesRequestType GetMemberMessagesRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetMemberMessagesResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetMemberMessagesResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetMemberMessagesResponseType GetMemberMessagesResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetMessagePreferencesRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetMessagePreferencesRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetMessagePreferencesRequestType GetMessagePreferencesRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetMessagePreferencesResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetMessagePreferencesResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetMessagePreferencesResponseType GetMessagePreferencesResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetMyMessagesRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetMyMessagesRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetMyMessagesRequestType GetMyMessagesRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetMyMessagesResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetMyMessagesResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetMyMessagesResponseType GetMyMessagesResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetMyeBayBuyingRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetMyeBayBuyingRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetMyeBayBuyingRequestType GetMyeBayBuyingRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetMyeBayBuyingResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetMyeBayBuyingResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetMyeBayBuyingResponseType GetMyeBayBuyingResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetMyeBaySellingRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetMyeBaySellingRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetMyeBaySellingRequestType GetMyeBaySellingRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetMyeBaySellingResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetMyeBaySellingResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetMyeBaySellingResponseType GetMyeBaySellingResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetNotificationPreferencesRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetNotificationPreferencesRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetNotificationPreferencesRequestType GetNotificationPreferencesRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetNotificationPreferencesResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetNotificationPreferencesResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetNotificationPreferencesResponseType GetNotificationPreferencesResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetNotificationsUsageRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetNotificationsUsageRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetNotificationsUsageRequestType GetNotificationsUsageRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetNotificationsUsageResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetNotificationsUsageResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetNotificationsUsageResponseType GetNotificationsUsageResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetOrdersRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetOrdersRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetOrdersRequestType GetOrdersRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetOrdersResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetOrdersResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetOrdersResponseType GetOrdersResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetSellerEventsRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetSellerEventsRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetSellerEventsRequestType GetSellerEventsRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetSellerEventsResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetSellerEventsResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetSellerEventsResponseType GetSellerEventsResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetSellerListRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetSellerListRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetSellerListRequestType GetSellerListRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetSellerListResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetSellerListResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetSellerListResponseType GetSellerListResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetSellerTransactionsRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetSellerTransactionsRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetSellerTransactionsRequestType GetSellerTransactionsRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetSellerTransactionsResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetSellerTransactionsResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetSellerTransactionsResponseType GetSellerTransactionsResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetSessionIDRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetSessionIDRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetSessionIDRequestType GetSessionIDRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetSessionIDResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetSessionIDResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetSessionIDResponseType GetSessionIDResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetShippingDiscountProfilesRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetShippingDiscountProfilesRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetShippingDiscountProfilesRequestType GetShippingDiscountProfilesRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetShippingDiscountProfilesResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetShippingDiscountProfilesResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetShippingDiscountProfilesResponseType GetShippingDiscountProfilesResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetStoreRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetStoreRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetStoreRequestType GetStoreRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetStoreResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetStoreResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetStoreResponseType GetStoreResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetStoreCategoryUpdateStatusRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetStoreCategoryUpdateStatusRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetStoreCategoryUpdateStatusRequestType GetStoreCategoryUpdateStatusRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetStoreCategoryUpdateStatusResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetStoreCategoryUpdateStatusResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetStoreCategoryUpdateStatusResponseType GetStoreCategoryUpdateStatusResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetTaxTableRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetTaxTableRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetTaxTableRequestType GetTaxTableRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetTaxTableResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetTaxTableResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetTaxTableResponseType GetTaxTableResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetTokenStatusRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetTokenStatusRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetTokenStatusRequestType GetTokenStatusRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetTokenStatusResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetTokenStatusResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetTokenStatusResponseType GetTokenStatusResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetUserRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetUserRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetUserRequestType GetUserRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetUserResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetUserResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetUserResponseType GetUserResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetUserContactDetailsRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetUserContactDetailsRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetUserContactDetailsRequestType GetUserContactDetailsRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetUserContactDetailsResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetUserContactDetailsResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetUserContactDetailsResponseType GetUserContactDetailsResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetUserPreferencesRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetUserPreferencesRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetUserPreferencesRequestType GetUserPreferencesRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetUserPreferencesResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetUserPreferencesResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetUserPreferencesResponseType GetUserPreferencesResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetVeROReasonCodeDetailsRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetVeROReasonCodeDetailsRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetVeROReasonCodeDetailsRequestType GetVeROReasonCodeDetailsRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetVeROReasonCodeDetailsResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetVeROReasonCodeDetailsResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetVeROReasonCodeDetailsResponseType GetVeROReasonCodeDetailsResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetVeROReportStatusRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetVeROReportStatusRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetVeROReportStatusRequestType GetVeROReportStatusRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GetVeROReportStatusResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GetVeROReportStatusResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GetVeROReportStatusResponseType GetVeROReportStatusResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GeteBayDetailsRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GeteBayDetailsRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GeteBayDetailsRequestType GeteBayDetailsRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Details about a specified site in response to <b>GeteBayDetailsRequest</b>. If no <b>DetailName</b> field is identified in the request, all elements of <b>GeteBayDetailsResponse</b> are returned. Otherwise, eBay returns only the elements corresponding to the specified <b>DetailName</b> fields. UpdateTime gives the time of modification of the most recently modified <b>DetailName</b>.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GeteBayDetailsResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GeteBayDetailsResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GeteBayDetailsResponseType GeteBayDetailsResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GeteBayOfficialTimeRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GeteBayOfficialTimeRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GeteBayOfficialTimeRequestType GeteBayOfficialTimeRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class GeteBayOfficialTimeResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "GeteBayOfficialTimeResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public GeteBayOfficialTimeResponseType GeteBayOfficialTimeResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class LeaveFeedbackRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "LeaveFeedbackRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public LeaveFeedbackRequestType LeaveFeedbackRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class LeaveFeedbackResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "LeaveFeedbackResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public LeaveFeedbackResponseType LeaveFeedbackResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class PlaceOfferRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "PlaceOfferRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public PlaceOfferRequestType PlaceOfferRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class PlaceOfferResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "PlaceOfferResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public PlaceOfferResponseType PlaceOfferResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class RelistFixedPriceItemRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "RelistFixedPriceItemRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public RelistFixedPriceItemRequestType RelistFixedPriceItemRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class RelistFixedPriceItemResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "RelistFixedPriceItemResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public RelistFixedPriceItemResponseType RelistFixedPriceItemResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class RelistItemRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "RelistItemRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public RelistItemRequestType RelistItemRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class RelistItemResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "RelistItemResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public RelistItemResponseType RelistItemResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class RemoveFromWatchListRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "RemoveFromWatchListRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public RemoveFromWatchListRequestType RemoveFromWatchListRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class RemoveFromWatchListResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "RemoveFromWatchListResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public RemoveFromWatchListResponseType RemoveFromWatchListResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class RespondToBestOfferRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "RespondToBestOfferRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public RespondToBestOfferRequestType RespondToBestOfferRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class RespondToBestOfferResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "RespondToBestOfferResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public RespondToBestOfferResponseType RespondToBestOfferResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class RespondToFeedbackRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "RespondToFeedbackRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public RespondToFeedbackRequestType RespondToFeedbackRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class RespondToFeedbackResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "RespondToFeedbackResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public RespondToFeedbackResponseType RespondToFeedbackResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class ReviseFixedPriceItemRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "ReviseFixedPriceItemRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public ReviseFixedPriceItemRequestType ReviseFixedPriceItemRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class ReviseFixedPriceItemResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "ReviseFixedPriceItemResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public ReviseFixedPriceItemResponseType ReviseFixedPriceItemResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class ReviseInventoryStatusRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "ReviseInventoryStatusRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public ReviseInventoryStatusRequestType ReviseInventoryStatusRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class ReviseInventoryStatusResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "ReviseInventoryStatusResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public ReviseInventoryStatusResponseType ReviseInventoryStatusResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class ReviseItemRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "ReviseItemRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public ReviseItemRequestType ReviseItemRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class ReviseItemResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "ReviseItemResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public ReviseItemResponseType ReviseItemResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class ReviseMyMessagesRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "ReviseMyMessagesRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public ReviseMyMessagesRequestType ReviseMyMessagesRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class ReviseMyMessagesResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "ReviseMyMessagesResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public ReviseMyMessagesResponseType ReviseMyMessagesResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class ReviseMyMessagesFoldersRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "ReviseMyMessagesFoldersRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public ReviseMyMessagesFoldersRequestType ReviseMyMessagesFoldersRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class ReviseMyMessagesFoldersResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "ReviseMyMessagesFoldersResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public ReviseMyMessagesFoldersResponseType ReviseMyMessagesFoldersResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class RevokeTokenRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "RevokeTokenRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public RevokeTokenRequestType RevokeTokenRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class RevokeTokenResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "RevokeTokenResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public RevokeTokenResponseType RevokeTokenResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class SendInvoiceRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "SendInvoiceRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public SendInvoiceRequestType SendInvoiceRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class SendInvoiceResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "SendInvoiceResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public SendInvoiceResponseType SendInvoiceResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class SetMessagePreferencesRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "SetMessagePreferencesRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public SetMessagePreferencesRequestType SetMessagePreferencesRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class SetMessagePreferencesResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "SetMessagePreferencesResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public SetMessagePreferencesResponseType SetMessagePreferencesResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class SetNotificationPreferencesRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "SetNotificationPreferencesRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public SetNotificationPreferencesRequestType SetNotificationPreferencesRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class SetNotificationPreferencesResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "SetNotificationPreferencesResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public SetNotificationPreferencesResponseType SetNotificationPreferencesResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class SetShippingDiscountProfilesRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "SetShippingDiscountProfilesRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public SetShippingDiscountProfilesRequestType SetShippingDiscountProfilesRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class SetShippingDiscountProfilesResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "SetShippingDiscountProfilesResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public SetShippingDiscountProfilesResponseType SetShippingDiscountProfilesResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class SetStoreCategoriesRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "SetStoreCategoriesRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public SetStoreCategoriesRequestType SetStoreCategoriesRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class SetStoreCategoriesResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "SetStoreCategoriesResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public SetStoreCategoriesResponseType SetStoreCategoriesResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class SetTaxTableRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "SetTaxTableRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public SetTaxTableRequestType SetTaxTableRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class SetTaxTableResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "SetTaxTableResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public SetTaxTableResponseType SetTaxTableResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class SetUserNotesRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "SetUserNotesRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public SetUserNotesRequestType SetUserNotesRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class SetUserNotesResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "SetUserNotesResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public SetUserNotesResponseType SetUserNotesResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class SetUserPreferencesRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "SetUserPreferencesRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public SetUserPreferencesRequestType SetUserPreferencesRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class SetUserPreferencesResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "SetUserPreferencesResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public SetUserPreferencesResponseType SetUserPreferencesResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class UploadSiteHostedPicturesRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "UploadSiteHostedPicturesRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public UploadSiteHostedPicturesRequestType UploadSiteHostedPicturesRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class UploadSiteHostedPicturesResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "UploadSiteHostedPicturesResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public UploadSiteHostedPicturesResponseType UploadSiteHostedPicturesResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class ValidateChallengeInputRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "ValidateChallengeInputRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public ValidateChallengeInputRequestType ValidateChallengeInputRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class ValidateChallengeInputResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "ValidateChallengeInputResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public ValidateChallengeInputResponseType ValidateChallengeInputResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class ValidateTestUserRegistrationRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "ValidateTestUserRegistrationRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public ValidateTestUserRegistrationRequestType ValidateTestUserRegistrationRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class ValidateTestUserRegistrationResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "ValidateTestUserRegistrationResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public ValidateTestUserRegistrationResponseType ValidateTestUserRegistrationResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class VeROReportItemsRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "VeROReportItemsRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public VeROReportItemsRequestType VeROReportItemsRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class VeROReportItemsResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "VeROReportItemsResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public VeROReportItemsResponseType VeROReportItemsResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class VerifyAddFixedPriceItemRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "VerifyAddFixedPriceItemRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public VerifyAddFixedPriceItemRequestType VerifyAddFixedPriceItemRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class VerifyAddFixedPriceItemResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "VerifyAddFixedPriceItemResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public VerifyAddFixedPriceItemResponseType VerifyAddFixedPriceItemResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class VerifyAddItemRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "VerifyAddItemRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public VerifyAddItemRequestType VerifyAddItemRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class VerifyAddItemResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "VerifyAddItemResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public VerifyAddItemResponseType VerifyAddItemResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class VerifyAddSecondChanceItemRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "VerifyAddSecondChanceItemRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public VerifyAddSecondChanceItemRequestType VerifyAddSecondChanceItemRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class VerifyAddSecondChanceItemResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "VerifyAddSecondChanceItemResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public VerifyAddSecondChanceItemResponseType VerifyAddSecondChanceItemResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class VerifyRelistItemRequest {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "VerifyRelistItemRequest", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public VerifyRelistItemRequestType VerifyRelistItemRequestType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class VerifyRelistItemResponse {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "VerifyRelistItemResponse", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public VerifyRelistItemResponseType VerifyRelistItemResponseType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ServiceModel.MessageContract(IsWrapped = false)]
public partial class NotificationMessage {

#region 属性
[System.ServiceModel.MessageBodyMember(Name = "NotificationMessage", Namespace = "urn:ebay:apis:eBLBaseComponents", Order = 0)]

	public NotificationMessageType NotificationMessageType { get; set; }
[System.ServiceModel.MessageHeader(Namespace = "urn:ebay:apis:eBLBaseComponents")]

	public CustomSecurityHeaderType RequesterCredentials { get; set; }
#endregion

#region 方法
#endregion
}

}
namespace eBay.Service.Core.Soap
{

/// <summary>
/// 
/// 					Defines and publishes a single or multiple-variation fixed-price listing.
/// 				
/// 
/// 					AddItem, AddItems, VerifyAddFixedPriceItem
/// 				
/// List an itemhttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/list-item.html
/// Create item listingshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/create-listing.html
/// Add pictureshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/pictures.html
/// Multiple-variation listingshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/variations.html
/// </summary>
/// <remarks>
/// 
/// 				This call allows a seller to create and publish a fixed-price listing.
/// 				The main difference between <b>AddFixedPriceItem</b> and <b>AddItem</b> is that
/// 				<b>AddFixedPriceItem</b> supports the creation of fixed-price listings only,
/// 				whereas <b>AddItem</b> supports all listing formats.
/// 				<br>
/// 				<br>
/// 				Also, only <b>AddFixedPriceItem</b> supports multiple-variation listings
/// 				and tracking inventory by a seller-defined SKU value. <b>AddItem</b> does not support
/// 				Variations or the <b>InventoryTrackingMethod</b> field.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class AddFixedPriceItemRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// AddFixedPriceItemYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container is used to specify all of the values and settings that define a new fixed-price listing.
    /// 							
    /// </remarks>

	public ItemType Item { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				If the new listing is created successfully, the <b>AddFixedPriceItem</b> response includes the unique identifier of the new listing (<b>ItemID</b>) and the estimated values of any fees (such as insertion fee and any other listing upgrade fees) generated as a result of the listing being created.
/// 				<br/><br/>
/// 				Other response fields include the the start and end times of the listing, and any other applicable fields such as the product SKU (if defined by seller), listing recommendations (if applicable), or other details.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class AddFixedPriceItemResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// AddFixedPriceItemAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Unique identifier for the new fixed-price listing. This field is returned as long as the listing was successfully created.
    /// 							
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// AddFixedPriceItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 							The SKU value for an item is returned if the seller specified a SKU value through the <b>Item.SKU</b> field in the request. In the case of a multiple-variation listing, variation-level SKU values are not returned in the response. To get this data, a <b>GetItem</b> call would have to be made by the seller.
    /// 						
    /// </remarks>

	public string SKU { get; set; }
    /// <summary>
    /// AddFixedPriceItemAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Starting date and time for the new listing. This value is based on the time the listing was received and processed, or the time the item will be listed if the seller included the <b>Item.ScheduleTime</b> field in the request and set a custom start time of the listing (in the future).
    /// 							
    /// </remarks>

	public System.DateTime? StartTime { get; set; }
    /// <summary>
    /// AddFixedPriceItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Date and time when the new listing is scheduled to end based on the start time and the listing duration value that was set in the <b>ListingDuration</b> field at listing time. If the value of <b>ListingDuration</b> was set to <code>GTC</code> (Good 'Til Cancelled) this value will be set one month ahead of the start time, and this value will continue to be updated one month ahead each time  the GTC listing needs to be renewed. Fixed-price listings get renewed automatically as long as there is still a quantity of <code>1</code> or above, or even if the quantity is <code>0</code>, but the 'out-of-stock control' feature is enabled.
    /// 							
    /// </remarks>

	public System.DateTime? EndTime { get; set; }
    /// <summary>
    /// eBay.com Feeshttp://pages.ebay.com/help/sell/fees.html
    /// AddFixedPriceItemAlways
    /// Fees by marketplacehttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/fees-by-marketplace.html
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container is an array of fees associated with the creation of the listing. The fees in this container will not include any fees that are based on the purchase price (such as transaction fees) and only come into play when the listing has a sale.
    /// 								<br>
    /// 								<br>
    /// 								All listing fee types are returned, even if those fees are not applicable for the new listing and are '0.0'.
    /// 								<br>
    /// 								<br>
    /// 								<span class="tablenote"><b>Note:</b> The currency used for all fees returned under the <b>Fees</b> container reflects the currency used for the listing site, and not necessarily in the seller's default/home currency. For example, if a Canadian seller is using the <b>AddFixedPriceItem</b> call to list an item on the eBay US site, the currency type shown for each fee will be <code>USD</code> and not <code>CAD</code>.
    /// 								</span>
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("Fee", IsNullable = false)]

	public System.Collections.Generic.List<FeeType> Fees { get; set; }
    /// <summary>
    /// 10
    /// AddFixedPriceItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								The unique identifier of the primary category in which the item was listed. This field is only returned if the <b>Item.CategoryMappingAllowed</b> boolean field is set to <code>true</code> in the request (or omitted) and the Category ID passed in as the primary listing category was automatically mapped to a new Category ID by eBay. If the primary category ID passed in the request is still active/valid, this field is not returned.
    /// 							
    /// </remarks>

	public string CategoryID { get; set; }
    /// <summary>
    /// 10
    /// AddFixedPriceItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Unique identifier of the secondary category in which the item was listed. This field is only returned if the <b>Item.CategoryMappingAllowed</b> boolean field is set to <code>true</code> in the request (or omitted) and the Category ID passed in as the secondary listing category was automatically mapped to a new Category ID by eBay. If the secondary category ID passed in the request is still active/valid, this field is not returned.
    /// 							
    /// </remarks>

	public string Category2ID { get; set; }
    /// <summary>
    /// AddFixedPriceItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container is an array of one or more listing fee/upgrade discount types being offered by eBay to the seller.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("DiscountReason")]

	public System.Collections.Generic.List<DiscountReasonCodeType> DiscountReason { get; set; }
    /// <summary>
    /// AddFixedPriceItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container holds an array of one or more products in the eBay product catalog that appear to match the product being listed, just based on the information in the listing. This container will not be returned if no similar products were found in the eBay product catalog.
    /// 							
    /// </remarks>

	public ProductSuggestionsType ProductSuggestions { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// 
/// 					Creates a fixed-price, auction, or classified ad listing.
/// 				
/// 
/// 					AddFixedPriceItem, AddItems, VerifyAddItem
/// 				
/// List an itemhttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/list-item.html
/// Create item listingshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/create-listing.html
/// Add pictureshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/pictures.html
/// </summary>
/// <remarks>
/// 
/// 				Base request type for the <b>AddItem</b> call, which is used to create a fixed-price, auction, or classified ad listing. The <b>AddItem</b> call does not support multiple-variation listings, so the <b>AddFixedPriceItem</b> call must be used to create multiple-variation listings.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class AddItemRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// AddItemYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container is used to specify all of the values and settings that define a new listing.
    /// 							
    /// </remarks>

	public ItemType Item { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				If the new listing is created successfully, the <b>AddItem</b> response includes the unique identifier of the new listing (<b>ItemID</b>) and the estimated values of any fees (such as insertion fee and any other listing upgrade fees) generated as a result of the listing being created.
/// 				<br/><br/>
/// 				Other response fields include the the start and end times of the listing, and any other applicable fields such as the product SKU (if defined by seller), listing recommendations (if applicable), or other details.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class AddItemResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// AddItemAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Unique identifier for the new listing. This field is returned as long as the listing was successfully created.
    /// 							
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// AddItemAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Starting date and time for the new listing. This value is based on the time the listing was received and processed, or the time the item will be listed if the seller included the <b>Item.ScheduleTime</b> field in the request and set a custom start time of the listing (in the future).
    /// 							
    /// </remarks>

	public System.DateTime? StartTime { get; set; }
    /// <summary>
    /// AddItemAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Date and time when the new listing is scheduled to end based on the start time and the listing duration value that was set in the <b>ListingDuration</b> field at listing time. If the value of <b>ListingDuration</b> was set to <code>GTC</code> (Good 'Til Cancelled) this value will be set one month ahead of the start time, and this value will continue to be updated one month ahead each time  the GTC listing needs to be renewed. Fixed-price listings get renewed automatically as long as there is still a quantity of <code>1</code> or above, or even if the quantity is <code>0</code>, but the 'out-of-stock control' feature is enabled.
    /// 								<br><br>
    /// 								Note that <code>GTC</code> is not a supported listing duration for auction listings, but is the only supported listing duration for fixed-price listings except for a few motor vehicle categories on eBay Motors US, eBay UK, and eBay Italy
    /// 							
    /// </remarks>

	public System.DateTime? EndTime { get; set; }
    /// <summary>
    /// AddItemAlways
    /// eBay.com Selling Feeshttps://www.ebay.com/help/selling/fees-credits-invoices/selling-fees?id=4822
    /// Fees by marketplacehttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/fees-by-marketplace.html
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container is an array of fees associated with the creation of the listing. The fees in this container will not include any fees that are based on the purchase price (such as transaction fees) and only come into play when the listing has a sale.
    /// 								<br>
    /// 								<br>
    /// 								All listing fee types are returned, even if those fees are not applicable for the new listing and are '0.0'.
    /// 								<br>
    /// 								<br>
    /// 								<span class="tablenote"><b>Note:</b> The currency used for all fees returned under the <b>Fees</b> container reflects the currency used for the listing site, and not necessarily in the seller's default/home currency. For example, if a Canadian seller is using the <b>AddItem</b> call to list an item on the eBay US site, the currency type shown for each fee will be <code>USD</code> and not <code>CAD</code>.
    /// 								</span>
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("Fee", IsNullable = false)]

	public System.Collections.Generic.List<FeeType> Fees { get; set; }
    /// <summary>
    /// 10
    /// AddItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								The unique identifier of the primary category in which the item was listed. This field is only returned if the <b>Item.CategoryMappingAllowed</b> boolean field is set to <code>true</code> in the request (or omitted) and the Category ID passed in as the primary listing category was automatically mapped to a new Category ID by eBay. If the primary category ID passed in the request is still active/valid, this field is not returned.
    /// 							
    /// </remarks>

	public string CategoryID { get; set; }
    /// <summary>
    /// 10
    /// AddItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Unique identifier of the secondary category in which the item was listed. This field is only returned if the <b>Item.CategoryMappingAllowed</b> boolean field is set to <code>true</code> in the request (or omitted) and the Category ID passed in as the secondary listing category was automatically mapped to a new Category ID by eBay. If the secondary category ID passed in the request is still active/valid, this field is not returned.
    /// 							
    /// </remarks>

	public string Category2ID { get; set; }
    /// <summary>
    /// AddItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container is an array of one or more listing fee/upgrade discount types being offered by eBay to the seller.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("DiscountReason")]

	public System.Collections.Generic.List<DiscountReasonCodeType> DiscountReason { get; set; }
    /// <summary>
    /// AddItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container holds an array of one or more products in the eBay product catalog that appear to match the product being listed, just based on the information in the listing. This container will not be returned if no similar products were found in the eBay product catalog.
    /// 							
    /// </remarks>

	public ProductSuggestionsType ProductSuggestions { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// 
/// 					AddItem, VerifyAddItem
/// 				
/// List an itemhttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/list-item.html
/// Create item listingshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/create-listing.html
/// Add pictureshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/pictures.html
/// </summary>
/// <remarks>
/// 
/// 				Base request type for the <b>AddItems</b> call, which is used to create one to five fixed-price, auction, or classified ad listings. The <b>AddItems</b> call does not support multiple-variation listings, so multiple-variation listings cannot be created with this call.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class AddItemsRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// 1
    /// 5
    /// AddItemsYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								An <b>AddItemRequestContainer</b> container is required for each listing that will be created with the <b>AddItems</b> request. Up to five of these containers can be included in one <b>AddItems</b> request.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("AddItemRequestContainer")]

	public System.Collections.Generic.List<AddItemRequestContainerType> AddItemRequestContainer { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				The response of the <b>AddItems</b> call. The response includes the Item IDs of the newly created listings, the eBay category each item is listed under, the seller-defined SKUs of the items (if any), the listing recommendations for each item (if applicable), the start and end time of each listing, and the estimated fees that each listing will incur.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class AddItemsResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// AddItemsAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								One <b>AddItemResponseContainer</b> container is returned for each listing that was created with the <b>AddItems</b> call. Each container includes the <b>ItemID</b> of each newly created listings, the eBay category each item is listed under, the seller-defined SKUs of the items (if any), the listing recommendations for each item (if applicable), the start and end time of each listing, and the estimated fees that each listing will incur.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("AddItemResponseContainer")]

	public System.Collections.Generic.List<AddItemResponseContainerType> AddItemResponseContainer { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// 
/// 					AddMemberMessagesAAQToBidder, AddMemberMessageRTQ
/// 				
/// </summary>
/// <remarks>
/// 
/// 				Enables a buyer and seller in an order relationship to
/// 				send messages to each other's My Messages Inboxes.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class AddMemberMessageAAQToPartnerRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// AddMemberMessageAAQToPartnerYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								Unique identifier for the listing that is being discussed between the two order partners.
    /// 							
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// AddMemberMessageAAQToPartnerYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container holds the message, and includes the subject, message body, and other details related to the message.
    /// 							
    /// </remarks>

	public MemberMessageType MemberMessage { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type defines the response to the <b>AddMemberMessageAAQToPartner</b> call. There are no call-specific fields in this response.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class AddMemberMessageAAQToPartnerResponseType : AbstractResponseType{

#region 属性
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// 
/// 					Enables a seller to reply to a question about an active item listing.
/// 				
/// 
/// 					AddMemberMessagesAAQToBidder, AddMemberMessageAAQToPartner
/// 				
/// </summary>
/// <remarks>
/// 
/// 				The base request of the <b>AddMemberMessageRTQ</b> call that enables a seller to reply to a question about an active item listing.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class AddMemberMessageRTQRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// AddMemberMessageRTQNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								The unique identifier of the listing about which the question was asked. This field is not required if the request includes a <b>RecipientID</b> value in the <b>MemberMessage</b> container, and the bidder/potential buyer and seller do not have more than one listing in common between one another.
    /// 							
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// AddMemberMessageRTQYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container is used by the seller to answer the question from the bidder/potential buyer. This container includes the recipient ID of the bidder/potential buyer, the message subject, the message body (where the question is answered), and other values related to the message.
    /// 							
    /// </remarks>

	public MemberMessageType MemberMessage { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type defines the response to the <b>AddMemberMessageRTQ</b> call. There are no call-specific fields in this response.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class AddMemberMessageRTQResponseType : AbstractResponseType{

#region 属性
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// 
/// 					Enables a seller to send up to 10 messages to bidders/potential buyers regarding an active listing.
/// 				
/// 
/// 					AddMemberMessageAAQToPartner, AddMemberMessageRTQ
/// 				
/// </summary>
/// <remarks>
/// 
/// 				The base request of the <b>AddMemberMessagesAAQToBidder</b> call, which allows a seller to send up to 10 messages to bidders/potential buyers regarding an active listing. These potential buyers may include those who have made a Best Offer on a listing.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class AddMemberMessagesAAQToBidderRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// AddMemberMessagesAAQToBidderYes
    /// </summary>
    /// <remarks>
    /// 
    /// 							An <b>AddMemberMessagesAAQToBidderRequestContainer</b> container is required for each message being sent to unique bidders/potential buyers.  A seller can send up to 10 messages to unique bidders/potential buyers in one <b>AddMemberMessagesAAQToBidder</b> call.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("AddMemberMessagesAAQToBidderRequestContainer")]

	public System.Collections.Generic.List<AddMemberMessagesAAQToBidderRequestContainerType> AddMemberMessagesAAQToBidderRequestContainer { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>AddMemberMessagesAAQToBidderResponseContainer</b> container, which consists of the <b>Ack</b> field (indicating the result of the send message operation) and the <b>CorrelationID</b> field (used to track multiple send message operations performed in one call).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class AddMemberMessagesAAQToBidderResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// 10
    /// AddMemberMessagesAAQToBidderAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Container consisting of the <b>Ack</b> field (indicating the result of the send message operation) and the <b>CorrelationID</b> field (used to track multiple send message operations performed in one call).
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("AddMemberMessagesAAQToBidderResponseContainer")]

	public System.Collections.Generic.List<AddMemberMessagesAAQToBidderResponseContainerType> AddMemberMessagesAAQToBidderResponseContainer { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// 
/// 					Combines two or more order line items into a single order, enabling a buyer to pay for all of those order line items with a single payment.
/// 				
/// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/manage-fulfill-orders.htmlManage and fulfill orders
/// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/manage-fulfill-combine-invoices.htmlCombined invoice
/// </summary>
/// <remarks>
/// 
/// 				The <b>AddOrder</b> call can be used by a seller to combine two or more unpaid, single line item orders from the same buyer into one 'Combined Invoice' order with multiple line items. Once multiple line items are combined into one order, the buyer can make one single payment for multiple line item order. If possible and agreed to, the seller can then ship multiple line items in the same shipping package, saving on shipping costs, and possibly passing that savings down to the buyer through Combined Shipping Discount rules set up in My eBay.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class AddOrderRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// AddOrderYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								The root container of the <b>AddOrder</b> request. In this call, the seller identifies two or more unpaid order line items from the same buyer through the <b>TransactionArray</b> container, specifies one or more accepted payment methods through the <b>PaymentMethods</b> field(s), and specifies available shipping services and other shipping details through the <b>ShippingDetails</b> container.
    /// 							
    /// </remarks>

	public OrderType Order { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type defines the response of an <b>AddOrder</b> call. If the multiple line items are successfully combined into a single order, this response includes the unique identifier of this 'Combined Invoice' order (automatically generated by eBay), and a timestamp indicating when the new order was created.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class AddOrderResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// 40
    /// AddOrderAlways
    /// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/manage-fulfill-combine-invoices.htmlCombined Invoice
    /// </summary>
    /// <remarks>
    /// 
    /// 								The unique identifier of the successfully-created 'Combined Invoice' order. This value is only created and returned if the <b>AddOrder</b> call is successful in creating the new order.
    /// 								<br/><br/>
    /// 								This value can be used as an input filter in <b>GetOrders</b> calls to retrieve the 'Combined Invoice' order.
    /// 								<br><br>
    /// 									<span class="tablenote"><b>Note: </b> This unique identifier is not the same as the <b>OrderID</b> that is generated after payment.
    /// 								</span>
    /// 							
    /// </remarks>

	public string OrderID { get; set; }
    /// <summary>
    /// AddOrderAlways
    /// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/manage-fulfill-combine-invoices.htmlCombined Invoice
    /// </summary>
    /// <remarks>
    /// 
    /// 								Timestamp that indicates the date and time that the 'Combined Invoice' order was created.
    /// 							
    /// </remarks>

	public System.DateTime? CreatedTime { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// VerifyAddSecondChanceItem
/// Second chance offershttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/second-chance.html
/// </summary>
/// <remarks>
/// 
/// 				Used by the seller of an auction listing to provide a Second Chance Offer to one of that auction item's non-winning bidders. A Second Chance Offer is used by sellers whenever the seller was unable to complete the sale with the winning bidder because the bidder didn't pay, or if the auction listing ended without the Reserve Price being met, or if that seller has multiple identical items for sale and wants to give other bidders a chance to purchase the item.
/// 				<br>
/// 				<br>
/// 				To get information on the bidders for a recently-ended auction listing, the seller can use the <b>GetAllBidders</b> call and pass the corresponding <b>ItemID</b> value into the call request.
/// 				<br>
/// 				<br>
/// 				For more information on the specifics of Second Chance Offers, see the <a href="https://pages.ebay.com/help/sell/second_chance_offer.html" target="_blank">Making a Second Chance Offer</a> help page.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class AddSecondChanceItemRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// AddSecondChanceItemYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field is used to specify the bidder that is being offered the Second Chance Offer. The eBay User ID of the bidder is used in this field. Specify only one <b>RecipientBidderUserID</b> per call. If multiple users are specified, only the last one specified receives the offer. User ID values will be returned in the <b>Offer.User.UserID</b> field of the <b>GetAllBidders</b> call response.
    /// 							
    /// </remarks>

	public string RecipientBidderUserID { get; set; }
    /// <summary>
    /// AddSecondChanceItemNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								The amount the offer recipient must pay to purchase the item as a Second Chance Offer. This field should only be used when the original item was listed in an eBay Motors vehicle category (or in some categories on U.S. and international sites for high-priced items, such as items in many U.S. and Canada Business and Industrial categories) and it ended unsold because the reserve price was not met. Otherwise, eBay establishes the price and no price should be submitted. The price offered to the Second Chance Offer recipient is generally the highest bid that the user made on the original listing.
    /// 							
    /// </remarks>

	public AmountType BuyItNowPrice { get; set; }
    /// <summary>
    /// AddSecondChanceItemYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								This enumeration value indicates the length of time (in days) that the Second Chance Offer will be available to the recipient. Upon receiving the Second Chance Offer, the recipient bidder will have this many days to accept the offer before the offer expires. One of the values in <b>SecondChanceOfferDurationCodeType</b> must be used.
    /// 							
    /// </remarks>

	public SecondChanceOfferDurationCodeType? Duration { get; set; }
    /// <summary>
    /// AddSecondChanceItemYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field is used to identify the original auction listing through its unique identifier (Item ID). Upon a successful call, the Second Chance Offer will be identified by a new <b>ItemID</b> in the response.
    /// 							
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// 1000
    /// AddSecondChanceItemNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This optional field is used to provide a message to the recipient of the Second Chance Offer. This message cannot contain HTML, asterisks, or quotes. The content in this field will be included in the Second Chance Offer email that is sent to the recipient.
    /// 							
    /// </remarks>

	public string SellerMessage { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the response container of an <b>AddSecondChanceItem</b> call. This response container consists of the <b>ItemID</b> of the listing in which a Second Chance Offer is being offered, as well as the start and end time that the Second Chance Offer is available to the recipient (identified through the <b>RecipientBidderUserID</b> in the request).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class AddSecondChanceItemResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// AddSecondChanceItemAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field contains the Item ID for the Second Chance Offer that was just created with the <b>AddSecondChanceItem</b> call. Note that this Item ID will be different from the Item ID in the original auction listing that was passed in the request.
    /// 							
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// AddSecondChanceItemAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								This timestamp indicates the date and time when the Second Chance Offer became available to the recipient.
    /// 							
    /// </remarks>

	public System.DateTime? StartTime { get; set; }
    /// <summary>
    /// AddSecondChanceItemAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								This timestamp indicates the date and time when the Second Chance Offer listing will expire, at which time the recipient will no longer be able to purchase the item.
    /// 							
    /// </remarks>

	public System.DateTime? EndTime { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// 
/// 					Adds additional text to an active listing's item description.
/// 				
/// Revise a listinghttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/revise-listing.html
/// ReviseItem, ReviseFixedPriceItem
/// </summary>
/// <remarks>
/// 
/// 				The base request of the <b>AddToItemDescription</b> call, which is used to add additional text to an active listing's item description. Upon a successful call, the text supplied in this call will be inserted into the active listing, with a horizontal rule separating the original item description and the additional text that was added with this call.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class AddToItemDescriptionRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// AddToItemDescriptionYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field is used to identify the active listing that will be updated with additional text in the item description field. The Item ID is a unique identifier for a listing.
    /// 							
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// AddToItemDescriptionYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field is used to specify the text that will be appended to the end of the active listing's item description.
    /// 								The text provided in this field must abide by the same rules/restrictions
    /// 								applicable to the original item description supplied at listing time. For more information on these rules and restrictions, see the <a href="https://developer.ebay.com/Devzone/XML/docs/Reference/ebay/types/ItemType.html#Description">Description field of ItemType</a>.
    /// 							
    /// </remarks>

	public string Description { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type defines the response of the <b>AddToItemDescription</b> call. There are no call-specific fields in this response. The seller should look for an <b>Ack</b> value of <code>true</code> in the response, that will indicate that the additional text in the item description was added successfully.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class AddToItemDescriptionResponseType : AbstractResponseType{

#region 属性
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Adds one or more order line items to the eBay user's Watch List. An auction item or a single-variation, fixed-price listing is identified with an <b>ItemID</b> value. To add a specific item variation to the Watch List from within a multi-variation, fixed-price listing, the user will use the  <b>VariationKey</b> container instead.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class AddToWatchListRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// AddToWatchListConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								The unique identifier of the single-variation listing that is to be added to the eBay user's Watch List. The item must be a currently active item, and the total number of items in the user's Watch List (after the items in the request have been added) cannot exceed the maximum allowed number of Watch List items. One or more <b>ItemID</b> fields can be specified. A separate error node will be returned for each item that was not successfully added to the Watch List.<br> <br> The user must use either one or more <b>ItemID</b> values or one or more <b>VariationKey</b> containers, but the user may not use both of these entities in the same call.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("ItemID")]

	public System.Collections.Generic.List<string> ItemID { get; set; }
    /// <summary>
    /// AddToWatchListConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container is used to specify one or more item variations in a multi-variation, fixed-price listing that you want to add to the Watch List.
    /// 								The listing is identified through the <b>ItemID</b> value and each item variation existing within that listing is identified through a <b>VariationSpecifics.NameValueList</b> container.
    /// 								<br>
    /// 								<br>
    /// 								The user must use either one or more <b>ItemID</b> values or one or more <b>VariationKey</b> containers, but the user may not use both of these entities in the same call.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("VariationKey")]

	public System.Collections.Generic.List<VariationKeyType> VariationKey { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type defines the response of the <b>AddToWatchList</b> call. Along with data indicating the success or failure of adding one or more items to a user's Watch List, this response also includes the number of items currently in the user's Watch List and the maximum number of items allowed in the Watch List.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class AddToWatchListResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// AddToWatchListAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								This integer value indicates the total number of items in the user's Watch List (after those specified in the call request have been successfully added).
    /// 							
    /// </remarks>

	public int? WatchListCount { get; set; }
    /// <summary>
    /// AddToWatchListAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								This integer value indicates the maximum number of items allowed in a user's Watch List. The maximum number of items that can be added to a Watch List is 400, but this can vary by eBay marketplace.
    /// 							
    /// </remarks>

	public int? WatchListMaximum { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Enables a seller to perform various tasks with a single or multiple line item order. Tasks available with this call include marking the order as paid, marking the order as shipped, providing shipment tracking details to the buyer, and leaving feedback for the buyer.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class CompleteSaleRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// CompleteSaleConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Unique identifier for an eBay listing. An <b>ItemID</b> value can be paired up with a corresponding <b>TransactionID</b> value in a <b>CompleteSale</b> request to identify a single order line item. Alternatively, the <b>OrderLineItemID</b> value for the order line item can be used.
    /// 								<br><br>
    /// 								Unless an <b>OrderLineItemID</b> value is used to identify a single order line item, or the <b>OrderID</b> value is used to identify a single or multiple line item order, the <b>ItemID</b>/<b>TransactionID</b> pair must be specified. To perform an action on an entire multiple line item order, the <b>OrderID</b> field must be used. If an <b>OrderID</b> or <b>OrderLineItemID</b> value is specified, an <b>ItemID</b>/<b>TransactionID</b> pair will be ignored (if present in the same request).
    /// 							
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// CompleteSaleConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Unique identifier for a sales transaction. A <b>TransactionID</b> identifier is created once there is a commitment to buy (bidder wins the auction, buyer clicks buy button, or buyer purchases item through <b>PlaceOffer</b> call). The
    /// 								<b>TransactionID</b> can be paired up with the corresponding <b>ItemID</b> value in a <b>CompleteSale</b> request to identify a single order line item. Alternatively, the <b>OrderLineItemID</b> value for the order line item can be used.
    /// 								<br><br>
    /// 								Unless an <b>OrderLineItemID</b> value is used to identify a single order line item, or the <b>OrderID</b> value is used to identify a single or multiple line item order, the <b>ItemID</b>/<b>TransactionID</b> pair must be specified. To perform an action on an entire multiple line item order, the <b>OrderID</b> field must be used. If an <b>OrderID</b> or <b>OrderLineItemID</b> value is specified, an <b>ItemID</b>/<b>TransactionID</b> pair will be ignored (if present in the same request).
    /// 								<br>
    /// 								<br>
    /// 								The <b>TransactionID</b> value for auction listings is always <code>0</code> since there can be only one winning bidder/one sale for an auction listing.
    /// 								<br/><br/>
    /// 								<span class="tablenote"><b>Note: </b> Beginning in July 2024, non-zero transaction IDs will start being returned for auction listings. If necessary, update code to handle non-zero transaction IDs for auction transactions before this time. 
    /// 								</span>
    /// 							
    /// </remarks>

	public string TransactionID { get; set; }
    /// <summary>
    /// CompleteSaleNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container is used by the seller to leave feedback for the buyer for the order line item identified in the call request. The seller must include and specify all fields of this type, including the buyer's eBay User ID, the Feedback rating (a seller can only leave a buyer a 'Positive' rating), and a comment, which helps justify the Feedback rating. The eBay User ID must match the buyer who bought the order line item, or an error will occur. An error will also occur if Feedback has already been left for the buyer (either through API or the Web flow).
    /// 								<br><br>
    /// 								To determine if Feedback has already been left for an order line item, you can call <b class="con">GetFeedback</b>, passing in the <b class="con">OrderLineItemID</b> value in the call request.
    /// 								<br><br>
    /// 								<span class="tablenote"><b>Note: </b> Feedback entries are submitted at the order line item level, so either an <b>OrderLineItemID</b> value or an <b>ItemID</b>/<b>TransactionID</b> pair should be specified to identify the order line item (and not an <b>OrderLineItemID</b> value). To leave Feedback for all line items in a multiple line item order, the seller would need a separate <b>CompleteSale</b> request for each order line item.
    /// 								</span>
    /// 							
    /// </remarks>

	public FeedbackInfoType FeedbackInfo { get; set; }
    /// <summary>
    /// CompleteSaleNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								The seller includes and sets this field to true if the order or order line item has been shipped. If the call is successful, the order line item(s) are marked as Shipped in My eBay.
    /// 								<br><br>
    /// 								If the seller includes and sets this field to false, the order or order line item are marked (or remain) as 'Not Shipped' in eBay's system.
    /// 								<br><br>
    /// 								If this field is not included, the shipped status of the order or order line item remain unchanged in My eBay.
    /// 								<br><br>
    /// 								If shipment tracking information is provided for an order or order line item through the <b>Shipment</b> container in the same request, the <b>Shipped</b> status is set to <code>true</code> automatically, and the <b>Shipped</b> field is not necessary.
    /// 							
    /// </remarks>

	public bool? Shipped { get; set; }
    /// <summary>
    /// CompleteSaleNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								The seller includes and sets this field to <code>true</code> to mark an unpaid order as paid. If the call is successful, the order line item(s) are marked as 'Paid' in eBay's system.
    /// 								<br>
    /// 								<span class="tablenote"><b>Note:</b> The seller is not allowed to set this field to <code>false</code>.</span>
    /// 							
    /// </remarks>

	public bool? Paid { get; set; }
    /// <summary>
    /// 
    /// 1027
    /// NoOp
    /// 1033
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// 								<span class="tablenote"><b>Note: </b> DO NOT USE THIS FIELD. Previously, this field's only purpose was to classify the order to be updated as a Half.com order. However, since the Half.com site has been shut down, this field is no longer applicable.
    /// 								</span>
    /// 							
    /// </remarks>

	public ListingTypeCodeType? ListingType { get; set; }
    /// <summary>
    /// CompleteSaleNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Container consisting of shipment tracking information, shipped time, and an optional text field to provide additional details to the buyer. Setting the tracking number and shipping carrier automatically marks the order line item as shipped and the <b>Shipped</b> field is not necessary.
    /// 								<br><br>
    /// 								If you supply <b>ShipmentTrackingNumber</b>, you must also supply <b>ShippingCarrierUsed</b>; otherwise you will get an error.
    /// 								<br><br>
    /// 								To modify the shipping tracking number and/or shipping carrier, supply the new number in the <b>ShipmentTrackingNumber</b> field or supply the value for <b>ShippingCarrierUsed</b>, or both. The old number and carrier are deleted and the new ones are added.
    /// 								<br><br>
    /// 								To simply delete the current tracking details altogether, supply empty <b>Shipment</b> tags.
    /// 								<br> <br>
    /// 								<span class="tablenote"><b>Note:</b> Top-Rated sellers must have a record of uploading shipment tracking information (through site or through API) for at least 95 percent of their order line items (purchased by U.S. buyers) to keep their status as Top-Rated sellers. For more information on the requirements to becoming a Top-Rated Seller, see the <a href="http://pages.ebay.com/help/sell/top-rated.html">Becoming a Top-Rated Seller and qualifying for Top-Rated Plus</a> customer support page. </span> <br>
    /// 							
    /// </remarks>

	public ShipmentType Shipment { get; set; }
    /// <summary>
    /// 40
    /// CompleteSaleNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								A unique identifier for an eBay order. This field can be used to make an 'order-level' update. If an order has multiple line items, and the <b>CompleteSale</b> call is being used to update the status of, or provide feedback for a single line item within the order, the <b>OrderLineItemID</b> field or <b>ItemID</b>/<b>TransactionID</b> pair must be used to identify this order line item instead of the <b>OrderID</b> field. If the order only has one line item, it the <b>OrderID</b> field can be used to make any updates with the <b>CompleteSale</b> call.
    /// 								<br><br>
    /// 								<b>OrderID</b> overrides an <b>OrderLineItemID</b> or <b>ItemID</b>/<b>TransactionID</b> pair if these fields are also specified in the same request.
    /// 								<br><br>
    /// 									<span class="tablenote"><b>Note: </b> Note that the unique identifier of a 'non-immediate payment' order will change as it goes from an unpaid order to a paid order. Due to this scenario, all calls that accept Order ID values as request filters/parameters, including the <b>CompleteSale</b> call, will support the identifiers for both unpaid and paid orders. 
    /// 								</span>
    /// 							
    /// </remarks>

	public string OrderID { get; set; }
    /// <summary>
    /// CompleteSaleNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								A unique identifier for an eBay order line item. <b>OrderLineItemID</b> values are returned (at the order line item level) in Trading API's order management calls. This identifier is created once there is a commitment to buy (bidder wins the auction, buyer clicks buy button, or buyer purchases item through <b>PlaceOffer</b> call). An <b>OrderLineItemID</b> value can be used in a <b>CompleteSale</b> request to identify a line item within an order. Alternatively, an <b>ItemID</b>/<b>TransactionID</b> pair can also be used to identify a line item.
    /// 								<br><br>
    /// 								Unless an <b>ItemID</b>/<b>TransactionID</b> pair is used to identify an order line
    /// 								item, or an <b>OrderID</b> value is used to identify an order, the <b>OrderLineItemID</b> must be specified. If <b>OrderLineItemID</b> is specified, the <b>ItemID</b>/<b>TransactionID</b> pair are
    /// 								ignored if present in the same request.
    /// 							
    /// </remarks>

	public string OrderLineItemID { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type defines the response of the <b>CompleteSale</b> call. There are no call-specific fields in this response, but the seller should look for an <b>Ack</b> value of <code>true</code> in the response, as this value will indicate that the action(s) in the <b>CompleteSale</b> call were successful. If any other <b>Ack</b> value besides <code>true</code> is returned, the seller should look for any returned error messages or warnings.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class CompleteSaleResponseType : AbstractResponseType{

#region 属性
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// Working with token/authentication callshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/token-auth-calls.html
/// </summary>
/// <remarks>
/// 
/// 					Returns the ID of a user who has gone through an application's consent flow
/// 					process for obtaining an authorization token.
/// 				
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ConfirmIdentityRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// ConfirmIdentityYes
    /// </summary>
    /// <remarks>
    /// 
    /// 									A string obtained by making a <b>GetSessionID</b> call, passed in redirect URL to the eBay signin page.
    /// 								
    /// </remarks>

	public string SessionID { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 					Confirms the identity of the user by returning the <b>UserID</b> and the <b>EIASToken</b> belonging to the user.
/// 				
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ConfirmIdentityResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// ConfirmIdentityAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 									Unique eBay user ID for the user.
    /// 								
    /// </remarks>

	public string UserID { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 					Removes selected messages for a given user.
/// 				
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class DeleteMyMessagesRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// DeleteMyMessagesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 									Contains a list of up to 10 <b>MessageID</b> values.
    /// 								
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("MessageID", IsNullable = false)]

	public System.Collections.Generic.List<string> MessageIDs { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				The response to <b>DeleteMyMessages</b>. If the request is successful,
/// 				<b>DeleteMyMessages</b> has an empty payload.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class DeleteMyMessagesResponseType : AbstractResponseType{

#region 属性
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// EndItem, EndItems
/// End a listing earlyhttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/end-early.html
/// </summary>
/// <remarks>
/// 
/// 				Ends the specified fixed-price listing before the date and time at which
/// 				it would normally end (per the listing duration).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class EndFixedPriceItemRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// EndFixedPriceItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Unique identifier of the listing that you want to end.
    /// 								<br><br>
    /// 								In the <b>EndFixedPriceItem</b> request, either <b>ItemID</b> or <b>SKU</b> value is required.
    /// 								If both are passed in and they don't refer to the same listing, eBay
    /// 								ignores <b>SKU</b> and considers only the <b>ItemID</b>.
    /// 							
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// ProductDeleted
    /// EndFixedPriceItemYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								The seller's reason for ending the listing early is input into this required field. The seller is not allowed to use the <code>ProductDeleted</code> value, as this ending reason can only be used internally by eBay to administratively end a listing due to the associated Catalog product being removed from the eBay Catalog.
    /// 							
    /// </remarks>

	public EndReasonCodeType? EndingReason { get; set; }
    /// <summary>
    /// 50
    /// EndFixedPriceItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								The seller-defined SKU (stock keeping unit) value of the item in the listing being ended. The <b>SKU</b> field can only be used to end a listing if that listing was created or relisted with an <b>AddFixedPriceItem</b> or <b>RelistFixedPriceItem</b> call, and the <b>Item.InventoryTrackingMethod</b> was included in the call and set to <code>SKU</code>.
    /// 								<br><br>
    /// 								In the <b>EndFixedPriceItem</b> request, either <b>ItemID</b> or <b>SKU</b> is required.
    /// 								If both are passed in and they don't refer to the same listing, eBay
    /// 								ignores <b>SKU</b> and considers only the <b>ItemID</b>.
    /// 							
    /// </remarks>

	public string SKU { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Acknowledgement that includes SKU, as well as the date and time that the listing ended due to the call to EndFixedPriceItem.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class EndFixedPriceItemResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// EndFixedPriceItemAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Timestamp that indicates the date and time (GMT) that the specified  listing was ended.
    /// 							
    /// </remarks>

	public System.DateTime? EndTime { get; set; }
    /// <summary>
    /// 50
    /// EndFixedPriceItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								If a SKU (stock-keeping unit) exists for the item in the listing, it is returned in the response.
    /// 							
    /// </remarks>

	public string SKU { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// EndFixedPriceItem, EndItems
/// End a listing earlyhttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/end-early.html
/// </summary>
/// <remarks>
/// 
/// 				Ends the specified item listing before the date and time at which it would normally end per the listing duration.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class EndItemRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// EndItemYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								Unique item ID that identifies the listing that you want to end.
    /// 							
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// EndItemYesProductDeleted
    /// </summary>
    /// <remarks>
    /// 
    /// 								The seller's reason for ending the listing early is input into this required field. The seller is not allowed to use the <code>ProductDeleted</code> value, as this ending reason can only be used internally by eBay to administratively end a listing due to the associated Catalog product being removed from the eBay Catalog.
    /// 							
    /// </remarks>

	public EndReasonCodeType? EndingReason { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type includes the acknowledgement of the date and time when the eBay listing was ended due to the call to <b>EndItem</b>.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class EndItemResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// EndItemAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								This timestamp indicates the date and time (returned in GMT) when the specified eBay listing was ended.
    /// 							
    /// </remarks>

	public System.DateTime? EndTime { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// EndItem, EndFixedPriceItem
/// End a listing earlyhttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/end-early.html
/// </summary>
/// <remarks>
/// 
/// 				The <b>EndItems</b> call is used to end up to 10 specified eBay listings before the date and time at which those listings would normally end per the listing duration.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class EndItemsRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// 10
    /// EndItemsYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								An <b>EndItemRequestContainer</b> container is required for each eBay listing that the seller plans to end through the <b>EndItems</b> call. Up to 10 eBay listings can be ended with one <b>EndItems</b> call.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("EndItemRequestContainer")]

	public System.Collections.Generic.List<EndItemRequestContainerType> EndItemRequestContainer { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Contains a response of the resulting status of ending each item.				
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class EndItemsResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// EndItemsAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Returns a response for an individually ended item. Mutiple containers will be listed if multiple items are ended.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("EndItemResponseContainer")]

	public System.Collections.Generic.List<EndItemResponseContainerType> EndItemResponseContainer { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// 
/// 					This call is used to extend this expiration date of pictures uploaded to the eBay Picture Server (EPS).
/// 				
/// </summary>
/// <remarks>
/// 
/// 				By default, unpublished pictures uploaded to eBay Picture Services (EPS) via the <b>UploadSiteHostedPictures</b> call will be kept on the server for five days before being purged. The <b>ExtendSiteHostedPictures</b> call is used to extend this expiration date by the number of days specified in the call. This restricted call gives approved sellers the ability to extend the default expiration date of pictures uploaded to EPS but not immediately published in an eBay listing.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ExtendSiteHostedPicturesRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// ExtendSiteHostedPicturesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								The URL of the image hosted by eBay Picture Services. This URL is returned in the <b>SiteHostedPictureDetails.FullURL</b> field of the <b>UploadSiteHostedPictures</b> response.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("PictureURL")]

	public System.Collections.Generic.List<string> PictureURL { get; set; }
    /// <summary>
    /// ExtendSiteHostedPicturesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								The number of days by which to extend the expiration date for the
    /// 								specified image.
    /// 							
    /// </remarks>

	public int? ExtensionInDays { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Returns the URL of an eBay Picture Services image whose expiration date was
/// 				extended.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ExtendSiteHostedPicturesResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// ExtendSiteHostedPicturesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								The URL of the site-hosted picture whose expiration date was extended through the <b>ExtendSiteHostedPictures</b> call. This field will be returned if the expiration date of the site-hosted picture was successfully extended.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("PictureURL")]

	public System.Collections.Generic.List<string> PictureURL { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// Working with token/authentication callshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/token-auth-calls.html
/// </summary>
/// <remarks>
/// 
/// 				Retrieves an authentication token for a user.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class FetchTokenRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// FetchTokenNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								A value associated with the token retrieval request. SecretID is
    /// 								defined by the application, and is passed in the redirect URL to the
    /// 								eBay sign-in page. eBay recommends using a UUID for the secret ID
    /// 								value. You must also set Username (part of the RequesterCredentials)
    /// 								for the particular user of interest. SecretID and Username are not
    /// 								required if SessionID is present.
    /// 							
    /// </remarks>

	public string SecretID { get; set; }
    /// <summary>
    /// FetchTokenNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								A value associated with the token retrieval request. eBay generates the
    /// 								session ID when the application makes a GetSessionID request. SessionID
    /// 								is passed in the redirect URL to the eBay sign-in page. The advantage
    /// 								of using SessionID is that it does not require UserID as part of the
    /// 								FetchToken request. SessionID is not required if SecretID is present.
    /// 							
    /// </remarks>

	public string SessionID { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Includes the authentication token for the user and the date it expires.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class FetchTokenResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// FetchTokenAlways
    /// Working with token/authentication callshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/token-auth-calls.html
    /// </summary>
    /// <remarks>
    /// 
    /// 								The authentication token for the user.
    /// 							
    /// </remarks>

	public string eBayAuthToken { get; set; }
    /// <summary>
    /// FetchTokenAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Date and time at which the token returned in eBayAuthToken expires
    /// 								and can no longer be used to authenticate the user for that application.
    /// 							
    /// </remarks>

	public System.DateTime? HardExpirationTime { get; set; }
    /// <summary>
    /// FetchTokenConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								The REST authentication token for the user.
    /// 							
    /// </remarks>

	public string RESTToken { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// Account Informationhttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/user-mgmt-account-info.htmll
/// 				
/// Testing Applicationshttps://developer.ebay.com/develop/tools/sandbox
/// </summary>
/// <remarks>
/// 
/// 				Returns a seller's invoice data for their eBay account, including the account's
/// 				summary data.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetAccountRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// LastInvoice
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Specifies the report format in which to return account entries.
    /// 							
    /// </remarks>

	public AccountHistorySelectionCodeType? AccountHistorySelection { get; set; }
    /// <remarks>
    /// 
    /// 								Since <code>SpecifiedInvoice</code> is no longer supported, this field is no longer applicable and should not be used. If this field is included, it will be ignored.
    /// 							
    /// </remarks>

	public System.DateTime? InvoiceDate { get; set; }
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field is used to retrieve all account entries dating back to the timestamp passed into this <b>BeginDate</b> field up until the timestamp passed into the <b>EndDate</b> field. The <b>BeginDate</b> value can not be set back any further than four months into the past.
    /// 								<br/><br/>
    /// 								The allowed date formats are <em>YYYY-MM-DD</em> and <em>YYYY-MM-DD HH:mm:ss</em> The <b>BeginDate</b> value must be less than or equal to the <b>EndDate</b> value. The user might use the same values in both fields if that user wanted to retrieve all account entries from a specific day (if <em>YYYY-MM-DD</em> format used) or wanted to retrieve a specific account entry (if <em>YYYY-MM-DD HH:mm:ss</em> format used).
    /// 								<br/><br/>
    /// 								This field is only applicable if the  <b>AccountHistorySelection</b> value is set to 'BetweenSpecifiedDates'; otherwise, this field will be ignored. fiedDates' is used, both the <b>BeginDate</b> and <b>EndDate</b> must be included.
    /// 							
    /// </remarks>

	public System.DateTime? BeginDate { get; set; }
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field is used to retrieve all account entries dating up to the timestamp passed into this <b>EndDate</b> field dating back to the timestamp passed into the <b>BeginDate</b> field. The <b>EndDate</b> value can not be set for a future date.
    /// 								<br/><br/>
    /// 								The allowed date formats are <em>YYYY-MM-DD</em> and <em>YYYY-MM-DD HH:mm:ss</em> The <b>EndDate</b> value must be more than or equal to the <b>BeginDate</b> value. The user might use the same values in both fields if that user wanted to retrieve all account entries from a specific day (if <em>YYYY-MM-DD</em> format used) or wanted to retrieve a specific account entry (if <em>YYYY-MM-DD HH:mm:ss</em> format used).
    /// 								<br/><br/>
    /// 								This field is only applicable if the  <b>AccountHistorySelection</b> value is set to 'BetweenSpecifiedDates'; otherwise, this field will be ignored. If 'BetweenSpecifiedDates' is used, both the <b>BeginDate</b> and <b>EndDate</b> must be included.
    /// 							
    /// </remarks>

	public System.DateTime? EndDate { get; set; }
    /// <summary>
    /// GetAccountNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container is used to control how many account entries are returned on each page of data in the response. <b>PaginationType</b> is used by numerous Trading API calls, and the default and maximum values for the <b>EntriesPerPage</b> field differs with each call. For the <b>GetAccount</b> call, the default value is 500 (account entries) per page, and maximum allowed value is 2000 (account entries) per page.
    /// 							
    /// </remarks>

	public PaginationType Pagination { get; set; }
    /// <summary>
    /// GetAccountNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								By default, the current balance of the user's account will not be returned in the call response. To retrieve the current balance of their account, the user should include the <b>ExcludeBalance</b> flag in the request and set its value to 'false'. The current balance on the account will be shown in the <b>AccountSummary.CurrentBalance</b> field in the call response.
    /// 							
    /// </remarks>

	public bool? ExcludeBalance { get; set; }
    /// <summary>
    /// GetAccountNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Specifies whether to return account summary information in an
    /// 								AccountSummary node. Default is true, to return AccountSummary.
    /// 							
    /// </remarks>

	public bool? ExcludeSummary { get; set; }
    /// <summary>
    /// GetAccountNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Specifies whether to retrieve the rate used for the currency conversion for usage transactions.
    /// 							
    /// </remarks>

	public bool? IncludeConversionRate { get; set; }
    /// <summary>
    /// GetAccountNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Include this field and set it to <code>true</code> to retrieve the total net amount of all charges/fees that have been deducted from seller payouts instead of being invoiced to the seller. The total net amount of any seller credits related to these fees is also shown. These fees and credit amounts will be shown in the <b>AccountSummary.NettedTransactionSummary</b> container in the response.
    /// 							
    /// </remarks>

	public bool? IncludeNettedEntries { get; set; }
    /// <summary>
    /// GetAccountNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Specifies how account entries should be sorted in the response, by an
    /// 								element and then in ascending or descending order.
    /// 							
    /// </remarks>

	public AccountEntrySortTypeCodeType? AccountEntrySortType { get; set; }
    /// <summary>
    /// GetAccountNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Specifies the currency used in the account report. Do not specify Currency
    /// 								in the request unless the following conditions are met. First, the user has
    /// 								or had multiple accounts under the same UserID. Second, the account
    /// 								identified in the request uses the currency you specify in the request. An
    /// 								error is returned if no account is found that uses the currency you specify
    /// 								in the request.
    /// 							
    /// </remarks>

	public CurrencyCodeType? Currency { get; set; }
    /// <summary>
    /// GetAccountNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Specifies the item ID for which to return account entries. If ItemID is
    /// 								used, all other filters in the request are ignored. If the specified item
    /// 								does not exist or if the requesting user is not the seller of the item, an
    /// 								error is returned.
    /// 							
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								The unique identifier of an eBay order. This field must be included if the value of the <b>AccountHistorySelection</b> filter is set to <code>OrderId</code>. A user can filter by order ID to see if there are specific account entries related to a specific eBay order.
    /// 								<br><br>
    /// 								It is possible that no account entries will be found directly related to the specified order ID, and if this is the case, no <b>AccountEntries</b> container will be returned, and the <b>ack</b> value will still be <code>Success</code>.
    /// 								<br><br>
    /// 									<span class="tablenote"><b>Note: </b> Note that the unique identifier of a 'non-immediate payment' order will change as it goes from an unpaid order to a paid order. Due to this scenario, all calls that accept Order ID values as request filters/parameters, including the <b>GetAccount</b> call, will support the identifiers for both unpaid and paid orders. 
    /// 									<br><br>
    /// 									Sellers can check to see if an order has been paid by looking for a value of 'Complete' in the <b>CheckoutStatus.Status</b> field in the response of <b>GetOrders</b> call, or in the <b>Status.CompleteStatus</b> field in the response of <b>GetItemTransactions</b> or <b>GetSellerTransactions</b> call. Sellers should  not fulfill orders until buyer has made payment.
    /// 								</span>
    /// 							
    /// </remarks>

	public string OrderID { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Returns information about an eBay seller's own account.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetAccountResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// GetAccountAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Specifies the seller's unique account number.
    /// 							
    /// </remarks>

	public string AccountID { get; set; }
    /// <summary>
    /// GetAccountAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								This enumeration value indicates the current status of the seller's account for the fee netting mechanism. If the <code>Enabled</code> value is returned, the seller may include the <b>IncludeNettedEntries</b> field in the request to retrieve the total net amount of all charges/fees that have been deducted from seller payouts instead of being invoiced to the seller. The total net amount of any seller credits related to these fees is also shown in the <b>AccountSummary.NettedTransactionSummary</b> container in the response.
    /// 							
    /// </remarks>

	public FeenettingStatusCodeType? FeeNettingStatus { get; set; }
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Contains summary data for the seller's account, such as the overall
    /// 								balance, bank account and credit card information, and amount and
    /// 								date of any past due balances. Can also contain data for
    /// 								one or more additional accounts, if the user has changed country
    /// 								of residence.
    /// 							
    /// </remarks>

	public AccountSummaryType AccountSummary { get; set; }
    /// <summary>
    /// GetAccountAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Indicates the currency used for monetary amounts in the report.
    /// 							
    /// </remarks>

	public CurrencyCodeType? Currency { get; set; }
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container holds an array of account entries. The account entries that are returned are dependent on the selection that the user made in the <b>AccountHistorySelection</b> field in the call request. Each <b>AccountEntry</b> container consists of one credit, one debit, or one administrative action on the account. It is possible that no <b>AccountEntry</b> containers will be returned if no account entries exist since the last invoice (if <code>LastInvoice</code> value is used), between the specified dates (if <code>BetweenSpecifiedDates</code> value is used), or no entries exist for an order (if <code>OrderId</code> value is used).
    /// 							
    /// </remarks>

	public AccountEntriesType AccountEntries { get; set; }
    /// <summary>
    /// GetAccountAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container shows the total number of account entries and the total number of  account entry pages that exist based on the filters used in the <b>GetAccount</b> call request. The total number of account entry pages is partly controlled by the <b>Pagination.EntriesPerPage</b> value that is set in the request.
    /// 							
    /// </remarks>

	public PaginationResultType PaginationResult { get; set; }
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								If this boolean value is returned as 'true', there are more account entries to view on one or more pages of data. To view additional entries, the user would have to make additional <b>GetAccount</b> calls and increment the value of the <b>Pagination.PageNumber</b> field by '1' to view additional pages of account entries.
    /// 							
    /// </remarks>

	public bool? HasMoreEntries { get; set; }
    /// <summary>
    /// GetAccountAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								This integer value indicates the number of account entries that are being returned per virtual page of data. This value will be the same value passed into the <b>Pagination.EntriesPerPage</b> field in the request.
    /// 							
    /// </remarks>

	public int? EntriesPerPage { get; set; }
    /// <summary>
    /// GetAccountAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								This integer value indicates the current page number of account entries that is currently being shown. This value will be the same value passed into the <b>Pagination.PageNumber</b> field in the request.
    /// 							
    /// </remarks>

	public int? PageNumber { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// DetailLevel
/// </summary>
/// <remarks>
/// 
/// 				Retrieves sales lead information for a lead generation listing.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetAdFormatLeadsRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// GetAdFormatLeadsNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								The unique identifier of an item listed on the eBay site.
    /// 								Returned by eBay when the item is created. This ID must correspond
    /// 								to an ad format item.
    /// 							
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// GetAdFormatLeadsNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Filters the leads based on their status.
    /// 							
    /// </remarks>

	public MessageStatusTypeCodeType? Status { get; set; }
    /// <summary>
    /// GetAdFormatLeadsNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Boolean which indicates whether to return mail messages for this lead in a MemberMessage node.
    /// 							
    /// </remarks>

	public bool? IncludeMemberMessages { get; set; }
    /// <summary>
    /// GetAdFormatLeadsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Used with EndCreationTime to limit the returned leads for a user to only
    /// 								those with a creation date greater than or equal to the specified date and
    /// 								time.
    /// 							
    /// </remarks>

	public System.DateTime? StartCreationTime { get; set; }
    /// <summary>
    /// GetAdFormatLeadsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Used with StartCreationTime to limit the returned leads for a user to only
    /// 								those with a creation date less than or equal to the specified date and
    /// 								time.
    /// 							
    /// </remarks>

	public System.DateTime? EndCreationTime { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Returns number of leads and contact and other information for each lead. One
/// 				AdFormatLead node is returned for each lead.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetAdFormatLeadsResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// GetAdFormatLeadsDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Contains contact and other information for one lead. One node is
    /// 								returned for each lead. Only returned at a detail level of ReturnAll. At
    /// 								least one lead must be available for the specified item to return
    /// 								AdFormatLead.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("AdFormatLead")]

	public System.Collections.Generic.List<AdFormatLeadType> AdFormatLead { get; set; }
    /// <summary>
    /// GetAdFormatLeadsDetailLevel: noneAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								The total number of leads returned. Only returned if you do not
    /// 								specify a detail level.
    /// 							
    /// </remarks>

	public int? AdFormatLeadCount { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// 
/// 					This call is used to retrieve bidders from an active or recently-ended auction listing.
/// 				
/// Second change offershttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/second-chance.html
/// </summary>
/// <remarks>
/// 
/// 				This is the base request type for the <b>GetAllBidders</b> call, which is used to retrieve bidders from an active or recently-ended auction listing.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetAllBiddersRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// GetAllBiddersYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								This is the unique identifier of the auction listing for which bidders are being retrieved. This auction listing can be active or recently ended. However, to retrieve bidders for an active auction listing, the only <b>CallMode</b> enumeration value that can be used is <code>ViewAll</code>.
    /// 							
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// EndedListing
    /// GetAllBiddersNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								The enumeration value that is passed into this field will control the set of bidders that will be retrieved in the response. To retrieve bidders from a recently-ended auction listing, any of the three values can be used. To retrieve bidders for an active auction listing, only the <code>ViewAll</code> enumeration value can be used. These values are discussed in <b>GetAllBiddersModeCodeType</b>.
    /// 								<br/>
    /// 							
    /// </remarks>

	public GetAllBiddersModeCodeType? CallMode { get; set; }
    /// <summary>
    /// GetAllBiddersConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								The user must include this field and set its value to <code>true</code> if the user wishes to retrieve the  <b>BiddingSummary</b> container for each bidder. The <b>BiddingSummary</b> container consists of more detailed bidding information on each bidder.
    /// 							
    /// </remarks>

	public bool? IncludeBiddingSummary { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// Anonymous user informationhttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/user-mgmt-anonymous-info.htmll
/// 				
/// </summary>
/// <remarks>
/// 
/// 				Includes detailed bidding data for the auction listing that was specified in the request. Unless the listing is private, the actual eBay user IDs of all bidders are returned if the listing's seller makes this API call. If a bidder makes this API call, only that bidder's eBay user ID is returned, and the rest of the bidder's user IDs are anonymized.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetAllBiddersResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// GetAllBiddersAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container consists of an array of bids made on the specified auction listing. Each <b>OfferType</b> object represents the data for one bid.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("Offer", IsNullable = false)]

	public System.Collections.Generic.List<OfferType> BidArray { get; set; }
    /// <summary>
    /// GetAllBiddersAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								The eBay user ID for the user with the winning bid (if auction has ended) or current highest bid (if auction is still active). The seller should take note of or save this User ID as this user may be a a Second Chance Offer candidate.
    /// 							
    /// </remarks>

	public string HighBidder { get; set; }
    /// <summary>
    /// GetAllBiddersAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								This is the dollar amount of the winning bid (if auction has ended) or dollar amount of the current highest bid (if auction is still active).
    /// 							
    /// </remarks>

	public AmountType HighestBid { get; set; }
    /// <summary>
    /// GetAllBiddersAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								This enumeration value indicates the listing status of the specified listing.
    /// 							
    /// </remarks>

	public ListingStatusCodeType? ListingStatus { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// 
/// 					This call can be used by a seller to retrieve all active Best Offers, all Best Offers on a specific listing, a specific Best Offer for a specific listing, or Best Offers in a specific state.
/// 				
/// DetailLevel
/// Best Offerhttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/best-offers.html
/// User informationhttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/user-mgmt-user-info.htmll
/// 				
/// </summary>
/// <remarks>
/// 
/// 				This is the base request type of the <b>GetBestOffers</b> call. Depending on the input parameters that are used, this call can be used by a seller to retrieve all active Best Offers, all Best Offers on a specific listing, a specific Best Offer for a specific listing, or Best Offers in a specific state.
/// 				<br/><br/>
/// 				<span class="tablenote"><b>Note: </b>
/// 				The Best Offer feature is now available for auction listings on the following sites: US, Canada, UK, Germany, Australia, France, Italy, and Spain. However, sellers must choose between offering Best Offer or Buy It Now on an auction listing, as both features cannot be enabled on the same auction listing.
/// 				</span>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetBestOffersRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// GetBestOffersNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								The unique identifier of an eBay listing. If an <b>ItemID</b> is used by itself in the call request, all Best Offers in all states are retrieved for this listing. However, the seller can also combine <b>ItemID</b> and a <b>BestOfferStatus</b> value if that seller only wants to see Best Offers in a specific state. If a <b>BestOfferID</b> field is included in the call request, any <b>ItemID</b> value will be ignored since eBay will only search for and return the Best Offer identified in the <b>BestOfferID</b> field.
    /// 							
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// GetBestOffersNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								The unique identifier of a Best Offer. An identifier for a Best Offer is automatically created by eBay once a prospective buyer makes a Best Offer on a Best Offer-enabled listing. If a <b>BestOfferID</b> value is supplied in the call request, any <b>ItemID</b> or <b>BestOfferStatus</b> values will be ignored. Only the Best Offer identified by the <b>BestOfferID</b> value will be returned.
    /// 							
    /// </remarks>

	public string BestOfferID { get; set; }
    /// <summary>
    /// Active
    /// GetBestOffersAll, ActiveNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field can be used if the seller wants to retrieve Best Offers in a specific state. The typical use case for this field is when the seller wants to retrieve Best Offers in all states for a specific listing. In fact, the <b>All</b> value can only be used if an <b>ItemID</b> value is also supplied in the call request. If a <b>BestOfferID</b> field is included in the call request, any <b>BestOfferStatus</b> value will be ignored since eBay will only search for and return the Best Offer identified in the <b>BestOfferID</b> field.
    /// 								<br/>
    /// 							
    /// </remarks>

	public BestOfferStatusCodeType? BestOfferStatus { get; set; }
    /// <summary>
    /// GetBestOffersNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container can be used if the seller is expecting that the <b>GetBestOffers</b> call will retrieve a large number of results, so that seller wishes to view just a subset (one page of multiple pages) of those results at a time. See this container's child fields for more information on how pagination is used.
    /// 							
    /// </remarks>

	public PaginationType Pagination { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				All Best Offers for the item according to the filter or Best Offer ID (or both) used in the input. For the notification client usage, this response includes a single Best Offer.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetBestOffersResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// GetBestOffersDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								All Best Offers for the item according to the filter or Best Offer ID (or both) used in the input. The buyer and seller messages are returned only if the detail level is defined. Includes the buyer and seller message only if the <code>ReturnAll</code> detail level is used. Only returned if Best Offers have been made.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("BestOffer", IsNullable = false)]

	public System.Collections.Generic.List<BestOfferType> BestOfferArray { get; set; }
    /// <summary>
    /// GetBestOffersDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container consists of several details about the listing for which a Best Offer has been made, including the Item ID, the current price of the item (not the Best Offer price), and the time that the listing is scheduled to end.
    /// 							
    /// </remarks>

	public ItemType Item { get; set; }
    /// <summary>
    /// GetBestOffersDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								A collection of details about the Best Offers received for a specific item. Empty if there are no Best Offers.
    /// 							
    /// </remarks>

	public ItemBestOffersArrayType ItemBestOffersArray { get; set; }
    /// <summary>
    /// GetBestOffersDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This integer value indicates the current page number of Best Offers that is currently being shown. This value will be the same value passed into the <b>Pagination.PageNumber</b> field in the request.
    /// 							
    /// </remarks>

	public int? PageNumber { get; set; }
    /// <summary>
    /// GetBestOffersDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Provides information about the data returned, including the number of pages and the number
    /// 								of entries.
    /// 							
    /// </remarks>

	public PaginationResultType PaginationResult { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// GetMyeBayBuying
/// </summary>
/// <remarks>
/// 
/// 				Retrieves all items that the user is currently bidding on, and the ones they have won
/// 				or purchased.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetBidderListRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// GetBidderListNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Indicates whether or not to limit the result set to active items. If <code>true</code>, only
    /// 								active items are returned and the <b>EndTimeFrom</b> and <b>EndTimeTo</b> filters are
    /// 								ignored. If <code>false</code> (or not sent), both active and ended items are returned.
    /// 							
    /// </remarks>

	public bool? ActiveItemsOnly { get; set; }
    /// <summary>
    /// GetBidderListConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Used in conjunction with <b>EndTimeTo</b>. Limits returned items to only those for
    /// 								which the item's end date is on or after the date/time specified. Specify an
    /// 								end date within 30 days prior to today. Items that ended more than 30 days
    /// 								ago are omitted from the results. If specified, <b>EndTimeTo</b> must also be
    /// 								specified. Express date/time in the format <code>YYYY-MM-DD HH:MM:SS</code>, and in GMT.
    /// 								This field is ignored if <b>ActiveItemsOnly</b> is set to <code>true</code>.
    /// 							
    /// </remarks>

	public System.DateTime? EndTimeFrom { get; set; }
    /// <summary>
    /// GetBidderListConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Used in conjunction with <b>EndTimeFrom</b>. Limits returned items to only those for
    /// 								which the item's end date is on or before the date/time specified. If
    /// 								specified, <b>EndTimeFrom</b> must also be specified. Express date/time in the format
    /// 								<code>YYYY-MM-DD HH:MM:SS</code>, and in GMT. This field is ignored if <b>ActiveItemsOnly</b> is set to
    /// 								<code>true</code>. Note that for GTC items, whose end times automatically increment by 30
    /// 								days every 30 days, an <b>EndTimeTo</b> value within the first 30 days of a listing will
    /// 								refer to the listing's initial end time.
    /// 								<br><br>
    /// 								<span class="tablenote"><b>Note: </b>
    /// 									Starting July 1, 2019, the Good 'Til Cancelled renewal schedule will be modified from every 30 days to once per calendar month. For example, if a GTC listing is created July 5, the next monthly renewal date will be August 5. If a GTC listing is created on the 31st of the month, but the following month only has 30 days, the renewal will happen on the 30th in the following month. Finally, if a GTC listing is created on January 29-31, the renewal will happen on February 28th (or 29th during a 'Leap Year'). See the
    /// 									<a href="https://pages.ebay.com/seller-center/seller-updates/2019-spring/marketplace-updates.html#good-til-cancelled" target="_blank">Good 'Til Cancelled listings update</a> in the <b>Spring 2019 Seller Updates</b> for more information about this change.
    /// 								</span>
    /// 							
    /// </remarks>

	public System.DateTime? EndTimeTo { get; set; }
    /// <summary>
    /// GetBidderListConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								The unique identifier of an eBay user.
    /// 								<br><br>
    /// 								This field is generally not required unless there are multiple User IDs tied to the requester credentials that are specified through the <b>RequesterCredentials</b> header. If there are multiple User IDs tied to the requester credentials, this field allows you to specify the User ID for which you wish to retrieves bids and purchases.
    /// 							
    /// </remarks>

	public string UserID { get; set; }
    /// <summary>
    /// Yes
    /// GetBidderListNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								You can control some of the fields returned in the response by specifying one of two values in the <b>GranularityLevel</b> field: <code>Fine</code> or <code>Medium</code>. <code>Fine</code> returns more fields than the default, while setting this field to <code>Medium</code> returns an abbreviated set of results.
    /// 							
    /// </remarks>

	public GranularityLevelCodeType? GranularityLevel { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Response to a <b>GetBidderList</b> call, which retrieves all items the
/// 				user is currently bidding on, or has won or purchased.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetBidderListResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// GetBidderListAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Data for one eBay bidder.
    /// 							
    /// </remarks>

	public UserType Bidder { get; set; }
    /// <summary>
    /// GetBidderListAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Array of items the bidder has bid on, has won or has lost.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("Item", IsNullable = false)]

	public System.Collections.Generic.List<ItemType> BidItemArray { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// 
/// 					Retrieves the latest eBay category hierarchy for a given eBay site.
/// 				
/// DetailLevel
/// Categorieshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/categories.html
/// </summary>
/// <remarks>
/// 
/// 				Retrieves the latest eBay category hierarchy for a given eBay site.
/// 				Information returned for each category includes the category name
/// 				and the unique ID for the category (unique within the eBay site for which
/// 				categories are retrieved). A category ID is a required input when you list most items.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetCategoriesRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// GetCategoriesNo
    /// eBay Site IDshttps://developer.ebay.com/DevZone/merchandising/docs/Concepts/SiteIDToGlobalID.html
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field is used if the user wants to retrieve category data for another eBay site (other than the one specified in the <code>X-EBAY-API-SITEID</code> request header).
    /// 								<br>
    /// 								<br>
    /// 								If this field is omitted, the categories from the site specified in the required <code>X-EBAY-API-SITEID</code> request header are returned. If this field is included, the site specified in this field overrides the site ID in the request header.
    /// 							
    /// </remarks>

	public string CategorySiteID { get; set; }
    /// <summary>
    /// GetCategoriesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field is used if the user wishes to retrieve category hierarchy information on one or more specific eBay categories, and optionally, one or more levels of each category's children (if a category has one or more levels of children). For example, if you wanted to view the entire category hierarchy under the <em>Home & Garden</em> L1 category, you would include this field and set its value to <code>11700</code>. As long as the <b>LevelLimit</b> field is omitted, all of  <em>Home & Garden</em>'s child categories are returned. If you only wanted to see the next level (L2s) of <em>Home & Garden</em> categories, you would include the <b>LevelLimit</b> field and set its value to <code>2</code>, allowing the L1 category (<em>Home & Garden</em>) and all of its L2 categories to appear in the response.
    /// 								<br>
    /// 								<br>
    /// 								If you wanted to see all of the Category IDs for the eBay site's L1 categories, you could omit the <b>CategoryParent</b> field but include the  <b>LevelLimit</b> field and set its value to <code>1</code>.
    /// 								<br>
    /// 								<br>
    /// 								<span class="tablenote"><b>Note:</b>
    /// 								 Numerous Category IDs may be specified under multiple <b>CategoryParent</b> fields in a <b>GetCategories</b> request, but if multiple <b>CategoryParent</b> fields are used, the specified Category IDs should all be at the same level (L1, L2, L3, etc.).
    /// 								</span>
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("CategoryParent")]

	public System.Collections.Generic.List<string> CategoryParent { get; set; }
    /// <summary>
    /// GetCategoriesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field is used if the user wants to control the maximum depth of the category hierarchy to retrieve, or in other words, how many levels of eBay categories that are returned in the response. If this field is omitted, every eBay category from the root on down will be returned, or, if a <b>CategoryParent</b> category is specified, the specified category and all of its children (down to the leaf categories) are returned.
    /// 								<br>
    /// 								<br>
    /// 								If the <b>CategoryParent</b> is not used, but the <b>LevelLimit</b> field is used and set to <code>1</code>, only the top-level categories (also known as L1 categories) are returned in the response.
    /// 							
    /// </remarks>

	public int? LevelLimit { get; set; }
    /// <summary>
    /// trueGetCategoriesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This flag controls whether all eBay categories (that satisfy input filters) are returned, or only leaf categories (you can only list items in leaf categories) are returned. The default value is 'true', so if this field is omitted, all eBay categories will be returned. If you only want to retrieve leaf categories, include this flag and set it to <code>false</code>.
    /// 								<br>
    /// 							
    /// </remarks>

	public bool? ViewAllNodes { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Contains the category data for the eBay site specified as input. The category
/// 				data is contained in a CategoryArrayType object, within which are zero, one, or
/// 				multiple CategoryType objects. Each CategoryType object contains the detail data
/// 				for one category. Other fields tell how many categories are returned in a call,
/// 				when the category hierarchy was last updated, and the version of the category
/// 				hierarchy (all three of which can differ from one eBay site to the next).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetCategoriesResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// GetCategoriesDetailLevel: ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								List of the returned categories. The category array contains one CategoryType
    /// 								object for each returned category. Returns empty if no detail level is specified.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("Category", IsNullable = false)]

	public System.Collections.Generic.List<CategoryType> CategoryArray { get; set; }
    /// <summary>
    /// GetCategoriesDetailLevel: ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Indicates the number of categories returned (i.e., the number of CategoryType
    /// 								objects in CategoryArray).
    /// 							
    /// </remarks>

	public int? CategoryCount { get; set; }
    /// <summary>
    /// GetCategoriesDetailLevel: ReturnAll, noneAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Indicates the last date and time that eBay modified the category hierarchy for the
    /// 								specified eBay site.
    /// 							
    /// </remarks>

	public System.DateTime? UpdateTime { get; set; }
    /// <summary>
    /// GetCategoriesDetailLevel: ReturnAll, noneAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Indicates the version of the category hierarchy on the
    /// 								specified eBay site.
    /// 							
    /// </remarks>

	public string CategoryVersion { get; set; }
    /// <summary>
    /// GetCategoriesDetailLevel: ReturnAll, noneAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 							If true, <b>ReservePriceAllowed</b> indicates that all categories on the
    /// 							site allow the seller to specify a reserve price for an item.
    /// 							If false, this field is not returned in the response and all categories on the site do not normally allow sellers to specify reserve prices.
    /// 							The Category.ORPA (override reserve price allowed) field can override (or toggle)
    /// 							the reserve price allowed setting for a given category.
    /// 							For example, if <b>ReservePriceAllowed</b> is false and Category.ORPA is true,
    /// 							the category overrides the site setting and supports reserve prices.
    /// 							If <b>ReservePriceAllowed</b> is true and Category.ORPA is true, the category
    /// 							overrides the site setting and does does not support reserve prices.
    /// 							
    /// </remarks>

	public bool? ReservePriceAllowed { get; set; }
    /// <summary>
    /// GetCategoriesDetailLevel: ReturnAll, noneAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 	    					Indicates the lowest possible reserve price allowed for any item
    /// 	    					listed in any category on the site. You can use the fields returned by <b>GetCategoryFeatures</b> to determine if a different Minimum Reserve Price is defined for the category you want to use.
    /// 							
    /// </remarks>

	public double? MinimumReservePrice { get; set; }
    /// <summary>
    /// GetCategoriesDetailLevel: ReturnAll, noneAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 							If true, <b>ReduceReserveAllowed</b> indicates that all categories on the
    /// 							site allow the seller to reduce an item's reserve price.
    /// 							If false, this field is not returned in the response and all categories on the site do not normally allow sellers to reduce an
    /// 							item's reserve price.
    /// 							The Category.ORRA (override reduce reserve price) field can override (or toggle)
    /// 							the reserve price reduction setting for a given category.
    /// 							For example, if <b>ReduceReserveAllowed</b> is false and Category.ORRA is true,
    /// 							the category overrides the site setting and supports reducing reserve prices.
    /// 							If <b>ReduceReserveAllowed</b> is true and Category.ORRA is true, the category
    /// 							overrides the site setting and does does not support reducing reserve prices.
    /// 							
    /// </remarks>

	public bool? ReduceReserveAllowed { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// DetailLevel
/// Categorieshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/categories.html
/// </summary>
/// <remarks>
/// 
/// 				Returns information about the features that are applicable to different categories,
/// 				such as listing durations, shipping term requirements, and Best Offer support.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetCategoryFeaturesRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// GetCategoryFeaturesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Specifies the category for which you want to retrieve the feature settings.
    /// 								<br><br>
    /// 								Specify a CategoryID, set DetailLevel to ReturnAll, and set
    /// 								ViewAllNodes to true to return the default site settings, the
    /// 								overrides for the specified category, plus all the child
    /// 								categories that have overrides on the features they inherit.
    /// 								<br><br>
    /// 								If you also set AllFeaturesForCategory to true, eBay returns the site
    /// 								defaults, plus all the settings for the specified category. Child
    /// 								category information is not returned in this case.
    /// 								<br><br>
    /// 								If CategoryID is not specified, eBay returns the feature settings for
    /// 								the site. To return details on all categories that have overrides on
    /// 								the properties they inherit, set DetailLevel to ReturnAll, and set
    /// 								ViewAllNodes to true. If you also set AllFeaturesForCategory to true,
    /// 								eBay returns only the site defaults with no child category information.
    /// 							
    /// </remarks>

	public string CategoryID { get; set; }
    /// <summary>
    /// GetCategoryFeaturesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field is used if the user wants to control the maximum depth of the category hierarchy to retrieve, or in other words, how many levels of eBay categories that are returned in the response. If this field is omitted, and no <b>CategoryID</b> is specified, eBay feature metadata for every eBay category from the root on down will be returned. If this field is omitted, but a <b>CategoryID</b> is specified, the specified category and all of its children (down to the leaf categories) are returned.
    /// 								<br>
    /// 								<br>
    /// 								If the <b>CategoryID</b> field is not used, but the <b>LevelLimit</b> field is used and set to <code>1</code>, eBay feature metadata is only returned for the top-level categories (also known as L1 categories).
    /// 							
    /// </remarks>

	public int? LevelLimit { get; set; }
    /// <summary>
    /// GetCategoryFeaturesNofalse
    /// </summary>
    /// <remarks>
    /// 
    /// 								You must set <b>DetailLevel</b> to <code>ReturnAll</code> in order to correctly populate the
    /// 								response when you set <b>ViewAllNodes</b> to true. In this case, eBay returns the
    /// 								site defaults along with all the categories that override the feature
    /// 								settings they inherit. Here, each Category container shows only the
    /// 								features that it has overridden from its parent node.
    /// 								<br><br>
    /// 								If you also specify a <b>CategoryID</b>, eBay returns the details for that category,
    /// 								along with containers for each of its child categories that have feature
    /// 								overrides.
    /// 								<br><br>
    /// 								Note that if <b>ViewAllNodes</b> is set to false (the default) and <b>DetailLevel</b> is
    /// 								set to <code>ReturnAll</code>, eBay returns only the leaf categories that have features
    /// 								that override the settings they inherit. In this case, the call will not
    /// 								return leaf categories that do not have overrides.
    /// 							
    /// </remarks>

	public bool? ViewAllNodes { get; set; }
    /// <summary>
    /// ItemSpecificsEnabledGetCategoryFeaturesNoAll feature metadata returned if no <b>FeatureID</b> values are used
    /// </summary>
    /// <remarks>
    /// 
    /// 								Use this field if you want to know if specific features are enabled at the site or root category level. Multiple <b>FeatureID</b> elements can be used in the request. If no <b>FeatureID</b> elements are used, the call retrieves data for all features, as applicable to the other request parameters.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("FeatureID")]

	public System.Collections.Generic.List<FeatureIDCodeType> FeatureID { get; set; }
    /// <summary>
    /// GetCategoryFeaturesNofalse
    /// </summary>
    /// <remarks>
    /// 
    /// 								Use this switch to view all of the feature settings for a specific category.
    /// 								All feature settings are returned, regardless of the site default settings.
    /// 								This element works in conjunction with CategoryID--refer to the notes for
    /// 								that element for more details.
    /// 								<br><br>
    /// 								If you also set FeatureID, eBay returns the status of the specified
    /// 								features only, for the specified category.
    /// 							
    /// </remarks>

	public bool? AllFeaturesForCategory { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetCategoryFeaturesResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Returns the current version of the set of feature meta-data.
    /// 								Compare this value to the version of the last version you
    /// 								downloaded to determine whether the data may have changed.
    /// 							
    /// </remarks>

	public string CategoryVersion { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Gives the time in GMT that the feature flags for the
    /// 								category hierarchy were last updated.
    /// 							
    /// </remarks>

	public System.DateTime? UpdateTime { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								A category whose feature settings are different from the settings of its parent category.<br>
    /// 								<br>
    /// 								For example, suppose there is a branch of the category tree with 5 category levels
    /// 								(L1, L2, L3, L4, and L5). Suppose the feature settings for SiteDefaults, L1, L4, and L5
    /// 								are all "A", and the settings for L2 and L3 are "B". In this case:<br>
    /// 								L1's settings (A) match the site default, so L1 is not returned.<br>
    /// 								L2's settings (B) are different from L1's, so L2 is returned.<br>
    /// 								L3's settings (B) are the same as L2's, so L3 is not returned<br>
    /// 								L4's settings (A) are different from L3's, so L4 is returned<br>
    /// 								L5's settings (A) are the same as L4's, so L5 is not returned.<br>
    /// 								<br>
    /// 								If you specified a particular FeatureID in the request, this field
    /// 								only returns feature settings for that feature.
    /// 								Only returned when the category is different from its parent.
    /// 								If the category has children and they aren't returned,
    /// 								it means the children inherit the category's feature settings.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("Category")]

	public System.Collections.Generic.List<CategoryFeatureType> Category { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Returns the feature settings defined for most categories on the site. Most categories share these settings. However, some categories can override some settings, as indicated in the Category nodes (if any).
    /// 							
    /// </remarks>

	public SiteDefaultsType SiteDefaults { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Returns definitions of the various features on the site,
    /// 								or the features you requested in FeatureID (if any).
    /// 								Each feature has a node within FeatureDefinitions.
    /// 							
    /// </remarks>

	public FeatureDefinitionsType FeatureDefinitions { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// DetailLevel
/// Maintaining Category Datahttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/map-category-ids.html
/// </summary>
/// <remarks>
/// 
/// 				Retrieves a map of old category IDs and corresponding active
/// 				category IDs defined for the site to which the request is sent.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetCategoryMappingsRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// GetCategoryMappingsNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								 A version of the category mapping for the site. Filters
    /// 								 out data from the call to return only the category
    /// 								 mappings for which the data has changed since the
    /// 								 specified version. If not specified, all category
    /// 								 mappings are returned. Typically, an application passes
    /// 								 the version value of the last set of category mappings
    /// 								 that the application stored locally. The latest version
    /// 								 value is not necessarily greater than the previous value
    /// 								 that was returned. Therefore, when comparing versions,
    /// 								 only compare whether the value has changed.
    /// 							
    /// </remarks>

	public string CategoryVersion { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Returns a map of old category IDs and corresponding active category IDs defined
/// 				for the site to which the request was sent. Typically used to update an older item
/// 				definition with a new category ID prior to listing the item.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetCategoryMappingsResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// GetCategoryMappingsDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 							Mapping between an old category ID and an active category ID. Returned when
    /// 							category mappings exist and the value of CategoryVersion is different from
    /// 							the current version on the site.
    /// 						
    /// </remarks>
[System.Xml.Serialization.XmlElement("CategoryMapping")]

	public System.Collections.Generic.List<CategoryMappingType> CategoryMapping { get; set; }
    /// <summary>
    /// GetCategoryMappingsDetailLevel: none, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Version value assigned to the current category mapping data for the site.
    /// 								Compare this value to the version value the application stored with the mappings
    /// 								the last time the application executed the call. If the versions are the same,
    /// 								the data has not changed since the last time the data was retrieved and stored.
    /// 							
    /// </remarks>

	public string CategoryVersion { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// 
/// 					This call retrieves a botblock token and URLs for an image or audio clip that the user is to match.
///       	
/// </summary>
/// <remarks>
/// 
/// 				This is the base request type for the <b>GetChallengeToken</b> call. This call retrieves a botblock token and URLs for an image or audio clip that the user is to match.
/// 				<br/><br/>
/// 				This call does not have any call-specific input parameters.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetChallengeTokenRequestType : AbstractRequestType{

#region 属性
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This is the base response type for the <b>GetChallengeToken</b> call. This call retrieves a botblock token and URLs for an image or audio clip that the user is to match.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetChallengeTokenResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// GetChallengeTokenAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Botblock token that is used to validate that the user is a human and not a bot.
    /// 							
    /// </remarks>

	public string ChallengeToken { get; set; }
    /// <summary>
    /// GetChallengeTokenAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								The URL of the image your application should display to
    /// 								the user for a botblock challenge.
    /// 							
    /// </remarks>

	public string ImageChallengeURL { get; set; }
    /// <summary>
    /// GetChallengeTokenAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								The URL of the audio clip your application should provide for sight-impaired users.
    /// 								The audio clip corresponds to the image.
    /// 							
    /// </remarks>

	public string AudioChallengeURL { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// 
/// 					This call retrieves detailed information on the Listing Designer templates that are available for use by the seller.
///       	
/// Using Description Templateshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide-landing.html
/// </summary>
/// <remarks>
/// 
/// 				This is the base request type for the <b>GetDescriptionTemplates</b> call. This call retrieves detailed information on the Listing Designer templates that are available for use by the seller.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetDescriptionTemplatesRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// 10
    /// GetDescriptionTemplatesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								A <b>CategoryID</b> value can be specified if the seller would like to only see the Listing Designer templates that are available for that eBay category. This field will be ignored if the <b>MotorVehicles</b> boolean field is also included in the call request and set to <code>true</code>.
    /// 							
    /// </remarks>

	public string CategoryID { get; set; }
    /// <summary>
    /// GetDescriptionTemplatesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This dateTime filter can be included and used if the user only wants to check for recently-added Listing Designer templates. If this filter is used, only the Listing Designer templates that have been added/modified after the specified timestamp will be returned in the response.
    /// 								<br/><br/>
    /// 								Typically, you will pass in the timestamp value that was returned the last time you refreshed the list of Listing Designer templates.
    /// 							
    /// </remarks>

	public System.DateTime? LastModifiedTime { get; set; }
    /// <summary>
    /// falseGetDescriptionTemplatesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This boolean field should be included and set to <code>true</code> if the user would only like to see the Listing Designer templates that are available for motor vehicle categories. This field will override any <b>CategoryID</b> value that is specified in the call request.
    /// 								<br>
    /// 								<br>
    /// 								<span class="tablenote"><b>Note:</b>
    /// 								 Motor vehicle-related Listing Designer templates are only available for eBay Motors on the US and Canada (English) marketplaces. To retrieve eBay US Motors Listing Designer templates, the <b>SITEID</b> HTTP header value must be set to <code>100</code>, which is the identifier of the eBay US Motors vertical (ebay.com/motors).
    /// 								</span>
    /// 							
    /// </remarks>

	public bool? MotorVehicles { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 					This is the base response type for the <b>GetDescriptionTemplates</b> call. This call retrieves the Listing Designer templates that are available for use by the seller. The user has the option of retrieving all available Listing Designer templates for all categories, for all motor vehicle categories, or for a specific eBay category.
/// 					<br>
/// 					<br>
/// 				  <span class="tablenote"><b>Note:</b> As of May 31, 2020, sellers are no longer able to use Listing Designer templates when they create or revise listings. Existing listings that are already using a Listing Designer template will remain unchanged. The <b>GetDescriptionTemplates</b> call will eventually get deprecated and decommissioned, and more information will be provided on timing at a later date. The <b>GetDescriptionTemplates</b> call will still retrieve Listing Designer template data, but none of retrieved templates will be usable to create or revise a listing.</span>
/// 				
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetDescriptionTemplatesResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// GetDescriptionTemplatesAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 									A <b>DescriptionTemplate</b> container is retrieved for each available Listing Designer template. Each <b>DescriptionTemplate</b> container includes the unique identifier of the template, the Listing Designer Theme Group that it belongs to, the CDATA representation of the Listing Designer template, and the URL to an image that serves as an example of the Listing Designer template.
    /// 								
    /// </remarks>
[System.Xml.Serialization.XmlElement("DescriptionTemplate")]

	public System.Collections.Generic.List<DescriptionTemplateType> DescriptionTemplate { get; set; }
    /// <summary>
    /// GetDescriptionTemplatesAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 									This integer value indicates the total number of Listing Designer Layout templates that were retrieved. This field is always returned, even if it is <code>0</code>
    /// 								
    /// </remarks>

	public int? LayoutTotal { get; set; }
    /// <summary>
    /// GetDescriptionTemplatesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 									The unique identifier of a Listing Designer Layout template that is now obsolete. An <b>ObsoleteLayoutID</b> field is returned for each obsolete Listing Designer Layout template.
    /// 								
    /// </remarks>
[System.Xml.Serialization.XmlElement("ObsoleteLayoutID")]

	public System.Collections.Generic.List<int> ObsoleteLayoutID { get; set; }
    /// <summary>
    /// GetDescriptionTemplatesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 									The unique identifier of a Listing Designer Theme template that is now obsolete. An <b>ObsoleteThemeID</b> field is returned for each obsolete Listing Designer Theme template.
    /// 								
    /// </remarks>
[System.Xml.Serialization.XmlElement("ObsoleteThemeID")]

	public System.Collections.Generic.List<int> ObsoleteThemeID { get; set; }
    /// <summary>
    /// GetDescriptionTemplatesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 									A <b>ThemeGroup</b> container is retrieved for each available Listing Designer Theme Group. Each <b>ThemeGroup</b> container includes the unique identifier of the Theme Group, the Theme Group name, and all of the Listing Designer Theme template that belong to that Theme Group.
    /// 								
    /// </remarks>
[System.Xml.Serialization.XmlElement("ThemeGroup")]

	public System.Collections.Generic.List<ThemeGroupType> ThemeGroup { get; set; }
    /// <summary>
    /// GetDescriptionTemplatesAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 									This integer value indicates the total number of Listing Designer Theme templates that were retrieved. This field is always returned, even if it is <code>0</code>
    /// 								
    /// </remarks>

	public int? ThemeTotal { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// DetailLevel
/// Second change offershttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/feedback.html
/// </summary>
/// <remarks>
/// 
/// 				Retrieves one, many, or all Feedback records for a specific eBay user. There is a filter option in the call request to limit Feedback records to those that are received, or to those that are left for other buyers, as well as a filter option to limit Feedback records to those that are received as a buyer or seller.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetFeedbackRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// GetFeedbackNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								The user's eBay User ID is specified in this field. If this field is used, all retrieved Feedback data will be for this eBay user. Specifies the user whose feedback data is to be returned. If this field is omitted in the call request, all retrieved Feedback records will be for the eBay user making the call.
    /// 							
    /// </remarks>

	public string UserID { get; set; }
    /// <summary>
    /// GetFeedbackNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								The unique identifier of a Feedback record. This field is used if the user wants to retrieve a specific Feedback record. If <b>FeedbackID</b> is specified in the call request, all other input fields are ignored.
    /// 							
    /// </remarks>

	public string FeedbackID { get; set; }
    /// <summary>
    /// GetFeedbackNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Unique identifier for an eBay listing. A listing can have multiple order line items, but only one <b>ItemID</b>. If <b>ItemID</b> is specified in the <b>GetFeedback</b> request, the returned Feedback record(s) are restricted to the specified <b>ItemID</b>. The maximum number of Feedback records that can be returned is 100.
    /// 							
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// GetFeedbackNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Unique identifier for an eBay order line item. A
    /// 								<b>TransactionID</b> can be paired up with its corresponding <b>ItemID</b> and used as
    /// 								an input filter in the <b>GetFeedback</b> request. If an <b>ItemID</b>/<b>TransactionID</b>
    /// 								pair or an <b>OrderLineItemID</b> value is used to retrieve a feedback record
    /// 								on a specific order line item, the <b>FeedbackType</b> and <b>Pagination</b>
    /// 								fields (if included) are ignored.
    /// 								<br>
    /// 								<br>
    /// 								The <b>TransactionID</b> value for auction listings is always <code>0</code> since there can be only one winning bidder/one sale for an auction listing.
    /// 								<br/><br/>
    /// 								<span class="tablenote"><b>Note: </b> Beginning in July 2024, non-zero transaction IDs will start being returned for auction listings. If necessary, update code to handle non-zero transaction IDs for auction transactions before this time. 
    /// 								</span>
    /// 							
    /// </remarks>

	public string TransactionID { get; set; }
    /// <summary>
    /// GetFeedbackNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field is used to retrieve Feedback records of a specific type (Positive, Negative, or Neutral) in <b>FeedbackDetailArray</b>. You can include one or two <b> CommentType</b> fields in the request. If no <b>CommentType</b> value is specified, Feedback records of all types are returned.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("CommentType")]

	public System.Collections.Generic.List<CommentTypeCodeType> CommentType { get; set; }
    /// <summary>
    /// FeedbackReceivedGetFeedbackNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field is used to restrict retrieved Feedback records to those that the user left for other buyers, Feedback records received as a seller, Feedback records received as a buyer, or Feedback records received as a buyer and seller. The default value is <b>FeedbackReceived</b>, so if the  <b>FeedbackType</b> field is omitted in the request, all Feedback records received by the user as a buyer and seller are returned in the response. "Feedback Left" data will not be returned in the call response.
    /// 							
    /// </remarks>

	public FeedbackTypeCodeType? FeedbackType { get; set; }
    /// <summary>
    /// GetFeedbackNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Controls the pagination of the result set. Child elements, <b>EntriesPerPage</b> and
    /// 								<b>PageNumber</b>, specify the maximum number of individual feedback records to return
    /// 								per call and which page of data to return. Only applicable if <b>DetailLevel</b> is
    /// 								set to <b>ReturnAll</b> and the call is returning feedback for a <b>UserID</b>. Feedback
    /// 								summary data is not paginated, but when pagination is used, it is returned
    /// 								after the last feedback detail entry.
    /// 								<br><br>
    /// 								Accepted values for <b>Pagination.EntriesPerPage</b> for GetFeedback is 25 (the
    /// 								default), 50, 100, and 200. If you specify a value of zero, or a value
    /// 								greater than 200, the call fails with an error. If you specify a value between
    /// 								one and twenty-four, the value is rounded up to 25. Values between 26 and 199
    /// 								that are not one of the accepted values are rounded down to the nearest
    /// 								accepted value.
    /// 							
    /// </remarks>

	public PaginationType Pagination { get; set; }
    /// <summary>
    /// GetFeedbackNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								<b>OrderLineItemID</b> is a unique identifier for an eBay order line item. An <b>OrderLineItemID</b> can be used as an
    /// 								input filter in the <b>GetFeedback</b> request. If an <b>OrderLineItemID</b> value is
    /// 								used to retrieve a feedback record on a specific order line item, the
    /// 								<b>FeedbackType</b> and <b>Pagination</b> fields (if included) are ignored.
    /// 							
    /// </remarks>

	public string OrderLineItemID { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				The <b>GetFeedback</b> response contains the feedback summary if a <b>TransactionID</b> or <b>ItemID</b> is specified, and contains the specified user's total feedback score and feedback summary data if a <b>UserID</b> is specified. If no value is supplied, the feedback score and feedback summary for the requesting user will be returned.
/// 				<br>
/// 				If a detail level value of <b>ReturnAll</b> is specified, an array of all feedback records will be returned.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetFeedbackResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// GetFeedbackDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Contains the individual Feedback records for the user or order line item specified in the request. There is one <b>FeedbackDetail</b> container returned for each Feedback record. Only populated with data when a detail level of <code>ReturnAll</code> is specified in the request. Not returned if you specify a <b>FeedbackID</b> in the request.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("FeedbackDetail", IsNullable = false)]

	public System.Collections.Generic.List<FeedbackDetailType> FeedbackDetailArray { get; set; }
    /// <summary>
    /// GetFeedbackDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Indicates the  total number of Feedback records returned in the the response. Only applicable if Feedback details are returned.
    /// 							
    /// </remarks>

	public int? FeedbackDetailItemTotal { get; set; }
    /// <summary>
    /// GetFeedbackDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Summary Feedback data for the user. Contains counts of positive, neutral,
    /// 								and negative Feedback for pre-defined time periods. Only applicable if Feedback details are returned.
    /// 							
    /// </remarks>

	public FeedbackSummaryType FeedbackSummary { get; set; }
    /// <summary>
    /// GetFeedbackDetailLevel: none, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Indicates the total Feedback score for the user.
    /// 							
    /// </remarks>

	public int? FeedbackScore { get; set; }
    /// <summary>
    /// GetFeedbackDetailLevel: none, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Contains information regarding the pagination of data, including the total number of Feedback entries and the total number of pages required to show all of these Feedback entries. The total number of pages is dependent on the <b>Pagination.EntriesPerPage</b> value (if set). The <b>EntriesPerPage</b> value defaults to <code>25</code> if the <b>Pagination.EntriesPerPage</b> field is not used.
    /// 								<br><br>
    /// 								If the call request returns no Feedback entries because there are none, or because the <b>DetailLevel</b> field was not included and set to <code>ReturnAll</code>, the <b>PaginationResult.TotalNumberOfPages</b> and <b>PaginationResult.TotalNumberOfEntries</b> fields are still returned, but with values of <code>0</code>.
    /// 							
    /// </remarks>

	public PaginationResultType PaginationResult { get; set; }
    /// <summary>
    /// GetFeedbackDetailLevel: none, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Indicates the number of Feedback records that are set to be
    /// 								returned per page of data (i.e., per call). The <b>EntriesPerPage</b> value defaults to <code>25</code> if the <b>Pagination.EntriesPerPage</b> field is not set in the request.
    /// 								<br><br>
    /// 								This field is always returned even if the response is not showing any Feedback entries.
    /// 							
    /// </remarks>

	public int? EntriesPerPage { get; set; }
    /// <summary>
    /// GetFeedbackDetailLevel: none, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Indicates the page of data that is currently displaying. The page number to display is set in the <b>Pagination.PageNumber</b> field in the request. If this field is omitted, the <b>PageNumber</b>  value defaults to <code>1</code> (first page of Feedback entries). If the integer value input into the  <b>Pagination.PageNumber</b> field in the request is higher than the total number of available pages, the call fails with an error.
    /// 								<br><br>
    /// 								This field is always returned even if the response is not showing any Feedback entries.
    /// 							
    /// </remarks>

	public int? PageNumber { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// DetailLevel
/// Retrieve itemshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/retrieve-items.html
/// Add pictureshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/pictures.html
/// </summary>
/// <remarks>
/// 
/// 				The <b>GetItem</b> call returns listing data such as title, description, price information, user information, and so on, for the specified <b>ItemID</b>.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetItemRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// GetItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field is used to identify the eBay listing by Item ID value.
    /// 								<br><br>
    /// 								<b>ItemID</b> is a required input in most cases. <b>SKU</b> can be used instead in certain
    /// 								cases (see the description of SKU). If both <b>ItemID</b> and <b>SKU</b> are specified for
    /// 								items where the inventory tracking method is <b>ItemID</b>, <b>ItemID</b> takes precedence.
    /// 							
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// falseGetItemNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								The seller can include this field and set its value to <code>true</code> if that seller wants to see how many prospective bidders/buyers currently have the item added to their Watch Lists. The Watch count is returned in the <b>WatchCount</b> field in the response.
    /// 								<br>
    /// 								<br>
    /// 								This field will only be returnd to the seller of the item.
    /// 							
    /// </remarks>

	public bool? IncludeWatchCount { get; set; }
    /// <summary>
    /// GetItemNofalse
    /// Item specificshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/item-specifics.html
    /// </summary>
    /// <remarks>
    /// 
    /// 								If this field is included and set to <code>true</code>, the call response includes the <b>ItemSpecifics</b> container
    /// 								if Item Specifics are defined for the listing.<br>
    /// 								<br>
    /// 								An Item Specific is any aspect that helps define/classify the item. Many eBay categories mandate including specific Item Specifics, so it is always a good idea to make a call to the <a href="/api-docs/commerce/taxonomy/resources/category_tree/methods/getItemAspectsForCategory" target="_blank">getItemAspectsForCategory</a> method of the Taxonomy API to see what Item Specifics are required and which ones are recommended.<br>
    /// 								<br>
    /// 								Including this field and setting it to <code>true</code> will also return the <strong>UnitInfo</strong> container if applicable. The <strong>UnitInfo</strong> container will provide information about the weight, volume or other quantity measurement of a listed item. The European Union requires listings for certain types of products to include the price per unit so buyers can accurately compare prices. eBay uses the <strong>UnitType</strong> and <strong>UnitQuantity</strong> values and the item's listed price to calculate and display the per-unit price on eBay EU sites.
    /// 							
    /// </remarks>

	public bool? IncludeItemSpecifics { get; set; }
    /// <summary>
    /// falseGetItemNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								The seller will include this field and set its value to <code>true</code> if the seller wishes to view the defined sales tax rates for the various jurisdictions in the country (generally, states and provinces). Information for each defined sales tax rate will be returned in the <b>TaxTable</b> container in the response.
    /// 								<br/><br/>
    /// 								Even if this field is included and set to <code>true</code>, no <b>TaxTable</b> container will be returned If no sales tax rates are defined for any tax jurisdiction in the seller's sales tax table.
    /// 								<br/><br/>
    /// 								Sales tax tables are only available for eBay US and Canada marketplaces. Sales tax rates can be added/modified in My eBay, through the <b>SetTaxTable</b> and <b>GetTaxTable</b> calls of the Trading API, or through the Sales Tax calls of the Account API.
    /// 							
    /// </remarks>

	public bool? IncludeTaxTable { get; set; }
    /// <summary>
    /// 50
    /// GetItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 							Retrieves an item that was listed by the user identified
    /// 							in AuthToken and that is being tracked by this SKU.<br>
    /// 							<br>
    /// 							A SKU (stock keeping unit) is an identifier defined by a seller.
    /// 							Some sellers use SKUs to track complex flows of products
    /// 							and information on the client side.
    /// 							eBay preserves the SKU on the item, enabling you
    /// 							to obtain it before and after an order line item is created.
    /// 							(SKU is recommended as an alternative to
    /// 							ApplicationData.)<br>
    /// 							<br>
    /// 							In <b>GetItem</b>, <b>SKU</b> can only be used to retrieve one of your
    /// 							own items, where you listed the item by using <b>AddFixedPriceItem</b>
    /// 							or <b>RelistFixedPriceItem</b>,
    /// 							and you set <b>Item.InventoryTrackingMethod</b> to <b>SKU</b> at
    /// 							the time the item was listed. (These criteria are necessary to
    /// 							uniquely identify the listing by a SKU.)<br>
    /// 							<br>
    /// 							Either <b>ItemID</b> or <b>SKU</b> is required in the request.
    /// 							If both are passed, they must refer to the same item,
    /// 							and that item must have <b>InventoryTrackingMethod</b> set to <b>SKU</b>.
    /// 							
    /// </remarks>

	public string SKU { get; set; }
    /// <summary>
    /// GetItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Variation-level SKU that uniquely identifes a Variation within
    /// 								the listing identified by <b>ItemID</b>. Only applicable when the
    /// 								seller listed the item with Variation-level SKU (<b>Variation.SKU</b>)
    /// 								values. Retrieves all the usual <b>Item</b> fields, but limits the
    /// 								<b>Variations</b> content to the specified Variation.
    /// 								If not specified, the response includes all Variations.
    /// 							
    /// </remarks>

	public string VariationSKU { get; set; }
    /// <summary>
    /// GetItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Name-value pairs that identify one or more Variations within the
    /// 								listing identified by <b>ItemID</b>. Only applicable when the seller
    /// 								listed the item with Variations. Retrieves all the usual <b>Item</b>
    /// 								fields, but limits the Variations content to the specified
    /// 								Variation(s). If the specified pairs do not match any Variation,
    /// 								eBay returns all Variations.<br>
    /// 								<br>
    /// 								To retrieve only one variation, specify the full set of
    /// 								name/value pairs that match all the name-value pairs of one
    /// 								Variation. <br>
    /// 								<br>
    /// 								To retrieve multiple variations (using a wildcard),
    /// 								specify one or more name/value pairs that partially match the
    /// 								desired variations. For example, if the listing contains
    /// 								Variations for shirts in different colors and sizes, specify
    /// 								Color as Red (and no other name/value pairs) to retrieve
    /// 								all the red shirts in all sizes (but no other colors).
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("NameValueList", IsNullable = false)]

	public System.Collections.Generic.List<NameValueListType> VariationSpecifics { get; set; }
    /// <summary>
    /// GetItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								A unique identifier for an order line item. An order line item is created
    /// 								when a buyer commits to purchasing an item.
    /// 								<br><br>
    /// 								Since you can change active multiple-quantity fixed-price listings even
    /// 								after one of the items has been purchased, the <b>TransactionID</b> is
    /// 								associated with a snapshot of the item data at the time of the purchase.
    /// 								<br><br>
    /// 								After one item in a multi-quantity listing has been sold, sellers can not
    /// 								change the values in the Title, Primary Category, Secondary Category,
    /// 								Listing Duration, and Listing Type fields. However, all other fields are
    /// 								editable.
    /// 								<br><br>
    /// 								Specifying a <b>TransactionID</b> in the <b>GetItem</b> request allows you to retrieve
    /// 								a snapshot of the listing as it was when the order line item was created.
    /// 								<br>
    /// 								<br>
    /// 								The <b>TransactionID</b> value for auction listings is always <code>0</code> since there can be only one winning bidder/one sale for an auction listing.
    /// 								<br/><br/>
    /// 								<span class="tablenote"><b>Note: </b> Beginning in July 2024, non-zero transaction IDs will start being returned for auction listings. If necessary, update code to handle non-zero transaction IDs for auction transactions before this time. 
    /// 								</span>
    /// 							
    /// </remarks>

	public string TransactionID { get; set; }
    /// <summary>
    /// false
    /// GetItemNo
    /// ItemCompatibilityCount#Response.Item.ItemCompatibilityCount
    /// ItemCompatibilityList#Response.Item.ItemCompatibilityList
    /// Parts and accessorieshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/ebay-motors-parts-accessories.html#search
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field is used to specify whether or not to retrieve Parts
    /// 								Compatiblity information for a motor part or accessory listing. If this field is included and set to <code>true</code>, the <b>Item.ItemCompatibilityList</b> container will be returned if a Parts Compatibility list exists for the listing. A Parts Compatibility list is a list of motor vehicles that are compatible with the listed motor part or accesory item. If a Parts Compatibility list does not exist for the listing, this field will have no effect if it is included, regardless of its value (<code>true</code> or <code>false</code>).
    /// 								<br><br>
    /// 								If this field is included and set to <code>false</code> or omitted, but a Parts Compatibility list does exist for the listing, the  <b>Item.ItemCompatibilityList</b> container will not be returned, but the <b>Item.ItemCompatibilityCount</b> field will be returned, and this field will simply indicate the quantity of motor vehicles that are compatible with the the listed motor part or accesory item.
    /// 								<br><br>
    /// 								Parts Compatibility lists are only applicable to motor parts and accessory categories on the sites that support eBay Motors - US, CA, UK, and DE.
    /// 							
    /// </remarks>

	public bool? IncludeItemCompatibilityList { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is used to display detailed information about the listing that was retrieved.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetItemResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container consists of detailed information about the retrieved listing. The amount of information that is returned is partially controlled by the filters that are set in the call request.
    /// 							
    /// </remarks>

	public ItemType Item { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// 
/// 					This call takes an <b>ItemID</b> value for an item that has yet to be shipped, and then returns estimated shipping costs for every shipping service that the seller has offered with the listing.
///       	
/// Shipping costshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/shipping-costs.html
/// </summary>
/// <remarks>
/// 
/// 				This is the base request type of the <b>GetItemShipping</b> call. This call takes an <b>ItemID</b> value for an item that has yet to be shipped, and then returns estimated shipping costs for every shipping service that the seller has offered with the listing. This call will also return <b>PickUpInStoreDetails.EligibleForPickupDropOff</b> and <b>PickUpInStoreDetails.EligibleForPickupInStore</b> flags if the item is available for buyer pick-up through the In-Store Pickup or Click and Collect features.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetItemShippingRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// GetItemShippingYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								The unique identifier of the eBay listing for which to retrieve estimated shipping costs for all offered shipping service options. The <b>ItemID</b> value passed into this field should be for an listing that offers at least one calculated shipping service option, and for an item that has yet to be shipped.
    /// 							
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// 1Quantity available in the listingGetItemShippingNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field is used to specify the quantity of the item. The <b>QuantitySold</b> value defaults to <code>1</code> if not specified. If a value greater than <code>1</code> is specified in this field, the shipping service costs returned in the response will reflect the expense to ship multiple quantity of an item.
    /// 								<br>
    /// 							
    /// </remarks>

	public int? QuantitySold { get; set; }
    /// <summary>
    /// GetItemShippingConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								The destination postal code (or zip code for US) is supplied in this field. <b>GetItemShipping</b> requires the destination of the shipment. Some countries will require both the <b>DestinationPostalCode</b> and the <b>DestinationCountryCode</b>, and some countries will accept either one or the other.
    /// 							
    /// </remarks>

	public string DestinationPostalCode { get; set; }
    /// <summary>
    /// US
    /// GetItemShippingConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								The destination country code is supplied in this field. <b>GetItemShipping</b> requires the destination of the shipment. Some countries will require both the <b>DestinationPostalCode</b> and the <b>DestinationCountryCode</b>, and some countries will accept either one or the other.
    /// 								<br><br>
    /// 								Two-digit country codes can be found in <a href="types/CountryCodeType.html">CountryCodeType</a>.
    /// 								<br>
    /// 							
    /// </remarks>

	public CountryCodeType? DestinationCountryCode { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This is the base response type of the <b>GetItemShipping</b> call. This call takes an <b>ItemID</b> value for an item that has yet to be shipped, and then returns estimated shipping costs for every shipping service that the seller has offered with the listing. This call will also return the  <b>PickUpInStoreDetails.EligibleForPickupInStore</b> flag if the item is available for buyer pick-up through the In-Store Pickup feature.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetItemShippingResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// GetItemShippingAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container will be returned if at least one domestic or international shipping service option is available for the item. A <b>ShippingServiceOptions</b> (for domestic shipping) and/or an <b>InternationalShippingServiceOptions</b> container (for international shipping) is returned for each available calculated shipping service option. These shipping service option containers consists of estimated shipping cost and estimated shipping times.
    /// 								<br>
    /// 								<br>
    /// 								Any error about shipping services (returned by a vendor of eBay's who calculates shipping costs) is returned in <b>ShippingRateErrorMessage</b>. Errors from a shipping service are likely to be related to issues with shipping specifications, such as package size and the selected shipping method not supported by a particular shipping service.
    /// 							
    /// </remarks>

	public ShippingDetailsType ShippingDetails { get; set; }
    /// <summary>
    /// GetItemShippingConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container is only returned in <b>GetItemShipping</b> if the In-Store Pickup feature is enabled for the listing. In-Store Pickup as a fulfillment method is only available to a limited number of large retail merchants in the US, Canada, UK, Germany, and Australia marketplaces. The In-Store Pickup feature can only be applied to multiple-quantity, fixed-price listings, and the merchant must have quantity of the item available in a store that is near the prospective buyer, in order for In-Store Pickup to be an available fulfillment option for that buyer.
    /// 							
    /// </remarks>

	public PickupInStoreDetailsType PickUpInStoreDetails { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// DetailLevel
/// Manage and fulfill ordershttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/manage-fulfill-orders.html
/// </summary>
/// <remarks>
/// 
/// 				This  call retrieves details on one or more order line items for a specified eBay listing. Auctions and single-quantity, fixed-price listings can only have one order line item, but a multiple-quantity and/or multiple-variation, fixed-priced listing can have numerous order line items.
/// 				<br><br>
/// 				To find one or more order line items for an eBay listing, an <b>ItemID</b> value can be passed in. If a user wanted to retrieve a specific order line item, an <b>ItemID</b> value and a an <b>TransactionID</b> value can be passed in, or an <b>OrderLineItemID</b> value can be passed in instead of an <b>ItemID</b>/<b>TransactionID</b> pair.
/// 				<br><br>
/// 				The <b>NumberOfDays</b> or the <b>ModTimeFrom</b> and <b>ModTimeTo</b> date range filters can be used to retrieve order line items generated (or last modified) within a specific range of time. The maximum date range that can be set is 30 days, and the <b>ModTimeFrom</b> date value cannot be set any further back than 90 days in the past. If no date range filters are used, all order line items (associated with the specified listing) generated (or last  modified) in the last 30 days are retrieved. Date ranges are generally only used for multiple-quantity or multiple-variation, fixed-price listings that can have multiple order line items.
/// 				<br><br>
/// 				There are also pagination filters available that allow the user to control how many and which order line items are returned on each page of a results set.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetItemTransactionsRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// GetItemTransactionsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Unique identifier for an eBay listing. A listing can have multiple order line items, but only one <b>ItemID</b>. When you use <b>ItemID</b> alone, eBay returns all order line items that are associated with the <b>ItemID</b>. If you pair <b>ItemID</b> with a specific <b>TransactionID</b>, data on a specific order line item is returned. An <b>OrderLineItemID</b> value can be used instead of an <b>ItemID</b>/<b>TransactionID</b> pair to identify an order line item, and if an <b>OrderLineItemID</b> is specified in the request, any <b>ItemID</b>/<b>TransactionID</b> pair specified in the same request is ignored.
    /// 								<br>
    /// 								<br>
    /// 								<span class="tablenote"><b>Note:</b>
    /// 								<b>GetItemTransactions</b> doesn't support SKU as an input because this
    /// 								call requires an identifier that is unique across your active
    /// 								and ended listings. Even when <b>InventoryTrackingMethod</b> is set to
    /// 								<b>SKU</b> in a listing, the SKU is only unique across your active
    /// 								listings (not your ended listings). To retrieve order line items
    /// 								by SKU, use <b>GetSellerTransactions</b> instead.
    /// 								</span>
    /// 							
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// GetItemTransactionsNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								The <b>ModTimeFrom</b> and <b>ModTimeTo</b> fields are used to retrieve order line items that were created or modified within a specified date range. The <b>ModTimeFrom</b> field is the starting date range. All of the listing's order line items that were generated or modified within this date range are returned in the output.  The maximum date range that may be specified is 30 days. This value cannot be set back more than 90 days in the past, as this call cannot retrieve sales older than 90 days old. The maximum date range that may be specified is 30 days. This field is not applicable (and is ignored) if the user is looking for a specific order line item by either using an <b>ItemID</b>/<b>TransactionID</b> pair, or an <b>OrderLineItemID</b> value.
    /// 								<br>
    /// 									<span class="tablenote"><b>Note: </b> Please note that for a multiple line item order, all line items of that order that meet the filter criteria may be returned in the responses, even the line item(s) that were not actually modified. In other words, if any part of the order was modified, all line items of that order may be returned.
    /// 								</span>
    /// 							
    /// </remarks>

	public System.DateTime? ModTimeFrom { get; set; }
    /// <summary>
    /// GetItemTransactionsNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								The <b>ModTimeFrom</b> and <b>ModTimeTo</b> fields are used to retrieve order line items that were created or modified within a specified date range. The <b>ModTimeTo</b> field is the ending date range. All eBay order line items that were generated (or last modified) within this date range are returned in the output. The maximum date range that may be specified is 30 days. If the <b>ModTimeFrom</b> field is used and the <b>ModTimeTo</b> field is omitted, the <b>ModTimeTo</b> value defaults to the present time or to 30 days after the date specified with the <b>ModTimeFrom</b> value (if <b>ModTimeFrom</b> value is more than 30 days in the past). This field is not applicable (and is ignored) if the user is looking for a specific order line item by either using an <b>ItemID</b>/<b>TransactionID</b> pair, or an <b>OrderLineItemID</b> value.
    /// 								<br>
    /// 									<span class="tablenote"><b>Note: </b> Please note that for a multiple line item order, all line items of that order that meet the filter criteria may be returned in the responses, even the line item(s) that were not actually modified. In other words, if any part of the order was modified, all line items of that order may be returned.
    /// 								</span>
    /// 							
    /// </remarks>

	public System.DateTime? ModTimeTo { get; set; }
    /// <summary>
    /// GetItemTransactionsNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Include a <b>TransactionID</b> field in the request if you want to retrieve the data for a specific order line item for the listing specified in the <b>ItemID</b> field. This field is really only applicable for a multiple-quantity or multiple-variation, fixed-price listing that may have multiple sales. An auction listing or a single-quantity, fixed-price listing will only result in one order line item, so this field is not needed in these two cases. If an <b>OrderLineItemID</b> value is used instead to identify an order line item, this field is ignored.
    /// 								<br><br>
    /// 								If this field is used, any specified date filter is ignored.
    /// 								<br>
    /// 								<br>
    /// 								The <b>TransactionID</b> value for auction listings is always <code>0</code> since there can be only one winning bidder/one sale for an auction listing.
    /// 								<br/><br/>
    /// 								<span class="tablenote"><b>Note: </b> Beginning in July 2024, non-zero transaction IDs will start being returned for auction listings. If necessary, update code to handle non-zero transaction IDs for auction transactions before this time. 
    /// 								</span>
    /// 							
    /// </remarks>

	public string TransactionID { get; set; }
    /// <summary>
    /// GetItemTransactionsNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container controls how many order line items should be returned per page of data, as well as which page of data to return (if there are multiple pages of order line items).  Use the <b>EntriesPerPage</b> property to control the number of order line items to return per call and the <b>PageNumber</b> property to specify the specific page of data to return. If multiple pages of order line items are returned based on input criteria and <b>Pagination</b> properties, <b>GetItemTransactions</b> will need to be called multiple times (with the <b>PageNumber</b> value being increased by 1 each time) to scroll through all results.
    /// 							
    /// </remarks>

	public PaginationType Pagination { get; set; }
    /// <summary>
    /// false
    /// GetItemTransactionsNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field is included and set to <code>true</code> if the user wants to view the Final Value Fee (FVF) for all order line items in the response. The Final Value Fee is returned in the <b>Transaction.FinalValueFee</b> field. The Final Value Fee is assessed right after the creation of an order line item.
    /// 								<br>
    /// 									<br>
    /// 									See the <a href="https://www.ebay.com/help/selling/fees-credits-invoices/selling-fees?id=4822" target="_blank">Selling fees</a> help page for more information about how Final Value Fees are calculated.
    /// 							
    /// </remarks>

	public bool? IncludeFinalValueFee { get; set; }
    /// <summary>
    /// false
    /// GetItemTransactionsNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field is included and set to <code>true</code> if the user wants to view order-level details, including the unique identifier of the order and the status of the order. The order-level details will be shown in the <b>ContainingOrder</b> container in the response.
    /// 								<br/>
    /// 							
    /// </remarks>

	public bool? IncludeContainingOrder { get; set; }
    /// <summary>
    /// 
    /// 1027
    /// NoOp
    /// 1033
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// 								<span class="tablenote"><b>Note: </b> This field is should no longer be used, as its purpose in the past was to give the user the ability to retrieve only eBay marketplace order line items or only Half.com listings, and since the Half.com site no longer exists, this field is no longer relevant.
    /// 								</span>
    /// 							
    /// </remarks>

	public TransactionPlatformCodeType? Platform { get; set; }
    /// <summary>
    /// 30
    /// 1
    /// 30
    /// GetItemTransactionsNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This date range filter specifies the number of days (24-hour periods) in the past to search for order line items. All eBay order line items that were either created or modified within this period are returned in the response. If specified, <b>NumberOfDays</b> will override any date range specified with the <b>ModTimeFrom</b>/<b>ModTimeTo</b> date range filters. This field is not applicable if a specific order line item is specified either through an <b>ItemID</b><b>TransactionID</b> pair or an <b>OrderLineItemID</b> value.
    /// 							
    /// </remarks>

	public int? NumberOfDays { get; set; }
    /// <summary>
    /// GetItemTransactionsfalseNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								If this field is included in the request and set to <code>true</code>, details on all variations defined in the specified multiple-variation listing are returned, including variations that have no sales. If this field is not included in the request or set to <code>false</code>, the variations with sales are still returned in separate <b>Transaction</b> nodes. This information is intended to help sellers to reconcile their local inventory with eBay's records, while processing order line items (without requiring a separate call to <b>GetItem</b>).
    /// 							
    /// </remarks>

	public bool? IncludeVariations { get; set; }
    /// <summary>
    /// GetItemTransactionsNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								A unique identifier for an eBay order line item. This identifier is created once there is a commitment to buy (bidder wins the auction, buyer clicks buy button, or buyer purchases item through <b>PlaceOffer</b> call). If you want to retrieve data on a
    /// 								specific order line item, you can use an <b>OrderLineItemID</b> value in the
    /// 								request instead of an <b>ItemID</b>/<b>TransactionID</b> pair. If an <b>OrderLineItemID</b> is
    /// 								provided, any specified date range filter is ignored.
    /// 							
    /// </remarks>

	public string OrderLineItemID { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Returns an array of order line item data for the item specified in the request.
/// 				The results can be used to create a report of data that is commonly
/// 				necessary for order processing.
/// 				Zero, one, or many <b>Transaction</b> objects can be returned in the <b>TransactionArray</b>.
/// 				The set of order line items returned is limited to those that were modified between
/// 				the times specified in the request's <b>ModTimeFrom</b> and <b>ModTime</b> filters.
/// 				Also returns the <b>Item</b> object that spawned the order line items.
/// 				If pagination filters were specified in the request, returns meta-data describing
/// 				the effects of those filters on the current response and the estimated effects if
/// 				the same filters are used in subsequent calls.
/// 				<br><br>
/// 				Data from the <b>TransactionArray</b> may be used to trigger the following Platform Notifications: <b>EndOfAuction</b>, <b>AuctionCheckoutComplete</b>, <b>FixedPriceTransaction</b>, <b>CheckoutBuyerRequestsTotal</b>, <b>ItemMarkedShipped</b>, and <b>ItemMarkedPaid</b>. Each notification will be based on the state of the item (a 'snapshot' of the item) at the time the order line item was created.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetItemTransactionsResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// GetItemTransactionsDetailLevel: none, ReturnAll, ItemReturnDescriptionAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Contains the total number of pages (<b>TotalNumberOfPages</b>) and the total number
    /// 								of entries (<b>TotalNumberOfEntries</b>) that could be returned given repeated calls
    /// 								that use the same selection criteria as the call that returned this response.
    /// 							
    /// </remarks>

	public PaginationResultType PaginationResult { get; set; }
    /// <summary>
    /// GetItemTransactionsDetailLevel: none, ReturnAll, ItemReturnDescriptionAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Indicates whether there are additional order line items to retrieve.
    /// 								That is, indicates whether more pages of data are available to be
    /// 								returned, given the filters that were specified in the request.
    /// 								Returns false for the last page of data.
    /// 							
    /// </remarks>

	public bool? HasMoreTransactions { get; set; }
    /// <summary>
    /// GetItemTransactionsDetailLevel: none, ReturnAll, ItemReturnDescriptionAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Number of order line items returned per page (per call). May be a higher value
    /// 								than <b>ReturnedTransactionCountActual</b> if the page returned is the last page
    /// 								and more than one page of data exists.
    /// 							
    /// </remarks>

	public int? TransactionsPerPage { get; set; }
    /// <summary>
    /// GetItemTransactionsDetailLevel: none, ReturnAll, ItemReturnDescriptionAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Page number for the page of order line items the response returned.
    /// 							
    /// </remarks>

	public int? PageNumber { get; set; }
    /// <summary>
    /// GetItemTransactionsDetailLevel: none, ReturnAll, ItemReturnDescriptionAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Number of order line items retrieved in the current page of results just returned.
    /// 								May be a lower value than <b>TransactionsPerPage</b> if the page returned is the last
    /// 								page and more than one page of data exists.
    /// 							
    /// </remarks>

	public int? ReturnedTransactionCountActual { get; set; }
    /// <summary>
    /// GetItemTransactionsDetailLevel: none, ReturnAll, ItemReturnDescriptionAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								<b>Item</b> object that spawned the order line item. It is a purchase from this item's listing
    /// 								that the order line item represents.
    /// 							
    /// </remarks>

	public ItemType Item { get; set; }
    /// <summary>
    /// GetItemTransactionsDetailLevel: none, ReturnAll, ItemReturnDescriptionConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								List of <b>Transaction</b> objects representing the order line items resulting
    /// 								from the listing. Each <b>Transaction</b> object contains the data for one purchase
    /// 								(of one or more items in the same listing). The <b>Transaction.Item</b> field is not
    /// 								returned because the <b>Item</b> object is returned at the root level of the response.
    /// 								See the reference guide for more information about the fields that are returned.
    /// 								<span class="tablenote"><strong>Note:</strong>
    /// 									The <b>GetItemTransactions</b> call does not support <a href ="https://www.ebay.com/sellercenter/ebay-for-business/multi-user-account-access" target="_blank" >Multi-user account access</a>. Transactions are only returned for the user that makes the call. You cannot use <b>GetItemTransactions</b> to return transactions for another user. The call succeeds but returns an empty <code>&lt;TransactionArray/&gt;</code>.
    /// 								</span>								
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("Transaction", IsNullable = false)]

	public System.Collections.Generic.List<TransactionType> TransactionArray { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// 
/// 					This call retrieves all completed order line items for which the user (buyer or seller) still needs to leave Feedback for their order partner.
/// 				
/// </summary>
/// <remarks>
/// 
/// 				This is the base request type of the <b>GetItemsAwaitingFeedback</b> call. This call retrieves all completed order line items for which the user (buyer or seller) still needs to leave Feedback for their order partner.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetItemsAwaitingFeedbackRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// EndTimeDescending
    /// GetItemsAwaitingFeedbackNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field allows the user to control how the order line items are returned in the response. If this field is not used, order line items are returned based on end time (from most recent to oldest).
    /// 								Valid values for this field are:
    /// 								<ul>
    /// 								<li><code>EndTime</code></li>
    /// 								<li><code>EndTimeDescending</code> (default value)</li>
    /// 								<li><code>FeedbackLeft</code></li>
    /// 								<li><code>FeedbackLeftDescending</code></li>
    /// 								<li><code>FeedbackReceived</code></li>
    /// 								<li><code>FeedbackReceivedDescending</code></li>
    /// 								<li><code>Title</code></li>
    /// 								<li><code>TitleDescending</code></li>
    /// 								<li><code>UserID</code></li>
    /// 								<li><code>UserIDDescending</code></li>
    /// 								</ul>
    /// 								Reference the <a href="types/ItemSortTypeCodeType.html">ItemSortTypeCodeType</a> definition for more information on these sort values.
    /// 								<br/>
    /// 							
    /// </remarks>

	public ItemSortTypeCodeType? Sort { get; set; }
    /// <summary>
    /// GetItemsAwaitingFeedbackNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container can be used if the user only wants to see a subset of order line item results. In this container, the user will specify the number of order line items to return per page of data, and will specify the specific page of data they want to view with each call.
    /// 								<br/><br/>
    /// 								With the <b>GetItemsAwaitingFeedback</b> call, the maximum allowed value for <b>EntriesPerPage</b> is 200.
    /// 							
    /// </remarks>

	public PaginationType Pagination { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This is the base response type of the <b>GetItemsAwaitingFeedback</b> call. This call retrieves all completed order line items for which the user (buyer or seller) still needs to leave Feedback for their order partner.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetItemsAwaitingFeedbackResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// GetItemsAwaitingFeedbackAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container consists of one or more order line items that are awaiting Feedback from the user that made the call. Each order line item is returned in its own <b>TransactionArray.Transaction</b> container.
    /// 								<br><br>
    /// 								This container will not be returned if no order line items are awaiting Feedback from the user who made the call.
    /// 							
    /// </remarks>

	public PaginatedTransactionArrayType ItemsAwaitingFeedback { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// 
/// 					GetMyMessages
/// 				
/// </summary>
/// <remarks>
/// 
/// 				Retrieves a list of the messages buyers have posted about your
/// 				active item listings.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetMemberMessagesRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// GetMemberMessagesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								The unique identifier of the eBay listing for which you wish to retrieve member messages.
    /// 								<br><br>
    /// 								For <em>Ask Seller Question</em> messages, the <b>ItemID</b> and/or a date range
    /// 								(specified with <b>StartCreationTime</b> and <b>EndCreationTime</b> fields),
    /// 								are required, or the call will fail.
    /// 							
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// GetMemberMessagesAskSellerQuestion, AllYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								This required field indicates the type of member message to retrieve. Only the following two enumeration values are allowed. The call will fail if this field is not included in the request.
    /// 							
    /// </remarks>

	public MessageTypeCodeType? MailMessageType { get; set; }
    /// <summary>
    /// GetMemberMessagesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field allows you to retrieve only unanswered member messages or answered member messages. If this field is omitted, both answered and unanswered member messages are retrieved.
    /// 							
    /// </remarks>

	public MessageStatusTypeCodeType? MessageStatus { get; set; }
    /// <summary>
    /// GetMemberMessagesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								If included in the request and set to <code>true</code>, only public messages (viewable in the Item listing) are returned. If omitted or set to <code>false</code> in the request, all messages (that match other filters in the request) are returned in the response.
    /// 							
    /// </remarks>

	public bool? DisplayToPublic { get; set; }
    /// <summary>
    /// GetMemberMessagesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Used as beginning of date range filter. If specified, filters the returned messages to only those with a creation date greater than or equal to the specified date and time.
    /// 								<br><br>
    /// 								For Contact eBay Member (CEM) messages, <b>StartCreationTime</b> and <b>EndCreationTime</b> must be provided.
    /// 								<br><br>
    /// 								For Ask Seller a Question (ASQ) messages, either the <b>ItemID</b>, or a date range (specified with <b>StartCreationTime</b> and <b>EndCreationTime</b>), or both must be included.
    /// 							
    /// </remarks>

	public System.DateTime? StartCreationTime { get; set; }
    /// <summary>
    /// GetMemberMessagesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Used as end of date range filter. If specified, filters
    /// 								the returned messages to only those with a creation date
    /// 								less than or equal to the specified date and time.
    /// 								<br><br>
    /// 								For Contact eBay Member (CEM) messages, <b>StartCreationTime</b> and <b>EndCreationTime</b>
    /// 								must be provided.
    /// 								<br><br>
    /// 								For Ask Seller a Question (ASQ) messages, either the <b>ItemID</b>, or a date range
    /// 								(specified with <b>StartCreationTime</b> and <b>EndCreationTime</b>),
    /// 								or both must be included.
    /// 							
    /// </remarks>

	public System.DateTime? EndCreationTime { get; set; }
    /// <summary>
    /// GetMemberMessagesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Standard pagination argument used to reduce response.
    /// 							
    /// </remarks>

	public PaginationType Pagination { get; set; }
    /// <summary>
    /// GetMemberMessagesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								An ID that uniquely identifies the message for a given user to be retrieved. Used for the <b>AskSellerQuestion</b> notification only.
    /// 							
    /// </remarks>

	public string MemberMessageID { get; set; }
    /// <summary>
    /// GetMemberMessagesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								An eBay ID that uniquely identifies a user. For <b>GetMemberMessages</b>, this is the sender of the message. If included in the request, returns only messages from the specified sender.
    /// 							
    /// </remarks>

	public string SenderID { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Retrieves a list of the messages buyers have posted about your active item listings.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetMemberMessagesResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// GetMemberMessagesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								The returned member messages. Returned if messages that meet the request criteria exist. Note that <b>GetMemberMessages</b> does not return messages when, in the request, the <b>MailMessageType</b> is <b>AskSellerQuestion</b>.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("MemberMessageExchange", IsNullable = false)]

	public System.Collections.Generic.List<MemberMessageExchangeType> MemberMessage { get; set; }
    /// <summary>
    /// GetMemberMessagesAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Shows the pagination of data returned by requests.
    /// 							
    /// </remarks>

	public PaginationResultType PaginationResult { get; set; }
    /// <summary>
    /// GetMemberMessagesAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Specifies whether the response has more items.
    /// 							
    /// </remarks>

	public bool? HasMoreItems { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// 
/// 					SetMessagePreferences
/// 				
/// </summary>
/// <remarks>
/// 
/// 				Returns a seller's Ask Seller a Question (ASQ) subjects, each in
/// 				its own <b>Subject</b> field.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetMessagePreferencesRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// GetMessagePreferencesYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								The eBay user ID of the seller to retrieve ASQ subjects for. A user can retrieve their own ASQ subjects or those of another eBay user with a seller account.
    /// 							
    /// </remarks>

	public string SellerID { get; set; }
    /// <summary>
    /// GetMessagePreferencesYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field must be included and set to <code>true</code> to retrieve the ASQ subjects for the specified eBay user.
    /// 							
    /// </remarks>

	public bool? IncludeASQPreferences { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Contains the ASQ subjects for the user specified in the request.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetMessagePreferencesResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// GetMessagePreferencesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Returns a seller's ASQ subjects, each in its own Subject
    /// 								node. If the seller has not customized the ASQ subjects
    /// 								using SetMessagePreferences, the call will return the
    /// 								current default values. Returned if
    /// 								IncludeASQPreferences = true was specified in the
    /// 								request.
    /// 							
    /// </remarks>

	public ASQPreferencesType ASQPreferences { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// 
/// 					Retrieves information about the messages sent to
/// 					a user.
/// 				
/// DetailLevel
/// GetMemberMessages
/// </summary>
/// <remarks>
/// 
/// 				Retrieves information about the messages sent to a given user.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetMyMessagesRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// GetMyMessagesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container can be used to retrieve one or more specific messages identified with their unique <b>MessageID</b> values. Up to  10 <b>MessageID</b> values can be specified with one call.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("MessageID", IsNullable = false)]

	public System.Collections.Generic.List<string> MessageIDs { get; set; }
    /// <summary>
    /// GetMyMessagesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								A unique identifier for a My Messages folder. If a <b>FolderID</b> value is provided,
    /// 								only messages from the specified folder are returned in the response.
    /// 							
    /// </remarks>

	public long? FolderID { get; set; }
    /// <summary>
    /// GetMyMessagesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								The beginning of the date-range filter.
    /// 								Filtering takes into account the entire timestamp of when messages were sent.
    /// 								Messages expire after one year.
    /// 							
    /// </remarks>

	public System.DateTime? StartTime { get; set; }
    /// <summary>
    /// GetMyMessagesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								The end of the date-range filter. See StartTime
    /// 								(which is the beginning of the date-range filter).
    /// 							
    /// </remarks>

	public System.DateTime? EndTime { get; set; }
    /// <summary>
    /// GetMyMessagesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field is currently available on the US site. A container for IDs that
    /// 								uniquely identify messages for a given user. If provided at the time of message
    /// 								creation, this ID can be used to retrieve messages and will take precedence
    /// 								over message ID.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("ExternalMessageID", IsNullable = false)]

	public System.Collections.Generic.List<string> ExternalMessageIDs { get; set; }
    /// <summary>
    /// GetMyMessagesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Specifies how to create virtual pages in the returned list (such as total
    /// 								number of entries and total number of pages to return).
    /// 								Default value for <b>EntriesPerPage</b> with <b>GetMyMessages</b> is 25.
    /// 							
    /// </remarks>

	public PaginationType Pagination { get; set; }
    /// <summary>
    /// GetMyMessagesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								If this field is included in the request and set to <code>true</code>, only High Priority messages are returned in the response.
    /// 							
    /// </remarks>

	public bool? IncludeHighPriorityMessageOnly { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 			Conains information about the messages sent to a user. Depending on the detail
/// 			level, this information can include message counts, resolution and flagged status,
/// 			message headers, and message text.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetMyMessagesResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// GetMyMessagesDetailLevel: ReturnSummaryConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Summary data for a given user's messages. This includes the numbers of new
    /// 								messages, flagged messages, and total messages. The amount and type of
    /// 								data returned is the same whether or not the request includes specific
    /// 								Message IDs. Always/Conditionally returned logic assumes a detail level of
    /// 								ReturnMessages.
    /// 							
    /// </remarks>

	public MyMessagesSummaryType Summary { get; set; }
    /// <summary>
    /// GetMyMessagesDetailLevel: ReturnHeaders, ReturnMessagesAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container consists of an array of one or more messages that match the search criteria in the call request.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("Message", IsNullable = false)]

	public System.Collections.Generic.List<MyMessagesMessageType> Messages { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// DetailLevel
/// </summary>
/// <remarks>
/// 
/// 				Retrieves information regarding a user's buying activity, such as items they are watching, bidding on, have won, did not win, and have made Best Offers on.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetMyeBayBuyingRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// GetMyeBayBuyingNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Include this container and set the <b>WatchList.Include</b> field to <code>true</code> to return the list of items on the eBay user's Watch List.
    /// 								<br><br>
    /// 								The user also has the option of using pagination and sorting for the list of watched items that will be returned.
    /// 							
    /// </remarks>

	public ItemListCustomizationType WatchList { get; set; }
    /// <summary>
    /// GetMyeBayBuyingNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Include this container and set the <b>BidList.Include</b> field to <code>true</code> to return the list of auction items on which the eBay user has bid.
    /// 								<br><br>
    /// 								The user also has the option of using pagination and sorting for the list of auction items that will be returned.
    /// 							
    /// </remarks>

	public ItemListCustomizationType BidList { get; set; }
    /// <summary>
    /// GetMyeBayBuyingNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Include this container and set the <b>BestOfferList.Include</b> field to <code>true</code> to return the list of items on which the eBay user has made a Best Offer.
    /// 								<br><br>
    /// 								The user also has the option of using pagination and sorting for the list of items that will be returned.
    /// 							
    /// </remarks>

	public ItemListCustomizationType BestOfferList { get; set; }
    /// <summary>
    /// GetMyeBayBuyingNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Include this container and set the <b>WonList.Include</b> field to <code>true</code> to return the list of auction items on which the eBay user has bid on and won.
    /// 								<br><br>
    /// 								The user also has the option of using pagination and sorting for the list of auction items that will be returned.
    /// 							
    /// </remarks>

	public ItemListCustomizationType WonList { get; set; }
    /// <summary>
    /// GetMyeBayBuyingNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Include this container and set the <b>LostList.Include</b> field to <code>true</code> to return the list of auction items on which the eBay user has bid on and lost.
    /// 								<br><br>
    /// 								The user also has the option of using pagination and sorting for the list of auction items that will be returned.
    /// 							
    /// </remarks>

	public ItemListCustomizationType LostList { get; set; }
    /// <summary>
    /// GetMyeBayBuyingNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Include this container and set the <b>FavoriteSearches.Include</b> field to <code>true</code> to return the list of the eBay user's saved searches.
    /// 							
    /// </remarks>

	public MyeBaySelectionType FavoriteSearches { get; set; }
    /// <summary>
    /// GetMyeBayBuyingNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Include this container and set the <b>FavoriteSellers.Include</b> field to <code>true</code> to return the list of the eBay user's saved sellers.
    /// 							
    /// </remarks>

	public MyeBaySelectionType FavoriteSellers { get; set; }
    /// <summary>
    /// GetMyeBayBuyingNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Include this container and set the <b>SecondChanceOffer.Include</b> field to <code>true</code> to return any Second Chance Offers that the eBay user has received.
    /// 							
    /// </remarks>

	public MyeBaySelectionType SecondChanceOffer { get; set; }
    /// <summary>
    /// GetMyeBayBuyingNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Include this container and set the <b>DeletedFromWonList.Include</b> field to <code>true</code> to return the list of auction items on which the eBay user has bid on and won, but has deleted from their My eBay page.
    /// 								<br><br>
    /// 								The user also has the option of using pagination and sorting for the list of auction items that will be returned.
    /// 							
    /// </remarks>

	public ItemListCustomizationType DeletedFromWonList { get; set; }
    /// <summary>
    /// GetMyeBayBuyingNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Include this container and set the <b>DeletedFromLostList.Include</b> field to <code>true</code> to return the list of auction items on which the eBay user has bid on and lost, and has deleted from their My eBay page.
    /// 								<br><br>
    /// 								The user also has the option of using pagination and sorting for the list of auction items that will be returned.
    /// 							
    /// </remarks>

	public ItemListCustomizationType DeletedFromLostList { get; set; }
    /// <summary>
    /// GetMyeBayBuyingNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Include this container and set the <b>BuyingSummary.Include</b> field to <code>true</code> to return the <b>BuyingSummary</b> container in the response. The <b>BuyingSummary</b> container consists of buying/bidding activity counts and values.
    /// 							
    /// </remarks>

	public ItemListCustomizationType BuyingSummary { get; set; }
    /// <summary>
    /// GetMyeBayBuyingNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Include this container and set the <b>UserDefinedLists.Include</b> field to <code>true</code> to return one or more user-defined lists. User-defined lists are lists created by the user in My eBay and consists of a combination of items, saved sellers, and/or saved searches.
    /// 							
    /// </remarks>

	public MyeBaySelectionType UserDefinedLists { get; set; }
    /// <summary>
    /// GetMyeBayBuyingNofalse
    /// </summary>
    /// <remarks>
    /// 
    /// 								If this field is included and set to <code>true</code>, the <b>Variations</b> node (and all variation data) is omitted for all multiple-variation listings in the response. If this field is omitted or set to <code>false</code>, the <b>Variations</b> node is returned for all multiple-variation listings in the response.
    /// 								<br>
    /// 							
    /// </remarks>

	public bool? HideVariations { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Returns information regarding a user's buying activity, such as items they are watching, bidding on, have won, did not win, and have made Best Offers on.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetMyeBayBuyingResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container consists of buying/bidding activity counts and values. For this container to be returned, the user must include the <b>BuyingSummary.Include</b> field in the request and set its value to <code>true</code>.
    /// 							
    /// </remarks>

	public BuyingSummaryType BuyingSummary { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container consists of the items on the eBay user's Watch List. This container will be returned if the eBay user has one or more items on their Watch List.
    /// 								<br><br>
    /// 								This container will not be returned in the response (even if there are items on the Watch List) if the <b>DetailLevel</b> value is set to <code>ReturnSummary</code> and the <b>WatchList.Include</b> field is omitted or set to <code>false</code>.
    /// 							
    /// </remarks>

	public PaginatedItemArrayType WatchList { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container consists of the auction items on which the eBay user has bid. This container will be returned if the eBay user has bid on one or more auction items.
    /// 								<br><br>
    /// 								This container will not be returned in the response (even if there are items on the Bid List) if the <b>DetailLevel</b> value is set to <code>ReturnSummary</code> and the <b>BidList.Include</b> field is omitted or set to <code>false</code>.
    /// 							
    /// </remarks>

	public PaginatedItemArrayType BidList { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container consists of the items on which the eBay user has made Best Offers. This container will be returned if the eBay user has made one or more Best Offers.
    /// 								<br><br>
    /// 								This container will not be returned in the response (even if user has made Best Offers) if the <b>DetailLevel</b> value is set to <code>ReturnSummary</code> and the <b>BestOfferList.Include</b> field is omitted or set to <code>false</code>.
    /// 							
    /// </remarks>

	public PaginatedItemArrayType BestOfferList { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container consists of the auction items on which the eBay user has won. This container will be returned if the eBay user has won one or more auction items.
    /// 								<br><br>
    /// 								This container will not be returned in the response (even if there are items on the Won List) if the <b>DetailLevel</b> value is set to <code>ReturnSummary</code> and the <b>WonList.Include</b> field is omitted or set to <code>false</code>.
    /// 							
    /// </remarks>

	public PaginatedOrderTransactionArrayType WonList { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container consists of the auction items on which the eBay user has bid on but lost. This container will be returned if the eBay user has lost one or more auction items.
    /// 								<br><br>
    /// 								This container will not be returned in the response (even if the buyer has lost one or more auction items) if the <b>DetailLevel</b> value is set to <code>ReturnSummary</code> and the <b>LostList.Include</b> field is omitted or set to <code>false</code>.
    /// 							
    /// </remarks>

	public PaginatedItemArrayType LostList { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container consists of the eBay user's saved searches. This container will be returned if the eBay user has one or more saved searches.
    /// 								<br><br>
    /// 								This container will not be returned in the response (even if the user has saved searches) if the <b>DetailLevel</b> value is set to <code>ReturnSummary</code> and the <b>FavoriteSearches.Include</b> field is omitted or set to <code>false</code>.
    /// 								<br><br>
    /// 								This container consists of the search name, search query, and other search
    /// 								elements. The user can copy and paste the URL in the <b>SearchQuery</b> field into a browser to view the search results again.
    /// 							
    /// </remarks>

	public MyeBayFavoriteSearchListType FavoriteSearches { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container consists of the eBay user's saved sellers. This container will be returned if the eBay user has one or more saved sellers.
    /// 								<br><br>
    /// 								This container will not be returned in the response (even if the user has saved sellers) if the <b>DetailLevel</b> value is set to <code>ReturnSummary</code> and the <b>FavoriteSellers.Include</b> field is omitted or set to <code>false</code>.
    /// 								<br><br>
    /// 								This container consists of the saved sellers' user IDs and eBay Store names (if applicable).
    /// 							
    /// </remarks>

	public MyeBayFavoriteSellerListType FavoriteSellers { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container consists of the items on which the eBay user has received a Second Chance Offer. This container will be returned if the eBay user has made one or more Second Chance Offers.
    /// 								<br><br>
    /// 								This container will not be returned in the response (even if user has received Second Chance Offers) if the <b>DetailLevel</b> value is set to <code>ReturnSummary</code> and the <b>SecondChanceOffer.Include</b> field is omitted or set to <code>false</code>.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("SecondChanceOffer")]

	public System.Collections.Generic.List<ItemType> SecondChanceOffer { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container consists of the auction items on which the eBay user has won but deleted from their My eBay page. This container will be returned if the eBay user has won one or more auction items but have deleted these items from My eBay.
    /// 								<br><br>
    /// 								This container will not be returned in the response (even if they have won and then deleted one or more items) if the <b>DetailLevel</b> value is set to <code>ReturnSummary</code> and the <b>DeletedFromWonList.Include</b> field is omitted or set to <code>false</code>.
    /// 							
    /// </remarks>

	public PaginatedOrderTransactionArrayType DeletedFromWonList { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container consists of the auction items on which the eBay user has lost and then deleted from their My eBay page. This container will be returned if the eBay user has lost one or more auction items and then deleted those items from My eBay.
    /// 								<br><br>
    /// 								This container will not be returned in the response (even if they have lost and then deleted one or more items) if the <b>DetailLevel</b> value is set to <code>ReturnSummary</code> and the <b>DeletedFromLostList.Include</b> field is omitted or set to <code>false</code>.
    /// 							
    /// </remarks>

	public PaginatedItemArrayType DeletedFromLostList { get; set; }
    /// <summary>
    /// GetMyeBayBuyingConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container consists of data for a user-defined list that was created by the user in My eBay. User-defined lists consists of a combination of items, saved sellers, and/or saved searches.
    /// 								<br><br>
    /// 								This container will not be returned in the response (even if one or more user-defined lists exist) if the <b>DetailLevel</b> value is set to <code>ReturnSummary</code> and the <b>UserDefinedList.Include</b> field is omitted or set to <code>false</code>.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("UserDefinedList")]

	public System.Collections.Generic.List<UserDefinedListType> UserDefinedList { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// DetailLevel
/// GetMyeBaySellinghttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/my-ebay-selling.html
/// eBay Selling Page (US)https://www.ebay.com/help/selling
/// </summary>
/// <remarks>
/// 
/// 				Retrieves information regarding the user's selling activity, such as items that the user is currently selling (the Active list), auction listings that have bids, sold items, and unsold items.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetMyeBaySellingRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// GetMyeBaySellingNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Include this container and set the <b>ScheduledList.Include</b> field to <code>true</code> to return the list of items that are scheduled to become active listings on eBay.com at a future date/time.
    /// 								<br><br>
    /// 								The user also has the option of using pagination and sorting for the list of Scheduled listings that will be returned.
    /// 							
    /// </remarks>

	public ItemListCustomizationType ScheduledList { get; set; }
    /// <summary>
    /// GetMyeBaySellingNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Include this container and set the <b>ActiveList.Include</b> field to <code>true</code> to return the list of active listings on eBay.com.
    /// 								<br><br>
    /// 								The user also has the option of using pagination and sorting for the list of active listings that will be returned.
    /// 							
    /// </remarks>

	public ItemListCustomizationType ActiveList { get; set; }
    /// <summary>
    /// GetMyeBaySellingNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Include this container and set the <b>SoldList.Include</b> field to <code>true</code> to return the list of sold order line items.
    /// 								<br><br>
    /// 								The user also has the option of using pagination and sorting for the list of sold items that will be returned.
    /// 							
    /// </remarks>

	public ItemListCustomizationType SoldList { get; set; }
    /// <summary>
    /// GetMyeBaySellingNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Include this container and set the <b>UnsoldList.Include</b> field to <code>true</code> to return the listings that have ended without a purchase.
    /// 								<br><br>
    /// 								The user also has the option of using pagination and sorting for the list of unsold items that will be returned.
    /// 							
    /// </remarks>

	public ItemListCustomizationType UnsoldList { get; set; }
    /// <summary>
    /// GetMyeBaySellingNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Include this container and set the <b>SellingSummary.Include</b> field to <code>true</code> to return the <b>SellingSummary</b> container in the response. The <b>SellingSummary</b> container consists of selling activity counts and values.
    /// 							
    /// </remarks>

	public ItemListCustomizationType SellingSummary { get; set; }
    /// <summary>
    /// GetMyeBaySellingNofalse
    /// </summary>
    /// <remarks>
    /// 
    /// 								If this field is included and set to <code>true</code>, the <b>Variations</b> node (and all variation data) is omitted for all multiple-variation listings in the response. If this field is omitted or set to <code>false</code>, the <b>Variations</b> node is returned for all multiple-variation listings in the response.
    /// 								<br>
    /// 							
    /// </remarks>

	public bool? HideVariations { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Returns summary and detail information about items the user is selling,
/// 				items scheduled to sell, currently listed, sold, and closed but not sold.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetMyeBaySellingResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// GetMyeBaySellingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container consists of seller activity counts and values. For this container to be returned, the user must include the <b>SellingSummary.Include</b> field in the request and set its value to <code>true</code>.
    /// 							
    /// </remarks>

	public SellingSummaryType SellingSummary { get; set; }
    /// <summary>
    /// GetMyeBaySellingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container consists of the items that are scheduled to become active at a future date/time. This container will be returned if the eBay user has one or more listings scheduled to become active at a future date/time.
    /// 								<br><br>
    /// 								This container will not be returned in the response (even if there are listings scheduled to become active) if the <b>DetailLevel</b> value is set to <code>ReturnSummary</code> and the <b>ScheduledList.Include</b> field is omitted or set to <code>false</code>.
    /// 							
    /// </remarks>

	public PaginatedItemArrayType ScheduledList { get; set; }
    /// <summary>
    /// GetMyeBaySellingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container consists of active listings. This container will be returned if the eBay user has one or more active listings on eBay.com.
    /// 								<br><br>
    /// 								This container will not be returned in the response (even if there are one or more active listings) if the <b>DetailLevel</b> value is set to <code>ReturnSummary</code> and the <b>ActiveList.Include</b> field is omitted or set to <code>false</code>.
    /// 							
    /// </remarks>

	public PaginatedItemArrayType ActiveList { get; set; }
    /// <summary>
    /// GetMyeBaySellingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container consists of order line items that have been sold. This container will be returned if the eBay user has one or more listings that have had recent sales.
    /// 								<br><br>
    /// 								This container will not be returned in the response (even if there are one or more sales) if the <b>DetailLevel</b> value is set to <code>ReturnSummary</code> and the <b>SoldList.Include</b> field is omitted or set to <code>false</code>.
    /// 							
    /// </remarks>

	public PaginatedOrderTransactionArrayType SoldList { get; set; }
    /// <summary>
    /// GetMyeBaySellingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container consists of listings that have ended without sales. This container will be returned if the eBay user has one or more listings that have ended without sales.
    /// 								<br><br>
    /// 								This container will not be returned in the response (even if there are one or more listings that ended without sales) if the <b>DetailLevel</b> value is set to <code>ReturnSummary</code> and the <b>UnsoldList.Include</b> field is omitted or set to <code>false</code>.
    /// 							
    /// </remarks>

	public PaginatedItemArrayType UnsoldList { get; set; }
    /// <summary>
    /// GetMyeBaySellingDetailLevel: none, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container consists of seller activity counts and values. This container is always returned if there has been recent sell activity.
    /// 							
    /// </remarks>

	public MyeBaySellingSummaryType Summary { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// Platform Notifications Guidehttps://developer.ebay.com/api-docs/static/platform-notifications-landing.html
/// </summary>
/// <remarks>
/// 
/// 				Retrieves the requesting application's notification preferences. Details are only returned for events for which a preference has been set. For example, if you enabled notification for the <b>EndOfAuction</b> event and later disabled it, the <b>GetNotificationPreferences</b> response would cite the <b>EndOfAuction</b> event preference as <b>Disabled</b>. Otherwise, no details would be returned regarding <b>EndOfAuction</b>.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetNotificationPreferencesRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// ApplicationGetNotificationPreferencesYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								Specifies the type of preferences to retrieve. For example, preferences can be associated with a user, with
    /// 								an application, or with events.
    /// 								<br>
    /// 							
    /// </remarks>

	public NotificationRoleCodeType? PreferenceLevel { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Contains the requesting application's notification preferences. <b>GetNotificationPreferences</b> retrieves preferences that you have deliberately set. For example, if you enable the <b>EndOfAuction</b> event and then later disable it, the response shows the <b>EndOfAuction</b> event preference as <b>Disabled</b>. But if you have never set a preference for the <b>EndOfAuction</b> event, no <b>EndOfAuction</b> preference is returned at all.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetNotificationPreferencesResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// GetNotificationPreferencesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Specifies application-based event preferences that have been enabled.
    /// 							
    /// </remarks>

	public ApplicationDeliveryPreferencesType ApplicationDeliveryPreferences { get; set; }
    /// <summary>
    /// GetNotificationPreferencesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Specifies application delivery URL Name associated with this user.
    /// 							
    /// </remarks>

	public string DeliveryURLName { get; set; }
    /// <summary>
    /// GetNotificationPreferencesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Specifies user-based event preferences that have been enabled or disabled.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("NotificationEnable", IsNullable = false)]

	public System.Collections.Generic.List<NotificationEnableType> UserDeliveryPreferenceArray { get; set; }
    /// <summary>
    /// GetNotificationPreferencesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Returns user data for notification settings, such as set mobile phone.
    /// 							
    /// </remarks>

	public NotificationUserDataType UserData { get; set; }
    /// <summary>
    /// GetNotificationPreferencesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Contains names and values assigned to a notification event.
    /// 								Currently can only be set for wireless applications.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("EventProperty")]

	public System.Collections.Generic.List<NotificationEventPropertyType> EventProperty { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// Platform Notifications Guidehttps://developer.ebay.com/api-docs/static/platform-notifications-landing.html
/// </summary>
/// <remarks>
/// 
/// 				Retrieves usage information about platform notifications for a given application.
/// 				You can use this notification information to troubleshoot issues with platform
/// 				notifications. You can call this up to 50 times per hour for a given application.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetNotificationsUsageRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// GetNotificationsUsageConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Specifies the start date and time for which notification information will be retrieved. <b>StartTime</b> is optional. If no <b>StartTime</b> is specified, the default value of 24 hours prior to the call time is used. If no <b>StartTime</b> is specified or if an invalid <b>StartTime</b> is specified, date range errors are returned in the response. For a <b>StartTime</b> to be valid, it must be no more than 72 hours before the time of the call, it cannot be more recent than the <b>EndTime</b>, and it cannot be later than the time of the call. If an invalid <b>StartTime</b> is specified, the default value is used.
    /// 							
    /// </remarks>

	public System.DateTime? StartTime { get; set; }
    /// <summary>
    /// GetNotificationsUsageConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Specifies the end date and time for which notification information will be retrieved. <b>EndTime</b> is optional. <br/><br/> If no <b>EndTime</b> is specified, the current time (the time the call is made) is used. If no <b>EndTime</b> is specified or if an invalid <b>EndTime</b> is specified, date range errors are returned in the response. For an <b>EndTime</b> to be valid, it must be no more than 72 hours before the time the of the call, it cannot be before the <b>StartTime</b>, and it cannot be later than the time of the call. If an invalid <b>EndTime</b> is specified, the current time is used.
    /// 							
    /// </remarks>

	public System.DateTime? EndTime { get; set; }
    /// <summary>
    /// GetNotificationsUsageYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								Specifies an item ID for which detailed notification information will be retrieved.
    /// 							
    /// </remarks>

	public string ItemID { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Returns an array of notifications sent to a given application identified by the appID (comes in the credentials). The result can be used by third-party developers troubleshoot issues with notifications. <br/><br/> Zero, one or many notifications can be returned in the array. The set of notifications returned is limited to those that were sent between the <b>StartTime</b> and <b>EndTime</b> specified in the request. <br/><br/> If <b>StartTime</b> or <b>EndTime</b> filters were not found in the request, then the response will contain the data for only one day (Now-1day). By default, maximum duration is limited to 3 days (Now-3days). These min (1day) and max(3days) applies to <b>Notifications</b>, <b>MarkDownMarkUpHistory</b> and <b>NotificationStatistics</b>. <br/><br/> Notifications are sent only if the <b>ItemID</b> is included in the request. If there is no <b>ItemID</b>, then only <b>Statistics</b> and <b>MarkDownMarkUpHistory</b> information is included.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetNotificationsUsageResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// GetNotificationsUsageAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Returns the start date and time for the notification information that is
    /// 								returned by this call.
    /// 							
    /// </remarks>

	public System.DateTime? StartTime { get; set; }
    /// <summary>
    /// GetNotificationsUsageAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Returns the end date and time for the notification information that is
    /// 								returned by this call.
    /// 							
    /// </remarks>

	public System.DateTime? EndTime { get; set; }
    /// <summary>
    /// GetNotificationsUsageAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								List of notification objects representing the notifications sent to an
    /// 								application for the given time period.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("NotificationDetails", IsNullable = false)]

	public System.Collections.Generic.List<NotificationDetailsType> NotificationDetailsArray { get; set; }
    /// <summary>
    /// GetNotificationsUsageAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								List of objects representing <b>MarkUp</b> or <b>MarkDown</b> history for a given appID
    /// 								and for given <b>StartTime</b> and <b>EndTime</b>. This node will always be returned.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("MarkUpMarkDownEvent", IsNullable = false)]

	public System.Collections.Generic.List<MarkUpMarkDownEventType> MarkUpMarkDownHistory { get; set; }
    /// <summary>
    /// GetNotificationsUsageAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Summary information about number of notifications that were successfully
    /// 								delivered, queued, failed, connection attempts made, connection timeouts,
    /// 								http errors for the given appID and given time period. By default, statistics
    /// 								for only one day (Now-1day) is included. Maximum time duration allowed is 3 days
    /// 								(Now-3days).
    /// 							
    /// </remarks>

	public NotificationStatisticsType NotificationStatistics { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// DetailLevel
/// </summary>
/// <remarks>
/// 
/// 				Retrieves the orders for which the authenticated user is a participant, either as the buyer or the seller. The call returns all the orders that meet the request criteria. Orders older than 90 days old will not be returned.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetOrdersRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// GetOrdersConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container is used if the user wants to retrieve one or more specific orders in which they are involved as either the seller or buyer. If one or more order IDs are specified in this container, any order role, order status, or date range filters are ignored if specified in the request.
    /// 								<br><br>
    /// 								<span class="tablenote"><b>Note: </b> The identifier for an order will change as it goes from unpaid to paid status, and both values are supported in <b>OrderID</b> fields. 
    /// 								</span>
    /// 								<br>
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("OrderID", IsNullable = false)]

	public System.Collections.Generic.List<string> OrderIDArray { get; set; }
    /// <summary>
    /// GetOrdersConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								The <b>CreateTimeFrom</b> and <b>CreateTimeTo</b> fields specify a date range for retrieving orders that were created during this time period. The <b>CreateTimeFrom</b> field is the starting date range. All eBay orders that were created within this date range are returned in the output. The maximum date range that may be specified with the <b>CreateTimeFrom</b> and <b>CreateTimeTo</b> fields is 90 days. <b>CreateTimeFrom</b>/<b>CreateTimeTo</b> date filters are ignored if the <b>NumberOfDays</b> date filter is used in the request, or if one or more order IDs are passed in the request. This value cannot be set back more than 90 days in the past, as this call cannot retrieve sales older than 90 days old.
    /// 								<br><br>
    /// 								<span class="tablenote"><strong>Note:</strong>
    /// 									Unless one or more <b>OrderID</b> values are used, one of the three available date range filters must be used.
    /// 								</span>
    /// 							
    /// </remarks>

	public System.DateTime? CreateTimeFrom { get; set; }
    /// <summary>
    /// GetOrdersConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								The <b>CreateTimeFrom</b> and <b>CreateTimeTo</b> fields specify a date range for retrieving orders that were created during this time period. The <b>CreateTimeTo</b> field is the ending date range. All eBay orders that were created within this date range are returned in the output. The maximum date range that may be specified with the <b>CreateTimeFrom</b> and <b>CreateTimeTo</b> fields is 90 days. If the <b>CreateTimeFrom</b> field is used and the <b>CreateTimeTo</b> field is omitted, the "TimeTo" value defaults to the present time or to 90 days past the <b>CreateTimeFrom</b> value (if <b>CreateTimeFrom</b> value is more than 90 days in the past). <b>CreateTimeFrom</b>/<b>CreateTimeTo</b> date filters are ignored if the <b>NumberOfDays</b> date filter is used in the request, or if one or more order IDs are passed in the request.
    /// 								<br><br>
    /// 								<span class="tablenote"><strong>Note:</strong> If a <b>GetOrders</b> call is made within a few seconds after the creation of a multiple line item order, the caller runs the risk of retrieving orders that are in an inconsistent state, since the order consolidation involved in a multiple line item order may not have been completed. For this reason, it is recommended that sellers include the <b>CreateTimeTo</b> field in the call, and set its value to: <i>Current Time</i> - 2 minutes.
    /// 								</span>
    /// 								<br>
    /// 								<span class="tablenote"><strong>Note:</strong>
    /// 									Unless one or more <b>OrderID</b> values are used, one of the three available date range filters must be used.
    /// 								</span>
    /// 							
    /// </remarks>

	public System.DateTime? CreateTimeTo { get; set; }
    /// <summary>
    /// SellerGetOrdersConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This filter is used to toggle between retrieving orders based on the role of the user (seller or buyer). The order role defaults to <code>Seller</code> if this field is not used. If this field is used with a date filter, returned orders must satisfy both the date range and the <b>OrderRole</b> value.
    /// 								<br>
    /// 							
    /// </remarks>

	public TradingRoleCodeType? OrderRole { get; set; }
    /// <summary>
    /// GetOrdersActive, All, Cancelled, Completed, InactiveNoAll
    /// </summary>
    /// <remarks>
    /// 
    /// 								The field is used to retrieve eBay orders that are in a specific state. If this field is used with a date filter, only orders that satisfy both the date range and the <b>OrderStatus</b> value are retrieved. <br><br> If one or more <b>OrderID</b> values are specified through the <b>OrderIDArray</b> container, the <b>OrderStatus</b> field should not be used, and it is ignored if it is used. If an <b>OrderStatus</b> value is not used and no <b>OrderID</b> values are specified, orders in all states are returned.
    /// 								<br>
    /// 							
    /// </remarks>

	public OrderStatusCodeType? OrderStatus { get; set; }
    /// <summary>
    /// GetOrdersConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Use this field if you wish to only retrieve orders spawned from a specific listing type such as auction or fixed price.<br><br>See <a href="https://developer.ebay.com/Devzone/XML/docs/Reference/eBay/types/ListingTypeCodeType.html" target="_blank">ListingTypeCodeType</a> for supported values.
    /// 							
    /// </remarks>

	public ListingTypeCodeType? ListingType { get; set; }
    /// <summary>
    /// GetOrdersNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								If many orders are	available to retrieve, you may need to call <b>GetOrders</b> multiple times to retrieve all the data. Each result set is returned as a page of orders. Use the <b>Pagination</b> filters to control the maximum number of orders to retrieve per page (i.e., per call), and the page number to retrieve.
    /// 							
    /// </remarks>

	public PaginationType Pagination { get; set; }
    /// <summary>
    /// GetOrdersConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								The <b>ModTimeFrom</b> and <b>ModTimeTo</b> fields specify a date range for retrieving existing orders that have been modified within this time period (for example, <code>Incomplete</code> status to <code>Pending</code> status or <code>Pending</code> status to <code>Complete</code> status). The <b>ModTimeFrom</b> field is the starting date range. All eBay orders that were last modified within this date range are returned in the output. Unlike the <b>CreateTimeFrom</b>/<b>CreateTimeTo</b> filters, which may cover a maximum period of 90 days, the maximum date range that may be specified with the <b>ModTimeFrom</b> and <b>ModTimeTo</b> fields is only 30 days. This value cannot be set back more than 90 days in the past, as this call cannot retrieve sales older than 90 days old. <b>ModTimeFrom</b>/<b>ModTimeTo</b> date filters are ignored if the <b>CreateTimeFrom</b>/<b>CreateTimeTo</b> or <b>NumberOfDays</b> date filters are used in the request, or if one or more order IDs are passed in the request.
    /// 								<br><br>
    /// 								<span class="tablenote"><strong>Note:</strong>
    /// 									Unless one or more <b>OrderID</b> values are used, one of the three available date range filters must be used.
    /// 								</span>
    /// 							
    /// </remarks>

	public System.DateTime? ModTimeFrom { get; set; }
    /// <summary>
    /// GetOrdersConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								The <b>ModTimeFrom</b> and <b>ModTimeTo</b> fields specify a date range for retrieving existing orders that have been modified within this time window (for example, <code>Incomplete</code> status to <code>Pending</code> status or <code>Pending</code> status to <code>Complete</code> status). The <b>ModTimeTo</b> field is the ending date range. All eBay orders that were last modified within this date range are returned in the output. Unlike the <b>CreateTimeFrom</b>/<b>CreateTimeTo</b> filters, which may cover a maximum period of 90 days, the maximum date range that may be specified with the <b>ModTimeFrom</b> and <b>ModTimeTo</b> fields is 30 days. If the <b>ModTimeFrom</b> field is used and the <b>ModTimeTo</b> field is omitted, the 'TimeTo' value defaults to the present time (if <b>ModTimeFrom</b> value is less than 30 days in the past) or to 30 days past the <b>ModTimeFrom</b> value. <b>ModTimeFrom</b>/<b>ModTimeTo</b> date filters are ignored if the <b>CreateTimeFrom</b>/<b>CreateTimeTo</b> or <b>NumberOfDays</b> date filters are used in the request, or if one or more order IDs are passed in the request.
    /// 								<br><br>
    /// 								<span class="tablenote"><strong>Note:</strong>
    /// 									Unless one or more <b>OrderID</b> values are used, one of the three available date range filters must be used.
    /// 								</span>
    /// 							
    /// </remarks>

	public System.DateTime? ModTimeTo { get; set; }
    /// <summary>
    /// 1
    /// 30
    /// GetOrdersConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This filter specifies the number of days (24-hour periods) in the past to search for orders. All eBay orders that were created within this period are returned in the output. This field cannot be used in conjunction with the <b>CreateTimeFrom</b>/<b>CreateTimeTo</b> or <b>ModTimeFrom</b>/<b>ModTimeTo</b> date filters.
    /// 								<br><br>
    /// 								<span class="tablenote"><strong>Note:</strong>
    /// 									This date filter only allows you to retrieve orders created within the last 30 days. So, if you wish to retrieve orders created and/or modified more than 30 days in the past, the <b>CreateTimeFrom</b>/<b>CreateTimeTo</b> or <b>ModTimeFrom</b>/<b>ModTimeTo</b> date filters should be used instead.
    /// 								</span>
    /// 								<br>
    /// 								<span class="tablenote"><strong>Note:</strong>
    /// 									Unless one or more <b>OrderID</b> values are used, one of the three available date range filters must be used.
    /// 								</span>
    /// 							
    /// </remarks>

	public int? NumberOfDays { get; set; }
    /// <summary>
    /// falseGetOrdersConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field is included and set to <code>true</code> if the user wants to view the Final Value Fee (FVF) for all order line items in the response. The Final Value Fee is returned in the <b>Transaction.FinalValueFee</b> field. The Final Value Fee is assessed right after the creation of an order line item.
    /// 								<br>
    /// 								<br>
    /// 									See the <a href="https://www.ebay.com/help/selling/fees-credits-invoices/selling-fees?id=4822" target="_blank">Selling fees</a> help page for more information about how Final Value Fees are calculated.
    /// 							
    /// </remarks>

	public bool? IncludeFinalValueFee { get; set; }
    /// <summary>
    /// AscendingGetOrdersNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This filter controls whether orders are retrieved in ascending order (oldest to newest according to modification date) or descending order (newest to oldest according to modification date). The default is <code>Ascending</code>, so the user will need to include this field and set it to <code>Descending</code> if the user wishes to view the most recent orders first in the retrieved output.
    /// 								<br>
    /// 							
    /// </remarks>

	public SortOrderCodeType? SortingOrder { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Returns the set of orders that match the order IDs or filter criteria specified.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetOrdersResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Contains information regarding the pagination of data, including the total number of pages and the total number of orders.
    /// 							
    /// </remarks>

	public PaginationResultType PaginationResult { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								A true value indicates that there are more orders to be retrieved. Additional <b>GetOrders</b> calls with higher page numbers or more entries per page must be made to retrieve these orders. If false, no more orders are available or no orders match the request (based on the input filters).
    /// 							
    /// </remarks>

	public bool? HasMoreOrders { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								The set of orders that match the order IDs or filter criteria specified.
    /// 								<span class="tablenote"><strong>Note:</strong>
    /// 									The <b>GetOrders</b> call does not support <a href ="https://www.ebay.com/sellercenter/ebay-for-business/multi-user-account-access" target="_blank" >Multi-user account access</a>. Transactions are only returned for the user that makes the call. You cannot use <b>GetOrders</b> to return transactions for another user. The call succeeds but returns an empty <code>&lt;OrderArray/&gt;</code>.
    /// 								</span>
    /// 							
    /// </remarks>

	public OrderArrayType OrderArray { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Indicates the number of orders that can be returned per page of data (i.e., per call). This is the same value specified in the <b>Pagination.EntriesPerPage</b> input (or the default value, if <b>EntriesPerPage</b> was not specified). This is not necessarily the actual number of orders returned per page (see <b>ReturnedOrderCountActual</b>).
    /// 							
    /// </remarks>

	public int? OrdersPerPage { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Indicates the page number of data returned in the response. This is the same value specified in the <b>Pagination.PageNumber</b> input. If orders are returned, the first page is 1.
    /// 							
    /// </remarks>

	public int? PageNumber { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Indicates the total number of orders returned.
    /// 							
    /// </remarks>

	public int? ReturnedOrderCountActual { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// DetailLevel
/// Track listing changeshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/track-listing-changes.html
/// </summary>
/// <remarks>
/// 
/// 				This call is used by a seller to retrieve changes to their own listings that have occurred within the last 48 hours, including price changes, available quantity, and other revisions to listing.
/// 				<br/><br/>
/// 				One of the available date range filters must be used with this call.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetSellerEventsRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// KB article: Best Practices for GetSellerEvents and GetSellerTransactionshttps://developer.ebay.com/support/kb-article?KBid=222
    /// GetSellerEventsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Describes the earliest (oldest) time to use in a time range filter based
    /// 								on item start time. Must be specified if <b>StartTimeTo</b> is specified.
    /// 								<br/><br/>
    /// 								Either
    /// 								the <b>StartTimeFrom</b>, <b>EndTimeFrom</b>, or <b>ModTimeFrom</b> filter must be specified.
    /// 								<br/><br/>
    /// 								If you do not specify the corresponding <b>To</b> filter,
    /// 								it is set to the time you make the call.
    /// 								<br/><br/>
    /// 								For better results, the time period you use should be less than 48 hours.
    /// 								If 3000 or more items are found, use a smaller time range.<br>
    /// 								<br>
    /// 								Include a 2-minute, overlapping buffer between requests.
    /// 								For example, if <b>StartTimeTo</b> was 6:58 in a prior request,
    /// 								the current request should use 6:56 in <b>StartTimeFrom</b>
    /// 								(e.g., use ranges like 5:56-6:58, 6:56-7:58, 7:56-8:58).
    /// 							
    /// </remarks>

	public System.DateTime? StartTimeFrom { get; set; }
    /// <summary>
    /// GetSellerEventsNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Describes the latest (most recent) date to use in a time range filter
    /// 								based on item start time. If you specify the corresponding <b>From</b> filter,
    /// 								but you do not include <b>StartTimeTo</b>, the <b>StartTimeTo</b> is set to
    /// 								the time you make the call.
    /// 							
    /// </remarks>

	public System.DateTime? StartTimeTo { get; set; }
    /// <summary>
    /// KB article: Best Practices for GetSellerEvents and GetSellerTransactionshttps://developer.ebay.com/support/kb-article?KBid=222
    /// GetSellerEventsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Describes the earliest (oldest) date to use in a time range filter based
    /// 								on item end time. Must be specified if <b>EndTimeTo</b> is specified.
    /// 								<br/><br/>
    /// 								Either
    /// 								the <b>StartTimeFrom</b>, <b>EndTimeFrom</b>, or <b>ModTimeFrom</b> filter must be specified.
    /// 								If you do not specify the corresponding To filter,
    /// 								it is set to the time you make the call.<br>
    /// 								<br>
    /// 								For better results, the time range you use should be less than 48 hours.
    /// 								If 3000 or more items are found, use a smaller time range.<br>
    /// 								<br>
    /// 								Include a 2-minute, overlapping buffer between requests.
    /// 								For example, if <b>EndTimeTo</b> was 6:58 in a prior request,
    /// 								the current request should use 6:56 in <b>EndTimeFrom</b>
    /// 								(e.g., use ranges like 5:56-6:58, 6:56-7:58, 7:56-8:58).
    /// 							
    /// </remarks>

	public System.DateTime? EndTimeFrom { get; set; }
    /// <summary>
    /// GetSellerEventsNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Describes the latest (most recent) date to use in a time range filter
    /// 								based on item end time.
    /// 								<br/><br/>
    /// 								If you specify the corresponding <b>From</b> filter,
    /// 								but you do not include <b>EndTimeTo</b>, then <b>EndTimeTo</b> is set
    /// 								to the time you make the call.
    /// 							
    /// </remarks>

	public System.DateTime? EndTimeTo { get; set; }
    /// <summary>
    /// KB article: Best Practices for GetSellerEvents and GetSellerTransactionshttps://developer.ebay.com/support/kb-article?KBid=222
    /// GetSellerEventsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Describes the earliest (oldest) date to use in a time range filter based
    /// 								on item modification time. Must be specified if <b>ModTimeTo</b> is specified. Either
    /// 								the <b>StartTimeFrom</b>, <b>EndTimeFrom</b>, or <b>ModTimeFrom</b> filter must be specified.
    /// 								If you do not specify the corresponding To filter,
    /// 								it is set to the time you make the call.<br>
    /// 								<br>
    /// 								Include a 2-minute, overlapping buffer between requests.
    /// 								For example, if <b>ModTimeTo</b> was 6:58 in a prior request,
    /// 								the current request should use 6:56 in <b>ModTimeFrom</b>
    /// 								(e.g., use ranges like 5:56-6:58, 6:56-7:58, 7:56-8:58).
    /// 								<br><br>
    /// 								For better results, the time range you use should be less than 48 hours.
    /// 								If 3000 or more items are found, use a smaller time range.
    /// 								<br><br>
    /// 								If an unexpected item is returned (including an old item
    /// 								or an unchanged active item), please ignore the item.
    /// 								Although a maintenance process may have triggered a change in the modification time, item characteristics are unchanged.
    /// 							
    /// </remarks>

	public System.DateTime? ModTimeFrom { get; set; }
    /// <summary>
    /// GetSellerEventsNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Describes the latest (most recent) date and time to use in a time range filter based on the time an item's record was modified. If you specify the corresponding <b>From</b> filter, but you do not include <b>ModTimeTo</b> , then <b>ModTimeTo</b> is set to the time you make the call. Include a 2-minute buffer between the current time and the <b>ModTimeTo</b> filter.
    /// 							
    /// </remarks>

	public System.DateTime? ModTimeTo { get; set; }
    /// <summary>
    /// GetSellerEventsNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								If true, response includes only items that have been modified
    /// 								within the <b>ModTime</b> range. If false, response includes all items.
    /// 							
    /// </remarks>

	public bool? NewItemFilter { get; set; }
    /// <summary>
    /// GetSellerEventsNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								The seller can include this field and set its value to <code>true</code> if that seller wants to see how many prospective bidders/buyers currently have an item added to their Watch Lists. The Watch count is returned in the <b>WatchCount</b> field for each item in the response.
    /// 							
    /// </remarks>

	public bool? IncludeWatchCount { get; set; }
    /// <summary>
    /// false
    /// GetSellerEventsNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Specifies whether to force the response to include
    /// 								variation specifics for multiple-variation listings. <br>
    /// 								<br>
    /// 								If false (or not specified), eBay keeps the response as small as
    /// 								possible by not returning <b>Variation.VariationSpecifics</b>.
    /// 								It only returns <b>Variation.SKU</b> as an identifier
    /// 								(along with the variation price and other selling details).
    /// 								If the variation has no SKU, then <b>Variation.VariationSpecifics</b>
    /// 								is returned as the variation's unique identifier.<br>
    /// 								<br>
    /// 								If true, <b>Variation.VariationSpecifics</b> is returned.
    /// 								(<b>Variation.SKU</b> is also returned, if the variation has a SKU.)
    /// 								This may be useful for applications that don't track variations
    /// 								by SKU.<br>
    /// 								<br>
    /// 								Ignored when <b>HideVariations</b> is set to <b>true</b>.
    /// 								<br>
    /// 								<br>
    /// 								<b>Note:</b>  If the seller includes a large number of
    /// 								variations in many listings, using this flag may degrade the
    /// 								call's performance. Therefore, when you use this flag, you may
    /// 								need to reduce the total number of items you're requesting at
    /// 								once. For example, you may need to use shorter time ranges in
    /// 								the <b>StartTimeFrom</b>, <b>EndTimeFrom</b>, or <b>ModTimeFrom</b> filters.
    /// 							
    /// </remarks>

	public bool? IncludeVariationSpecifics { get; set; }
    /// <summary>
    /// false
    /// GetSellerEventsNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Specifies whether to force the response to hide
    /// 								variation details for multiple-variation listings.<br>
    /// 								<br>
    /// 								If false (or not specified), eBay returns variation details (if
    /// 								any). In this case, the amount of detail can be controlled by
    /// 								using <b>IncludeVariationSpecifics</b>.<br>
    /// 								<br>
    /// 								If true, variation details are not returned (and
    /// 								<b>IncludeVariationSpecifics</b> has no effect). This may be useful for applications that use other calls, notifications, alerts, or reports to track price and quantity details.
    /// 							
    /// </remarks>

	public bool? HideVariations { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 					Returns the items in an <b>ItemArrayType</b> object for the a seller events that have occurred and that meet any filters specified. There can be zero, one, or multiple <b>ItemType</b> objects. Each <b>ItemType</b> object contains the detail data for one item listing.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetSellerEventsResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// GetSellerEventsDetailLevel: none, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Indicates the latest (most recent) date for any date-based filtering specified as
    /// 								input. Specifically, this field contains the value you specified in the <b>StartTimeFrom</b>, <b>EndTimeFrom</b>, or <b>ModTimeFrom</b> filter, if you used a time filter in the request. If no time filter was specified, <b>TimeTo</b> returns the current time.
    /// 							
    /// </remarks>

	public System.DateTime? TimeTo { get; set; }
    /// <summary>
    /// KB article: Best Practices for GetSellerEvents and GetSellerTransactionshttps://developer.ebay.com/support/kb-article?KBid=222
    /// GetSellerEventsDetailLevel: none, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Collection of items whose last modified time matches
    /// 								the filters specified in the request.
    /// 								Returns empty if no items were modified within the
    /// 								time range of the request.<br/><br/>
    /// 								If 1 to 2999 items are returned, then the results are
    /// 								complete. If 3000 or more items are returned, it usually means
    /// 								additional items exist within the time range you requested,
    /// 								but they were not all returned.
    /// 								<br/><br/>
    /// 								To retrieve complete results,
    /// 								use a smaller time range in the request so that fewer than
    /// 								3000 are returned per response.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("Item", IsNullable = false)]

	public System.Collections.Generic.List<ItemType> ItemArray { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// DetailLevel, GranularityLevel
/// GetItem
/// Browse a seller's itemshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/browse-seller.html
/// </summary>
/// <remarks>
/// 
/// 				This call is used to retrieve an array of listings for the seller. The seller must be associated with the user/application token being used to make the call.
/// 				<br/><br/>
/// 				This call requires that either the 'Start Time' or 'End Time' date range filters be used. The date range specified by either of these filters can not exceed 120 days or an error will occur.
/// 				<br/><br/>
/// 				This call also requires that pagination be used.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetSellerListRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// GetSellerListNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Specifies the list of Motors Dealer sellers for which a special set of
    /// 								metrics can be requested. Applies to eBay Motors Pro applications only.
    /// 							
    /// </remarks>

	public UserIDArrayType MotorsDealerUsers { get; set; }
    /// <summary>
    /// GetSellerListConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Specifies the earliest (oldest) date to use in a date range filter based on
    /// 								item end time. Specify either an end-time range or a start-time range
    /// 								filter in every call request. Each of the time ranges must be a value less than
    /// 								120 days.
    /// 							
    /// </remarks>

	public System.DateTime? EndTimeFrom { get; set; }
    /// <summary>
    /// GetSellerListConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Specifies the latest (most recent) date to use in a date range filter based on item end time. Must be specified if <b>EndTimeFrom</b> is specified.
    /// 							
    /// </remarks>

	public System.DateTime? EndTimeTo { get; set; }
    /// <summary>
    /// 2 (Ascending)GetSellerListNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field can be used to control the order in which returned listings are sorted (based on the listings' actual/scheduled end dates). Valid values are as follows:
    /// 								<ul>
    /// 									<li><code>1</code> (descending order)</li>
    /// 									<li><code>2</code> (ascending order)</li>
    /// 								</ul>
    /// 							
    /// </remarks>

	public int? Sort { get; set; }
    /// <summary>
    /// GetSellerListConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Specifies the earliest (oldest) date to use in a date range filter based on
    /// 								item start time. Each of the time ranges must be a value less than
    /// 								120 days. In all calls, at least one date-range filter must be specified
    /// 								(i.e., you must specify either the end time range or start time range
    /// 								in every request).
    /// 							
    /// </remarks>

	public System.DateTime? StartTimeFrom { get; set; }
    /// <summary>
    /// GetSellerListConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Specifies the latest (most recent) date to use in a date range filter based on item start time. Must be specified if <b>StartTimeFrom</b> is specified.
    /// 							
    /// </remarks>

	public System.DateTime? StartTimeTo { get; set; }
    /// <summary>
    /// GetSellerListYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container controls the maximum number of listings that can appear on one page of the result set, as well as the page number of the result to return.
    /// 								<br><br>
    /// 								The <b>GetSellerList</b> call requires that the <b>EntriesPerPage</b> value be set. The <b>PageNumber</b> field is not required but will default to <code>1</code> if not included.
    /// 							
    /// </remarks>

	public PaginationType Pagination { get; set; }
    /// <summary>
    /// Yes
    /// CoarseGetSellerListNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field allows the user to control the amount of data that is returned in the response. See the <a href="#GranularityLevel">Granularity Level</a> table on this page for a list of the fields that are returned for each granularity level. Either <b>GranularityLevel</b> or  <b>DetailLevel</b> can be used in a <b>GetSellerList</b> call, but not both. If both are specified, <b>DetailLevel</b> is ignored. If neither are used, the response fields will be the ones shown for 'Coarse' granularity.
    /// 							
    /// </remarks>

	public GranularityLevelCodeType? GranularityLevel { get; set; }
    /// <summary>
    /// GetSellerListNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container can be used to specify one or multiple SKUs, and only listings associated with these SKUs are retrieved. Note that all other request criteria are also considered when one or more SKU values are specified.
    /// 								<br>
    /// 								<br>
    /// 								<span class="tablenote"><b>Note:</b>
    /// 								Listings with matching SKUs are returned regardless of their
    /// 								<b>Item.InventoryTrackingMethod</b> setting.
    /// 								</span>
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("SKU", IsNullable = false)]

	public System.Collections.Generic.List<string> SKUArray { get; set; }
    /// <summary>
    /// falseGetSellerListNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field may be included and set to <code>true</code> if the seller wishes to see the number of eBay users that are watching each listing.
    /// 							
    /// </remarks>

	public bool? IncludeWatchCount { get; set; }
    /// <summary>
    /// falseGetSellerListNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This boolean field can be included and set to <code>true</code> if the seller would like to retrieve any listings that were administratively ended by eBay due to a listing policy violation.
    /// 							
    /// </remarks>

	public bool? AdminEndedItemsOnly { get; set; }
    /// <summary>
    /// GetSellerListNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								If you specify a <b>CategoryID</b> value, the response will only contain listings in the category you specify.
    /// 							
    /// </remarks>

	public int? CategoryID { get; set; }
    /// <summary>
    /// GetSellerListNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								If this field is included and set to <code>true</code>, the <b>Variations</b> node is returned for all multi-variation listings in the response.
    /// 								<br>
    /// 								<br>
    /// 								<span class="tablenote"><b>Note: </b> If the seller has many multiple-variation listings, that seller may not want to include variations in the <b>GetSellerList</b> response.  Or, a seller can include variations data, but possibly limit the response by specifying shorter date ranges with the date range filters, or by reducing the number of listings returned per results (decreasing the <b>Pagination.EntriesPerPage</b> value).
    /// 								</span>
    /// 							
    /// </remarks>

	public bool? IncludeVariations { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This is the base response type of the <b>GetSellerList</b> call. The <b>GetSellerList</b> response includes an array of one or more listings that matched the input criteria, as well as pagination data.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetSellerListResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// GetSellerListDetailLevel: none, ItemReturnDescription, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container shows the total number or pages in the result set, as well as the total number of listings that match the current input criteria.
    /// 							
    /// </remarks>

	public PaginationResultType PaginationResult { get; set; }
    /// <summary>
    /// GetSellerListDetailLevel: none, ItemReturnDescription, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field's value is returned as <code>true</code> if there are more pages in the current result set to view, or <code>false</code> if the current page being viewed is the last (or only) page of the result set.
    /// 								<br/><br/>
    /// 								If there are more listings to view in the result set, additional <b>GetSellerList</b> calls can be made but with changes to the <b>Pagination</b> values in the request. For example, if the <b>Pagination.PageNumber</b> value in the request for the last call was <code>1</code>, you can make another <b>GetSellerList</b> call, keeping everything the same except changing the value of the <b>Pagination.PageNumber</b> field from <code>1</code> to <code>2</code>.
    /// 							
    /// </remarks>

	public bool? HasMoreItems { get; set; }
    /// <summary>
    /// GetSellerListDetailLevel: none, ItemReturnDescription, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container is an array of one or more listings that match the input criteria. If none of the seller's listings match the input criteria, this container is returned as an empty tag.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("Item", IsNullable = false)]

	public System.Collections.Generic.List<ItemType> ItemArray { get; set; }
    /// <summary>
    /// GetSellerListDetailLevel: none, ItemReturnDescription, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								This value reflects the value that was set in the <b>Pagination.EntriesPerPage</b> field in the request. This is the maximum number of listings that may be returned per page of the result set. Note that this value is only the maximum threshold and does not necessarily reflect the number of listings appearing on the current page of data.
    /// 							
    /// </remarks>

	public int? ItemsPerPage { get; set; }
    /// <summary>
    /// GetSellerListDetailLevel: none, ItemReturnDescription, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								This value indicates the current page of data in the result set that is being displayed. This value reflects the value specified in the <b>Pagination.PageNumber</b> field in the request. Note that page number defaults to <code>1</code> if the <b>Pagination.PageNumber</b> field was not included in the request.
    /// 							
    /// </remarks>

	public int? PageNumber { get; set; }
    /// <summary>
    /// GetSellerListDetailLevel: none, ItemReturnDescription, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								This value indicates the total number of listings being shown on the current page of the results set.
    /// 							
    /// </remarks>

	public int? ReturnedItemCountActual { get; set; }
    /// <summary>
    /// GetSellerListGranularityLevel: FineConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container consists of detailed information about the seller and the seller's account. This container is only returned if the <b>GranularityLevel</b> field is included in the request and set to <code>Fine</code>.
    /// 							
    /// </remarks>

	public UserType Seller { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// 
/// 					Retrieves order line item information for the seller for which the call is made, and not for any other user. To retrieve order line items for another seller's listings, use <b>GetItemTransactions</b>.
/// 				
/// DetailLevel
/// GetOrders
/// Manage and fulfill ordershttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/manage-fulfill-orders.html
/// </summary>
/// <remarks>
/// 
/// 				Retrieves a seller's order line item information. To retrieve order line items for another seller, the <b>GetItemTransactions</b>) call should be used. This call cannot retrieve sales older than 90 days old.
/// 				<br><br>
/// 				If one or more <b>SKU</b> values or the date range filters (<b>ModTimeFrom</b>/<b>ModTimeTo</b> or <b>NumberOfDays</b>) are not used, the <b>GetItemTransactions</b>) call will retrieve order line items created (or modified) within the last 30 days.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetSellerTransactionsRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// GetSellerTransactionsNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								The <b>ModTimeFrom</b> and <b>ModTimeTo</b> fields are used to retrieve order line items that were created or modified within a specified date range. The <b>ModTimeFrom</b> field is the starting date range. All of the seller's order line items that were created or modified within this date range are returned in the output. The maximum date range that may be specified is 30 days. This value cannot be set back more than 90 days in the past, as this call cannot retrieve sales older than 90 days. This field is not applicable if the <b>NumberOfDays</b> date filter is used.
    /// 								<br><br>
    /// 								If you don't specify a <b>ModTimeFrom</b>/<b>ModTimeTo</b> filter, the <b>NumberOfDays</b> time filter is used and it defaults to 30 (days).
    /// 								<br>
    /// 									<span class="tablenote"><b>Note: </b> Please note that for a multiple line item order, all line items of that order that meet the filter criteria may be returned in the responses, even the line item(s) that were not actually modified. In other words, if any part of the order was modified, all line items of that order may be returned.
    /// 								</span>
    /// 							
    /// </remarks>

	public System.DateTime? ModTimeFrom { get; set; }
    /// <summary>
    /// GetSellerTransactionsNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								The <b>ModTimeFrom</b> and <b>ModTimeTo</b> fields are used to retrieve order line items that were created or modified within a specified date range. The <b>ModTimeTo</b> field is the ending date range. All of the seller's order line items that were created or modified within this date range are returned in the output. The maximum date range that may be specified is 30 days.
    /// 								<br/><br/>
    /// 								If the <b>ModTimeFrom</b> field is
    /// 								used and the <b>ModTimeTo</b> field is omitted, the <b>ModTimeTo</b> value defaults to
    /// 								the present time or to 30 days past the <b>ModTimeFrom</b> value (if
    /// 								<b>ModTimeFrom</b> value is more than 30 days in the past). This field is not
    /// 								applicable if the <b>NumberOfDays</b> date filter is used.
    /// 								<br><br>
    /// 								If you don't specify a <b>ModTimeFrom</b>/<b>ModTimeTo</b> filter, the <b>NumberOfDays</b> time filter is used and it defaults to 30 (days).
    /// 								<br>
    /// 									<span class="tablenote"><b>Note: </b> Please note that for a multiple line item order, all line items of that order that meet the filter criteria may be returned in the responses, even the line item(s) that were not actually modified. In other words, if any part of the order was modified, all line items of that order may be returned.
    /// 								</span>
    /// 							
    /// </remarks>

	public System.DateTime? ModTimeTo { get; set; }
    /// <summary>
    /// GetSellerTransactionsNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								If many order line items are	available to retrieve, you may need to call <b>GetSellerTransactions</b> multiple times to retrieve all the data. Each result set is returned as a page of order line items. Use the <b>Pagination</b> filters to control the maximum number of order line items to retrieve per page (i.e., per call), and the page number to retrieve.
    /// 							
    /// </remarks>

	public PaginationType Pagination { get; set; }
    /// <summary>
    /// falseGetSellerTransactionsNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field is included and set to <code>true</code> if the user wants to view the Final Value Fee (FVF) for all order line items in the response. The Final Value Fee is returned in the <b>Transaction.FinalValueFee</b> field. The Final Value Fee is assessed right after the creation of an order line item.
    /// 								<br>
    /// 								<br>
    /// 									See the <a href="https://www.ebay.com/help/selling/fees-credits-invoices/selling-fees?id=4822" target="_blank">Selling fees</a> help page for more information about how Final Value Fees are calculated.
    /// 							
    /// </remarks>

	public bool? IncludeFinalValueFee { get; set; }
    /// <summary>
    /// falseGetSellerTransactionsNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field is included and set to <code>true</code> if the user wants to view order-level details, including the unique identifier of the order and the status of the order. The order-level details will be shown in the <b>ContainingOrder</b> container in the response.
    /// 								<br/>
    /// 							
    /// </remarks>

	public bool? IncludeContainingOrder { get; set; }
    /// <summary>
    /// GetSellerTransactionsNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container is used to search for order line items generated from one or more product SKU values. The response will only include order line items for the seller's product(s) that are represented by the specified SKU value(s).
    /// 								<br> <br>
    /// 								If a user wants to retrieve order line items based on SKUs, the
    /// 								<b>InventoryTrackingMethod</b> must be set to <code>SKU</code>. The <b>InventoryTrackingMethod</b> value can be set when the seller lists the item through an <b>AddFixedPriceItem</b> call, or it can be set by including the <b>InventoryTrackingMethod</b> field in a <b>GetSellerTransactions</b> call and setting its value to <code>SKU</code>.
    /// 								<br>
    /// 								<span class="tablenote"><b>Note: </b> SKU values must be defined for products in listings for this container to be applicable.
    /// 								</span>
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("SKU", IsNullable = false)]

	public System.Collections.Generic.List<string> SKUArray { get; set; }
    /// <summary>
    /// 
    /// 1027
    /// NoOp
    /// 1033
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// 								<span class="tablenote"><b>Note: </b> This field should no longer be used since its sole purpose was to allow the seller to filter between eBay orders and Half.com orders, and the Half.com site no longer exists.
    /// 								</span>
    /// 							
    /// </remarks>

	public TransactionPlatformCodeType? Platform { get; set; }
    /// <summary>
    /// 1
    /// 30
    /// 30
    /// GetSellerTransactionsNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field is used to specify how many days (24-hour periods) back in the past you wish to retrieve order line items. All order line items created (or last modified) within this period are retrieved. This value can be set between 1 (day) and 30 (days), and defaults to 30 (days) if omitted from the call.
    /// 								<br/><br/>
    /// 								If the <b>NumberOfDays</b> filter is used, <b>ModTimeFrom</b> and <b>ModTimeTo</b> date range filters are ignored (if included in the same request).
    /// 								<br/>
    /// 							
    /// </remarks>

	public int? NumberOfDays { get; set; }
    /// <summary>
    /// GetSellerTransactionsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 							This filter is used if the seller wishes to set/change the inventory tracking method. When creating a listing with the <b>AddFixedPriceItem</b> call (or relisting with <b>RelistFixedPriceItem</b> call), sellers can decide whether to track their inventory by Item ID (generated by eBay at listing time) or by seller-defined SKU value.
    /// 							<br><br>
    /// 							This field is needed (and its value must be set to <code>SKU</code>) if the seller wishes to retrieve order line items based on specified SKU values (specified through <b>SKUArray</b> container) and the current inventory tracking method is set to Item ID.
    /// 							<br><br>
    /// 							A seller can use a <b>GetItem</b> call for a listing (and look for the <b>Item.InventoryTrackingMethod</b> in the response) to see which inventory tracking method is used for the listing/product.
    /// 						
    /// </remarks>

	public InventoryTrackingMethodCodeType? InventoryTrackingMethod { get; set; }
    /// <summary>
    /// false
    /// GetSellerTransactionsNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								If this field is included in the call request and set to <code>true</code>, taxpayer identification information for the buyer is returned under the <b>BuyerTaxIdentifier</b> container.
    /// 								<br><br>
    /// 								Codice Fiscale is only applicable to buyers on the Italy and Spain sites. It is required that buyers on the Italy site provide their Codice Fiscale ID before buying an item, and sellers on the Spain site have the option of requiring buyers on the Spain site to provide their taxpayer ID.
    /// 							
    /// </remarks>

	public bool? IncludeCodiceFiscale { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Returns an array of order line item (transaction) data for the seller specified in the request. The results can be used to create a report of data that is commonly necessary for order processing. <br/><br/> Zero, one, or many <b>Transaction</b> objects can be returned in the <b>TransactionArray</b>. The set of order line items returned is limited to those that were modified between the times specified in the request's <b>ModTimeFrom</b> and <b>ModTimeTo</b> filters. The order line items returned are sorted by <b>Transaction.Status.LastTimeModified</b>, ascending order (that is, order line items that more recently were modified are returned last). This call also returns information about the seller whose order line items were requested. <br/><br/> If pagination filters were specified in the request, returns meta-data describing the effects of those filters on the current response and the estimated effects if the same filters are used in subsequent calls.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetSellerTransactionsResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// GetSellerTransactionsDetailLevel: none, ReturnAll, ItemReturnDescriptionAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Container consisting of the total number of order line items that match the input criteria and the total number of pages that must be scrolled through to view all order line items. To scroll through each page of order line item data, make subsequent <b>GetSellerTransactions</b> calls, incrementing the <b>Pagination.PageNumber</b> field by a value of '1' each time.
    /// 							
    /// </remarks>

	public PaginationResultType PaginationResult { get; set; }
    /// <summary>
    /// GetSellerTransactionsDetailLevel: none, ReturnAll, ItemReturnDescriptionAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								This flag indicates whether there are additional pages of order line items to view. This field will be returned as <code>true</code> if there are additional pages or order line items to <code>view</code>, or <code>false</code> if the current page of order line item data is the last page of data.
    /// 							
    /// </remarks>

	public bool? HasMoreTransactions { get; set; }
    /// <summary>
    /// GetSellerTransactionsDetailLevel: none, ReturnAll, ItemReturnDescriptionAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								This value indicates the number of order line items returned per page (per call) and is controlled by the <b>Pagination.EntriesPerPage</b> value passed in the call request. Unless it is the last (or possibly only) page of data (<b>HasMoreTransactions=false</b>), the <b>TransactionsPerPage</b> value should equal the <b>Pagination.EntriesPerPage</b> value passed in the call request. <br> <br> <span class="tablenote"><b>Note:</b> Due to the fact that item data on the eBay platform has a shorter retention period than order data, it is possible that some retrieved pages will contain no data. For pages that contain no data, the <b>ReturnedTransactionCountActual</b> value will be '0'. It is also possible that pages 2, 3, and 4 have no data, but pages 1 and 5 do have data. Therefore, we recommend that you scroll through each page of data (making subsequent <b>GetSellerTransactions</b> calls and incrementing the <b>Pagination.PageNumber</b> value by '1' each time) until you reach the last page, indicated by <b>HasMoreTransactions=false</b>. </span>
    /// 							
    /// </remarks>

	public int? TransactionsPerPage { get; set; }
    /// <summary>
    /// GetSellerTransactionsDetailLevel: none, ReturnAll, ItemReturnDescriptionAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								This value indicates the page number of retrieved order line items that match the input criteria. This value is controlled by the <b>Pagination.PageNumber</b> value passed in the call request. To scroll through all pages of order line items that match the input criteria, you increment the <b>Pagination.PageNumber</b> value by <code>1</code> with each subsequent <b>GetSellerTransactions</b> call.
    /// 							
    /// </remarks>

	public int? PageNumber { get; set; }
    /// <summary>
    /// GetSellerTransactionsDetailLevel: none, ReturnAll, ItemReturnDescriptionAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								This value indicates the total number of (non-empty) order line items retrieved in the current page of results. The <b>ReturnedTransactionCountActual</b> value will be lower than the <b>TransactionsPerPage</b> value if one or more empty order line items are retrieved on the page. <br> <br> <span class="tablenote"><b>Note:</b> Due to the fact that item data on the eBay platform has a shorter retention period than order data, it is possible that some retrieved pages will contain no data. For pages that contain no order line item data, the <b>ReturnedTransactionCountActual</b> value will be '0'. It is also possible that pages 2, 3, and 4 have no data, but pages 1 and 5 do have data. Therefore, we recommend that you scroll through each page of data (making subsequent <b>GetSellerTransactions</b> calls and incrementing the <b>Pagination.PageNumber</b> value by '1' each time) until you reach the last page, indicated by <b>HasMoreTransactions=false</b>. </span>
    /// 							
    /// </remarks>

	public int? ReturnedTransactionCountActual { get; set; }
    /// <summary>
    /// GetSellerTransactionsDetailLevel: none, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Contains information about the seller whose order line items are being returned.
    /// 								See the reference guide for information about the <b>Seller</b> object fields
    /// 								that are returned.
    /// 							
    /// </remarks>

	public UserType Seller { get; set; }
    /// <summary>
    /// GetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								List of <b>Transaction</b> objects representing the seller's recent sales.
    /// 								Each <b>Transaction</b> object contains the data for one purchase
    /// 								(of one or more items in the same listing).
    /// 								See the reference guide for more information about the fields that are returned
    /// 								for each order line item.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("Transaction", IsNullable = false)]

	public System.Collections.Generic.List<TransactionType> TransactionArray { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// ConfirmIdentity, FetchToken, GetTokenStatus, RevokeToken
/// Working with token/authentication callshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/token-auth-calls.html
/// Setting Up the Application to Receive Tokenshttps://developer.ebay.com/Devzone/xml/docs/HowTo/Tokens/GettingTokens.html#step1
/// </summary>
/// <remarks>
/// 
/// 				Retrieves a session ID that identifies a user and your application when you make a <b>FetchToken</b> request.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetSessionIDRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// GetSessionIDYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								The eBay Registered URL must be specified in this field. An eBay Registered URL is created and associated with a developer's Sandbox or Production key set by logging into the user's developer account on <b>developer.ebay.com</b> and going to the <b>User Tokens</b> page. The <b>RuName</b> value passed in this field must match the one specified for the specific Sandbox or Production key set being used to make the <b>GetSessionID</b> call. For more information on adding and registering your <b class="con">RuName</b>, see the <a href="../../HowTo/Tokens/GettingTokens.html#step1">Setting Up an Application to Receive Tokens</a> tutorial.
    /// 							
    /// </remarks>

	public string RuName { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				The base response of the <b>GetSessionID</b> call. This response will include the generated <b>SessionID</b> value, which is a unique identifier for authenticating data entry during the process that creates a user token.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetSessionIDResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// GetSessionIDAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								A 40-character identifier supplied by eBay to an application. Used to confirm the
    /// 								identities of the user and the application in a URL redirect during the
    /// 								process in which the user agrees to let the application wield a user token that
    /// 								grants the application the right to access eBay data on behalf of the user.
    /// 								Subsequently also used as input for the <b>FetchToken</b> API call. The
    /// 								<b>SessionID</b> value is valid for five minutes after it is retrieved.
    /// 							
    /// </remarks>

	public string SessionID { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// SetShippingDiscountProfiles
/// Shipping informationhttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/shipping-info.html
/// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/manage-fulfill-combine-invoices.htmlCombined invoice
/// </summary>
/// <remarks>
/// 
/// 				This call retrieves all shipping discount profiles currently defined by the user, along with other Combined Invoice-related details such as packaging and handling costs.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetShippingDiscountProfilesRequestType : AbstractRequestType{

#region 属性
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				The base response of the <b>GetShippingDiscountProfiles</b> call.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetShippingDiscountProfilesResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// GetShippingDiscountProfilesAlways
    /// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/manage-fulfill-combine-invoices.htmlCombined Invoice
    /// </summary>
    /// <remarks>
    /// 
    /// 								The three-digit code of the currency to be used for shipping cost discounts. A discount profile can only be associated with a listing if the <b>CurrencyID</b> value of the profile matches the <b>Item.Currency</b> value specified in a listing.
    /// 							
    /// </remarks>

	public CurrencyCodeType? CurrencyID { get; set; }
    /// <summary>
    /// GetShippingDiscountProfilesAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container consists of one or more flat-rate shipping discount rules that are set up for a seller's account. This container is returned as an empty element if no flat-rate shipping discount rules are currently set for the seller's account.
    /// 							
    /// </remarks>

	public FlatShippingDiscountType FlatShippingDiscount { get; set; }
    /// <summary>
    /// GetShippingDiscountProfilesAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container consists of one or more calculated shipping discount rules that are set up for a seller's account. This container is returned as an empty element if no calculated shipping discount rules are currently set for the seller's account.
    /// 							
    /// </remarks>

	public CalculatedShippingDiscountType CalculatedShippingDiscount { get; set; }
    /// <summary>
    /// GetShippingDiscountProfilesAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field indicates whether or not a seller has set up a promotional shipping discount rule in the seller's account. Only one promotional shipping discount may be defined for a seller's account at any given time. This field is returned whether <code>false</code> or <code>true</code>. If <code>true</code>, details of the rule can be found in the <b>PromotionalShippingDiscountDetails</b> container.
    /// 							
    /// </remarks>

	public bool? PromotionalShippingDiscount { get; set; }
    /// <summary>
    /// GetShippingDiscountProfilesConditionally
    /// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/manage-fulfill-combine-invoices.htmlCombined Invoice
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container consists of the handling discount applicable to a calculated shipping discount rule that is set up for a seller's account. This container is not returned if no calculated shipping discount rules are currently set for the seller's account.
    /// 							
    /// </remarks>

	public CalculatedHandlingDiscountType CalculatedHandlingDiscount { get; set; }
    /// <summary>
    /// GetShippingDiscountProfilesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container consists of information related to the promotional shipping discount rule that is set up for a seller's account. This container is not returned if no promotional shipping discount rule is set up for the seller's account.
    /// 							
    /// </remarks>

	public PromotionalShippingDiscountDetailsType PromotionalShippingDiscountDetails { get; set; }
    /// <summary>
    /// GetShippingDiscountProfilesAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field indicates the number of days after the sale of an item in which the buyer or seller can combine multiple and mutual order line items into one Combined Invoice order. In a Combined Invoice order, the buyer makes one payment for all order line items, hence only unpaid order line items can be combined into a Combined Invoice order.
    /// 							
    /// </remarks>

	public CombinedPaymentPeriodCodeType? CombinedDuration { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This call is used to retrieve information on a seller's eBay Store, including detailed information on all customized Store categories that the seller has set up.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetStoreRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// falseGetStoreNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								 Include this field and set its value to <code>true</code> if you wish to restrict the call response to only the store category hierarchy data.
    /// 							
    /// </remarks>

	public bool? CategoryStructureOnly { get; set; }
    /// <summary>
    /// GetStoreNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								The unique identifier of an eBay Store category. This field is used if the user wants to isolate the category hierarchy data to one particular eBay category (and its subcategories if applicable). The <b>LevelLimit</b> value will determine how many additional levels of categories are returned.
    /// 							
    /// </remarks>

	public long? RootCategoryID { get; set; }
    /// <summary>
    /// GetStoreNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								 This field allows the seller to limit the number of levels of eBay Store categories that are returned. To return only top-level eBay Store categories, the user can include this field and set its value to <code>1</code> (and not use a <b>RootCategoryID</b> value). To retrieve a specific eBay Store Category and that category's child categories, the user could specify the unique eBay Store Category ID in the <b>RootCategoryID</b> field and then set the <b>LevelLimit</b> value to <code>2</code>.
    /// 								 <br/><br/>
    /// 								 If <b>LevelLimit</b> is omitted, the complete eBay Store Category hierarchy is returned, or all of specified store category's child categories. eBay Stores support only three levels of store categories.
    /// 							
    /// </remarks>

	public int? LevelLimit { get; set; }
    /// <summary>
    /// GetStoreNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								The eBay user ID of the eBay seller that owns the eBay Store to be retrieved. This field is only needed if the user wants to view the eBay Store information owned by a different seller (than the seller associated with the authenticated user token). If this field is omitted, the eBay Store information for the seller associated with the authenticated user token is returned.
    /// 							
    /// </remarks>

	public string UserID { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				The base response type of the <b>GetStore</b> call. This response consists of the data describing a seller's eBay store, and includes the eBay Store name, the description of the store, the URL to the eBay Store, and eBay Store Category hierarchy.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetStoreResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// GetStoreAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container consists of detailed information on the seller's eBay Store. 
    /// 							
    /// </remarks>

	public StoreType Store { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// SetStoreCategories
/// Open and manage an eBay storehttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/ebay-store.html
/// </summary>
/// <remarks>
/// 
/// 				This call is used to retrieve the status of an eBay Store Category hierarchy change that was made with a <b>SetStoreCategories</b> call.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetStoreCategoryUpdateStatusRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// GetStoreCategoryUpdateStatusYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								The unique identifier of an eBay Store Category hierarchy change task. A <b>TaskID</b> value is returned in the response of a successful <b>SetStoreCategories</b> call.
    /// 								<br/><br/>
    /// 								<span class="tablenote"><b>Note: </b> Depending on the breadth of changes being made to an eBay Store Category hierarchy, it is is possible that the <b>SetStoreCategories</b> call will complete the task simultaneously with the call response. A seller will know if an eBay Store Category hierarchy task was completed simultaneously if the <b>TaskID</b> value is returned as <code>0</code>, and the <b>Status</b> field is returned with a value of <code>Complete</code>. If the task was not completely simultaneously, the <b>TaskID</b> value will be a positive integer, and the <b>Status</b> field will show a value of <code>InProgress</code> or <code>Pending</code>.
    /// 								</span>
    /// 							
    /// </remarks>

	public long? TaskID { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				The base response of a <b>GetStoreCategoryUpdateStatus</b> call. The response includes the status of an eBay Store Category hierarchy change that was made with a <b>SetStoreCategories</b> call.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetStoreCategoryUpdateStatusResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// GetStoreCategoryUpdateStatusAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								The enumeration value indicates the status of an update to the
    /// 								eBay Store Category hierarchy.
    /// 							
    /// </remarks>

	public TaskStatusCodeType? Status { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// 
/// 					This call is used to retrieve information on the seller's Sales Tax Table.
///       	
/// SetTaxTable
/// DetailLevel
/// Multi-jurisdiction sales taxhttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/taxes.html
/// </summary>
/// <remarks>
/// 
/// 				The base request type of the <b>GetTaxTable</b> call, which retrieves information on the seller's Sales Tax Table. This information includes all of the site's tax jurisdictions, a boolean field to indicate if sales tax is applied to shipping and handling charges, and the sales tax rate for each jurisdiction (if a sales tax rate is set for that jurisdiction).
/// 				<br/><br/>
/// 				Sales tax tables are only supported on the eBay US and Candada marketplaces.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetTaxTableRequestType : AbstractRequestType{

#region 属性
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				The base response of the <b>GetTaxTable</b> call.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetTaxTableResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// GetTaxTableDetailLevel: ReturnAll, noneConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								The last time (in GMT) that the tax table was updated. Only returned if the user previously created a tax table and if the site has jurisdictions. <b>LastUpdateTime</b> is useful for synchronization. If you cache the user's tax table, you can use <b>GetTaxTable</b> to check if it has changed and whether you need to update the cached tax table.
    /// 							
    /// </remarks>

	public System.DateTime? LastUpdateTime { get; set; }
    /// <summary>
    /// GetTaxTableDetailLevel: ReturnAll, noneAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								A container of tax jurisdiction information unique to a user/site combination. Returned as an empty container if no Sales Tax Table information exists for the seller's account and no <b>DetailLevel</b> is used. If <b>DetailLevel</b> is not specified, information is only returned for the jurisdictions for which the user provided tax information. If <b>DetailLevel</b> is set to <b>ReturnAll</b>, tax information is returned for all possible jurisdictions, whether specified by the user or not. <b>ShippingIncludedInTax</b> and <b>SalesTaxPercent</b> are returned but are empty.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("TaxJurisdiction", IsNullable = false)]

	public System.Collections.Generic.List<TaxJurisdictionType> TaxTable { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This call is used to get the current status of a user token. There are no call-specific fields in the request payload.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetTokenStatusRequestType : AbstractRequestType{

#region 属性
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				The base response of the <b>GetTokenStatus</b> call. This call retrieves the status of a user token.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetTokenStatusResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// GetTokenStatusAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container value indicates the status and expiration date of a user token. If a user token was revoked, the date/time of the revocation is also returned under this container.
    /// 							
    /// </remarks>

	public TokenStatusType TokenStatus { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// DetailLevel
/// User informationhttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/user-mgmt-user-info.htmll
/// 				
/// </summary>
/// <remarks>
/// 
/// 				Retrieves data pertaining to a single eBay user. Callers can use this call to return their own user data or the data of another eBay user. Unless the caller passes in an <strong>ItemID</strong> value that identifies a current or past common order, not all data (like email addresses) will be returned in the response.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetUserRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// GetUserConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Specify the <strong>ItemID</strong> value for a successfully concluded listing in which the
    /// 								requestor and target user were participants (one as seller and the other
    /// 								as buyer). Necessary to return certain data (like an email address). Not
    /// 								necessary if the requestor is retrieving their own data.
    /// 							
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// GetUserNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Specify the user whose data you want returned by the call. If not specified, eBay returns data pertaining to the
    /// 								requesting user (as specified with the <strong>eBayAuthToken</strong> value).
    /// 							
    /// </remarks>

	public string UserID { get; set; }
    /// <summary>
    /// GetUserNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								If the <b>IncludeFeatureEligibility</b> flag is included and set to 'true', the call response will include a <b>QualifiesForSelling</b> flag which indicates if the eBay user is eligible to sell on eBay, and a <b>IncludeFeatureEligibility</b> container which indicates which selling features are available to the user.
    /// 							
    /// </remarks>

	public bool? IncludeFeatureEligibility { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Base response of the <b>GetUser</b> call. This response includes detailed information about the user, including Feedback data, eBay registration date, selling feature eligibility, valid subsriptions, etc.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetUserResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container consists of detailed information about the user specified in the call request (through the <b>UserID</b> field) or the eBay user account that is tied to the <strong>eBayAuthToken</strong> value that is passed in the call request.
    /// 								<br><br>
    /// 								Some sensitive data will be masked/omitted if the returned eBay user is not the person making the <b>GetUser</b> call. More information on another eBay user will be revealed to the person making the call if that person has an order relationship for an eBay listing specified in the <strong>ItemID</strong> field of the call request.
    /// 							
    /// </remarks>

	public UserType User { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This call is used to retrieve contact information for a specified eBay user, given that a bidding relationship (as either a buyer or seller) exists between the caller and the user.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetUserContactDetailsRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// GetUserContactDetailsYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								A unique identifier for the eBay listing that the caller and order partner have in common.
    /// 							
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// GetUserContactDetailsYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								An eBay user ID that uniquely identifies a given user for whom the caller is seeking information. Either a seller's or bidder's/buyer's user ID can be specified here, as long as an bidding/order relationship exists between the requester and the user specified by this field. That is, a bidder must be bidding on the seller's active auction item, or a prospective buyer has proposed a Best Offer on a listing.
    /// 							
    /// </remarks>

	public string ContactID { get; set; }
    /// <summary>
    /// GetUserContactDetailsYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								An eBay user ID that uniquely identifies the person who is making the call. Either a seller's or bidder's/buyer's user ID can be specified here, as long as a bidding/order relationship exists between the requester and the user for whom information is being requested.
    /// 							
    /// </remarks>

	public string RequesterID { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Returns contact information to a seller for both bidders
/// 				and users who have made offers (via Best Offer) during
/// 				an active listing.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetUserContactDetailsResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// GetUserContactDetailsAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								An eBay ID that uniquely identifies the given user whose information is given in the call response.
    /// 							
    /// </remarks>

	public string UserID { get; set; }
    /// <summary>
    /// GetUserContactDetailsAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Contact information for the requested contact.
    /// 								Note that the email address is NOT returned.
    /// 							
    /// </remarks>

	public AddressType ContactAddress { get; set; }
    /// <summary>
    /// GetUserContactDetailsAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								The date and time that the requested contact
    /// 								registered with eBay.
    /// 							
    /// </remarks>

	public System.DateTime? RegistrationDate { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// SetUserPreferences
/// User preferenceshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/user-mgmt-prefs.html
/// </summary>
/// <remarks>
/// 
/// 				Retrieves the specified user preferences for the authenticated caller.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetUserPreferencesRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// false
    /// GetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								If included and set to <code>true</code>, the seller's preference for receiving contact information for unsuccessful bidders is returned in the response.
    /// 							
    /// </remarks>

	public bool? ShowBidderNoticePreferences { get; set; }
    /// <summary>
    /// false
    /// GetUserPreferencesNo
    /// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/manage-fulfill-combine-invoices.htmlCombined invoice
    /// </summary>
    /// <remarks>
    /// 
    /// 								If included and set to <code>true</code>, the seller's combined invoice preferences are returned in the response. These preferences are used to allow Combined Invoice orders.
    /// 								<br>
    /// 							
    /// </remarks>

	public bool? ShowCombinedPaymentPreferences { get; set; }
    /// <summary>
    /// false
    /// GetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								If included and set to <code>true</code>, the seller's payment preferences are returned in the response.
    /// 							
    /// </remarks>

	public bool? ShowSellerPaymentPreferences { get; set; }
    /// <summary>
    /// false
    /// GetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								If included and set to <code>true</code>, the seller's preferences for the end-of-auction email sent to the winning bidder is returned in the response. These preferences are only applicable for auction listings.
    /// 							
    /// </remarks>

	public bool? ShowEndOfAuctionEmailPreferences { get; set; }
    /// <summary>
    /// false
    /// GetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								If included and set to <code>true</code>, the seller's favorite item preferences are returned in the response.
    /// 							
    /// </remarks>

	public bool? ShowSellerFavoriteItemPreferences { get; set; }
    /// <summary>
    /// false
    /// GetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								If included and set to <code>true</code>, the seller's preference for sending an email to the buyer with the shipping tracking number is returned in the response.
    /// 							
    /// </remarks>

	public bool? ShowEmailShipmentTrackingNumberPreference { get; set; }
    /// <summary>
    /// false
    /// GetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								If included and set to <code>true</code>, the seller's preference for requiring that the buyer supply a shipping phone number upon checkout is returned in the response. Some shipping carriers require the receiver's phone number.
    /// 							
    /// </remarks>

	public bool? ShowRequiredShipPhoneNumberPreference { get; set; }
    /// <summary>
    /// false
    /// GetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								If included and set to <code>true</code>, all of the seller's excluded shipping locations are returned in the response. The returned list mirrors the seller's current Exclude shipping locations list in My eBay's Shipping Preferences. An excluded shipping location in My eBay can be an entire geographical region (such as Middle East) or only an individual country (such as Iraq). Sellers can override these default settings for an individual listing by using the <b>Item.ShippingDetails.ExcludeShipToLocation</b> field in the <b>AddItem</b> family of calls.
    /// 							
    /// </remarks>

	public bool? ShowSellerExcludeShipToLocationPreference { get; set; }
    /// <summary>
    /// false
    /// GetUserPreferencesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								If included and set to <code>true</code>, the seller's Unpaid Item preferences are returned in the response. The Unpaid Item preferences can be used to automatically cancel an unpaid order and relist the item on the behalf of the seller. <br><br> <span class="tablenote"><strong>Note:</strong> To return the list of buyers excluded from the Unpaid Item preferences, the <b>ShowUnpaidItemAssistanceExclusionList</b> field must also be included and set to <code>true</code> in the request. Excluded buyers can be viewed in the <b>UnpaidItemAssistancePreferences.ExcludedUser</b> field. </span>
    /// 							
    /// </remarks>

	public bool? ShowUnpaidItemAssistancePreference { get; set; }
    /// <summary>
    /// false
    /// GetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								If included and set to <code>true</code>, the seller's preference for sending a purchase reminder email to buyers is returned in the response.
    /// 							
    /// </remarks>

	public bool? ShowPurchaseReminderEmailPreferences { get; set; }
    /// <summary>
    /// false
    /// GetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								If included and set to <code>true</code>, the list of eBay user IDs on the Unpaid Item preferences Excluded User list is returned through the <b>UnpaidItemAssistancePreferences.ExcludedUser</b> field in the response. <br/><br/> For excluded users, an Unpaid Item is not automatically cancelled. The Excluded User list is managed through the <b>SetUserPreferences</b> call. <br><br> <span class="tablenote"><strong>Note:</strong> To return the list of buyers excluded from the Unpaid Item preferences, the <b>ShowUnpaidItemAssistancePreference</b> field must also be included and set to <b>true</b> in the request. </span>
    /// 							
    /// </remarks>

	public bool? ShowUnpaidItemAssistanceExclusionList { get; set; }
    /// <summary>
    /// false
    /// GetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								If this flag is included and set to <code>true</code>, the seller's Business Policies profile information is returned in the response. This information includes a flag that indicates whether or not the seller has opted into Business Policies, as well as Business Policies profiles (payment, shipping, and return policy) active on the seller's account.
    /// 							
    /// </remarks>

	public bool? ShowSellerProfilePreferences { get; set; }
    /// <summary>
    /// false
    /// GetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								If this flag is included and set to <code>true</code>, the <b>SellerReturnPreferences</b> container is returned in the response and indicates whether or not the seller has opted in to eBay Managed Returns.
    /// 								<br><br>
    /// 								eBay Managed Returns are currently only available on the US, UK, DE, AU, and CA (English and French) sites.
    /// 							
    /// </remarks>

	public bool? ShowSellerReturnPreferences { get; set; }
    /// <summary>
    /// false
    /// GetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								If this flag is included and set to <code>true</code>, the seller's preference for offering the Global Shipping Program to international buyers will be returned in <strong>OfferGlobalShippingProgramPreference</strong>.
    /// 							
    /// </remarks>

	public bool? ShowGlobalShippingProgramPreference { get; set; }
    /// <summary>
    /// false
    /// GetUserPreferencesNo
    /// Same day handlinghttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/shipping-handling-same-day.htmldetails about dispatch cut off times
    /// </summary>
    /// <remarks>
    /// 
    /// 							If included and set to <code>true</code>, the seller's same-day handling cutoff time is returned in <strong>DispatchCutoffTimePreference.CutoffTime</strong>.
    /// 							<br>
    /// 							<br>
    /// 							<span class="tablenote"><b>Note:</b> For sellers opted in to the feature that supports different order cutoff times for each business day, the order cutoff time returned in the response may not be accurate. In order for the seller to confirm the actual order cutoff time for same-day handling, that seller should view Shipping Preferences in My eBay. </span>
    /// 							<br>
    /// 							
    /// </remarks>

	public bool? ShowDispatchCutoffTimePreferences { get; set; }
    /// <summary>
    /// false
    /// GetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 							If included and set to <code>true</code>, the <strong>GlobalShippingProgramListingPreference</strong> field is returned. A returned value of <code>true</code> indicates that the seller's new listings will enable the Global Shipping Program by default.
    /// 						
    /// </remarks>

	public bool? ShowGlobalShippingProgramListingPreference { get; set; }
    /// <summary>
    /// false
    /// GetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								If included and set to <code>true</code>, the <strong>OverrideGSPServiceWithIntlServicePreference</strong> field is returned. A returned value of <code>true</code> indicates that for the seller's listings that specify an international shipping service for any Global Shipping-eligible country, the specified service will take precedence and be the listing's default international shipping option for buyers in that country, rather than the Global Shipping Program.
    /// 								<br/><br/>
    /// 								A returned value of <code>false</code> indicates that the Global Shipping program will take precedence over any international shipping service as the default option in Global Shipping-eligible listings for shipping to any Global Shipping-eligible country.
    /// 							
    /// </remarks>

	public bool? ShowOverrideGSPServiceWithIntlServicePreference { get; set; }
    /// <summary>
    /// false
    /// GetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								If included and set to <code>true</code>, the <strong>PickupDropoffSellerPreference</strong> field is returned. A returned value of <code>true</code> indicates that the seller's new listings will by default be eligible to be evaluated for the Click and Collect feature.
    /// 								<br/><br/>
    /// 								With the Click and Collect feature, a buyer can purchase certain items on eBay and collect them at a local store. Buyers are notified by eBay once their items are available. The Click and Collect feature is only available to large merchants on the eBay UK (site ID 3), eBay Australia (Site ID 15), and eBay Germany (Site ID 77) sites.
    /// 								<br/><br/>
    /// 								<span class="tablenote"><b>Note:</b> The Click and Collect program no longer allows sellers to set the Click and Collect preference at the listing level.
    /// 								</span>
    /// 							
    /// </remarks>

	public bool? ShowPickupDropoffPreferences { get; set; }
    /// <summary>
    /// false
    /// GetUserPreferencesNo
    /// Out-of-Stock controlhttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/out-of-stock.html
    /// </summary>
    /// <remarks>
    /// 
    /// 								If included and set to <code>true</code>, the seller's preferences related to the Out-of-Stock feature will be returned. This feature is set using the <a href="SetUserPreferences.html#Request.OutOfStockControlPreference">SetUserPreferences</a> call.
    /// 							
    /// </remarks>

	public bool? ShowOutOfStockControlPreference { get; set; }
    /// <summary>
    /// false
    /// GetUserPreferencesNo
    /// more detailseBay Plushttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/ebay-plus.html
    /// </summary>
    /// <remarks>
    /// 
    /// 								To determine whether a seller can offer eBay Plus in qualified listings, include this field and set it to <code>true</code>.
    /// 								<br/><br/>
    /// 								eBay Plus is a premium account option for buyers, which provides benefits such as fast free domestic shipping and free returns on selected items. Top Rated eBay sellers must opt in to eBay Plus, and can offer the program on a per-listing basis.
    /// 								<br/><br/>
    /// 								The <strong>eBayPLUSPreference</strong> container is returned in the response with information about each country where the seller is eligible to offer eBay Plus on listings (one <strong>eBayPLUSPreference</strong> container per country), as well as the seller's opt-in status and listing preference for each country.
    /// 								<br/><br/>
    /// 								<span class="tablenote">
    /// 								<strong>Note:</strong> Currently, eBay Plus is available only to buyers in Germany and Australia. In Australia, the seller has no control/responsibility over setting the eBay Plus feature for a listing. Instead, eBay will evaluate/determine whether a listing is eligible for eBay Plus.
    /// 								</span>
    /// 							
    /// </remarks>

	public bool? ShoweBayPLUSPreference { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Contains some or all of the authenticated user's preferences. The preferences are
/// 				grouped in sets and are returned according to the flag settings in the request.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetUserPreferencesResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// GetUserPreferencesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Container consisting of the seller's preference for receiving contact information for unsuccessful bidders. This container is returned when <b>ShowBidderNoticePreferences</b> is included and set to <code>true</code> in the request. This preference is only applicable for auction listings.
    /// 							
    /// </remarks>

	public BidderNoticePreferencesType BidderNoticePreferences { get; set; }
    /// <summary>
    /// GetUserPreferencesConditionally
    /// Combined invoicehttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/manage-fulfill-combine-invoices.html
    /// </summary>
    /// <remarks>
    /// 
    /// 								Container consisting of the seller's Combined Invoice preferences. These preferences are used to allow Combined Invoice orders. This container is returned when <b>ShowCombinedPaymentPreferences</b> is included and set to <code>true</code> in the request.
    /// 							
    /// </remarks>

	public CombinedPaymentPreferencesType CombinedPaymentPreferences { get; set; }
    /// <summary>
    /// GetUserPreferencesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Container consisting of the seller's payment preferences. This container is returned when <b>ShowSellerPaymentPreferences</b> is included and set to <code>true</code> in the request.
    /// 							
    /// </remarks>

	public SellerPaymentPreferencesType SellerPaymentPreferences { get; set; }
    /// <summary>
    /// GetUserPreferencesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Container consisting of the seller's preferences for displaying items on a buyer's Favorite Sellers' Items page or Favorite Sellers' Items digest. This container is returned when <b>ShowSellerFavoriteItemPreferences</b> is included and set to <code>true</code> in the request.
    /// 							
    /// </remarks>

	public SellerFavoriteItemPreferencesType SellerFavoriteItemPreferences { get; set; }
    /// <summary>
    /// GetUserPreferencesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Container consisting of the seller's preferences for the end-of-auction email sent to the winning bidder. This container is returned when <b>ShowEndOfAuctionEmailPreferences</b> is included and set to <code>true</code> in the request. These preferences are only applicable for auction listings.
    /// 							
    /// </remarks>

	public EndOfAuctionEmailPreferencesType EndOfAuctionEmailPreferences { get; set; }
    /// <summary>
    /// GetUserPreferencesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Container consisting of the seller's preference for sending an email to the buyer with the shipment tracking number. This container is returned when <b>ShowEmailShipmentTrackingNumberPreference</b> is included and set to <code>true</code> in the request.
    /// 							
    /// </remarks>

	public bool? EmailShipmentTrackingNumberPreference { get; set; }
    /// <summary>
    /// GetUserPreferencesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Container consisting of the seller's preference for requiring that the buyer supply a shipping phone number upon checkout. Some shipping carriers require the receiver's phone number. This container is returned when <b>ShowRequiredShipPhoneNumberPreference</b> is included and set to <code>true</code> in the request.
    /// 							
    /// </remarks>

	public bool? RequiredShipPhoneNumberPreference { get; set; }
    /// <summary>
    /// GetUserPreferencesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Container consisting of a seller's Unpaid Item preferences. The Unpaid Item preferences can be used to automatically cancel an unpaid order and relist the item on the behalf of the seller. This container is returned if <b>ShowUnpaidItemAssistancePreference</b> is included and set to <code>true</code> in the request.
    /// 								<br><br>
    /// 								<span class="tablenote"><b>Note:</b>
    /// 								To return the list of buyers excluded from the Unpaid Item preferences, the <b>ShowUnpaidItemAssistanceExclusionList</b> field must also be included and set to <code>true</code> in the request. Excluded buyers can be viewed in the <b>UnpaidItemAssistancePreferences.ExcludedUser</b> field.
    /// 								</span>
    /// 							
    /// </remarks>

	public UnpaidItemAssistancePreferencesType UnpaidItemAssistancePreferences { get; set; }
    /// <summary>
    /// GetUserPreferencesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Container consisting of a list of the seller's excluded shipping locations. The returned list mirrors the seller's current <a href="http://cgi5.ebay.com/ws/eBayISAPI.dll?ExcludeShippingList" target="_blank">Exclude shipping locations</a> list in My eBay's shipping preferences. An excluded shipping location in My eBay can be an entire geographical region (such as Middle East) or only an individual country (such as Iraq).
    /// 								<br/><br/>
    /// 								Sellers can override these default settings for an individual listing by using the <b>Item.ShippingDetails.ExcludeShipToLocation</b> field in the Add/Revise/Relist calls. This container is returned if the <b>ShowSellerExcludeShipToLocationPreference</b> field is included and set to <code>true</code> in the request.
    /// 							
    /// </remarks>

	public SellerExcludeShipToLocationPreferencesType SellerExcludeShipToLocationPreferences { get; set; }
    /// <summary>
    /// GetUserPreferencesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Container consisting of a seller's preference for sending a purchase reminder email to buyers. This container is returned if the <b>ShowPurchaseReminderEmailPreferences</b> field is included and set to <code>true</code> in the request.
    /// 							
    /// </remarks>

	public PurchaseReminderEmailPreferencesType PurchaseReminderEmailPreferences { get; set; }
    /// <summary>
    /// GetUserPreferencesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Parent response container consisting of high-level information for all Business Policies defined for the user's account. This container is returned if <b>ShowSellerProfilePreferences</b> is included and set to <code>true</code> in the <b>GetUserPreferences</b> request (and one or more Business Policies are defined for the user's account).
    /// 							
    /// </remarks>

	public SellerProfilePreferencesType SellerProfilePreferences { get; set; }
    /// <summary>
    /// GetUserPreferencesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Container consisting of the <b>OptedIn</b> flag that indicates whether or not the seller has opted in to eBay Managed Returns. This container is only returned if <b>ShowSellerReturnPreferences</b> is included and set to <code>true</code> in the request.
    /// 							
    /// </remarks>

	public SellerReturnPreferencesType SellerReturnPreferences { get; set; }
    /// <summary>
    /// GetUserPreferencesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This flag indicates whether the seller has opted in to the Global Shipping Program and is able to offer global shipping to international buyers. Returned when <b>ShowGlobalShippingProgramPreference</b> is included and set to <code>true</code>.
    /// 							
    /// </remarks>

	public bool? OfferGlobalShippingProgramPreference { get; set; }
    /// <summary>
    /// Same day handlinghttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/shipping-handling-same-day.html
    /// GetUserPreferencesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Contains information about a seller's order cutoff time preferences for same-day shipping. If the seller specifies a value of '0' in <b>Item.DispatchTimeMax</b> to offer same-day handling when listing an item, the seller's shipping time commitment depends on the order cutoff time set for the listing site, as indicated by <b>DispatchCutoffTimePreference.CutoffTime</b>. Returned when <b>ShowDispatchCutoffTimePreferences</b> is included and set to <code>true</code>.
    /// 								<br>
    /// 								<br>
    /// 								<span class="tablenote"><b>Note:</b> For sellers opted in to the feature that supports different order cutoff times for each business day, the order cutoff time returned in this container may not be accurate. In order for the seller to confirm the actual order cutoff time for same-day handling, that seller should view Shipping Preferences in My eBay. </span>
    /// 								<br>
    /// 							
    /// </remarks>

	public DispatchCutoffTimePreferencesType DispatchCutoffTimePreference { get; set; }
    /// <summary>
    /// GetUserPreferencesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								If the <b>ShowGlobalShippingProgramListingPreference</b> field is submitted and set to <code>true</code>, this flag is returned. A returned value of <code>true</code> indicates that the seller's new listings will enable the Global Shipping Program by default.
    /// 							
    /// </remarks>

	public bool? GlobalShippingProgramListingPreference { get; set; }
    /// <summary>
    /// GetUserPreferencesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								If the <b>ShowOverrideGSPServiceWithIntlServicePreference</b> field is submitted and set to <code>true</code>, this flag is returned. A returned value of <code>true</code> indicates that for the seller's listings that specify an international shipping service for any Global Shipping-eligible country, the specified service will take precedence and be the listing's default international shipping option for buyers in that country, rather than the Global Shipping Program.
    /// 								<br/><br/>
    /// 								A returned value of <code>false</code> indicates that the Global Shipping program will take precedence over any international shipping service as the default option in Global Shipping-eligible listings for shipping to any Global Shipping-eligible country.
    /// 							
    /// </remarks>

	public bool? OverrideGSPServiceWithIntlServicePreference { get; set; }
    /// <summary>
    /// GetUserPreferencesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This boolean field is returned if the <b>ShowPickupDropoffPreferences</b> field is included and set to <code>true</code> in the request. This field will be returned as <code>true</code> if the seller has enabled the Click and Collect feature at the account level. All of the seller's new listings will by default be eligible to be evaluated for the Click and Collect feature. With the Click and Collect feature, a buyer can purchase certain items on eBay and collect them at a local store. Buyers are notified by eBay once their items are available. The Click and Collect feature is only available to large merchants on the eBay UK (site ID 3), eBay Australia (Site ID 15), and eBay Germany (Site ID 77) sites.
    /// 								<br/><br/>
    /// 								<span class="tablenote"><b>Note:</b> The Click and Collect program no longer allows sellers to set the Click and Collect preference at the listing level.
    /// 								</span>
    /// 							
    /// </remarks>

	public bool? PickupDropoffSellerPreference { get; set; }
    /// <summary>
    /// Out-of-Stock controlhttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/out-of-stock.html
    /// GetUserPreferencesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 							This boolean field is returned if the <b>ShowOutOfStockControlPreference</b> field is included and set to <code>true</code> in the request. This field will be returned as <code>true</code> if the seller has set
    /// 							<a href="SetUserPreferences.html#Request.OutOfStockControlPreference">SetUserPreferences.OutOfStockControlPreference</a> to <code>true</code>.
    /// 							
    /// </remarks>

	public bool? OutOfStockControlPreference { get; set; }
    /// <summary>
    /// more detailseBay Plushttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/ebay-plus.html
    /// GetUserPreferencesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Contains information about each country where the seller is eligible to offer eBay Plus on listings (one <strong>eBayPLUSPreference</strong> container per country), as well as the seller's opt-in status and listing preference for each country.
    /// 								<br/><br/>
    /// 								eBay Plus is a premium account option for buyers, which provides benefits such as fast free domestic shipping and free returns on selected items. Top Rated eBay sellers must opt in to eBay Plus to offer the program on a per-listing basis.
    /// 								<br/><br/>
    /// 								<span class="tablenote">
    /// 								<strong>Note:</strong> Currently, eBay Plus is available only to buyers in Germany and Australia. In Australia, the seller has no control/responsibility over setting the eBay Plus feature for a listing. Instead, eBay will evaluate/determine whether a listing is eligible for eBay Plus.
    /// 								</span>
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("eBayPLUSPreference")]

	public System.Collections.Generic.List<EBayPLUSPreferenceType> eBayPLUSPreference { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// 
/// 					Retrieves details about VeRO reason codes for a given site or all sites. You must be a member of the Verified Rights Owner (VeRO) Program to use this call.
/// 				
/// </summary>
/// <remarks>
/// 
/// 				Retrieves details for VeRO reason codes and their descriptions. You can specify a
/// 				reason code ID to get details for a specific reason on the site specified in the
/// 				request header. If <strong>ReasonCodeID</strong> is not passed in the request, all reason codes are
/// 				returned. Set <strong>ReturnAllSites</strong> to <code>true</code> to retrieve reason codes for all sites.
/// 				You must be a member of the Verified Rights Owner (VeRO) Program to use this call.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetVeROReasonCodeDetailsRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// GetVeROReasonCodeDetailsNo
    /// </summary>
    /// <remarks>
    /// 
    /// 				 				Unique identifier for a reason code. If this <strong>ReasonCodeID</strong> field is passed in, only the details related to this <strong>ReasonCodeID</strong> will be returned. If no reason code is specified, all reason codes are returned.
    /// 							
    /// </remarks>

	public long? ReasonCodeID { get; set; }
    /// <summary>
    /// false
    /// GetVeROReasonCodeDetailsNo
    /// </summary>
    /// <remarks>
    /// 
    /// 					 			Set to true to retrieve reason codes for all sites. If not specified, reason codes are returned for the site specified in the request header only. If a <strong>ReasonCodeID</strong> value is specified, this parameter is ignored.
    /// 							
    /// </remarks>

	public bool? ReturnAllSites { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Base response of the <strong>GetVeROReasonCodeDetails</strong> call. This response will consists of one or more VeRO Program copyright/intellectual property infringement violation types.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetVeROReasonCodeDetailsResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// GetVeROReasonCodeDetailsAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container consists of one or more VeRO Program copyright/intellectual property infringement violation types for one or more eBay sites.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("VeROSiteDetail", IsNullable = false)]

	public System.Collections.Generic.List<VeROSiteDetailType> VeROReasonCodeDetails { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// 
/// 					Retrieves status information about VeRO reported items. You must be a member of
/// 					the Verified Rights Owner (VeRO) Program to use this call.
/// 				
/// </summary>
/// <remarks>
/// 
/// 				Retrieves status information about VeRO reported items you have submitted. You
/// 				can receive the status of individual items you have reported or, by specifying
/// 				<strong>VeROReportPacketID</strong>, you can retrieve status for all items reported with a given
/// 				<strong>VeROReportItems</strong> request. You can also retrieve items that were reported during a
/// 				given time period. If no input parameters are specified, status is returned on all
/// 				items you have reported in the last two years.
/// 				You must be a member of the Verified Rights Owner (VeRO) Program to use this
/// 				call.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetVeROReportStatusRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// 
    /// 
    /// 
    /// GetVeROReportStatusNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Packet identifier associated with the reported items for which you want to
    /// 								retrieve status. By default, reported item details are not returned when
    /// 								you specify the packet ID in the request. Applies only to items reported
    /// 								with the <strong>VeROReportItems</strong> call.
    /// 							
    /// </remarks>

	public long? VeROReportPacketID { get; set; }
    /// <summary>
    /// GetVeROReportStatusNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Unique identifier for an eBay listing reported for alleged infringement. Applies to items reported with the <strong>VeROReportItems</strong> call or by other means (e.g., through the Web flow).
    /// 							
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// false
    /// GetVeROReportStatusNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Set to true to return reported item details when you specify <strong>VeROReportPacketID</strong> in the request.
    /// 							
    /// </remarks>

	public bool? IncludeReportedItemDetails { get; set; }
    /// <summary>
    /// GetVeROReportStatusNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Limits returned items to only those that were submited on or after the
    /// 								date-time specified. If specified, TimeTo must also be specified.
    /// 								Express the date-time in the format YYYY-MM-DD HH:MM:SS, and in GMT.
    /// 								(For information on how to convert between your local time zone
    /// 								and GMT, see Time Values Note.) Applies to items reported with
    /// 								VeROReportItems or by other means (e.g., through the web flow).
    /// 								Infringement reporting data is maintained for two years after the date of
    /// 								submission.
    /// 								This field is ignored if <strong>VeROReportPacketID</strong> or <strong>ItemID</strong> is specified.
    /// 							
    /// </remarks>

	public System.DateTime? TimeFrom { get; set; }
    /// <summary>
    /// GetVeROReportStatusNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Limits returned items to only those that were submited on or before the
    /// 								date-time specified. If specified, TimeFrom must also be specified.
    /// 								Express date-time in the format YYYY-MM-DD HH:MM:SS, and in GMT.
    /// 								(For information on how to convert between your local time zone
    /// 								and GMT, see Time Values Note.) Applies to items reported with
    /// 								VeROReportItems or by other means (e.g., through the web flow).
    /// 								Infringement reporting data is maintained for two years after the date of
    /// 								submission.
    /// 								This field is ignored if <strong>VeROReportPacketID</strong> or <strong>ItemID</strong> is specified.
    /// 							
    /// </remarks>

	public System.DateTime? TimeTo { get; set; }
    /// <summary>
    /// GetVeROReportStatusNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Contains the data controlling the pagination of the returned values: how
    /// 								many items are returned per page of data (per call) and the number of the
    /// 								page to return with the current call.
    /// 								
    /// </remarks>

	public PaginationType Pagination { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Base response of the <strong>GetVeROReportStatus</strong> call. This response contains status information for items reported by the VeRO Program member.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GetVeROReportStatusResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// GetVeROReportStatusConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Contains information regarding the pagination of data (if pagination is
    /// 								used), including total number of pages and total number of entries.
    /// 							
    /// </remarks>

	public PaginationResultType PaginationResult { get; set; }
    /// <summary>
    /// GetVeROReportStatusConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								If true, there are more items yet to be retrieved. Additional
    /// 								calls with higher page numbers or more items per page must
    /// 								be made to retrieve these items. Not returned if no items match the
    /// 								request.
    /// 							
    /// </remarks>

	public bool? HasMoreItems { get; set; }
    /// <summary>
    /// 1
    /// 200
    /// GetVeROReportStatusConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Indicates the maximum number of Reported Item objects that can be returned in any given call.
    /// 								<br/>
    /// 							
    /// </remarks>

	public int? ItemsPerPage { get; set; }
    /// <summary>
    /// 1
    /// GetVeROReportStatusConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Indicates the page of data returned by the current call. For instance,
    /// 								for the first set of items can be returned, this field has a value of
    /// 								one.
    /// 								<br/>
    /// 							
    /// </remarks>

	public int? PageNumber { get; set; }
    /// <summary>
    /// GetVeROReportStatusConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								The packet ID for status being returned.
    /// 							
    /// </remarks>

	public long? VeROReportPacketID { get; set; }
    /// <summary>
    /// GetVeROReportStatusConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Status of the packet.
    /// 							
    /// </remarks>

	public VeROReportPacketStatusCodeType? VeROReportPacketStatus { get; set; }
    /// <summary>
    /// GetVeROReportStatusConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container of one or more reported items that match the input criteria in the call request. Returns empty if no items are available that match the request.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("ReportedItem", IsNullable = false)]

	public System.Collections.Generic.List<VeROReportedItemType> ReportedItemDetails { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// 
/// 					This call retrieves the latest eBay feature-related metadata values that are supported when listing items.
///       	
/// </summary>
/// <remarks>
/// 
/// 				This is the base request type for the <b>GeteBayDetails</b> call. This call retrieves the latest eBay feature-related metadata values that are supported when listing items. This metadata includes country codes, currency codes, Item Specifics thresholds, supported Return Policy values, available shipping carriers and shipping service options, and more. This call may be used to keep metadata up-to-date in your applications.
/// 				<br><br>
/// 				In some cases, the data returned in the response will vary according to the eBay site that you use for the request.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GeteBayDetailsRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// GeteBayDetailsNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								One or more <b>DetailName</b> fields may be used to control the the type of metadata that is returned in the response. If no <b>DetailName</b> fields are used, all metadata will be returned in the response. It is a good idea to familiarize yourself with the metadata that can be returned with <b>GeteBayDetails</b> by reading through the enumeration values in <a href="types/DetailNameCodeType.html">DetailNameCodeType</a>.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("DetailName")]

	public System.Collections.Generic.List<DetailNameCodeType> DetailName { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Details about a specified site in response to <b>GeteBayDetailsRequest</b>. If no <b>DetailName</b> field is identified in the request, all elements of <b>GeteBayDetailsResponse</b> are returned. Otherwise, eBay returns only the elements corresponding to the specified <b>DetailName</b> fields. <b>UpdateTime</b> gives the time of modification of the most recently modified <b>DetailName</b>.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GeteBayDetailsResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Lists the country code and associated name of the countries supported by
    /// 								the eBay system, regardless of the site specified in the request.
    /// 								<br/><br/>
    /// 								<span class="tablenote"><b>Note: </b>
    /// 								This container is only returned if <b>CountryDetails</b> is included as a <b>DetailName</b> filter in the request, or if no <b>DetailName</b> filters are used in the request.
    /// 								</span>
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("CountryDetails")]

	public System.Collections.Generic.List<CountryDetailsType> CountryDetails { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Lists the currencies supported by the eBay system, regardless of the site
    /// 								specified in the request.
    /// 								<br/><br/>
    /// 								<span class="tablenote"><b>Note: </b>
    /// 								This container is only returned if <b>CurrencyDetails</b> is included as a
    /// 								<b>DetailName</b> filter in the request, or if no <b>DetailName</b> filters are
    /// 								used in the request.
    /// 								</span>
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("CurrencyDetails")]

	public System.Collections.Generic.List<CurrencyDetailsType> CurrencyDetails { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								A dispatch time specifies the maximum number of business days a seller commits to for shipping an item to domestic buyers after receiving a cleared payment. Returns all dispatch times in the system, regardless of the site specified in the request.
    /// 								<br/><br/>
    /// 								<span class="tablenote"><b>Note: </b>
    /// 								This container is only returned if <b>DispatchTimeMaxDetails</b> is included as a
    /// 								<b>DetailName</b> filter in the request, or if no <b>DetailName</b>
    /// 								filters are used in the request.
    /// 								</span>
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("DispatchTimeMaxDetails")]

	public System.Collections.Generic.List<DispatchTimeMaxDetailsType> DispatchTimeMaxDetails { get; set; }
    /// <summary>
    /// 613
    /// 613
    /// Avoid
    /// Category.PaymentMethod
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Although the supported payment methods for the specified eBay site are returned, it is recommended that the seller use <b>GetCategoryFeatures</b> instead, and pass in <b>PaymentMethods</b> as a <b>FeatureID</b> value in the request.
    /// 								<br/><br/>
    /// 								<span class="tablenote"><b>Note: </b> This container is only returned if <b>PaymentOptionDetails</b> is included as a <b>DetailName</b> filter in the request, or if no <b>DetailName</b> filters are used in the request.
    /// 								</span>
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("PaymentOptionDetails")]

	public System.Collections.Generic.List<PaymentOptionDetailsType> PaymentOptionDetails { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Lists the cities and other domestic regions for the specified site's country.
    /// 								<br/><br/>
    /// 								<span class="tablenote"><b>Note: </b>
    /// 								This container is only returned if <b>RegionDetails</b> is included as a
    /// 								<b>DetailName</b> filter in the request, or if no <b>DetailName</b> filters are
    /// 								used in the request.
    /// 								</span>
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("RegionDetails")]

	public System.Collections.Generic.List<RegionDetailsType> RegionDetails { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Lists the worldwide regions that can be set as shipping locations from the specified eBay site.
    /// 								<br/><br/>
    /// 								<span class="tablenote"><b>Note: </b>
    /// 								This container is only returned if <b>ShippingLocationDetails</b> is included as a
    /// 								<b>DetailName</b> filter in the request, or if no <b>DetailName</b>
    /// 								filters are used in the request.
    /// 								</span>
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("ShippingLocationDetails")]

	public System.Collections.Generic.List<ShippingLocationDetailsType> ShippingLocationDetails { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Lists the shipping services supported by the specified eBay site. Returns only the shipping services that are applicable to the site specified in the request.
    /// 								<br/><br/>
    /// 								<span class="tablenote"><b>Note: </b>
    /// 								This container is only returned if <b>ShippingServiceDetails</b> is included as a
    /// 								<b>DetailName</b> filter in the request, or if no <b>DetailName</b>
    /// 								filters are used in the request.
    /// 								</span>
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("ShippingServiceDetails")]

	public System.Collections.Generic.List<ShippingServiceDetailsType> ShippingServiceDetails { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Lists all available eBay sites and their associated <b>SiteID</b> numbers.
    /// 								<br/><br/>
    /// 								<span class="tablenote"><b>Note: </b>
    /// 								This container is only returned if <b>SiteDetails</b> is included as a
    /// 								<b>DetailName</b> filter in the request, or if no <b>DetailName</b>
    /// 								filters are used in the request.
    /// 								</span>
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("SiteDetails")]

	public System.Collections.Generic.List<SiteDetailsType> SiteDetails { get; set; }
    /// <summary>
    /// TaxTable.TaxJurisdiction in SetTaxTableSetTaxTable.html#Request.TaxTable.TaxJurisdiction
    /// Item.UseTaxTable in AddItemAddItem.html#Request.Item.UseTaxTable
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Details the different tax jurisdictions or tax regions applicable to the
    /// 								site specified in the request. Note that tax jurisdictions are only applicable to the following eBay sites: eBay US (Site ID 0), eBay Canada (Site ID 2), eBay Canada (French) (Site ID 210), and eBay India (Site ID 203). An empty response will be returned for any other Site ID that is passed in the HTTP header.
    /// 								<br/><br/>
    /// 								<span class="tablenote"><b>Note: </b>
    /// 								This container is only returned if <b>TaxJurisdiction</b> is included as a
    /// 								<b>DetailName</b> filter in the request, or if no <b>DetailName</b>
    /// 								filters are used in the request.
    /// 								</span>
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("TaxJurisdiction")]

	public System.Collections.Generic.List<TaxJurisdictionType> TaxJurisdiction { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Lists eBay URLs that are applicable to the site specified in the request.
    /// 								<br/><br/>
    /// 								<span class="tablenote"><b>Note: </b>
    /// 								This container is only returned if <b>URLDetails</b> is included as a
    /// 								<b>DetailName</b> filter in the request, or if no <b>DetailName</b>
    /// 								filters are used in the request.
    /// 								</span>
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("URLDetails")]

	public System.Collections.Generic.List<URLDetailsType> URLDetails { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Lists the details of the time zones supported by the eBay system.
    /// 								<br/><br/>
    /// 								<span class="tablenote"><b>Note: </b>
    /// 								This container is only returned if <b>TimeZoneDetails</b> is included as a
    /// 								<b>DetailName</b> filter in the request, or if no <b>DetailName</b>
    /// 								filters are used in the request.
    /// 								</span>
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("TimeZoneDetails")]

	public System.Collections.Generic.List<TimeZoneDetailsType> TimeZoneDetails { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Lists the site's maximum thresholds for specifying Item Specifics.
    /// 								<br/><br/>
    /// 								<span class="tablenote"><b>Note: </b>
    /// 								This container is only returned if <b>ItemSpecificDetails</b> is included as a
    /// 								<b>DetailName</b> filter in the request, or if no <b>DetailName</b>
    /// 								filters are used in the request.
    /// 								</span>
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("ItemSpecificDetails")]

	public System.Collections.Generic.List<ItemSpecificDetailsType> ItemSpecificDetails { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Lists the worldwide regions and individual countries that can be set as shipping locations from the specified eBay site.
    /// 								<br/><br/>
    /// 								<span class="tablenote"><b>Note: </b>
    /// 								This container is only returned if <b>RegionOfOriginDetails</b> is included as a
    /// 								<b>DetailName</b> filter in the request, or if no <b>DetailName</b>
    /// 								filters are used in the request.
    /// 								</span>
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("RegionOfOriginDetails")]

	public System.Collections.Generic.List<RegionOfOriginDetailsType> RegionOfOriginDetails { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Lists the various shipping packages supported by the specified site.
    /// 								<br/><br/>
    /// 								<span class="tablenote"><b>Note: </b>
    /// 								This container is only returned if <b>ShippingPackageDetails</b> is included as a
    /// 								<b>DetailName</b> filter in the request, or if no <b>DetailName</b>
    /// 								filters are used in the request.
    /// 								</span>
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("ShippingPackageDetails")]

	public System.Collections.Generic.List<ShippingPackageDetailsType> ShippingPackageDetails { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Lists the shipping carriers supported by the specified site.
    /// 								<br/><br/>
    /// 								<span class="tablenote"><b>Note: </b>
    /// 								This container is only returned if <b>ShippingCarrierDetails</b> is included as a
    /// 								<b>DetailName</b> filter in the request, or if no <b>DetailName</b>
    /// 								filters are used in the request.
    /// 								</span>
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("ShippingCarrierDetails")]

	public System.Collections.Generic.List<ShippingCarrierDetailsType> ShippingCarrierDetails { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// 1077
    /// Avoid
    /// 1147
    /// GetCategoryFeatures
    /// </summary>
    /// <remarks>
    /// 
    /// 								Lists the supported values that may be used for return policies on the specified eBay site, such as the return period, supported restocking fees, and refund options.
    /// 								<br/><br/>
    /// 								<span class="tablenote"><b>Note: </b>
    /// 								This container is only returned if <b>ReturnPolicyDetails</b> is included as a
    /// 								<b>DetailName</b> filter in the request, or if no <b>DetailName</b>
    /// 								filters are used in the request.
    /// 								</span>
    /// 								<span class="tablenote"><b>Note: </b>
    /// 								This container has been staged for deprecation. Although domestic return policy metadata is still getting returned at the moment, it is recommended that users start making plans to use the <b>GetCategoryFeatures</b> call instead to retrieve category-level, domestic return policy metadata.
    /// 								</span>
    /// 							
    /// </remarks>

	public ReturnPolicyDetailsType ReturnPolicyDetails { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Lists the minimum starting prices for the supported types of eBay listings.
    /// 								<br/><br/>
    /// 								<span class="tablenote"><b>Note: </b>
    /// 								This container is only returned if <b>ListingStartPriceDetails</b> is included as a
    /// 								<b>DetailName</b> filter in the request, or if no <b>DetailName</b>
    /// 								filters are used in the request.
    /// 								</span>
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("ListingStartPriceDetails")]

	public System.Collections.Generic.List<ListingStartPriceDetailsType> ListingStartPriceDetails { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Lists the threshold values that can be passed in through the <b>BuyerRequirementDetails</b> container in the Add/Revise/Relist API calls. Buyer Requirements allow the seller to block buyers who have unpaid item defects, policy violations, low Feedback scores, and/or other undesirable qualities/statistics. Buyer Requirements are set at the seller's account level, but by using a  <b>BuyerRequirementDetails</b> container in an Add/Revise/Relist API call, the values in that container will override values set at the account level.
    /// 								<br/><br/>
    /// 								<span class="tablenote"><b>Note: </b>
    /// 								This container is only returned if <b>BuyerRequirementDetails</b> is included as a
    /// 								<b>DetailName</b> filter in the request, or if no <b>DetailName</b>
    /// 								filters are used in the request.
    /// 								</span>
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("BuyerRequirementDetails")]

	public System.Collections.Generic.List<SiteBuyerRequirementDetailsType> BuyerRequirementDetails { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Details the listing features available for the eBay site specified in the request.
    /// 								<br/><br/>
    /// 								<span class="tablenote"><b>Note: </b>
    /// 								This container is only returned if <b>ListingFeatureDetails</b> is included as a
    /// 								<b>DetailName</b> filter in the request, or if no <b>DetailName</b>
    /// 								filters are used in the request.
    /// 								</span>
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("ListingFeatureDetails")]

	public System.Collections.Generic.List<ListingFeatureDetailsType> ListingFeatureDetails { get; set; }
    /// <summary>
    /// GetCategoryFeaturesGetCategoryFeatures.html#Response.Category.VariationsEnabled
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Site-level validation rules for multiple-variation listings (for example, the maximum number of variations per listing). Use <b>GetCategoryFeatures</b> to determine which categories on a site support variations.
    /// 								<br/><br/>
    /// 								<span class="tablenote"><b>Note: </b>
    /// 								This container is only returned if <b>VariationDetails</b> is included as a <b>DetailName</b> filter in the request, or if no <b>DetailName</b> filters are used in the request.
    /// 								</span>
    /// 							
    /// </remarks>

	public VariationDetailsType VariationDetails { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Lists the locations supported by the <b>ExcludeShipToLocation</b> feature. These are
    /// 								locations that a seller can list as areas where they will not ship an item.
    /// 								<br/><br/>
    /// 								<span class="tablenote"><b>Note: </b>
    /// 								This container is only returned if <b>ExcludeShippingLocationDetails</b> is included as a
    /// 								<b>DetailName</b> filter in the request, or if no <b>DetailName</b>
    /// 								filters are used in the request.
    /// 								</span>
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("ExcludeShippingLocationDetails")]

	public System.Collections.Generic.List<ExcludeShippingLocationDetailsType> ExcludeShippingLocationDetails { get; set; }
    /// <summary>
    /// GeteBayDetailsAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								The time of the most recent modification to any feature detail. If specific
    /// 								feature details are passed in the request, gives the most recent modification time
    /// 								of those feature details.
    /// 							
    /// </remarks>

	public System.DateTime? UpdateTime { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Details the recoupment policies for the site specified in the request.
    /// 								<br/><br/>
    /// 								<span class="tablenote"><b>Note: </b>
    /// 								This container is only returned if <b>RecoupmentPolicyDetails</b> is included as a
    /// 								<b>DetailName</b> filter in the request, or if no <b>DetailName</b>
    /// 								filters are used in the request.
    /// 								</span>
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("RecoupmentPolicyDetails")]

	public System.Collections.Generic.List<RecoupmentPolicyDetailsType> RecoupmentPolicyDetails { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								A shipping service category supported for the site.
    /// 								<br/><br/>
    /// 								<span class="tablenote"><b>Note: </b>
    /// 								This container is only returned if <b>ShippingCategoryDetails</b> is included as a
    /// 								<b>DetailName</b> filter in the request, or if no <b>DetailName</b>
    /// 								filters are used in the request.
    /// 								</span>
    /// 								Each shipping service supported for a site is automatically categorized by eBay into one of the
    /// 								shipping categories available for that site depending on how the shipping service shipping time
    /// 								aligns with the shipping times specified by eBay for each category.
    /// 								<br><br>
    /// 								Notice that you cannot specify a <b>ShippingCategory</b>
    /// 								as an input to any API call - eBay does this categorizing automatically. <b>ShippingCategory</b> is read-only data
    /// 								that is returned in the <b>ShippingServiceDetails</b> container. One possible use of this data is to segregate shipping
    /// 								services by <b>ShippingCategory</b> in a pick list. (For an example of this, see the Services pulldown menu in the
    /// 								Give buyers shipping details form in the eBay Sell Your Item flow.)
    /// 								<br><br>
    /// 								One way to populate the picklist would be to call <b>GeteBayDetails</b>
    /// 								with <b>DetailName</b> set to <b>ShippingServiceDetails</b>.
    /// 								Then sort these results by <b>ShippingCategory</b> and populate the picklist.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("ShippingCategoryDetails")]

	public System.Collections.Generic.List<ShippingCategoryDetailsType> ShippingCategoryDetails { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								The <b>ProductDetails.ProductIdentifierUnavailableText</b>
    /// 								field contains the actual text that should be passed into the relevant
    /// 								product identification fields (EAN, ISBN, UPC, MPN/Brand) if eBay is
    /// 								prompting/expecting one of these fields in the call request, but the identifiers do not exist/apply for the product. The text will vary based on the listing site. This text should only be used if no product ID exists for the product. If a product identifier value does actually exist for a product, but the seller passes in 'Does not apply' text, that listing may get penalized in search.
    /// 								<br/><br/>
    /// 								<span class="tablenote"><b>Note: </b>
    /// 								This container is only returned if <b>ProductDetails</b> is included as a
    /// 								<b>DetailName</b> filter in the request, or if no <b>DetailName</b>
    /// 								filters are used in the request.
    /// 								</span>
    /// 							
    /// </remarks>

	public ProductDetailsType ProductDetails { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Gets the official eBay system time in GMT.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GeteBayOfficialTimeRequestType : AbstractRequestType{

#region 属性
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				The Timestamp field indicates the official eBay system time in GMT.
/// 				For information about converting between GMT and other time zones,
/// 				see "Time Values" in the Data Types appendix in the eBay Features guide.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GeteBayOfficialTimeResponseType : AbstractResponseType{

#region 属性
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// GetItemsAwaitingFeedback
/// Feedbackhttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/feedback.html
/// Seller ratingshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/feedback-seller-ratings.html
/// </summary>
/// <remarks>
/// 
/// 				Enables a buyer and seller to leave Feedback for their order partner at the
/// 				conclusion of a successful order.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class LeaveFeedbackRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// LeaveFeedbackConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Unique identifier for an eBay listing. A listing can have multiple
    /// 								order line items, but only one <b>ItemID</b>. Unless an
    /// 								<b>OrderLineItemID</b> is specified in the <b>LeaveFeedback</b> request, the <b>ItemID</b> is
    /// 								required along with the <b>TargetUser</b> to identify an order line item
    /// 								existing between the caller and the <b>TargetUser</b> that requires feedback. A
    /// 								Feedback comment will be posted for this order line item. If there are
    /// 								multiple order line items between the two order partners that still
    /// 								require feedback, the <b>TransactionID</b> will also be required to isolate the
    /// 								targeted order line item. Feedback cannot be left for order line items
    /// 								with creation dates more than 60 days in the past.
    /// 							
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// 500
    /// LeaveFeedbackYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								Textual comment that explains, clarifies, or justifies the feedback
    /// 								score specified in <b>CommentType</b>.
    /// 								<br>
    /// 							
    /// </remarks>

	public string CommentText { get; set; }
    /// <summary>
    /// LeaveFeedbackWithdrawn, IndependentlyWithdrawnYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								Score for the Feedback being left. May be Positive, Neutral, or Negative.
    /// 								<br><br>
    /// 								<span class="tablenote"><b>Note:</b>
    /// 									Sellers can not leave neutral or negative feedback for buyers. In addition, buyers can not leave neutral or negative feedback within 7 days from the completion of the order for active Power Sellers who have been on eBay for 12 months.
    /// 								</span>
    /// 							
    /// </remarks>

	public CommentTypeCodeType? CommentType { get; set; }
    /// <summary>
    /// LeaveFeedbackConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Unique identifier for an eBay order line item. If there
    /// 								are multiple order line items between the two order partners that still
    /// 								require Feedback, the <b>TransactionID</b> is required along with the
    /// 								corresponding <b>ItemID</b> and <b>TargetUser</b> to isolate the targeted order line
    /// 								item. If an <b>OrderLineItemID</b> is included in the response to identify a
    /// 								specific order line item, none of the preceding fields (<b>ItemID</b>,
    /// 								<b>TransactionID</b>, <b>TargetUser</b>) are needed. Feedback cannot be left for order
    /// 								line items with creation dates more than 60 days in the past.
    /// 								<br>
    /// 								<br>
    /// 								The <b>TransactionID</b> value for auction listings is always <code>0</code> since there can be only one winning bidder/one sale for an auction listing.
    /// 								<br/><br/>
    /// 								<span class="tablenote"><b>Note: </b> Beginning in July 2024, non-zero transaction IDs will start being returned for auction listings. If necessary, update code to handle non-zero transaction IDs for auction transactions before this time. 
    /// 								</span>
    /// 							
    /// </remarks>

	public string TransactionID { get; set; }
    /// <summary>
    /// LeaveFeedbackYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								Specifies the recipient user about whom the Feedback is being left.
    /// 							
    /// </remarks>

	public string TargetUser { get; set; }
    /// <summary>
    /// Seller ratingshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/feedback-seller-ratings.html
    /// LeaveFeedbackNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Container for detailed seller ratings (DSRs). If a buyer is providing DSRs, they are specified in this container. Sellers have access to the number of ratings they've received, as well as to the averages of the DSRs they've received in each DSR area (i.e., to the average of ratings in the item-description area, etc.).
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("ItemRatingDetails", IsNullable = false)]

	public System.Collections.Generic.List<ItemRatingDetailsType> SellerItemRatingDetailArray { get; set; }
    /// <summary>
    /// 100
    /// LeaveFeedbackConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								<b>OrderLineItemID</b> is a unique identifier for an eBay order line item. If an <b>OrderLineItemID</b> is included in
    /// 								the request, the <b>ItemID</b>, <b>TransactionID</b>, and <b>TargetUser</b> fields are not
    /// 								required. Feedback cannot be left for order line items with creation
    /// 								dates more than 60 days in the past.
    /// 								<br>
    /// 							
    /// </remarks>

	public string OrderLineItemID { get; set; }
    /// <summary>
    /// LeaveFeedbackNoBuyerIndicatedItemArrivedWithinEDDRange, BuyerIndicatedItemNotArrivedWithinEDDRange
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field or the <b>ItemDeliveredWithinEDD</b> field should be included if it is the buyer leaving feedback for the seller. This field will inform eBay about whether or not the buyer received the order line item within the estimated delivery date, which is established once a buyer purchases or commits to buy an item.
    /// 							
    /// </remarks>

	public ItemArrivedWithinEDDCodeType? ItemArrivedWithinEDDType { get; set; }
    /// <summary>
    /// LeaveFeedbackConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field or the <b>ItemArrivedWithinEDDType</b> field should be included if it is the buyer leaving feedback for the seller. This field will inform eBay about whether or not the buyer received the order line item within the estimated delivery date window, which is established once a buyer purchases or commits to buy an item. The value of this field is set to <code>true</code> if the item did arrive within the estimated delivery date, or <code>false</code> if the item arrived past the estimated delivery date.
    /// 							
    /// </remarks>

	public bool? ItemDeliveredWithinEDD { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
///         Base response for the <b>LeaveFeedback</b> call. The response includes a <b>FeedbackID</b> value, which is automatically generated by eBay if the caller is successfully at submitting the Feedback entry.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class LeaveFeedbackResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// LeaveFeedbackAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								The unique identifier of the Feedback entry that has been submitted by the caller.
    /// 							
    /// </remarks>

	public string FeedbackID { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// Best Offerhttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/best-offers.html
/// API License Agreementhttps://developer.ebay.com/products/license
/// eBay User Agreementhttps://pages.ebay.com/help/policies/user-agreement.html
/// PlaceOffer API License Agreement Addendumhttps://developer.ebay.com/cms/files/placeoffer_api_license_addendum_uv_0.pdf
/// API Logo Usage Requirementshttps://www.ebay.com/help/policies/member-behavior-policies/ebays-intellectual-property-policy?id=4261
/// Filing a Support Tickethttps://developer.ebay.com/my/support/tickets
/// eBay Partner Networkhttps://www.ebaypartnernetwork.com/
/// </summary>
/// <remarks>
/// 
/// 				Enables the authenticated user to to make a bid on an auction item, propose a Best Offer, or purchase a fixed-price/Buy It Now item. Note that this call cannot be used to purchase items that require immediate payment.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class PlaceOfferRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// PlaceOfferYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container specifies the type of offer being made for the listing specified in the <b>ItemID</b> field. The <b>Offer.Action</b> is used to set the action that is being taken on the listing.
    /// 							
    /// </remarks>

	public OfferType Offer { get; set; }
    /// <summary>
    /// PlaceOfferYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								Unique identifier that identifies the listing for which the action is being submitted.
    /// 								<br><br>
    /// 								For a multiple-variation listing, you must also identify the specific variation within that listing using the <b>VariationSpecifics</b> container.
    /// 							
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// False
    /// PlaceOfferNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								If a warning message is generated when the call is made, this <b>BlockOnWarning</b> will block the bid/buy action if set to <code>true</code>. If <b>BlockOnWarning</b>
    /// 								is <code>false</code> or omitted, the bid/buy action is allowed, regardless of whether or not a warning message occurs.
    /// 								<br>
    /// 							
    /// </remarks>

	public bool? BlockOnWarning { get; set; }
    /// <summary>
    /// eBay Partner Networkhttps://partnernetwork.ebay.com
    /// PlaceOfferNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Container for affiliate-related tags, which enable the tracking of user
    /// 								activity. If you include the <b>AffiliateTrackingDetails</b> container in your <b>PlaceOffer</b> call, then
    /// 								it is possible to receive affiliate commissions based on calls made by your
    /// 								application. (See the <a href=
    /// 								"http://www.ebaypartnernetwork.com/" target="_blank">eBay Partner Network</a>
    /// 								for information about commissions.) Please note that affiliate tracking is not
    /// 								available in the Sandbox environment, and that affiliate tracking is not
    /// 								available when you make a Best Offer.
    /// 							
    /// </remarks>

	public AffiliateTrackingDetailsType AffiliateTrackingDetails { get; set; }
    /// <summary>
    /// PlaceOfferConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container is used to identify a specific variation within a multiple-variation listing identified by the <b>ItemID</b> value. This container is required when attempting to perform an action on a multiple-variation listing.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("NameValueList", IsNullable = false)]

	public System.Collections.Generic.List<NameValueListType> VariationSpecifics { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				The <b>PlaceOffer</b> response notifies you about the success and result
/// 				of the call.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class PlaceOfferResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// PlaceOfferAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container indicates the current bidding/purchase state of the order line item regarding the offer extended using <b>PlaceOffer</b>. The fields that are returned under this container will depend on the attempted action and the results of that action.
    /// 							
    /// </remarks>

	public SellingStatusType SellingStatus { get; set; }
    /// <summary>
    /// PlaceOfferConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Unique identifier for an eBay order line item. The
    /// 								<b>TransactionID</b> field is only returned if the <b>Offer.Action</b> field was set
    /// 								to <b>Purchase</b> in the input and the purchase was successful. A Purchase
    /// 								action in <b>PlaceOffer</b> can be used for a fixed-price listing, or for an
    /// 								auction listing where the Buy It Now option is available.
    /// 								<br>
    /// 								<br>
    /// 								The <b>TransactionID</b> value for auction listings is always <code>0</code> since there can be only one winning bidder/one sale for an auction listing.
    /// 								<br/><br/>
    /// 								<span class="tablenote"><b>Note: </b> Beginning in July 2024, non-zero transaction IDs will start being returned for auction listings. If necessary, update code to handle non-zero transaction IDs for auction transactions before this time. 
    /// 								</span>
    /// 							
    /// </remarks>

	public string TransactionID { get; set; }
    /// <summary>
    /// PlaceOfferConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Container consisting of the status for a Best Offer. This container is
    /// 								only returned if applicable based on the listing and the value set for
    /// 								<b>Offer.Action</b> field in the request.
    /// 							
    /// </remarks>

	public BestOfferType BestOffer { get; set; }
    /// <summary>
    /// PlaceOfferConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								<b>OrderLineItemID</b> is a unique identifier for an eBay order line item. The <b>OrderLineItemID</b> field is only
    /// 								returned if the <b>Offer.Action</b> field is set to <b>Purchase</b> in the input and
    /// 								the purchase is successful. A Purchase action in <b>PlaceOffer</b> can be used
    /// 								for a fixed-price listing, or for an auction listing where the Buy It
    /// 								Now option is available.
    /// 								<br>
    /// 							
    /// </remarks>

	public string OrderLineItemID { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// RelistItem, VerifyRelistItem
/// Relisting Itemshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/relist-item.html
/// Relisting items (eBay Help page)https://pages.ebay.com/help/sell/relist.html
/// </summary>
/// <remarks>
/// 
/// 				Enables a seller to relist a fixed-price listing that has recently ended on a specified eBay site. A seller has to up to 90 days to relist an ended listing. When an item is relisted, it will receive a new <b>ItemID</b> value, but this item will remain on other users' Watch Lists after it is relisted. The seller has the opportunity to make changes to the listing through the <b>Item</b> container, and the seller can also use one or more <b>DeletedField</b> tags to remove an optional field/setting from the listing.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class RelistFixedPriceItemRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// RelistFixedPriceItemYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								The <b>Item</b> container is used to configure the item that will be relisted. If the seller plans to relist the item with no changes, the only field under the <b>Item</b> container that is required is the <b>ItemID</b> field. In the <b>ItemID</b> field, the seller specifies the item that will be relisted. If the seller wishes to change anything else for the listing, the seller should include this field in the call request and give it a new value.
    /// 								<br/><br/>
    /// 								If the seller wants to delete one or more optional settings in the listing, the seller should use the <b>DeletedField</b> tag.
    /// 							
    /// </remarks>

	public ItemType Item { get; set; }
    /// <summary>
    /// RelistFixedPriceItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Specifies the name of the field to delete from a listing.
    /// 								See <a href="https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/relist-item.html" target="_blank">Relist Items</a> for rules on deleting values when relisting items.
    /// 								Also see the relevant field descriptions to determine when to use <b>DeletedField</b> (and potential consequences).
    /// 								The request can contain zero, one, or many instances of <b>DeletedField</b> (one for each field to be deleted).
    /// 								<br>
    /// 								<br>
    /// 								Some data (such as <b>Variation</b> nodes within <b>Variations</b>)
    /// 								can't be deleted by using a <b>DeletedField</b> tag. See the relevant field
    /// 								descriptions for how to delete such data.
    /// 								<br>
    /// 								<br>
    /// 								Case-sensitivity must be taken into account when using a <b>DeletedField</b> tag to delete a field. The value passed into a <b>DeletedField</b> tag must either match the case of the schema element names in the full field path (Item.PictureDetails.PictureURL), or the initial letter of each schema element name in the full field path must be lowercase (item.pictureDetails.pictureURL).
    /// 								Do not change the case of letters in the middle of a field name.
    /// 								For example, item.picturedetails.pictureURL is not allowed.<br><br>
    /// 								To delete a listing enhancement like 'BoldTitle', specify the value you are deleting;
    /// 								for example, Item.ListingEnhancement[BoldTitle].
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("DeletedField")]

	public System.Collections.Generic.List<string> DeletedField { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				The base response type for the <b>RelistFixedPriceItem</b> call. The response includes the Item ID for the relisted item, the SKU value for the item (if any), listing recommendations (if applicable), the estimated fees for the relisted item (except the transaction fees, which aren't calculated until the item has sold), the start and end times of the listing, and other details.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class RelistFixedPriceItemResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// RelistFixedPriceItemAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								The unique identifier for the relisted item. Note that the <b>ItemID</b> value changes when a listing is relisted, so this will not be the same <b>ItemID</b> value that was passed in the call request.
    /// 								<br/><br/>
    /// 							
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// RelistFixedPriceItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								The seller-defined SKU value for the new listing (if a SKU value exists for the item).
    /// 								<br/><br/>
    /// 								Note that variation-level SKU values will not be returned if a multiple-variation listing was relisted. The seller would have to make a <b>GetItem</b> call to get variation-level SKU values.
    /// 						
    /// </remarks>

	public string SKU { get; set; }
    /// <summary>
    /// RelistFixedPriceItemAlways
    /// eBay.com Selling Feeshttps://www.ebay.com/help/selling/fees-credits-invoices/selling-fees?id=4822
    /// Fees by marketplacehttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/fees-by-marketplace.html
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container is an array of fees associated with the relisted item. The fees in this container will not include any fees that are based on the purchase price (such as transaction fees) and only come into play when the listing has a sale.
    /// 								<br>
    /// 								<br>
    /// 								All listing fee types are returned, even if those fees are not applicable for the relisted item and are '0.0'.
    /// 								<br>
    /// 								<br>
    /// 								<span class="tablenote"><b>Note:</b> The currency used for all fees returned under the <b>Fees</b> container reflects the currency used for the listing site, and not necessarily in the seller's default/home currency. For example, if a Canadian seller is using the <b>RelistFixedPriceItem</b> call to relist an item on the eBay US site, the currency type shown for each fee will be <code>USD</code> and not <code>CAD</code>.
    /// 								</span>
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("Fee", IsNullable = false)]

	public System.Collections.Generic.List<FeeType> Fees { get; set; }
    /// <summary>
    /// RelistFixedPriceItemAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								This timestamp indicates the date and time when the relisted item became active on the eBay site.
    /// 							
    /// </remarks>

	public System.DateTime? StartTime { get; set; }
    /// <summary>
    /// RelistFixedPriceItemAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Date and time when the relisted item is scheduled to end based on the start time and the listing duration value that was set in the <b>ListingDuration</b> field. If the value of <b>ListingDuration</b> was set to <code>GTC</code> (Good 'Til Cancelled), this value will be set one month ahead of the start time and will be updated if the GTC listing is still alive. GTC listings are automatically renewed each month according to the calendar day.
    /// 							
    /// </remarks>

	public System.DateTime? EndTime { get; set; }
    /// <summary>
    /// 10
    /// RelistFixedPriceItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Unique identifier of the primary eBay category in which the item was relisted. This field is only returned if the <b>Item.CategoryMappingAllowed</b> field was included and set to <code>true</code> in the request and the category ID passed in the <b>Item.PrimaryCategory</b> field was mapped to a new category ID by eBay. If the primary category has not changed or it has expired with no replacement, this field is not returned.
    /// 								<br/><br/>
    /// 							
    /// </remarks>

	public string CategoryID { get; set; }
    /// <summary>
    /// 10
    /// RelistFixedPriceItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Unique identifier of the secondary eBay category (if one was used) in which the item was relisted. This field is only returned if the <b>Item.CategoryMappingAllowed</b> field was included and set to <code>true</code> in the request and the category ID passed in the <b>Item.SecondaryCategory</b> field was mapped to a new category ID by eBay. If the secondary category has not changed or it has expired with no replacement, this field is not returned.
    /// 								<br/><br/>
    /// 							
    /// </remarks>

	public string Category2ID { get; set; }
    /// <summary>
    /// RelistFixedPriceItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field is returned if an eBay special offer or promotion is applicable to the listing.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("DiscountReason")]

	public System.Collections.Generic.List<DiscountReasonCodeType> DiscountReason { get; set; }
    /// <summary>
    /// RelistFixedPriceItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Provides a list of products recommended by eBay which match the item information
    /// 								provided by the seller.
    /// 							
    /// </remarks>

	public ProductSuggestionsType ProductSuggestions { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// RelistFixedPriceItem, VerifyRelistItem
/// Relist Itemshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/relist-item.html
/// https://developer.ebay.com/support/kb-article?KBid=1542Best practices for relisting items
/// Relisting items (eBay Help page)https://pages.ebay.com/help/sell/relist.html
/// </summary>
/// <remarks>
/// 
/// 				Enables a seller to relist a listing that has recently ended on a specified eBay site. A seller has to up to 90 days to relist an ended listing. When an item is relisted, it will receive a new <b>ItemID</b> value, but this item will remain on other users' Watch Lists after it is relisted. The seller has the opportunity to make changes to the listing through the <b>Item</b> container, and the seller can also use one or more <b>DeletedField</b> tags to remove an optional field/setting from the listing.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class RelistItemRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// RelistItemYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								The <b>Item</b> container is used to configure the item that will be relisted. If the seller plans to relist the item with no changes, the only field under the <b>Item</b> container that is required is the <b>ItemID</b> field. In the <b>ItemID</b> field, the seller specifies the item that will be relisted. If the seller wishes to change anything else for the listing, the seller should include this field in the call request and give it a new value.
    /// 								<br/><br/>
    /// 								If the seller wants to delete one or more optional settings in the listing, the seller should use the <b>DeletedField</b> tag.
    /// 							
    /// </remarks>

	public ItemType Item { get; set; }
    /// <summary>
    /// RelistItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Specifies the name of the field to delete from a listing.
    /// 								See <a href="https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/relist-item.html" target="_blank">Relist Items</a> for rules on deleting values when relisting items.
    /// 								Also see the relevant field descriptions to determine when to use <b>DeletedField</b> (and potential consequences).
    /// 								The request can contain zero, one, or many instances of <b>DeletedField</b> (one for each field to be deleted).
    /// 								<br><br>
    /// 								Case-sensitivity must be taken into account when using a <b>DeletedField</b> tag to delete a field. The value passed into a <b>DeletedField</b> tag must either match the case of the schema element names in the full field path (Item.PictureDetails.PictureURL), or the initial letter of each schema element name in the full field path must be  lowercase (item.pictureDetails.pictureURL).
    /// 								Do not change the case of letters in the middle of a field name.
    /// 								For example, item.picturedetails.pictureURL is not allowed.<br><br>
    /// 								To delete a listing enhancement like 'BoldTitle', specify the value you are deleting;
    /// 								for example, Item.ListingEnhancement[BoldTitle].
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("DeletedField")]

	public System.Collections.Generic.List<string> DeletedField { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				The base response type for the <b>RelistItem</b> call. The response includes the Item ID for the relisted item, the SKU value for the item (if any), listing recommendations (if applicable), the estimated fees for the relisted item (except the transaction fees, which aren't calculated until the item has sold), the start and end times of the listing, and other details.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class RelistItemResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// RelistItemAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								The unique identifier for the relisted item. Note that the <b>ItemID</b> value changes when a listing is relisted, so this will not be the same <b>ItemID</b> value that was passed in the call request.
    /// 								<br/><br/>
    /// 							
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// RelistItemAlways
    /// eBay.com Selling Feeshttps://www.ebay.com/help/selling/fees-credits-invoices/selling-fees?id=4822
    /// Fees by marketplacehttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/fees-by-marketplace.html
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container is an array of fees associated with the relisted item. The fees in this container will not include any fees that are based on the purchase price (such as transaction fees) and only come into play when the listing has a sale.
    /// 								<br>
    /// 								<br>
    /// 								All listing fee types are returned, even if those fees are not applicable for the relisted item and are '0.0'.
    /// 								<br>
    /// 								<br>
    /// 								<span class="tablenote"><b>Note:</b> The currency used for all fees returned under the <b>Fees</b> container reflects the currency used for the listing site, and not necessarily in the seller's default/home currency. For example, if a Canadian seller is using the <b>RelistItem</b> call to relist an item on the eBay US site, the currency type shown for each fee will be <code>USD</code> and not <code>CAD</code>.
    /// 								</span>
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("Fee", IsNullable = false)]

	public System.Collections.Generic.List<FeeType> Fees { get; set; }
    /// <summary>
    /// RelistItemAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								This timestamp indicates the date and time when the relisted item became active on the eBay site.
    /// 							
    /// </remarks>

	public System.DateTime? StartTime { get; set; }
    /// <summary>
    /// RelistItemAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								This timestamp indicates the date and time when the relisted item is scheduled to end on the eBay site. This date/time is calculated by using the <b>StartTime</b> and the listing duration. GTC listings are automatically renewed each month according to the calendar day.
    /// 							
    /// </remarks>

	public System.DateTime? EndTime { get; set; }
    /// <summary>
    /// 10
    /// RelistItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Unique identifier of the primary eBay category in which the item was relisted. This field is only returned if the <b>Item.CategoryMappingAllowed</b> field was included and set to <code>true</code> in the request and the category ID passed in the <b>Item.PrimaryCategory</b> field was mapped to a new category ID by eBay. If the primary category has not changed or it has expired with no replacement, this field is not returned.
    /// 								<br/><br/>
    /// 							
    /// </remarks>

	public string CategoryID { get; set; }
    /// <summary>
    /// 10
    /// RelistItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Unique identifier of the secondary eBay category (if one was used) in which the item was relisted. This field is only returned if the <b>Item.CategoryMappingAllowed</b> field was included and set to <code>true</code> in the request and the category ID passed in the <b>Item.SecondaryCategory</b> field was mapped to a new category ID by eBay. If the secondary category has not changed or it has expired with no replacement, this field is not returned.
    /// 								<br/><br/>
    /// 							
    /// </remarks>

	public string Category2ID { get; set; }
    /// <summary>
    /// RelistItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field is returned if an eBay special offer or promotion is applicable to the listing.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("DiscountReason")]

	public System.Collections.Generic.List<DiscountReasonCodeType> DiscountReason { get; set; }
    /// <summary>
    /// RelistItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Provides a list of products recommended by eBay which match the item information provided by the seller.
    /// 							
    /// </remarks>

	public ProductSuggestionsType ProductSuggestions { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// GetMyeBayBuying
/// </summary>
/// <remarks>
/// 
/// 				The call enables a user to remove one or more items from their Watch List. A user can view the items that they are currently watching by calling <b>GetMyeBayBuying</b>.
/// 				<br/><br/>
/// 				The user has the option of removing one or more single-variation listings, one or more product variations within a multiple-variation listing, or removing all items from the Watch List.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class RemoveFromWatchListRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// RemoveFromWatchListConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								The unique identifier of the item to be removed from the
    /// 								user's Watch List. Multiple <b>ItemID</b> fields can be specified in the same request, but note that the <b>RemoveAllItems</b> field or <b>VariationKey</b> container cannot be specified if one or more <b>ItemID</b> fields are used.
    /// 								<br/><br/>
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("ItemID")]

	public System.Collections.Generic.List<string> ItemID { get; set; }
    /// <summary>
    /// RemoveFromWatchListConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								If this field is included and set to <code>true</code>, then all the items in the user's
    /// 								Watch List are removed. Note that if the <b>RemoveAllItems</b> field is specified, one or more <b>ItemID</b> fields or the <b>VariationKey</b> cannot be used.
    /// 							
    /// </remarks>

	public bool? RemoveAllItems { get; set; }
    /// <summary>
    /// RemoveFromWatchListConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container is used if the user want to remove one or more product variations (within a multiple-variation listing) from the Watch List. Note that if the <b>VariationKey</b> container is used, one or more <b>ItemID</b> fields or the <b>RemoveAllItems</b> field cannot be used.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("VariationKey")]

	public System.Collections.Generic.List<VariationKeyType> VariationKey { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				The base response type for the <b>RemoveFromWatchList</b> call. The response includes the current count of items on the user's Watch List, as well as the maximum amount of items that can be on the user's Watch List at one time.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class RemoveFromWatchListResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// RemoveFromWatchListAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								The current number of items in the user's Watch List (considering that the items specified in the call request were successfully removed).
    /// 							
    /// </remarks>

	public int? WatchListCount { get; set; }
    /// <summary>
    /// RemoveFromWatchListAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								This integer value indicates the maximum number of items allowed in a user's Watch List. The maximum number of items that can be added to a Watch List is 400, but this can vary by eBay marketplace.
    /// 							
    /// </remarks>

	public int? WatchListMaximum { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// GetBestOffers
/// Best Offerhttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/best-offers.html
/// </summary>
/// <remarks>
/// 
/// 				This call enables the seller to accept or decline a buyer's Best Offer on an item, or make a counter offer to the buyer's Best Offer. A seller can decline multiple Best Offers with one call, but the seller cannot accept or counter offer multiple Best Offers with one call. Best Offers are not applicable to auction listings.
/// 				<br/><br/>
/// 				<span class="tablenote"><b>Note: </b>
/// 				Historically, the Best Offer feature has not been available for auction listings, but beginning with Version 1027, sellers in the US, UK, and DE sites are able to offer the Best Offer feature in auction listings. The seller can offer Buy It Now or Best Offer in an auction listing, but not both.
/// 				</span>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class RespondToBestOfferRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// RespondToBestOfferYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								The unique identifier of the listing to which the seller is responding to a Best Offer.
    /// 							
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// RespondToBestOfferYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								The unique identifier of a buyer's Best Offer for the order line item. This ID is created once the buyer makes a Best Offer. It is possible that a seller will get multiple Best Offers for an order line item, and if that seller would like to decline multiple/all of the Best Offers with one <b>RespondToBestOffer</b> call, the seller would pass in each of these identifiers in a separate <b>BestOfferID</b> field. However, the seller can only accept or counter offer one Best Offer at a time.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("BestOfferID")]

	public System.Collections.Generic.List<string> BestOfferID { get; set; }
    /// <summary>
    /// RespondToBestOfferYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								The enumeration value that the seller passes in to this field will control whether the seller accepts or make a counter offer to a single buyer's Best Offer, or declines one or more buyers' Best Offers. A seller can decline multiple Best Offers with one call, but the seller cannot accept or counter offer multiple Best Offers with one call.
    /// 							
    /// </remarks>

	public BestOfferActionCodeType? Action { get; set; }
    /// <summary>
    /// 250
    /// RespondToBestOfferConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This optional text field allows the seller to provide more details to the buyer about the action being taken against the buyer's Best Offer.
    /// 								<br>
    /// 							
    /// </remarks>

	public string SellerResponse { get; set; }
    /// <summary>
    /// RespondToBestOfferConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								The seller inserts counter offer price into this field. This field is conditionally required and only applicable when the <b>Action</b> value is set to <code>Counter</code>, The counter offer price cannot exceed the Buy It Now price for a single quantity item. However, the dollar value in this field may exceed the Buy It Now price if the buyer is requesting or the seller is offering multiple quantity of the item (in a multiple-quantity listing). The quantity of the item must be specified in the <b>CounterOfferQuantity</b> field if the seller is making a counter offer.
    /// 							
    /// </remarks>

	public AmountType CounterOfferPrice { get; set; }
    /// <summary>
    /// RespondToBestOfferConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 							The seller inserts the quantity of items in the counter offer into this field. This field is conditionally required and only applicable when the <b>Action</b> value is set to <code>Counter</code>, The counter offer price must be specified in the <b>CounterOfferPrice</b> field if the seller is making a counter offer. This price should reflect the quantity of items in the counter offer. So, if the seller's counter offer 'unit' price is 15 dollars, and the item quantity is '2', the dollar value passed into the <b>CounterOfferPrice</b> field would be <code>30.0</code>.
    /// 							
    /// </remarks>

	public int? CounterOfferQuantity { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This is the base response type for the <b>RespondToBestOffer</b> call. Along with the standard output fields for Trading API calls, this type contains a <b>RespondToBestOffer</b> container that indicates whether or not the action specified in the call request (accept, decline, or counter offer) was successful.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class RespondToBestOfferResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// RespondToBestOfferAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 									The <b>BestOffer.CallStatus</b> value returned in this container will indicate whether or not the action specified in the call request (accept, decline, or counter offer) was successful. The accept and counter offer actions can only be applied toward a single Best Offer. However, multiple Best Offers on a listing can be declined with one call. All Best Offers must be successfully declined with the <b>RespondToBestOffer</b> call for the <b> BestOffer.CallStatus</b> value to be <code>Success</code>.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("BestOffer", IsNullable = false)]

	public System.Collections.Generic.List<BestOfferType> RespondToBestOffer { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// GetFeedback
/// </summary>
/// <remarks>
/// 
/// 				Enables a seller to reply to Feedback that has been left for a user, or to post a
/// 				follow-up comment to a Feedback comment the user has left for someone else.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class RespondToFeedbackRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// RespondToFeedbackConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								A unique identifier for a Feedback record. Buying and selling partners
    /// 								leave feedback for one another after the completion of an order.
    /// 								Feedback is left at the order line item level, so a
    /// 								Feedback comment for each order line item in a Combined Payment order is
    /// 								expected from the buyer and seller. A unique <b>FeedbackID</b> is created
    /// 								whenever a buyer leaves feedback for a seller, and vice versa. A
    /// 								<b>FeedbackID</b> is created by eBay when feedback is left through the eBay
    /// 								site, or through the <b>LeaveFeedback</b> call. <b>FeedbackIDs</b> can be retrieved
    /// 								with the <b>GetFeedback</b> call. In the <b>RespondToFeedback</b> call, <b>FeedbackID</b> can
    /// 								be used as an input filter to respond to a specific Feedback comment.
    /// 								Since Feedback is always linked to a unique order line item, an
    /// 								<b>ItemID</b>/<b>TransactionID</b> pair or an <b>OrderLineItemID</b> can also be used to
    /// 								respond to a Feedback comment.
    /// 							
    /// </remarks>

	public string FeedbackID { get; set; }
    /// <summary>
    /// RespondToFeedbackConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Unique identifier for the eBay listing to which the user will be responding to Feedback. A listing can have multiple
    /// 								order line items, but only one <b>ItemID</b> value. An <b>ItemID</b> can be
    /// 								paired up with a corresponding <b>TransactionID</b> and used as an input filter
    /// 								to respond to a Feedback comment in the <b>RespondToFeedback</b> call. Unless
    /// 								the specific Feedback record is identified by a <b>FeedbackID</b> or an
    /// 								<b>OrderLineItemID</b> in the request, an <b>ItemID</b>/<b>TransactionID</b> pair is
    /// 								required.
    /// 							
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// RespondToFeedbackNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Unique identifier for an eBay order line item. A
    /// 								<b>TransactionID</b> can be paired up with its corresponding <b>ItemID</b> and used as
    /// 								an input filter to respond to a Feedback comment in the
    /// 								<b>RespondToFeedback</b> call. Unless the specific Feedback record is
    /// 								identified by a <b>FeedbackID</b> or an <b>OrderLineItemID</b> in the request, an
    /// 								<b>ItemID</b>/<b>TransactionID</b> pair is required.
    /// 								<br>
    /// 								<br>
    /// 								The <b>TransactionID</b> value for auction listings is always <code>0</code> since there can be only one winning bidder/one sale for an auction listing.
    /// 								<br/><br/>
    /// 								<span class="tablenote"><b>Note: </b> Beginning in July 2024, non-zero transaction IDs will start being returned for auction listings. If necessary, update code to handle non-zero transaction IDs for auction transactions before this time. 
    /// 								</span>
    /// 							
    /// </remarks>

	public string TransactionID { get; set; }
    /// <summary>
    /// RespondToFeedbackYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								The eBay user ID of the caller's order partner. The caller is either
    /// 								replyting to or following up on this user's Feedback comment.
    /// 							
    /// </remarks>

	public string TargetUserID { get; set; }
    /// <summary>
    /// RespondToFeedbackYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								Specifies whether the response is a reply or a follow-up to a Feedback
    /// 								comment left by the user identified in the <b>TargetUserID</b> field.
    /// 							
    /// </remarks>

	public FeedbackResponseCodeType? ResponseType { get; set; }
    /// <summary>
    /// 500
    /// RespondToFeedbackYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								Textual comment that the user who is subject of feedback may leave in
    /// 								response or rebuttal to the Feedback comment. Alternatively, when the
    /// 								<b>ResponseType</b> is <b>FollowUp</b>, this value contains the text of the follow-up
    /// 								comment.
    /// 								<br>
    /// 							
    /// </remarks>

	public string ResponseText { get; set; }
    /// <summary>
    /// RespondToFeedbackConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								<b>OrderLineItemID</b> is a unique identifier for an eBay order line item. Since Feedback is always linked to a
    /// 								unique order line item, an <b>OrderLineItemID</b> can be used to respond
    /// 								to a Feedback comment.
    /// 								<br><br>
    /// 								Unless an <b>ItemID</b>/<b>TransactionID</b> pair or a <b>FeedbackID</b> is used to identify
    /// 								a Feedback record, the <b>OrderLineItemID</b> must be specified.
    /// 								<br>
    /// 							
    /// </remarks>

	public string OrderLineItemID { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Base response for the <b>RespondToFeedback</b>. This response will indicate the success or failure of the attempt to reply to Feedback that has been left for a user, or to post a follow-up comment to a Feedback comment a user has left for someone else. This response has no call-specific output fields.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class RespondToFeedbackResponseType : AbstractResponseType{

#region 属性
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// ReviseItem
/// Revise a listinghttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/revise-listing.html
/// </summary>
/// <remarks>
/// 
/// 				Enables a seller to revise a fixed-price listing on a specified eBay site. To revise an active listing, the seller specifies the <b>ItemID</b> value for the listing. The seller makes one or multiple changes to the listing through the <b>Item</b> container, and the seller can also use one or more <b>DeletedField</b> tags to remove an optional field/setting from the listing.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ReviseFixedPriceItemRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// ReviseFixedPriceItemYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								The <b>Item</b> container is used to make changes to the active listing. The seller must pass in the <b>ItemID</b> value for the listing that is being revised. For anything else that the seller wishes to change, such as quantity or price, the seller should include this field in the call request and give it a new value.
    /// 								<br/><br/>
    /// 								If the seller wants to delete one or more optional settings in the listing, the seller should use the <b>DeletedField</b> tag.
    /// 							
    /// </remarks>

	public ItemType Item { get; set; }
    /// <summary>
    /// ReviseFixedPriceItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Specifies the name of a field to delete from a listing. The request can
    /// 								contain zero, one, or many instances of <b>DeletedField</b> (one for each field
    /// 								to be deleted). See the relevant field descriptions to determine when to
    /// 								use <b>DeletedField</b> (and potential consequences).
    /// 								<br><br>
    /// 								You cannot delete required fields from a listing.
    /// 								<br><br>
    /// 								Some fields are optional when you first list an item (e.g.,
    /// 								<b>SecondaryCategory</b>), but once they are set they cannot be deleted when you
    /// 								revise an item. Some optional fields cannot be deleted if the item has
    /// 								bids and/or ends within 12 hours. Some optional fields cannot be deleted
    /// 								if other fields depend on them.
    /// 								<br><br>
    /// 								Some data (such as <b>Variation</b> nodes within the <b>Variations</b> container) can't be deleted by
    /// 								using <b>DeletedField</b>. See the relevant field descriptions for how to delete
    /// 								such data.
    /// 								<br><br>
    /// 								Use values that match the case of the
    /// 								schema element names (<b>Item.PictureDetails.PictureURL</b>) or make the initial
    /// 								letter of each field name lowercase (<b>item.pictureDetails.pictureURL</b>).
    /// 								However, do not change the case of letters in the middle of a field name.
    /// 								For example, <b>item.picturedetails.pictureUrl</b> is not allowed.
    /// 								<br><br>
    /// 								To delete a listing enhancement like <b>BoldTitle</b>, specify the value you are
    /// 								deleting in square brackets ("[ ]"); for example,
    /// 								<b>Item.ListingEnhancement[BoldTitle]</b>.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("DeletedField")]

	public System.Collections.Generic.List<string> DeletedField { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				The base response type for the <b>ReviseFixedPriceItem</b> call. The response includes the Item ID for the revised item, the SKU value for the item (if any), listing recommendations (if applicable), the estimated fees for the revised item (except the transaction fees, which aren't calculated until the item has sold), the start and end times of the listing, and other details.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ReviseFixedPriceItemResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// ReviseFixedPriceItemAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								The unique identifier for the revised listing. Note that the <b>ItemID</b> value does not change when a listing is revised, so this will be the same <b>ItemID</b> value that was passed in the call request.
    /// 								<br/><br/>
    /// 							
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// ReviseFixedPriceItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								The seller-defined SKU value for the revised listing (if a SKU value exists for the item).
    /// 								<br/><br/>
    /// 								Note that variation-level SKU values will not be returned if a multiple-variation listing was revised. The seller would have to make a <b>GetItem</b> call to get variation-level SKU values.
    /// 							
    /// </remarks>

	public string SKU { get; set; }
    /// <summary>
    /// ReviseFixedPriceItemAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								This timestamp indicates the date and time when the listing was created on the eBay site. This value doesn't change when a listing is revised.
    /// 							
    /// </remarks>

	public System.DateTime? StartTime { get; set; }
    /// <summary>
    /// ReviseFixedPriceItemAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Date and time when the revised listing is scheduled to end based on the listing's start time and the listing duration value that was set for the listing. If the listing duration is 'GTC' (Good 'Til Cancelled), this value will be updated to one month in the future if the listing is automatically renewed after one month. GTC listings are automatically renewed each month according to the calendar day if quantity still exists for the item.
    /// 							
    /// </remarks>

	public System.DateTime? EndTime { get; set; }
    /// <summary>
    /// ReviseFixedPriceItemAlways
    /// eBay.com Feeshttp://pages.ebay.com/help/sell/fees.html
    /// Fees by marketplacehttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/fees-by-marketplace.html
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container is an array of fees associated with the revised listing. The fees in this container will not include any fees that are based on the purchase price (such as transaction fees) and only come into play when the listing has a sale.
    /// 								<br>
    /// 								<br>
    /// 								All listing fee types are returned, even if those fees are not applicable for the revised listing and are '0.0'.
    /// 								<br>
    /// 								<br>
    /// 								<span class="tablenote"><b>Note:</b> The currency used for all fees returned under the <b>Fees</b> container reflects the currency used for the listing site, and not necessarily in the seller's default/home currency. For example, if a Canadian seller is using the <b>ReviseFixedPriceItem</b> call to relist an item on the eBay US site, the currency type shown for each fee will be <code>USD</code> and not <code>CAD</code>.
    /// 								</span>
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("Fee", IsNullable = false)]

	public System.Collections.Generic.List<FeeType> Fees { get; set; }
    /// <summary>
    /// 10
    /// ReviseFixedPriceItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Unique identifier of the primary eBay category for the revised listing. This field is returned if the primary category was changed with the revision, and the primary category can only be changed if a fixed-price listing has no sales, and the listing does not end within 12 hours.
    /// 								<br/><br/>
    /// 								This field can also be returned if the <b>Item.CategoryMappingAllowed</b> field was included and set to <code>true</code> in the request and the category ID passed in the <b>Item.PrimaryCategory</b> field was mapped to a new category ID by eBay. If the primary category has not changed or it has expired with no replacement, this field is not returned.
    /// 								<br/>
    /// 							
    /// </remarks>

	public string CategoryID { get; set; }
    /// <summary>
    /// 10
    /// ReviseFixedPriceItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Unique identifier of the secondary eBay category for the revised listing. This field is returned if the secondary category was changed with the revision, and the secondary category can only be changed if a fixed-price listing has no sales, and the listing does not end within 12 hours.
    /// 								<br/><br/>
    /// 								This field can also be returned if the <b>Item.CategoryMappingAllowed</b> field was included and set to <code>true</code> in the request and the category ID passed in the <b>Item.PrimaryCategory</b> field was mapped to a new category ID by eBay. If the primary category has not changed or it has expired with no replacement, this field is not returned.
    /// 								<br/>
    /// 							
    /// </remarks>

	public string Category2ID { get; set; }
    /// <summary>
    /// ReviseFixedPriceItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field is returned if an eBay special offer or promotion is applicable to the listing.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("DiscountReason")]

	public System.Collections.Generic.List<DiscountReasonCodeType> DiscountReason { get; set; }
    /// <summary>
    /// ReviseFixedPriceItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Provides a list of products recommended by eBay which match the item information provided by the seller.
    /// 							
    /// </remarks>

	public ProductSuggestionsType ProductSuggestions { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// 
/// 					Enables a seller to change the price and/or quantity of one or more fixed-price listings (single-variation or multiple-variation).
/// 				
/// ReviseItem
/// Revise a listinghttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/revise-listing.html
/// </summary>
/// <remarks>
/// 
/// 				Enables a seller to change the price and/or quantity of one to four
/// 				active, fixed-price listings. The fixed-price listing to modify is identified with the <b>ItemID</b> of the listing and/or the <b>SKU</b> value of the item (if a seller-defined SKU value exists for the listing). If the seller is modifying one or more variations within a multiple-variation listing, the <b>ItemID</b> and <b>SKU</b> fields in the <b>InventoryStatus</b> container become required, with the <b>ItemID</b> value identifying the listing, and the <b>SKU</b> value identifying the specific product variation within that multiple-variation listing. Each variation within a multiple-variation listing requires a seller-defined SKU value.
/// 				<br/><br/>
/// 				Whether updating the price and/or quantity of a single-variation listing or a specific variation within a multiple-variation listing, the limit of items or item variations that can be modified with one call is four.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ReviseInventoryStatusRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// ReviseInventoryStatusYes4
    /// </summary>
    /// <remarks>
    /// 
    /// 								One <b>InventoryStatus</b> container is required for each item or item variation that is being revised. Whether updating the price and/or quantity of a single-variation listing or a specific variation within a multiple-variation listing, the limit of items or item variations that can be modified with one call is four.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("InventoryStatus")]

	public System.Collections.Generic.List<InventoryStatusType> InventoryStatus { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				The base response type for the <b>ReviseInventoryStatus</b> call. The response includes a <b>Fees</b> container and an <b>InventoryStatus</b> container for each item and/or item variation that was revised.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ReviseInventoryStatusResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// StartTime, EndTimeReviseInventoryStatusAlways4
    /// </summary>
    /// <remarks>
    /// 
    /// 								One <b>InventoryStatus</b> container is returned for each item or item variation that was revised. Whether updating the price and/or quantity of a single-variation listing or a specific variation within a multiple-variation listing, the limit of items or item variations that can be modified with one call is four.
    /// 								<br>
    /// 								<br>
    /// 								Note that the <b>SKU</b> field is returned as an empty tag if it is not defined for a single-variation listing.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("InventoryStatus")]

	public System.Collections.Generic.List<InventoryStatusType> InventoryStatus { get; set; }
    /// <summary>
    /// ReviseInventoryStatus4Always
    /// eBay.com Feeshttp://pages.ebay.com/help/sell/fees.html
    /// Fees by marketplacehttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/fees-by-marketplace.html
    /// Fees and creditshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/manage-fulfill-complete-sale-fees.html
    /// Final Value Feeshttp://pages.ebay.com/help/sell/fvf.html
    /// </summary>
    /// <remarks>
    /// 
    /// 								A <b>Fees</b> container is returned for each fixed-price listing that was modified with the <b>ReviseInventoryStatus</b> call. This container consists of the estimated listing fees for the revised listing, and the listing is identified in the <b>ItemID</b> field. Each type of fee is returned even if it is not applicable (has a value of <code>0.0</code>. The transaction fees are not in this container, as these values cannot be determined until a sale is made. Note that these fees are at the listing level, so if multiple variations within a multiple-variation listing were modified, the fees in this container would be cumulative totals, and would not single out the fees associated with each modified item variation.
    /// 								<br>
    /// 								<br>
    /// 								Please note that since fees are returned at the listing level, it is possible that the response will include one <b>Fees</b> container and four <b>InventoryStatus</b> containers if you made revisions to four different item variations within the same multiple-variation listing.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("Fees")]

	public System.Collections.Generic.List<InventoryFeesType> Fees { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// ReviseFixedPriceItem, ReviseInventoryStatus
/// Revise a listinghttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/revise-listing.html
/// </summary>
/// <remarks>
/// 
/// 				Enables a seller to revise a listing on a specified eBay site. To revise an active listing, the seller specifies the <b>ItemID</b> value for the listing. The seller makes one or multiple changes to the listing through the <b>Item</b> container, and the seller can also use one or more <b>DeletedField</b> tags to remove an optional field/setting from the listing.
/// 				<br>
/// 				<br>
/// 				After a multiple-quantity, fixed-price listing has one or more sales, or less than 12 hours remain before the listing is scheduled to end, you can not edit the values in the Listing Title, Primary Category, Secondary Category, Listing Duration, and Listing Type fields for that listing. The same applies to an auction listing that has at least one bid.
/// 				<br>
/// 				<br>
/// 				To revise a multiple-variation, fixed-price listing, the <b>ReviseFixedPriceItem</b> call should be used instead, as the <b>ReviseItem</b> call does not support variation-level edits.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ReviseItemRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// ReviseItemYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								The <b>Item</b> container is used to make changes to the active listing. The seller must pass in the <b>ItemID</b> value for the listing that is being revised. For anything else that the seller wishes to change, such as quantity or price, the seller should include this field in the call request and give it a new value.
    /// 								<br/><br/>
    /// 								If the seller wants to delete one or more optional settings in the listing, the seller should use the <b>DeletedField</b> tag.
    /// 							
    /// </remarks>

	public ItemType Item { get; set; }
    /// <summary>
    /// ReviseItemNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Specifies the name of a field to delete from a listing. The request can
    /// 								contain zero, one, or many instances of <b>DeletedField</b> (one for each field
    /// 								to be deleted). See the relevant field descriptions to determine when to
    /// 								use <b>DeletedField</b> (and potential consequences).
    /// 								<br><br>
    /// 								You cannot delete required fields from a listing.
    /// 								<br><br>
    /// 								Some fields are optional when you first list an item (e.g.,
    /// 								<b>SecondaryCategory</b>), but once they are set they cannot be deleted when you
    /// 								revise an item. Some optional fields cannot be deleted if the item has
    /// 								bids and/or ends within 12 hours. Some optional fields cannot be deleted
    /// 								if other fields depend on them.
    /// 								<br><br>
    /// 								Use values that match the case of the
    /// 								schema element names (<b>Item.PictureDetails.PictureURL</b>) or make the initial
    /// 								letter of each field name lowercase (<b>item.pictureDetails.pictureURL</b>).
    /// 								However, do not change the case of letters in the middle of a field name.
    /// 								For example, <b>item.picturedetails.pictureURL</b> is not allowed.
    /// 								<br><br>
    /// 								To delete a listing enhancement like <b>BoldTitle</b>, specify the value you are
    /// 								deleting in square brackets ("[ ]"); for example,
    /// 								<b>Item.ListingEnhancement[BoldTitle]</b>.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("DeletedField")]

	public System.Collections.Generic.List<string> DeletedField { get; set; }
    /// <summary>
    /// ReviseItemNo
    /// </summary>
    /// <remarks>
    /// 
    /// 							When the <b>VerifyOnly</b> is included and set as <code>true</code>, the active listing is not actually revised, but the same response is returned and the seller gets to see the expected fees based on the changes made, and can also view any listing recommendations if the <b>Item.IncludeRecommedations</b> boolean field is included and set to <code>true</code>.
    /// 							
    /// </remarks>

	public bool? VerifyOnly { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				The base response type for the <b>ReviseItem</b> call. The response includes the Item ID for the revised item, the SKU value for the item (if any), listing recommendations (if applicable), the estimated fees for the revised item (except the transaction fees, which aren't calculated until the item has sold), the start and end times of the listing, and other details.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ReviseItemResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// ReviseItemAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								The unique identifier for the revised listing. Note that the <b>ItemID</b> value does not change when a listing is revised, so this will be the same <b>ItemID</b> value that was passed in the call request.
    /// 								<br/><br/>
    /// 							
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// ReviseItemAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								This timestamp indicates the date and time when the listing was created on the eBay site. This value doesn't change when a listing is revised.
    /// 							
    /// </remarks>

	public System.DateTime? StartTime { get; set; }
    /// <summary>
    /// ReviseItemAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Date and time when the revised listing is scheduled to end based on the listing's start time and the listing duration value that was set for the listing. If the listing duration is 'GTC' (Good 'Til Cancelled), this value will be updated to one month in the future if the listing is automatically renewed after one month. GTC listings are automatically renewed each month according to the calendar day if quantity still exists for the item.
    /// 								<br>
    /// 								<br>
    /// 								<span class="tablenote"><b>Note:</b> 
    /// 									GTC is not applicable to auction listings.
    /// 								</span>
    /// 							
    /// </remarks>

	public System.DateTime? EndTime { get; set; }
    /// <summary>
    /// ReviseItemAlways
    /// eBay.com Feeshttp://pages.ebay.com/help/sell/fees.html
    /// Fees by marketplacehttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/fees-by-marketplace.html
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container is an array of fees associated with the revised listing. The fees in this container will not include any fees that are based on the purchase price (such as transaction fees) and only come into play when the listing has a sale.
    /// 								<br>
    /// 								<br>
    /// 								All listing fee types are returned, even if those fees are not applicable for the revised listing and are '0.0'.
    /// 								<br>
    /// 								<br>
    /// 								<span class="tablenote"><b>Note:</b> The currency used for all fees returned under the <b>Fees</b> container reflects the currency used for the listing site, and not necessarily in the seller's default/home currency. For example, if a Canadian seller is using the <b>ReviseItem</b> call to relist an item on the eBay US site, the currency type shown for each fee will be <code>USD</code> and not <code>CAD</code>.
    /// 								</span>
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("Fee", IsNullable = false)]

	public System.Collections.Generic.List<FeeType> Fees { get; set; }
    /// <summary>
    /// 10
    /// ReviseItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Unique identifier of the primary eBay category for the revised listing. This field is returned if the primary category was changed with the revision, and the primary category can only be changed if a fixed-price listing has no sales/auction listing has no bids, and the listing does not end within 12 hours.
    /// 								<br/><br/>
    /// 								This field can also be returned if the <b>Item.CategoryMappingAllowed</b> field was included and set to <code>true</code> in the request and the category ID passed in the <b>Item.PrimaryCategory</b> field was mapped to a new category ID by eBay. If the primary category has not changed or it has expired with no replacement, this field is not returned.
    /// 								<br/><br/>
    /// 							
    /// </remarks>

	public string CategoryID { get; set; }
    /// <summary>
    /// 10
    /// ReviseItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Unique identifier of the secondary eBay category for the revised listing. This field is returned if the secondary category was changed with the revision, and the secondary category can only be changed if a fixed-price listing has no sales/auction listing has no bids, and the listing does not end within 12 hours.
    /// 								<br/><br/>
    /// 								This field can also be returned if the <b>Item.CategoryMappingAllowed</b> field was included and set to <code>true</code> in the request and the category ID passed in the <b>Item.PrimaryCategory</b> field was mapped to a new category ID by eBay. If the primary category has not changed or it has expired with no replacement, this field is not returned.
    /// 								<br/><br/>
    /// 							
    /// </remarks>

	public string Category2ID { get; set; }
    /// <summary>
    /// ReviseItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 							This field is returned if the <b>VerifyOnly</b> field was included in the call request and set to <code>true</code>.
    /// 							<br/><br/>
    /// 							If the listing was revised in 'Verify Only' mode, the active listing is not actually revised, but the same response is returned and the seller gets to see the expected fees based on the changes made, and can also view any listing recommendations if the <b>Item.IncludeRecommedations</b> boolean input field was included and set to <code>true</code>.
    /// 							
    /// </remarks>

	public bool? VerifyOnly { get; set; }
    /// <summary>
    /// ReviseItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field is returned if an eBay special offer or promotion is applicable to the listing.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("DiscountReason")]

	public System.Collections.Generic.List<DiscountReasonCodeType> DiscountReason { get; set; }
    /// <summary>
    /// ReviseItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Provides a list of products recommended by eBay which match the item information
    /// 								provided by the seller.
    /// 							
    /// </remarks>

	public ProductSuggestionsType ProductSuggestions { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// 
/// 					GetMyMessages
/// 				
/// </summary>
/// <remarks>
/// 
/// 				This call can be used to mark one or more messages as 'Read', to flag one or more messages, and/or to move one or more messages to another My Messages folder. Any of these actions can be applied on up to 10 messages with one call.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ReviseMyMessagesRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// ReviseMyMessagesYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container is used to specify up to 10 messages (specified with their  <b>MessageID</b> values) on which to perform on or more actions. At least one <b>MessageID</b> value must be included in the request. <b>MessageID</b> values can be retrieved with the <b>GetMyMessages</b> call with the <b>DetailLevel</b> value set to <code>ReturnHeaders</code>.
    /// 								<br>
    /// 								<br>
    /// 								<span class="tablenote"><b>Note:</b> Messages in the Sent folder of My Messages cannot be moved, marked as read, or flagged. </span>
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("MessageID", IsNullable = false)]

	public System.Collections.Generic.List<string> MessageIDs { get; set; }
    /// <summary>
    /// ReviseMyMessagesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This boolean field is used to change the 'Read' status of the message(s) in the <b>MessageIDs</b> container. Including this field and setting its value to <code>true</code> will mark all messages in the <b>MessageIDs</b> container as 'Read'. Conversely, including this field and setting its value to <code>false</code> will mark all messages in the <b>MessageIDs</b> container as 'Unread'. The 'Read' status of a message can be retrieved by looking at the <b>Message.Read</b> boolean field of the <b>GetMyMessages</b> call response.
    /// 								<br>
    /// 								<br>
    /// 								In each <b>ReviseMyMessages</b> call, at least one of the following fields must be specified in the request: <b>Read</b>, <b>Flagged</b>, and <b>FolderID</b>.
    /// 								<br>
    /// 								<br>
    /// 								<span class="tablenote"><b>Note:</b> Messages in the Sent folder of My Messages cannot be moved, marked as read, or flagged. </span>
    /// 							
    /// </remarks>

	public bool? Read { get; set; }
    /// <summary>
    /// ReviseMyMessagesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This boolean field is used to change the 'Flagged' status of the message(s) in the <b>MessageIDs</b> container. Including this field and setting its value to <code>true</code> will flag all messages in the <b>MessageIDs</b> container. Conversely, including this field and setting its value to <code>false</code> will unflag all messages in the <b>MessageIDs</b> container. The 'Flagged' status of a message can be retrieved by looking at the <b>Message.Flagged</b> boolean field of the <b>GetMyMessages</b> call response.
    /// 								<br>
    /// 								<br>
    /// 								In each <b>ReviseMyMessages</b> call, at least one of the following fields must be specified in the request: <b>Read</b>, <b>Flagged</b>, and <b>FolderID</b>.
    /// 								<br>
    /// 								<br>
    /// 								<span class="tablenote"><b>Note:</b> Messages in the Sent folder of My Messages cannot be moved, marked as read, or flagged. </span>
    /// 							
    /// </remarks>

	public bool? Flagged { get; set; }
    /// <summary>
    /// ReviseMyMessagesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								A unique identifier of My Messages folder. A <b>FolderID</b> value is supplied if the user want to move the message(s) in the <b>MessageIDs</b> container to a different folder. <b>FolderID</b> values can be retrieved with the <b>GetMyMessages</b> call with the <b>DetailLevel</b> value set to <code>ReturnSummary</code>. <br>
    /// 								<br>
    /// 								In each <b>ReviseMyMessages</b> call, at least one of the following fields must be specified in the request: <b>Read</b>, <b>Flagged</b>, and <b>FolderID</b>.
    /// 								<br>
    /// 								<br>
    /// 								<span class="tablenote"><b>Note:</b> Messages in the Sent folder of My Messages cannot be moved, marked as read, or flagged. </span>
    /// 							
    /// </remarks>

	public long? FolderID { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				The response of a <b>ReviseMyMessages</b> call only includes the standard response fields for Trading API calls, such as the <b>Ack</b>  field (to indicate the success or failure of the call), the timestamp, and an <b>Errors</b> container (if there were any errors and/or warnings).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ReviseMyMessagesResponseType : AbstractResponseType{

#region 属性
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// GetMyMessages
/// </summary>
/// <remarks>
/// 
/// 				This call can be used to add, remove, or rename a custom folder in <b>My eBay Messages</b>. Note that the Inbox and Sent folders cannot be removed or renamed in <b>My eBay Messages</b>.
/// 				<br/><br/>
/// 				A user can have up to 10 custom folders in <b>My eBay Messages</b>, and it is possible to add, remove, or rename up to 10 custom folders with one <b>ReviseMyMessagesFolders</b> call
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ReviseMyMessagesFoldersRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// ReviseMyMessagesFoldersYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								This required field is used to indicate the type of operation to perform (add, remove, or rename a folder). See the enumeration descriptions below for more information on the usage, requirements, and limitations on each operation.
    /// 							
    /// </remarks>

	public MyMessagesFolderOperationCodeType? Operation { get; set; }
    /// <summary>
    /// 10ReviseMyMessagesFoldersConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								The eBay-generated unique identifier for a custom folder in <b>My eBay Messages</b>. The <b>FolderID</b> value is required for the 'Rename' and 'Remove' operations, but not for the 'Display' (add) operation. <b>FolderID</b> values can be retrieved by calling <b>GetMyMessages</b> with a <b>DetailLevel</b> value set to <code>ReturnSummary</code>, or the <b>FolderID</b> value for a <b>My eBay Messages</b> folder can be seen at the end of the browser's URL field when you navigate to that folder in <b>My eBay Messages</b>.
    /// 								<br/><br/>
    /// 								<span class="tablenote"><b>Note: </b> If multiple folders will be renamed with one call, the user must pay close attention to the order of the <b>FolderID</b> and <b>FolderName</b> fields, as eBay will process these requests in order according to the placement of the the <b>FolderID</b> and <b>FolderName</b> fields. So, the existing folder identified by the first <b>FolderID</b> field in the request payload will get renamed to the folder name passed into the first <b>FolderName</b> field in the request payload, and so on.
    /// 								</span>
    /// 								
    /// </remarks>
[System.Xml.Serialization.XmlElement("FolderID")]

	public System.Collections.Generic.List<long> FolderID { get; set; }
    /// <summary>
    /// 1510ReviseMyMessagesFoldersConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 							The user-specified name of the <b>My eBay Messages</b> folder. The <b>FolderName</b> value is required for the 'Display' (add) and 'Rename' operations, but not for the 'Remove' operation. In a 'Display' (add) operation, the name passed into the <b>FolderName</b> field is the name of the new folder. In a 'Rename' operation, the name passed into the <b>FolderName</b> field will be the new name of the existing folder that is specified through the corresponding <b>FolderID</b> field.
    /// 							<br/><br/>
    /// 							<b>FolderName</b> values can be retrieved by calling <b>GetMyMessages</b> with a <b>DetailLevel</b> value set to <code>ReturnSummary</code>, or the <b>FolderName</b> value for a <b>My eBay Messages</b> folder can be seen when you navigate to <b>My eBay Messages</b>.
    /// 							<br/><br/>
    /// 							<span class="tablenote"><b>Note: </b> If multiple folders will be renamed with one call, the user must pay close attention to the order of the <b>FolderID</b> and <b>FolderName</b> fields, as eBay will process these requests in order according to the placement of the the <b>FolderID</b> and <b>FolderName</b> fields. So, the existing folder identified by the first <b>FolderID</b> field in the request payload will get renamed to the folder name passed into the first <b>FolderName</b> field in the request payload, and so on.
    /// 							</span>
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("FolderName")]

	public System.Collections.Generic.List<string> FolderName { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				The response of a <b>ReviseMyMessagesFolders</b> call only includes the standard response fields for Trading API calls, such as the <b>Ack</b>  field (to indicate the success or failure of the call), the timestamp, and an <b>Errors</b> container (if there were any errors and/or warnings).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ReviseMyMessagesFoldersResponseType : AbstractResponseType{

#region 属性
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Revokes a token before it would otherwise expire.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class RevokeTokenRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// RevokeTokenNo
    /// </summary>
    /// <remarks>
    /// 
    /// 							Cancels notification subscriptions for the user/application if set to true. Default value is false.
    /// 						
    /// </remarks>

	public bool? UnsubscribeNotification { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				The response of a <b>RevokeToken</b> call only includes the standard response fields for Trading API calls, such as the <b>Ack</b>  field (to indicate the success or failure of the call), the timestamp, and an <b>Errors</b> container (if there were any errors and/or warnings).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class RevokeTokenResponseType : AbstractResponseType{

#region 属性
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This call enables a seller to send an order invoice to a buyer. Optionally, and when applicable, this call can also be used to update the shipping service options available for shipment, to provide payment or checkout instructions to the buyer, to make a cost adjustment for the order/order line item, or to provide one or more offline payment methods (for orders where offline payment is an option).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class SendInvoiceRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// SendInvoiceConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Unique identifier of the eBay listing. Unless <b>OrderID</b> or <b>OrderLineItemID</b> is provided in the request, the <b>ItemID</b> value (or <b>SKU</b> value) is conditionally required and must be paired with the corresponding <b>TransactionID</b> value to identify an order line item. For a multiple line item order, <b>OrderID</b> should be used.
    /// 							
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// SendInvoiceConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Unique identifier for an eBay sales transaction. This identifier is created once there is a commitment from a buyer to purchase an item. Since an auction listing can only have one sales transaction during the duration of the listing, the <b>TransactionID</b> value for auction listings is always <code>0</code>. 
    /// 								<br/><br/>
    /// 								<span class="tablenote"><b>Note: </b> Beginning in July 2024, non-zero transaction IDs will start being returned for auction listings. If necessary, update code to handle non-zero transaction IDs for auction transactions before this time. 
    /// 								</span>
    /// 								<br>
    /// 								Unless <b>OrderID</b> or <b>OrderLineItemID</b> is provided in the request, the <b>TransactionID</b> value is required and must be paired with the corresponding <b>ItemID</b> value to identify an order line item. For a multiple line item order, <b>OrderID</b> should be used.
    /// 							
    /// </remarks>

	public string TransactionID { get; set; }
    /// <summary>
    /// 40
    /// SendInvoiceConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								A unique identifier that identifies a single line item or multiple line
    /// 								item order.
    /// 								<br><br>
    /// 								Unless the <b>ItemID</b> value (or <b>SKU</b> value) and corresponding <b>TransactionID</b> value, or the <b>OrderLineItemID</b> value is provided in the request to identify a single line item order, the <b>OrderID</b> value must be specified. If <b>OrderID</b> value is specified, <b>OrderLineItemID</b>, <b>ItemID</b>, <b>TransactionID</b>, and <b>SKU</b> fields are ignored if present in the same request.
    /// 								<br><br>
    /// 									<span class="tablenote"><b>Note: </b> 
    /// 									Note that the unique identifier of a 'non-immediate payment' order will change as it goes from an unpaid order to a paid order. Due to this scenario, all Trading API calls that accept Order ID values as filters in the request payload will support the identifiers for both unpaid and paid orders. 
    /// 									<br><br>
    /// 									Sellers can check to see if an order has been paid by looking for a value of <code>Complete</code> in the <b>CheckoutStatus.Status</b> field in the response of <b>GetOrders</b> call, or in the <b>Status.CompleteStatus</b> field in the response of <b>GetItemTransactions</b> or <b>GetSellerTransactions</b> call. Sellers should  not fulfill orders until buyer has made payment.
    /// 								</span>
    /// 							
    /// </remarks>

	public string OrderID { get; set; }
    /// <summary>
    /// SendInvoiceNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								If the buyer has an international shipping address, use this container to offer up to four international shipping service options (or five if one of the shipping service options is Global Shipping Program or eBay International Shipping). If one or more international shipping service options are offered through this container, the (domestic) <b>ShippingServiceOptions</b> container should not be included in the same request.
    /// 								<br>
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("InternationalShippingServiceOptions")]

	public System.Collections.Generic.List<InternationalShippingServiceOptionsType> InternationalShippingServiceOptions { get; set; }
    /// <summary>
    /// SendInvoiceNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								If the buyer has a domestic shipping address, use this container
    /// 								to offer up to four domestic shipping service options. If one or more domestic
    /// 								shipping service options are offered through this container,  the <b>InternationalShippingServiceOptions</b> container should
    /// 								not be included in the same request.
    /// 								<br>
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("ShippingServiceOptions")]

	public System.Collections.Generic.List<ShippingServiceOptionsType> ShippingServiceOptions { get; set; }
    /// <summary>
    /// SendInvoiceNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container is used if the seller wishes to apply sales tax to the order if the buyer lives in a state/jurisdiction where sales tax is not already collected automatically by eBay and remitted to the tax authority. The amount of sales tax applied to the order is dependent on the sales tax rate in the buyer's state and whether sales tax is being applied to the cost of the order only or the cost of the order plus shipping and handling.
    /// 								<br><br>
    /// 								<span class="tablenote"><b>Note: </b> Buyers in all 50 US states and DC are automatically charged sales tax for eBay purchases, and eBay collects and remits this sales tax to the proper taxing authority on the buyer's behalf. Because of this, if a sales tax percentage rate is applied to a listing by a seller in one of these states, this field will be ignored during the checkout process.
    /// 								<br><br>
    /// 								Currently, sales tax percentage rates can only be specified by sellers in Canada and 5 US territories, including American Samoa (AS), Guam (GU), Northern Mariana Islands (MP), Palau (PW), and Virgin Islands (VI).
    /// 								</span>
    /// 							
    /// </remarks>

	public SalesTaxType SalesTax { get; set; }
    /// <summary>
    /// SendInvoiceNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field should only be used if the seller needs to add one or more offline payment options for an order that requires/supports offline payment. A seller should not submit any online payment methods here since eBay now controls the available online payment options that are available to buyers, and not the seller.
    /// 								</span>
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("PaymentMethods")]

	public System.Collections.Generic.List<BuyerPaymentMethodCodeType> PaymentMethods { get; set; }
    /// <summary>
    /// 500
    /// SendInvoiceNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								 This field allows the seller to provide a message or instructions
    /// 								 regarding checkout/payment, or the return policy.
    /// 							
    /// </remarks>

	public string CheckoutInstructions { get; set; }
    /// <summary>
    /// true
    /// SendInvoiceNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field is included and set to <code>true</code> if the seller wishes to receive an email copy of the invoice sent to the buyer.
    /// 							
    /// </remarks>

	public bool? EmailCopyToSeller { get; set; }
    /// <summary>
    /// 50
    /// SendInvoiceConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								The seller's unique identifier for an item that is being tracked by this SKU. If <b>OrderID</b> or <b>OrderLineItemID</b> are not provided, both <b>SKU</b> (or <b>ItemID</b>) and corresponding <b>TransactionID</b> must be provided to uniquely identify a single line item order. For a multiple line item order, <b>OrderID</b> must be used.
    /// 								<br>
    /// 								<br>
    /// 								This field should only be used if the <b>Item.InventoryTrackingMethod</b> field (set with the <b>AddFixedPriceItem</b> or <b>RelistFixedPriceItem</b> calls) is set to <code>SKU</code>.
    /// 							
    /// </remarks>

	public string SKU { get; set; }
    /// <summary>
    /// SendInvoiceConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								A unique identifier for an eBay order line item. This identifier is created as soon as there is a commitment to buy (bidder wins the auction, buyer clicks buy button, or buyer purchases item through <b>PlaceOffer</b> call).
    /// 								<br>
    /// 								<br>
    /// 								Unless the <b>ItemID</b> (or <b>SKU</b>) and corresponding <b>TransactionID</b> is used to
    /// 								identify a single line item order, or the <b>OrderID</b> is used to identify a
    /// 								single or multiple line item order, the
    /// 								<b>OrderLineItemID</b> must be specified. For a multiple line item order, <b>OrderID</b> should be used. If <b>OrderLineItemID</b> is specified,
    /// 								<b>ItemID</b>, <b>TransactionID</b>, and <b>SKU</b> are ignored if present in the same
    /// 								request.
    /// 							
    /// </remarks>

	public string OrderLineItemID { get; set; }
    /// <summary>
    /// SendInvoiceConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field allows the seller to adjust the total cost of the order to account for an extra charge or to pass down a discount to the buyer. <br><br>
    /// 								The currency used in this field must be the same currency of the listing site. A positive value in this field indicates that the amount is an extra charge being paid to the seller by the buyer, and a negative value indicates that the amount is a discount given to the buyer by the seller.
    /// 						  
    /// </remarks>

	public AmountType AdjustmentAmount { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				The response of a <b>SendInvoice</b> call only includes the standard response fields for Trading API calls, such as the <b>Ack</b>  field (to indicate the success or failure of the call), the timestamp, and an <b>Errors</b> container (if there were any errors and/or warnings).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class SendInvoiceResponseType : AbstractResponseType{

#region 属性
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// GetMessagePreferences
/// </summary>
/// <remarks>
/// 
/// 				Enables a seller to add custom Ask Seller a Question (ASQ) subjects to their
/// 				Ask a Question page, or to reset any custom subjects to their default values.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class SetMessagePreferencesRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// SetMessagePreferencesYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container can be used to set customized ASQ subjects, or it can be used to reset the ASQ subjects to the eBay defaults. Up to nine customized ASQ subjects can be set.
    /// 							
    /// </remarks>

	public ASQPreferencesType ASQPreferences { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				The response of a <b>SetMessagePreferences</b> call only includes the standard response fields for Trading API calls, such as the <b>Ack</b>  field (to indicate the success or failure of the call), the timestamp, and an <b>Errors</b> container (if there were any errors and/or warnings).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class SetMessagePreferencesResponseType : AbstractResponseType{

#region 属性
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// GetNotificationPreferences
/// Platform Notifications Guidehttps://developer.ebay.com/api-docs/static/platform-notifications-landing.html
/// </summary>
/// <remarks>
/// 
/// 				Manages notification and alert preferences for applications and users.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class SetNotificationPreferencesRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// SetNotificationPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Specifies application-level event preferences that have been enabled,
    /// 								including the URL to which notifications should be delivered and whether
    /// 								notifications should be enabled or disabled (although the
    /// 								<b>UserDeliveryPreferenceArray</b> input property specifies specific
    /// 								notification subscriptions).
    /// 							
    /// </remarks>

	public ApplicationDeliveryPreferencesType ApplicationDeliveryPreferences { get; set; }
    /// <summary>
    /// SetNotificationPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Specifies events and whether or not they are enabled.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("NotificationEnable", IsNullable = false)]

	public System.Collections.Generic.List<NotificationEnableType> UserDeliveryPreferenceArray { get; set; }
    /// <summary>
    /// SetNotificationPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Specifies user data for notification settings, such as mobile phone number.
    /// 							
    /// </remarks>

	public NotificationUserDataType UserData { get; set; }
    /// <summary>
    /// SetNotificationPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Characteristics or details of an event such as type, name and value.
    /// 								Currently can only be set for wireless applications.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("EventProperty")]

	public System.Collections.Generic.List<NotificationEventPropertyType> EventProperty { get; set; }
    /// <summary>
    /// SetNotificationPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Specifies up to 25 ApplicationDeliveryPreferences.DeliveryURLDetails.DeliveryURLName to associate with a user token sent in a SetNotificationPreferences request. To specify multiple DeliveryURLNames, create separate instances of ApplicationDeliveryPreferences.DeliveryURLDetails.DeliveryURLName, and then enable up to 25 DeliveryURLNames by including them in comma-separated format in this field.
    /// 							
    /// </remarks>

	public string DeliveryURLName { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				The response of a <b>SetNotificationPreferences</b> call only includes the standard response fields for Trading API calls, such as the <b>Ack</b>  field (to indicate the success or failure of the call), the timestamp, and an <b>Errors</b> container (if there were any errors and/or warnings).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class SetNotificationPreferencesResponseType : AbstractResponseType{

#region 属性
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// GetShippingDiscountProfiles
/// Shipping discount profileshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/shipping-discount-profiles.html
/// </summary>
/// <remarks>
/// 
/// 				This call enables a seller to create and manage shipping discounts rules. These are the same shipping discount rules that can be created or managed in My eBay Shipping Preferences.
/// 				<br/><br/>
/// 				The types of shipping discount rules that can be created and managed with this call include flat-rate shipping rules, calculated shipping rules, and promotional shipping rules. This call can also be used by sellers to set whether or not they allow buyers to combine separate line items into one Combined Invoice order, and how many days they allow buyers to perform that action.
/// 				<br/><br/>
/// 				A seller can only create, update, or delete one discount rule type with each call. The action to take (either <code>Add</code>, <code>Update</code>, or <code>Delete</code>) is set and controlled with the <b>ModifyActionCode</b> field.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class SetShippingDiscountProfilesRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// SetShippingDiscountProfilesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								The three-digit code of the currency to be used for shipping discounts on  Combined Invoice orders. A discount profile can only be associated with a listing if the <b>CurrencyID</b> value of the profile matches the <b>Item.Currency</b> value specified in a listing. This field is required if the user is adding or updating one or more shipping discount profiles.
    /// 								<br><br>
    /// 								Note that There is a <b>currencyID</b> attribute on all   <b>SetShippingDiscountProfiles</b> elements involving money. To avoid a call error, be sure to use the same currency type in these attributes as what is set for the <b>CurrencyID</b> field.
    /// 							
    /// </remarks>

	public CurrencyCodeType? CurrencyID { get; set; }
    /// <summary>
    /// SetShippingDiscountProfilesYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field is used to specify the number of days after the purchase of an
    /// 								item that the buyer or seller can combine multiple and mutual order
    /// 								line items into one Combined Invoice order. In a Combined Invoice order,
    /// 								the buyer makes one payment for all order line items, hence only unpaid
    /// 								order line items can be combined into a Combined Invoice order.
    /// 							
    /// </remarks>

	public CombinedPaymentPeriodCodeType? CombinedDuration { get; set; }
    /// <summary>
    /// SetShippingDiscountProfilesYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field is used to set which action is being taken (<code>Add</code>, <code>Update</code>, or <code>Delete</code>) in the call. If you are adding a shipping discount rule, you will have to supply a name for that shipping discount profile. If you want to update or delete a shipping discount profile, you'll have to provide the unique identifier of this rule through the corresponding containers. The unique identifiers of these rules can be retrieved with the <b>GetShippingDiscountRules</b> call, or the seller can view these identifiers in My eBay Shipping Preferences.
    /// 							
    /// </remarks>

	public ModifyActionCodeType? ModifyActionCode { get; set; }
    /// <summary>
    /// SetShippingDiscountProfilesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container allows you to create, update, or delete a flat-rate shipping discount profile.
    /// 							
    /// </remarks>

	public FlatShippingDiscountType FlatShippingDiscount { get; set; }
    /// <summary>
    /// SetShippingDiscountProfilesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container allows you to create, update, or delete a calculated shipping discount profile.
    /// 							
    /// </remarks>

	public CalculatedShippingDiscountType CalculatedShippingDiscount { get; set; }
    /// <summary>
    /// SetShippingDiscountProfilesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container allows you to create, update, or delete a calculated handling discount profile.
    /// 							
    /// </remarks>

	public CalculatedHandlingDiscountType CalculatedHandlingDiscount { get; set; }
    /// <summary>
    /// SetShippingDiscountProfilesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container allows you to create, update, or delete a promotional shipping discount profile.
    /// 							
    /// </remarks>

	public PromotionalShippingDiscountDetailsType PromotionalShippingDiscountDetails { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				The response of a <b>SetShippingDiscountProfiles</b> call only includes the standard response fields for Trading API calls, such as the <b>Ack</b>  field (to indicate the success or failure of the call), the timestamp, and an <b>Errors</b> container (if there were any errors and/or warnings).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class SetShippingDiscountProfilesResponseType : AbstractResponseType{

#region 属性
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// Manage store categorieshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/store-categories.html
/// </summary>
/// <remarks>
/// 
/// 				This call allows you to set or modify the category structure of an eBay Store. Sellers must have an eBay Store subscription in order to use this call.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class SetStoreCategoriesRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// SetStoreCategoriesYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								Specifies the type of action (Add, Move, Delete, or Rename) to carry out
    /// 								for the specified eBay Store categories.
    /// 							
    /// </remarks>

	public StoreCategoryUpdateActionCodeType? Action { get; set; }
    /// <summary>
    /// SetStoreCategoriesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Items can only be contained within child categories. A parent category
    /// 								cannot contain items. If adding, moving, or deleting categories displaces
    /// 								items, you must specify a destination child category under which the
    /// 								displaced items will be moved. The destination category must have no
    /// 								child categories.
    /// 							
    /// </remarks>

	public long? ItemDestinationCategoryID { get; set; }
    /// <summary>
    /// SetStoreCategoriesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								When adding or moving store categories, specifies the category under
    /// 								which the listed categories will be located. To add or move categories to
    /// 								the top level, set the value to -999.
    /// 							
    /// </remarks>

	public long? DestinationParentCategoryID { get; set; }
    /// <summary>
    /// SetStoreCategoriesYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								Specifies the store categories on which to act.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("CustomCategory", IsNullable = false)]

	public System.Collections.Generic.List<StoreCustomCategoryType> StoreCategories { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Base response of the <b>SetStoreCategories</b> call. Returns the status of the eBay Store category changes.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class SetStoreCategoriesResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// SetStoreCategoriesAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								The task ID associated with the category structure change request. For a
    /// 								simple change, the <b>SetStoreCategories</b> call is processed synchronously.
    /// 								That is, simple changes are made immediately and then the response is
    /// 								returned. For synchronous processing, the task ID in the response is 0.
    /// 								If the category structure changes affect many listings, the changes will
    /// 								be processed asynchronously and the task ID will be a positive number.
    /// 								Use the non-zero task ID with <b>GetStoreCategoryUpdateStatus</b> to monitor
    /// 								the status of asynchronously processed changes.
    /// 							
    /// </remarks>

	public long? TaskID { get; set; }
    /// <summary>
    /// SetStoreCategoriesAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								When an eBay Store category structure change is processed synchronously, the status
    /// 								is returned as 'Complete' or 'Failed'. For asynchronously processed changes,
    /// 								the status is reported as 'InProgress' or 'Pending'. Use <b>GetStoreCategoryUpdateStatus</b> to
    /// 								monitor the status of asynchronously processed changes.
    /// 							
    /// </remarks>

	public TaskStatusCodeType? Status { get; set; }
    /// <summary>
    /// SetStoreCategoriesAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Contains hierarchy data for eBay Store categories that you have created/modified.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("CustomCategory", IsNullable = false)]

	public System.Collections.Generic.List<StoreCustomCategoryType> CustomCategory { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// GetTaxTable
/// Multi-jurisdiction sales taxhttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/taxes.html
/// </summary>
/// <remarks>
/// 
/// 				This call allows you to add or modify sales tax rates for one or more tax jurisdictions within the specified site. Any additions or modifications made with this call is saved in the seller's Sales Tax Table in My eBay.
/// 				<br/><br/>
/// 				Sales Tax Tables are only supported on the US and Canada (English and French versions) sites, so this call is only applicable to those sites. To view their current Sales Tax Table, a seller may go to the Sales Tax Table in My eBay, or they can make a <b>GetTaxTable</b> call.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class SetTaxTableRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// SetTaxTableYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								This table is used to set or modify sales tax rates for one or more tax jurisdictions within that country. A <b>TaxJurisdiction</b> container is required for each tax jurisdiction that is being added/updated.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("TaxJurisdiction", IsNullable = false)]

	public System.Collections.Generic.List<TaxJurisdictionType> TaxTable { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				The response of a <b>SetTaxTable</b> call only includes the standard response fields for Trading API calls, such as the <b>Ack</b>  field (to indicate the success or failure of the call), the timestamp, and an <b>Errors</b> container (if there were any errors and/or warnings).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class SetTaxTableResponseType : AbstractResponseType{

#region 属性
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Enables users to add, modify, or delete a pinned note for any item that is being tracked in the My eBay All Selling and All Buying areas.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class SetUserNotesRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// SetUserNotesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Unique identifier of the listing to which the My eBay note will be
    /// 								attached. Notes can only be added to items that are
    /// 								currently being tracked in My eBay.
    /// 							
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// SetUserNotesYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								The seller must include this field and set it to 'AddOrUpdate' to add a new user note or update an existing user note, or set it to 'Delete' to delete an existing user note.
    /// 							
    /// </remarks>

	public SetUserNotesActionCodeType? Action { get; set; }
    /// <summary>
    /// 255
    /// SetUserNotesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field is needed if the <b>Action</b> is <code>AddOrUpdate</code>. The text supplied in this field will
    /// 								completely replace any existing My eBay note for the
    /// 								specified item.
    /// 							
    /// </remarks>

	public string NoteText { get; set; }
    /// <summary>
    /// SetUserNotesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Unique identifier for the order line item to which the My
    /// 								eBay note will be attached. Notes can only be added to order line items
    /// 								that are currently being tracked in My eBay. Buyers can
    /// 								view user notes made on order line items in the
    /// 								<b>PrivateNotes</b> field of the <b>WonList</b> container in <b>GetMyeBayBuying</b>, and
    /// 								sellers can view user notes made on order line items in
    /// 								the <b>PrivateNotes</b> field of the <b>SoldList</b> and <b>DeletedFromSoldList</b>
    /// 								containers in <b>GetMyeBaySellinging</b>.
    /// 								<br>
    /// 								<br>
    /// 								The <b>TransactionID</b> value for auction listings is always <code>0</code> since there can be only one winning bidder/one sale for an auction listing.
    /// 								<br/><br/>
    /// 								<span class="tablenote"><b>Note: </b> Beginning in July 2024, non-zero transaction IDs will start being returned for auction listings. If necessary, update code to handle non-zero transaction IDs for auction transactions before this time. 
    /// 							
    /// </remarks>

	public string TransactionID { get; set; }
    /// <summary>
    /// SetUserNotesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Container consisting of name-value pairs that identify (match) one
    /// 								variation within a fixed-price, multiple-variation listing. The specified
    /// 								name-value pair(s) must exist in the listing specified by either the
    /// 								<b>ItemID</b> or <b>SKU</b> values specified in the request. If a specific order line
    /// 								item is targeted in the request with an
    /// 								<b>ItemID</b>/<b>TransactionID</b> pair or an <b>OrderLineItemID</b> value, any specified
    /// 								<b>VariationSpecifics</b> container is ignored by the call.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("NameValueList", IsNullable = false)]

	public System.Collections.Generic.List<NameValueListType> VariationSpecifics { get; set; }
    /// <summary>
    /// SetUserNotesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								SKU value of the item variation to which the My eBay note will be
    /// 								attached. Notes can only be added to items that are currently being
    /// 								tracked in My eBay. A SKU (stock keeping unit) value is defined by and
    /// 								used by the seller to identify a variation within a fixed-price, multiple-
    /// 								variation listing. The SKU value is assigned to a variation of an item
    /// 								through the <b>Variations.Variation.SKU</b> element.
    /// 								<br>
    /// 								<br>
    /// 								This field can only be used if the <b>Item.InventoryTrackingMethod</b> field
    /// 								(set with the <b>AddFixedPriceItem</b> or <b>RelistFixedPriceItem</b> calls) is set to
    /// 								SKU.
    /// 								<br>
    /// 								<br>
    /// 								If a specific order line item is targeted in the request
    /// 								with an <b>ItemID</b>/<b>TransactionID</b> pair or an <b>OrderLineItemID</b> value, any
    /// 								specified <b>SKU</b> is ignored by the call.
    /// 							
    /// </remarks>

	public string SKU { get; set; }
    /// <summary>
    /// SetUserNotesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 							A unique identifier for an eBay order line item. This field is created as
    /// 							soon as there is a commitment to buy from the seller. <b>OrderLineItemID</b> can be used in the input instead of
    /// 							an <b>ItemID</b>/<b>TransactionID</b> pair to identify an order line item.
    /// 							<br>
    /// 							<br>
    /// 							Notes can only be added to order line items that are currently being
    /// 							tracked in My eBay. Buyers can view user notes made on order line items in
    /// 							the <b>PrivateNotes</b> field of the <b>WonList</b> container in <b>GetMyeBayBuying</b>, and
    /// 							sellers can view user notes made on order line items in the <b>PrivateNotes</b>
    /// 							field of the <b>SoldList</b> and <b>DeletedFromSoldList</b> containers in
    /// 							<b>GetMyeBaySellinging</b>.
    /// 						
    /// </remarks>

	public string OrderLineItemID { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				The response of a <b>SetUserNotes</b> call only includes the standard response fields for Trading API calls, such as the <b>Ack</b>  field (to indicate the success or failure of the call), the timestamp, and an <b>Errors</b> container (if there were any errors and/or warnings).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class SetUserNotesResponseType : AbstractResponseType{

#region 属性
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// GetUserPreferences
/// User preferenceshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/user-mgmt-prefs.html
/// </summary>
/// <remarks>
/// 
/// 				This call allows an eBay user to set/modify numerous seller account preferences.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class SetUserPreferencesRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// SetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container is included if the seller wishes to receive contact information for unsuccessful bidders. This preference is only applicable for auction listings.
    /// 							
    /// </remarks>

	public BidderNoticePreferencesType BidderNoticePreferences { get; set; }
    /// <summary>
    /// SetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container is included if the seller wishes to set the preference for allowing Combined Invoice orders for cases where the buyer has multiple unpaid order line items from the same seller.
    /// 							
    /// </remarks>

	public CombinedPaymentPreferencesType CombinedPaymentPreferences { get; set; }
    /// <summary>
    /// SetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container is included if the seller wishes to set various payment preferences. One or more preferences may be set or modified under this container. Payment preferences specified in a <b>SetUserPreferences</b> call override the settings in My eBay payment preferences.
    /// 							
    /// </remarks>

	public SellerPaymentPreferencesType SellerPaymentPreferences { get; set; }
    /// <summary>
    /// SetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container is included if the seller wishes to set preferences for displaying items on a buyer's Favorite Sellers' Items page or Favorite Sellers' Items digest. One or more preferences may be set or modified under this container.
    /// 							
    /// </remarks>

	public SellerFavoriteItemPreferencesType SellerFavoriteItemPreferences { get; set; }
    /// <summary>
    /// SetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container is included if the seller wishes to set preferences for the end-of-auction email sent to the winning bidder. These preferences allow the seller to customize the Email that is sent to buyer at the end of the auction. One or more preferences may be set or modified under this container. These preferences are only applicable for auction listings.
    /// 							
    /// </remarks>

	public EndOfAuctionEmailPreferencesType EndOfAuctionEmailPreferences { get; set; }
    /// <summary>
    /// false
    /// SetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field is included and set to <code>true</code> if the seller wishes to email the shipment's tracking number to the buyer.
    /// 							
    /// </remarks>

	public bool? EmailShipmentTrackingNumberPreference { get; set; }
    /// <summary>
    /// false
    /// SetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field is included and set to <code>true</code> if the seller wishes to require the buyer to provide a shipping phone number upon checkout. Some shipping carriers require the receiver's phone number.
    /// 							
    /// </remarks>

	public bool? RequiredShipPhoneNumberPreference { get; set; }
    /// <summary>
    /// SetUserPreferencesNo
    /// http://pages.ebay.com/sell/UPI/upiassistant/index.htmlUnpaid Item Assistant
    /// http://pages.ebay.com/sell/UPI/standardprocess/index.htmlUnderstanding the New Unpaid Item Process
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container is included if the seller wishes to set or modify Unpaid Item preferences. The Unpaid Item preferences automatically opens an Unpaid Item case on the behalf of the seller if the buyer has not paid for the order after a specified number of days. One or more preferences may be set or modified under this container.
    /// 							
    /// </remarks>

	public UnpaidItemAssistancePreferencesType UnpaidItemAssistancePreferences { get; set; }
    /// <summary>
    /// SetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container is included if the seller wishes to set the preference for sending a purchase reminder email to buyers.
    /// 							
    /// </remarks>

	public PurchaseReminderEmailPreferencesType PurchaseReminderEmailPreferences { get; set; }
    /// <summary>
    /// SetUserPreferencesNo
    /// Same day handlinghttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/shipping-handling-same-day.htmldetails about dispatch cut off times
    /// </summary>
    /// <remarks>
    /// 
    /// 									This container is included if the seller wishes to set/modify the order cut off time for same-day shipping. If the seller specifies a value of <code>0</code> in <strong>Item.DispatchTimeMax</strong> to offer same day handling when listing an item, the seller's shipping time commitment depends on the order cut off time set for the listing site, as indicated by the <strong>DispatchCutoffTimePreference.CutoffTime</strong> field.
    /// 									<br>
    /// 									<br>
    /// 									<span class="tablenote"><b>Note:</b> For sellers opted in to the feature that supports different order cut off times for each business day, this container cannot be used to change the order cut off for one or more business days. If this container is used, it will have no effect on any of the order cut off times configured for the seller. In order for the seller to change and/or confirm the actual order cutoff times for same-day handling, that seller should go to Shipping Preferences in My eBay.</span>
    /// 								
    /// </remarks>

	public DispatchCutoffTimePreferencesType DispatchCutoffTimePreference { get; set; }
    /// <summary>
    /// false
    /// SetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								If this flag is included and set to <code>true</code>, the seller's new listings will enable the Global Shipping Program by default.
    /// 								<br/><br/>
    /// 								<span class="tablenote">
    /// 								<strong>Note:</strong> This field is ignored for sellers who are not opted in to the Global Shipping Program (when GetUserPreferences returns <strong>OfferGlobalShippingProgramPreference</strong> with a value of <code>false</code>).
    /// 								</span>
    /// 							
    /// </remarks>

	public bool? GlobalShippingProgramListingPreference { get; set; }
    /// <summary>
    /// false
    /// SetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 							If this flag is included and set to <code>true</code>, and the seller specifies an international shipping service to a particular country for a given listing, the specified service will take precedence and be the listing's default international shipping option for buyers in that country, rather than the Global Shipping Program. The Global Shipping Program will still be the listing's default option for shipping to any Global Shipping-eligible country for which the seller does <em>not</em> specify an international shipping service.
    /// 							<br/><br/>
    /// 							If this flag is set to <code>false</code>, the Global Shipping Program will be each Global Shipping-eligible listing's default option for shipping to any Global Shipping-eligible country, regardless of any international shipping service that the seller specifies for the listing.
    /// 						
    /// </remarks>

	public bool? OverrideGSPserviceWithIntlService { get; set; }
    /// <summary>
    /// false
    /// SetUserPreferencesNo
    /// Out-of-Stock controlhttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/out-of-stock.html
    /// </summary>
    /// <remarks>
    /// 
    /// 							 If this flag is included and set to <code>true</code>, it enables the Out-of-Stock feature. A seller would use this feature to keep Fixed-Price GTC (Good 'Til Canceled) listings alive even when the "quantity available" value goes to 0 (zero). This is useful when waiting for additional stock and eliminates the need to end the listing and then recreating it when stock arrives. <br/><br/>
    /// 							 While the "quantity available" value is 0, the listing would be hidden from eBay search and if that item was specifically searched for with <b>GetItem</b> (or related call), the element <b>HideFromSearch</b> would be returned as 'true' and <b>ReasonHideFromSearch</b> would be returned as 'OutOfStock'.
    /// 							 <br/><br/>
    /// 							 When stock is available, the seller can use the <b>Revise</b> calls to update the inventory of the item (through the <b>Item.Quantity</b> or <b>Item.Variations.Variation.Quantity</b> fields) and the listing would appear again.
    /// 							 <br/><br/>
    /// 							 You can return the value of this flag using the <a href="GetUserPreferences.html#Request.ShowOutOfStockControlPreference">GetUserPreferences</a> call and setting the <b>ShowOutOfStockControlPreference</b> field to 'true'. <br/><br/>
    /// 							 <span class="tablenote"><b>IMPORTANT: </b> When a listing using the Out-of-Stock feature has zero quantity, the seller has 90 days to add inventory without incurring a listing fee. Fees are changed at the end of each the billing cycle but are then refunded if the item is out-of-stock for an entire billing period. See <a href="/api-docs/user-guides/static/trading-user-guide/out-of-stock-fees.html">Fees For a Listing With Zero Quantity</a> for details. </span>
    /// 						
    /// </remarks>

	public bool? OutOfStockControlPreference { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				The response of a <b>SetUserPreferences</b> call only includes the standard response fields for Trading API calls, such as the <b>Ack</b>  field (to indicate the success or failure of the call), the timestamp, and an <b>Errors</b> container (if there were any errors and/or warnings).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class SetUserPreferencesResponseType : AbstractResponseType{

#region 属性
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// Add pictureshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/pictures.html
/// Include pictures for variationshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/variations.html#pix
/// </summary>
/// <remarks>
/// 
///         Uploads a picture to the eBay Picture Service and returns a URL of the picture.
///         You will use this URL when creating, revising, or relisting an item with the Trading API.
///       
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class UploadSiteHostedPicturesRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// UploadSiteHostedPicturesNo
    /// </summary>
    /// <remarks>
    /// 
    ///                 A seller-defined name for the picture. This field is optional, but can make it easier for a seller to track than an arbitrary, eBay-assigned URL.
    ///               
    /// </remarks>

	public string PictureName { get; set; }
    /// <summary>
    /// 2UploadSiteHostedPicturesNo
    /// </summary>
    /// <remarks>
    /// 
    ///                 Specifies the picture system version. Only version 2 is valid.
    ///                 Available to support future changes in the picture system version.
    ///               
    /// </remarks>

	public int? PictureSystemVersion { get; set; }
    /// <summary>
    /// StandardLargeUploadSiteHostedPicturesNo
    /// </summary>
    /// <remarks>
    /// 
    ///                 This enumeration value indicates the size of the picture that will be generated.
    ///                 <br/><br/>
    ///                 <span class="tablenote"><b>IMPORTANT: </b>
    ///                 To get the standard website image sizing with Zoom, set this field to <b>Supersize</b>.
    ///                 </span>
    ///               
    /// </remarks>

	public PictureSetCodeType? PictureSet { get; set; }
    /// <summary>
    /// UploadSiteHostedPicturesNo
    /// </summary>
    /// <remarks>
    /// 
    ///                 An optional reference ID to the binary attachment.
    ///                 <br/><br/>
    ///                 The <b>PictureData</b> field does not contain the binary attachment. The binary attachment is image data, including the headers, from a JPG, GIF, PNG, BMP, or TIF format image file. The binary attachment must be sent as a MIME attachment, in your POST request, after the XML input.
    ///               
    /// </remarks>

	public Base64BinaryType PictureData { get; set; }
    /// <summary>
    /// UploadSiteHostedPicturesNo
    /// </summary>
    /// <remarks>
    /// 
    ///                 Determines if the uploaded picture is to replace all the pictures or to be added to the pictures currently available to a seller on the eBay site. The picture is available to the seller on the My Picture Uploads tab within the Sell Your Item pages.
    ///                 <br/><br/>
    ///                 The picture you upload (and its URL) is stored for a period of time on the EPS server. If, within that time, the picture is associated with an item, then the picture persists on the eBay site for the same time length as other pictures uploaded using the <b>UploadSiteHostedPictures</b> call.
    ///                 <br/><br/>
    ///                 The expiration date of the picture is returned in the  <b>SiteHostedPictureDetails.UseByDate</b> field in the response.
    ///               
    /// </remarks>

	public PictureUploadPolicyCodeType? PictureUploadPolicy { get; set; }
    /// <summary>
    /// 1024
    /// UploadSiteHostedPicturesConditionally1
    /// </summary>
    /// <remarks>
    /// 
    ///                 This field is used if the seller wishes to upload a picture to the EPS server that is currently on another external site. The URL of the picture you want to upload is passed in this field. Only https:// servers are supported.
    ///                 You can  include only one <b>ExternalPictureURL</b> field per call.
    ///                 <br><br>
    ///                 The eBay server uses the information in this field to retrieve a picture from an external web server. Once retrieved, the picture will be copied to eBay Picture Services and retained for 30 days if not associated with a listing. When associated with a listing, the duration is the length of the listing plus 90 days.
    ///               
    /// </remarks>
[System.Xml.Serialization.XmlElement("ExternalPictureURL")]

	public System.Collections.Generic.List<string> ExternalPictureURL { get; set; }
    /// <summary>
    /// 1
    /// 30
    /// 5
    /// UploadSiteHostedPicturesNo
    /// </summary>
    /// <remarks>
    /// 
    ///                 By default, an unpublished picture will be hosted on the EPS server for five days before being purged. However, the seller has the option of using this field to set an expiration date further into the future (up to 30 days). Similarly, when a listing ends or expires, the images associated with the listing remain on the EPS server for an additional 90 days. The value in this field will add on to those 90 days.
    ///                 <br/><br/>
    ///                 <span class="tablenote"><b>Note: </b>
    /// 					This field is restricted to applications that have been granted permission. Contact the eBay Developers Program to request permission.
    ///                 </span>
    ///               
    /// </remarks>

	public int? ExtensionInDays { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Contains information about a picture upload (i.e., information about a picture
/// 				upload containing a binary attachment of an image).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class UploadSiteHostedPicturesResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// UploadSiteHostedPicturesAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Specifies the picture system version that was used to upload pictures.
    /// 								Only version 2 is valid.
    /// 							
    /// </remarks>

	public int? PictureSystemVersion { get; set; }
    /// <summary>
    /// UploadSiteHostedPicturesAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								The information about an <b>UploadSiteHostedPictures</b> upload, including the URL of the uploaded picture.
    /// 							
    /// </remarks>

	public SiteHostedPictureDetailsType SiteHostedPictureDetails { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// 
/// 					Validates the user response to a GetChallengeToken botblock challenge.
/// 				
/// GetChallengeToken
/// </summary>
/// <remarks>
/// 
/// 				<p><span class=\"tablenote\"><b>Note:</b> This call is deprecated, and will be decommissioned on January 30th, 2025.</span></p>
/// 				
/// 				Validates the user response to a <b class="con">GetChallengeToken</b>
/// 				botblock challenge.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ValidateChallengeInputRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// ValidateChallengeInputYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								Botblock token that was returned by <b>GetChallengeToken</b>.
    /// 							
    /// </remarks>

	public string ChallengeToken { get; set; }
    /// <summary>
    /// ValidateChallengeInputYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								User response to a bot block challenge.
    /// 							
    /// </remarks>

	public string UserInput { get; set; }
    /// <summary>
    /// false
    /// ValidateChallengeInputNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								This boolean field is included and set to 'true' if the challenge token should remain valid for up to two minutes.
    /// 							
    /// </remarks>

	public bool? KeepTokenValid { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Base response of the <b>ValidateChallengeInput</b> call. The response indicates whether the botblock challenge was successful.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ValidateChallengeInputResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// ValidateChallengeInputAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								Indicates whether the token is valid.
    /// 							
    /// </remarks>

	public bool? ValidToken { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// GetUser
/// </summary>
/// <remarks>
/// 
/// 				Requests to enable a test user to sell items in the Sandbox environment.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ValidateTestUserRegistrationRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// ValidateTestUserRegistrationNo
    /// 0
    /// 1000
    /// </summary>
    /// <remarks>
    /// 
    /// 								Value for the feedback score of a user. If no value is passed in the request,
    /// 								or if the value is zero, the feedback score is unchanged. This element is not intended
    /// 								for regularly testing feedback because the feedback value can change after the request.
    /// 							
    /// </remarks>

	public int? FeedbackScore { get; set; }
    /// <summary>
    /// ValidateTestUserRegistrationNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Value for the date and time that a user's registration begins.
    /// 							
    /// </remarks>

	public System.DateTime? RegistrationDate { get; set; }
    /// <summary>
    /// ValidateTestUserRegistrationNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Indicates if a user subscribes to Selling Manager. You cannot
    /// 								request to subscribe a user to both Selling Manager and
    /// 								Selling Manager Pro. You cannot request to unsubscribe a user.
    /// 							
    /// </remarks>

	public bool? SubscribeSM { get; set; }
    /// <summary>
    /// ValidateTestUserRegistrationNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Indicates if a user subscribes to Selling Manager Pro. You cannot
    /// 								request to subscribe a user to both Selling Manager and
    /// 								Selling Manager Pro. You cannot request to unsubscribe a user.
    /// 							
    /// </remarks>

	public bool? SubscribeSMPro { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 	       The response of a <b>ValidateTestUserRegistration</b> call only includes the standard response fields for Trading API calls, such as the <b>Ack</b>  field (to indicate the success or failure of the call), the timestamp, and an <b>Errors</b> container (if there were any errors and/or warnings).
/// 	    
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ValidateTestUserRegistrationResponseType : AbstractResponseType{

#region 属性
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// 
/// 					Reports items that allegedly infringe your copyright, trademark, or other
/// 					intellectual property rights. You must be a member of the Verified Rights Owner
/// 					(VeRO) Program to use this call.
/// 				
/// 
/// 					GetVeROReasonCodeDetails, GetVeROReportStatus
/// 				
/// </summary>
/// <remarks>
/// 
/// 				Reports items that allegedly infringe your copyright, trademark, or other
/// 				intellectual property rights. You can report one or more items at a time with this
/// 				call. You must be a member of the Verified Rights Owner (VeRO) Program to use this
/// 				call.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class VeROReportItemsRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// VeROReportItemsYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								User ID of the VeRO member reporting the items.
    /// 							
    /// </remarks>

	public string RightsOwnerID { get; set; }
    /// <summary>
    /// VeROReportItemsNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						 		Container (packet) for items being reported. You can report the same item
    /// 						 		more than once in a packet if a different reason code is used each time.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("ReportItem", IsNullable = false)]

	public System.Collections.Generic.List<VeROReportItemType> ReportItems { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Contains a packet ID and status for the items reported by the VeRO Program member.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class VeROReportItemsResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// 
    /// 
    /// VeROReportItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								A unique packet identifier for the items reported.
    /// 							
    /// </remarks>

	public long? VeROReportPacketID { get; set; }
    /// <summary>
    /// VeROReportItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								The processing status of the packet.
    /// 							
    /// </remarks>

	public VeROReportPacketStatusCodeType? VeROReportPacketStatus { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// AddFixedPriceItem
/// List an itemhttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/list-item.html
/// </summary>
/// <remarks>
/// 
/// 				Enables a seller to test the definition of a new fixed-price listing by
/// 				submitting the definition to eBay without creating an actual listing.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class VerifyAddFixedPriceItemRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// VerifyAddFixedPriceItemYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								Root container holding all values that define a new
    /// 								fixed-price listing.
    /// 							
    /// </remarks>

	public ItemType Item { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Returns the listing recommendations (if applicable), the estimated fees for the proposed new listing (except the transaction fees, which aren't calculated until the item has sold), and other details.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class VerifyAddFixedPriceItemResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// VerifyAddFixedPriceItemAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								With a successful <b>VerifyAddFixedPriceItem</b> call, this field is always returned, but the returned value is always <code>0</code>, since this call only validates the data passed in through the request payload and does not actually create an active listing.
    /// 							
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// VerifyAddFixedPriceItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Item-level SKU for the new listing, if the seller specified
    /// 								tem.SKU in the request. Variation SKUs are not returned
    /// 								(see GetItem instead).
    /// 							
    /// </remarks>

	public string SKU { get; set; }
    /// <summary>
    /// VerifyAddFixedPriceItemAlways
    /// eBay.com Feeshttp://pages.ebay.com/help/sell/fees.html
    /// Fees by marketplacehttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/fees-by-marketplace.html
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container is an array of fees that would incur if the listing defined in request payload of the <b>VerifyAddFixedPriceItem</b> call was published. The fees in this container will not include any fees that are based on the purchase price (such as transaction fees) and only come into play when the listing has a sale.
    /// 								<br>
    /// 								<br>
    /// 								All listing fee types are returned, even if those fees are not applicable for the listing and are '0.0'.
    /// 								<br>
    /// 								<br>
    /// 								<span class="tablenote"><b>Note:</b> The currency used for all fees returned under the <b>Fees</b> container reflects the currency used for the listing site, and not necessarily in the seller's default/home currency. For example, if a Canadian seller is using the <b>VerifyAddFixedPriceItem</b> call to verify a listing on the eBay US site, the currency type shown for each fee will be <code>USD</code> and not <code>CAD</code>.
    /// 								</span>
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("Fee", IsNullable = false)]

	public System.Collections.Generic.List<FeeType> Fees { get; set; }
    /// <summary>
    /// 10
    /// VerifyAddFixedPriceItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								ID of the primary category in which the item would be listed.
    /// 								Only returned if you set Item.CategoryMappingAllowed to true in the request
    /// 								and the ID you passed in PrimaryCategory was mapped to a new ID by eBay.
    /// 								If the primary category has not changed or it has expired with no replacement,
    /// 								CategoryID does not return a value.
    /// 							
    /// </remarks>

	public string CategoryID { get; set; }
    /// <summary>
    /// 10
    /// VerifyAddFixedPriceItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								ID of the secondary category in which the item would be listed.
    /// 								Only returned if you set Item.CategoryMappingAllowed to true in the request
    /// 								and the ID you passed in SecondaryCategory was mapped to a new ID by eBay.
    /// 								If the secondary category has not changed or it has expired with no replacement,
    /// 								Category2ID does not return a value.
    /// 							
    /// </remarks>

	public string Category2ID { get; set; }
    /// <summary>
    /// VerifyAddFixedPriceItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								The nature of the discount, if a discount would have applied
    /// 								had this actually been listed at this time.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("DiscountReason")]

	public System.Collections.Generic.List<DiscountReasonCodeType> DiscountReason { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// AddItem, VerifyAddFixedPriceItem
/// List an itemhttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/list-item.html
/// </summary>
/// <remarks>
/// 
/// 				Enables a seller to specify the definition of a new item and submit the definition to eBay without creating a listing.
/// 				<br><br>
/// 				Sellers who engage in cross-border trade on sites that require a recoupment agreement, must agree to the
/// 				recoupment terms before adding or verifying items. This agreement allows eBay to reimburse
/// 				a buyer during a dispute and then recoup the cost from the seller. The US site is a recoupment site, and
///         the agreement is located <a href="https://scgi.ebay.com/ws/eBayISAPI.dll?CBTRecoupAgreement">here</a>.
///         The list of the sites where a user has agreed to the recoupment terms is returned by the GetUser response.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class VerifyAddItemRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// VerifyAddItemYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								Root container holding all values that define a new
    /// 								listing.
    /// 							
    /// </remarks>

	public ItemType Item { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Returns the listing recommendations (if applicable), the estimated fees for the proposed new listing (except the transaction fees, which aren't calculated until the item has sold), and other details.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class VerifyAddItemResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// VerifyAddItemAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								With a successful <b>VerifyAddItem</b> call, this field is always returned, but the returned value is always <code>0</code>, since this call only validates the data passed in through the request payload and does not actually create an active listing.
    /// 							
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// VerifyAddItemAlways
    /// eBay.com Feeshttp://pages.ebay.com/help/sell/fees.html
    /// Fees by marketplacehttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/fees-by-marketplace.html
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container is an array of fees that would incur if the listing defined in request payload of the <b>VerifyAddItem</b> call was published. The fees in this container will not include any fees that are based on the purchase price (such as transaction fees) and only come into play when the listing has a sale.
    /// 								<br>
    /// 								<br>
    /// 								All listing fee types are returned, even if those fees are not applicable for the listing and are '0.0'.
    /// 								<br>
    /// 								<br>
    /// 								<span class="tablenote"><b>Note:</b> The currency used for all fees returned under the <b>Fees</b> container reflects the currency used for the listing site, and not necessarily in the seller's default/home currency. For example, if a Canadian seller is using the <b>VerifyAddItem</b> call to verify a listing on the eBay US site, the currency type shown for each fee will be <code>USD</code> and not <code>CAD</code>.
    /// 								</span>
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("Fee", IsNullable = false)]

	public System.Collections.Generic.List<FeeType> Fees { get; set; }
    /// <summary>
    /// 10
    /// VerifyAddItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								ID of the primary category in which the item would be listed.
    /// 								Only returned if you set Item.CategoryMappingAllowed to true in the request
    /// 								and the ID you passed in PrimaryCategory was mapped to a new ID by eBay.
    /// 								If the primary category has not changed or it has expired with no replacement,
    /// 								CategoryID does not return a value.
    /// 							
    /// </remarks>

	public string CategoryID { get; set; }
    /// <summary>
    /// 10
    /// VerifyAddItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								ID of the secondary category in which the item would be listed.
    /// 								Only returned if you set Item.CategoryMappingAllowed to true in the request
    /// 								and the ID you passed in SecondaryCategory was mapped to a new ID by eBay.
    /// 								If the secondary category has not changed or it has expired with no replacement,
    /// 								Category2ID does not return a value.
    /// 							
    /// </remarks>

	public string Category2ID { get; set; }
    /// <summary>
    /// VerifyAddItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								The nature of the discount, if a discount would have applied
    /// 								had this actually been listed at this time.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("DiscountReason")]

	public System.Collections.Generic.List<DiscountReasonCodeType> DiscountReason { get; set; }
    /// <summary>
    /// VerifyAddItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Provides a list of products recommended by eBay which match the item information provided by the seller.
    /// 							
    /// </remarks>

	public ProductSuggestionsType ProductSuggestions { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// GetAllBidders, AddSecondChanceItem
/// Second chance offershttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/second-chance.html
/// </summary>
/// <remarks>
/// 
/// 				Simulates the creation of a new Second Chance Offer
/// 				listing of an item without actually creating a listing.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class VerifyAddSecondChanceItemRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// VerifyAddSecondChanceItemYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								Specifies the bidder from the original, ended listing to whom the seller
    /// 								is extending the second chance offer. Specify only one
    /// 								<b>RecipientBidderUserID</b> per call. If multiple users are specified (each in a
    /// 								<b>RecipientBidderUserID</b> node), only the last one specified receives the
    /// 								offer.
    /// 							
    /// </remarks>

	public string RecipientBidderUserID { get; set; }
    /// <summary>
    /// VerifyAddSecondChanceItemNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Specifies the amount the offer recipient must pay to purchase the item
    /// 								from the Second Chance Offer listing. Use only when the original item was
    /// 								an eBay Motors (or in some categories on U.S. and international sites for
    /// 								high-priced items, such as items in many U.S. and Canada Business and
    /// 								Industrial categories) and it ended unsold because the reserve price was
    /// 								not met. Call fails with an error for any other item conditions.
    /// 							
    /// </remarks>

	public AmountType BuyItNowPrice { get; set; }
    /// <summary>
    /// VerifyAddSecondChanceItemYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								Specifies the length of time the Second Chance Offer listing will be
    /// 								active. The recipient bidder has that much time to purchase the item or
    /// 								the listing expires.
    /// 							
    /// </remarks>

	public SecondChanceOfferDurationCodeType? Duration { get; set; }
    /// <summary>
    /// VerifyAddSecondChanceItemYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field is used to identify the recently-ended auction listing for which a Second Chance Offer will be made to one of the non-winning bidders on the recently-ended auction listing.
    /// 							
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// 1000
    /// VerifyAddSecondChanceItemNo
    /// </summary>
    /// <remarks>
    /// 
    /// 								Message content. Cannot contain HTML, asterisks, or quotes. This content
    /// 								is included in the Second Chance Offer email sent to the recipient, which
    /// 								can be retrieved with <b>GetMyMessages</b>.
    /// 							
    /// </remarks>

	public string SellerMessage { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Base response of the <b>VerifyAddSecondChanceItem</b> call.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class VerifyAddSecondChanceItemResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// VerifyAddSecondChanceItemAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 									Indicates the date and time when the the new
    /// 									Second Chance Offer listing became active and
    /// 									the recipient user could purchase the item.
    /// 							
    /// </remarks>

	public System.DateTime? StartTime { get; set; }
    /// <summary>
    /// VerifyAddSecondChanceItemAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 									Indicates the date and time when the Second Chance Offer listing expires, at which time
    /// 									the listing ends (if the recipient user does
    /// 									not purchase the item first).
    /// 							
    /// </remarks>

	public System.DateTime? EndTime { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// RelistItem
/// </summary>
/// <remarks>
/// 
/// 				Enable the seller to verify that the data they plan to pass into a <b>RelistItem</b> call will produce the results that you are expecting, including a successful call with no errors.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class VerifyRelistItemRequestType : AbstractRequestType{

#region 属性
    /// <summary>
    /// VerifyRelistItemYes
    /// </summary>
    /// <remarks>
    /// 
    /// 								The <b>Item</b> container is used to configure the item that will be relisted. If the seller plans to relist the item with no changes, the only field under the <b>Item</b> container that is required is the <b>ItemID</b> field. In the <b>ItemID</b> field, the seller specifies the item that will be relisted. If the seller wishes to change anything else for the listing, the seller should include this field in the call request and give it a new value.
    /// 								<br/><br/>
    /// 								If the seller wants to delete one or more optional settings in the listing, the seller should use the <b>DeletedField</b> tag.
    /// 							
    /// </remarks>

	public ItemType Item { get; set; }
    /// <summary>
    /// VerifyRelistItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Specifies the name of the field to delete from a listing. See the eBay Features Guide for rules on deleting values when relisting items. Also see the relevant field descriptions to determine when to use <b>DeletedField</b> (and potential consequences).
    /// 								The request can contain zero, one, or many instances of <b>DeletedField</b> (one for each field to be deleted).
    /// 								<br><br>
    /// 								Case-sensitivity must be taken into account when using a <b>DeletedField</b> tag to delete a field. The value passed into a <b>DeletedField</b> tag must either match the case of the schema element names in the full field path (Item.PictureDetails.PictureURL), or the initial letter of each schema element name in the full field path must be  lowercase (item.pictureDetails.pictureURL).
    /// 								Do not change the case of letters in the middle of a field name.
    /// 								For example, item.picturedetails.pictureURL is not allowed.<br><br>
    /// 								To delete a listing enhancement like 'BoldTitle', specify the value you are deleting;
    /// 								for example, Item.ListingEnhancement[BoldTitle].
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("DeletedField")]

	public System.Collections.Generic.List<string> DeletedField { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				The base response type for the <b>VerifyRelistItem</b> call. The response includes the Item ID for the relisted item, the SKU value for the item (if any), listing recommendations (if applicable), the estimated fees for the relisted item (except the transaction fees, which aren't calculated until the item has sold), the start and end times of the listing, and other details.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class VerifyRelistItemResponseType : AbstractResponseType{

#region 属性
    /// <summary>
    /// VerifyRelistItemAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								With a successful <b>VerifyRelistItem</b> call, this field is always returned, but the returned value is always <code>0</code>, since this call only validates the data passed in through the request payload and does not actually relist an item.
    /// 							
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// VerifyRelistItemAlways
    /// eBay.com Feeshttp://pages.ebay.com/help/sell/fees.html
    /// Fees by marketplacehttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/fees-by-marketplace.html
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container is an array of fees that would incur if the listing defined in request payload of the <b>VerifyRelistItem</b> call was used to relist an item. The fees in this container will not include any fees that are based on the purchase price (such as transaction fees) and only come into play when the listing has a sale.
    /// 								<br>
    /// 								<br>
    /// 								All listing fee types are returned, even if those fees are not applicable for the listing and are '0.0'.
    /// 								<br>
    /// 								<br>
    /// 								<span class="tablenote"><b>Note:</b> The currency used for all fees returned under the <b>Fees</b> container reflects the currency used for the listing site, and not necessarily in the seller's default/home currency. For example, if a Canadian seller is using the <b>VerifyRelistItem</b> call to verify an item to be relisted on the eBay US site, the currency type shown for each fee will be <code>USD</code> and not <code>CAD</code>.
    /// 								</span>
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("Fee", IsNullable = false)]

	public System.Collections.Generic.List<FeeType> Fees { get; set; }
    /// <summary>
    /// VerifyRelistItemAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								This timestamp indicates the date and time when the item to be relisted became active on the eBay site.
    /// 							
    /// </remarks>

	public System.DateTime? StartTime { get; set; }
    /// <summary>
    /// VerifyRelistItemAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 								This timestamp indicates the date and time when the item to be relisted is scheduled to end on the eBay site. This date/time is calculated by using the <b>StartTime</b> and the the listing duration.
    /// 							
    /// </remarks>

	public System.DateTime? EndTime { get; set; }
    /// <summary>
    /// VerifyRelistItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This field is returned if an eBay special offer or promotion is applicable to the listing.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("DiscountReason")]

	public System.Collections.Generic.List<DiscountReasonCodeType> DiscountReason { get; set; }
    /// <summary>
    /// VerifyRelistItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Provides a list of products recommended by eBay which match the item information provided by the seller.
    /// 							
    /// </remarks>

	public ProductSuggestionsType ProductSuggestions { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Base type definition of the request payload, which can carry any type of payload
/// 				content plus optional versioning information and detail level requirements. All
/// 				concrete request types (e.g., AddItemRequestType) are derived from the abstract
/// 				request type. The naming convention we use for the concrete type names is the name
/// 				of the service (the verb or call name) followed by "RequestType":
/// 				VerbNameRequestType
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
[System.Xml.Serialization.XmlInclude(typeof(AddFixedPriceItemRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(AddItemRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(AddItemsRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(AddMemberMessageAAQToPartnerRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(AddMemberMessageRTQRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(AddMemberMessagesAAQToBidderRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(AddOrderRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(AddSecondChanceItemRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(AddToItemDescriptionRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(AddToWatchListRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(CompleteSaleRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(ConfirmIdentityRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(DeleteMyMessagesRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(EndFixedPriceItemRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(EndItemRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(EndItemsRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(ExtendSiteHostedPicturesRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(FetchTokenRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(GetAccountRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(GetAdFormatLeadsRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(GetAllBiddersRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(GetBestOffersRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(GetBidderListRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(GetCategoriesRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(GetCategoryFeaturesRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(GetCategoryMappingsRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(GetChallengeTokenRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(GetDescriptionTemplatesRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(GetFeedbackRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(GetItemRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(GetItemShippingRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(GetItemTransactionsRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(GetItemsAwaitingFeedbackRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(GetMemberMessagesRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(GetMessagePreferencesRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(GetMyMessagesRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(GetMyeBayBuyingRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(GetMyeBaySellingRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(GetNotificationPreferencesRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(GetNotificationsUsageRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(GetOrdersRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(GetSellerEventsRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(GetSellerListRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(GetSellerTransactionsRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(GetSessionIDRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(GetShippingDiscountProfilesRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(GetStoreRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(GetStoreCategoryUpdateStatusRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(GetTaxTableRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(GetTokenStatusRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(GetUserRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(GetUserContactDetailsRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(GetUserPreferencesRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(GetVeROReasonCodeDetailsRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(GetVeROReportStatusRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(GeteBayDetailsRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(GeteBayOfficialTimeRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(LeaveFeedbackRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(PlaceOfferRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(RelistFixedPriceItemRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(RelistItemRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(RemoveFromWatchListRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(RespondToBestOfferRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(RespondToFeedbackRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(ReviseFixedPriceItemRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(ReviseInventoryStatusRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(ReviseItemRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(ReviseMyMessagesRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(ReviseMyMessagesFoldersRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(RevokeTokenRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(SendInvoiceRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(SetMessagePreferencesRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(SetNotificationPreferencesRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(SetShippingDiscountProfilesRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(SetStoreCategoriesRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(SetTaxTableRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(SetUserNotesRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(SetUserPreferencesRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(UploadSiteHostedPicturesRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(ValidateChallengeInputRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(ValidateTestUserRegistrationRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(VeROReportItemsRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(VerifyAddFixedPriceItemRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(VerifyAddItemRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(VerifyAddSecondChanceItemRequestType))]
[System.Xml.Serialization.XmlInclude(typeof(VerifyRelistItemRequestType))]
public abstract partial class AbstractRequestType {

#region 属性
    /// <summary>
    /// Yes
    /// GetMyMessagesReturnSummary, ReturnHeaders, ReturnMessagesYes
    /// GetAdFormatLeadsGetBestOffersGetCategoriesGetCategoryMappingsGetFeedbackGetOrdersGetSellerEventsGetTaxTableReturnAll, noneNo
    /// GetCategoryFeaturesGetMyeBayBuyingGetMyeBaySellingGetUserReturnAll, ReturnSummary, noneNo
    /// GetItemTransactionsGetSellerListGetSellerTransactionsItemReturnDescription, ReturnAll, noneNo
    /// GetItemItemReturnAttributes, ItemReturnDescription, ReturnAll, noneNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						Detail levels are instructions that define standard subsets of
    /// 						data to return for particular data components (e.g., each
    /// 						Item, Transaction, or User) within the response payload.
    /// 						For example, a particular detail level might cause the
    /// 						response to include buyer-related data in every result
    /// 						(e.g., for every Item), but no seller-related data.
    /// 						<br/><br/>
    /// 						Specifying a detail level is like using a
    /// 						predefined attribute list in the SELECT clause of an SQL query.
    /// 						Use the <b>DetailLevel</b> element to specify the required detail level
    /// 						that the client application needs pertaining to the data components
    /// 						that are applicable to the request.
    /// 						<br><br>
    /// 						The <b>DetailLevelCodeType</b> defines the
    /// 						global list of available detail levels for all request types.
    /// 						Most request types support certain detail
    /// 						levels or none at all. If you pass a detail level that exists
    /// 						in the schema but that isn't valid for a particular request,
    /// 						eBay ignores it and processes the request without it.
    /// 						<br/><br/>
    /// 						For each request type, see the detail level tables in the
    /// 						Input/Output Reference to determine which detail levels are
    /// 						applicable and which elements are returned for each applicable
    /// 						detail level.
    /// 						<br><br>Note that <b>DetailLevel</b> is required input for
    /// 						<b>GetMyMessages</b>. <br>
    /// 						<br>
    /// 						With <b>GetSellerList</b> and other calls that retrieve large data sets,
    /// 						please avoid using <b>ReturnAll</b> when possible. For example, if you use
    /// 						<b>GetSellerList</b>, use <b>GranularityLevel</b> instead, or use <b>GetSellerEvents</b>. If you do use 'ReturnAll' with
    /// 						<b>GetSellerList</b>, use a small <b>Pagination.EntriesPerPage</b> value and a narrow
    /// 						<b>EndTimeFrom</b>/<b>EndTimeTo</b> date range for better performance.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("DetailLevel")]

	public System.Collections.Generic.List<DetailLevelCodeType> DetailLevel { get; set; }
    /// <summary>
    /// No
    /// </summary>
    /// <remarks>
    /// 
    /// 						Use <b>ErrorLanguage</b> to return error strings for the call in a different language
    /// 						from the language commonly associated with the site that the requesting user
    /// 						is registered with. Below are some examples from different countries.
    /// 						<br><br>
    /// 						<table border="0">
    /// 						<tr>
    /// 						<th>ID</th>
    /// 						<th>Country</th>
    /// 						</tr>
    /// 						<tr>
    /// 						<td>en_AU</td>
    /// 						<td>Australia</td>
    /// 						</tr>
    /// 						<tr>
    /// 						<td>de_AT</td>
    /// 						<td>Austria</td>
    /// 						</tr>
    /// 						<tr>
    /// 						<td>nl_BE</td>
    /// 						<td>Belgium (Dutch)</td>
    /// 						</tr>
    /// 						<tr>
    /// 						<td>fr_BE</td>
    /// 						<td>Belgium (French)</td>
    /// 						</tr>
    /// 						<tr>
    /// 						<td>en_CA</td>
    /// 						<td>Canada</td>
    /// 						</tr>
    /// 						<tr>
    /// 						<td>fr_CA</td>
    /// 						<td>Canada (French)</td>
    /// 						</tr>
    /// 						<tr>
    /// 						<td>zh_CN</td>
    /// 						<td>China</td>
    /// 						</tr>
    /// 						<tr>
    /// 						<td>fr_FR</td>
    /// 						<td>France</td>
    /// 						</tr>
    /// 						<tr>
    /// 						<td>de_DE</td>
    /// 						<td>Germany</td>
    /// 						</tr>
    /// 						<tr>
    /// 						<td>zh_HK</td>
    /// 						<td>Hong Kong</td>
    /// 						</tr>
    /// 						<tr>
    /// 						<td>en_IN</td>
    /// 						<td>India</td>
    /// 						</tr>
    /// 						<tr>
    /// 						<td>en_IE</td>
    /// 						<td>Ireland</td>
    /// 						</tr>
    /// 						<tr>
    /// 						<td>it_IT</td>
    /// 						<td>Italy</td>
    /// 						</tr>
    /// 						<tr>
    /// 						<td>nl_NL</td>
    /// 						<td>Netherlands</td>
    /// 						</tr>
    /// 						<tr>
    /// 						<td>en_SG</td>
    /// 						<td>Singapore</td>
    /// 						</tr>
    /// 						<tr>
    /// 						<td>es_ES</td>
    /// 						<td>Spain</td>
    /// 						</tr>
    /// 						<tr>
    /// 						<td>de_CH</td>
    /// 						<td>Switzerland</td>
    /// 						</tr>
    /// 						<tr>
    /// 						<td>en_GB</td>
    /// 						<td>United Kingdom</td>
    /// 						</tr>
    /// 						<tr>
    /// 						<td>en_US</td>
    /// 						<td> United States</td>
    /// 						</tr>
    /// 						</table>
    /// 					
    /// </remarks>

	public string ErrorLanguage { get; set; }
    /// <summary>
    /// No
    /// </summary>
    /// <remarks>
    /// 
    /// 						Most Trading API calls support a <b>MessageID</b> element in the request
    /// 						and a <b>CorrelationID</b> element in the response. If you pass in a
    /// 						<b>MessageID</b> in a request, the same value will be returned in the
    /// 						<b>CorrelationID</b> field in the response. Pairing these values can
    /// 						help you track and confirm that a response is returned for every request and to
    /// 						match specific responses to specific requests.
    /// 						If you do not pass a <b>MessageID</b> value in the request,
    /// 						<b>CorrelationID</b> is not returned.<br>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						<b>GetCategories</b> is designed to retrieve very large sets of metadata
    /// 						that change once a day or less often. To improve performance, these calls return
    /// 						cached responses when you request all available data (with no filters). When this
    /// 						occurs, the <b>MessageID</b> and <b>CorrelationID</b> fields
    /// 						aren't applicable. However, if you specify an input filter to reduce the amount of
    /// 						data returned, the calls retrieve the latest data (not cached). When this occurs,
    /// 						<b>MessageID</b> and <b>CorrelationID</b> are applicable.
    /// 						</span>
    /// 					
    /// </remarks>

	public string MessageID { get; set; }
    /// <summary>
    /// Conditionally
    /// HTTP headershttps://developer.ebay.com/api-docs/user-guides/static/make-a-call/using-xml.html#headers
    /// eBay Schema Versioning Strategy../../HowTo/eBayWS/eBaySchemaVersioning.html
    /// Lowest Supported Version../../HowTo/eBayWS/eBaySchemaVersioning.html#VersionSupportSchedule
    /// </summary>
    /// <remarks>
    /// 
    /// 						The version number of the API code that you are
    /// 						programming against (e.g., 1149).
    /// 						The version you specify for a call has these basic effects:
    /// 						<b></b>
    /// 							<ul>
    /// 	  						<li>It indicates the version of the code lists and other
    /// 						data that eBay should use to process your request.</li>
    /// 	  						<li>It indicates the schema version you are using.</li>
    /// 							</ul>
    /// 						You need to use a version that is greater than or equal to the
    /// 						lowest supported version.
    /// 						<br>
    /// 						<b>For the SOAP API:</b> If you are using the SOAP API,
    /// 						this field is required. Specify the version of the WSDL your
    /// 						application is using.<br>
    /// 						<br>
    /// 						<b>For the XML API:</b> If you are using the XML API,
    /// 						this field has no effect. Instead, specify the version in the
    /// 						<b>X-EBAY-API-COMPATIBILITY-LEVEL</b> HTTP header.
    /// 						(If you specify <b>Version</b> in the body of an XML API request and it
    /// 						is different from the value in the HTTP header, eBay returns an
    /// 						informational warning that the value in the HTTP header was used
    /// 						instead.)
    /// 					
    /// </remarks>

	public string Version { get; set; }
    /// <summary>
    /// PlaceOfferYes
    /// </summary>
    /// <remarks>
    /// 
    /// 						The public IP address of the machine from which the request is sent.
    /// 						Your application captures that IP address and includes it in
    /// 						a call request. eBay evaluates requests for safety (also see
    /// 						the <b>BotBlock</b> container
    /// 						in the request and response of this call).
    /// 					
    /// </remarks>

	public string EndUserIP { get; set; }
    /// <summary>
    /// AddItemAddItemsAddLiveAuctionItemRelistItemReviseItemReviseLiveAuctionItemVerifyAddItemBestEffortNoPre-filling Item Specifics with Product Detailshttps://developer.ebay.com/DevZone/guides/features-guide/Development/ItemSpecifics-CatalogDetails.html
    /// CompleteSaleBestEffort, FailOnErrorFailOnErrorNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						Error tolerance level for the call. This is a preference
    /// 						that specifies how eBay should handle requests that contain
    /// 						invalid data or that could partially fail. This gives you some control
    /// 						over whether eBay returns warnings or blocking errors
    /// 						and how eBay processes the invalid data.<br>
    /// 						<br>
    /// 						This field is only applicable to <b>AddItem</b> and related calls,
    /// 						and only when the listing includes <b>ProductListingDetails</b>.
    /// 					
    /// </remarks>

	public ErrorHandlingCodeType? ErrorHandling { get; set; }
    /// <summary>
    /// 32
    /// AddOrderAddToItemDescriptionPlaceOfferReviseItemNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						A unique identifier for a particular call. If the same <b>InvocationID</b> is passed
    /// 						in after it has been passed in once on a call that succeeded for a particular
    /// 						application and user, then an error will be returned. The identifier can
    /// 						only contain digits from 0-9 and letters from A-F. The
    /// 						identifier must be 32 characters long.  For example,
    /// 						1FB02B2-9D27-3acb-ABA2-9D539C374228.
    /// 					
    /// </remarks>

	public string InvocationID { get; set; }
    /// <summary>
    /// GetAccountGetAdFormatLeadsGetAllBiddersGetBestOffersGetBidderListGetCategoriesGetCategoryFeaturesGetFeedbackGetItemGetItemsAwaitingFeedbackGetItemShippingGetItemTransactionsGetMemberMessagesGetMyeBayBuyingGetMyeBaySellingGetMyMessagesGetNotificationPreferencesGetOrdersGetSellerEventsGetSellerListGetSellerTransactionsNo
    /// https://developer.ebay.com/api-docs/user-guides/static/make-a-call/tapi-input-data.html#output-selOutputSelector
    /// </summary>
    /// <remarks>
    /// 
    /// 						You can use the <b>OutputSelector</b> field to restrict the data returned by a call. This field can make the call response easier to manage, especially when a large payload is returned. If you use the <b>OutputSelector</b> field, the output data will only include the field(s) you specified in the request, as well as all of its child fields (if a field is a container) and its parent fields (if any). Note that it is possible that a field included through an <b>OutputSelector</b> field may still not be returned if it is not applicable, or if it is not found based on other criteria set up in the request payload.
    /// 						<br>
    /// 						<br>
    /// 						For example, if you are using <b>GetItem</b> and you only want to retrieve the URL of the View Item page (emitted in <b>ViewItemURL</b> field) and the item's Buy It Now price (emitted in <b>BuyItNowPrice</b> field), you would include two separate <b>OutputSelector</b> fields and set the value for each one as <b>ViewItemURL</b> and <b>BuyItNowPrice</b> as in the following example:
    /// 						<br>
    /// 						<br>
    /// 						<pre>
    /// 						<b>If the following output selectors are used:</b>
    /// 						<br><br>...<br>
    /// 						<code>&lt;OutputSelector&gt;ViewItemURL&lt;/OutputSelector&gt;<br>
    /// 						&lt;OutputSelector&gt;BuyItNowPrice&lt;/OutputSelector&gt;
    /// 						</code><br>...
    /// 						<br><br>
    /// 						<b>...the response might look like the following</b>
    /// 						<br><br>
    /// 						<code>
    /// 						&lt;Item&gt;<br>
    /// 						&lt;BuyItNowPrice currencyID="USD"&gt;0.0&lt;/BuyItNowPrice&gt;<br>
    /// 						&lt;ListingDetails&gt;<br>
    /// 						&lt;ViewItemURL&gt;http://www.ebay.com/itm/Tag-Heuer-Mens-Watch/182879833261&lt;/ViewItemURL&gt;<br>
    /// 						&lt;/ListingDetails&gt;<br>
    ///   					&lt;/Item&gt;
    ///   					</code>
    /// 						</pre>
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("OutputSelector")]

	public System.Collections.Generic.List<string> OutputSelector { get; set; }
    /// <summary>
    /// No
    /// https://ebaydts.com/eBayKBDetails?KBid=499Warning Level
    /// </summary>
    /// <remarks>
    /// 
    /// 						Controls whether or not to return warnings when the application passes
    /// 						unrecognized or deprecated elements in a request.<br>
    /// 						<br>
    /// 						An unrecognized element is one that is not defined in any supported
    /// 						version of the schema. Schema element names are case-sensitive,
    /// 						so using <b>WarningLevel</b> can also help you remove any potential hidden
    /// 						bugs within your application due to incorrect case or spelling in
    /// 						field names before you put your application into the
    /// 						Production environment.<br>
    /// 						<br>
    /// 						<b>WarningLevel</b> only validates elements; it doesn't validate
    /// 						XML attributes. It also doesn't control warnings related to
    /// 						user-entered strings or numbers, or warnings for
    /// 						logical errors.<br>
    /// 						<br>
    /// 						We recommend that you only use this during development and debugging.
    /// 						Do not use this in requests performed in the Production environment.
    /// 					
    /// </remarks>

	public WarningLevelCodeType? WarningLevel { get; set; }
    /// <summary>
    /// PlaceOfferConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container is only used by the <b>PlaceOffer</b> call request if the previous <b>PlaceOffer</b> call resulted in a <b>BotBlock</b> container in the response. If the caller receives this container in the response, that caller must make another <b>PlaceOffer</b> call, this time, passing in the encrypted token and URL that is returned in the <b>BotBlock</b> container in the response. This safeguard lets eBay know that a real user is making a <b>PlaceOffer</b> call and not a bot.
    /// 					
    /// </remarks>

	public BotBlockRequestType BotBlock { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Base type definition of a response payload that can carry any
/// 				type of payload content with following optional elements:
/// 				<ul>
/// 					<li>timestamp of response message</li>
/// 					<li>application-level acknowledgement</li>
/// 					<li>application-level (business-level) errors and warnings</li>
/// 				</ul>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
[System.Xml.Serialization.XmlInclude(typeof(AddFixedPriceItemResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(AddItemResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(AddItemsResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(AddMemberMessageAAQToPartnerResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(AddMemberMessageRTQResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(AddMemberMessagesAAQToBidderResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(AddOrderResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(AddSecondChanceItemResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(AddToItemDescriptionResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(AddToWatchListResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(CompleteSaleResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(ConfirmIdentityResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(DeleteMyMessagesResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(EndFixedPriceItemResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(EndItemResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(EndItemsResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(ExtendSiteHostedPicturesResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(FetchTokenResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(GetAccountResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(GetAdFormatLeadsResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(GetAllBiddersResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(GetBestOffersResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(GetBidderListResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(GetCategoriesResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(GetCategoryFeaturesResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(GetCategoryMappingsResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(GetChallengeTokenResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(GetDescriptionTemplatesResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(GetFeedbackResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(GetItemResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(GetItemShippingResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(GetItemTransactionsResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(GetItemsAwaitingFeedbackResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(GetMemberMessagesResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(GetMessagePreferencesResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(GetMyMessagesResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(GetMyeBayBuyingResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(GetMyeBaySellingResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(GetNotificationPreferencesResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(GetNotificationsUsageResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(GetOrdersResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(GetSellerEventsResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(GetSellerListResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(GetSellerTransactionsResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(GetSessionIDResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(GetShippingDiscountProfilesResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(GetStoreResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(GetStoreCategoryUpdateStatusResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(GetTaxTableResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(GetTokenStatusResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(GetUserResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(GetUserContactDetailsResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(GetUserPreferencesResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(GetVeROReasonCodeDetailsResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(GetVeROReportStatusResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(GeteBayDetailsResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(GeteBayOfficialTimeResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(LeaveFeedbackResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(PlaceOfferResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(RelistFixedPriceItemResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(RelistItemResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(RemoveFromWatchListResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(RespondToBestOfferResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(RespondToFeedbackResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(ReviseFixedPriceItemResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(ReviseInventoryStatusResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(ReviseItemResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(ReviseMyMessagesResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(ReviseMyMessagesFoldersResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(RevokeTokenResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(SendInvoiceResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(SetMessagePreferencesResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(SetNotificationPreferencesResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(SetShippingDiscountProfilesResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(SetStoreCategoriesResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(SetTaxTableResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(SetUserNotesResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(SetUserPreferencesResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(UploadSiteHostedPicturesResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(ValidateChallengeInputResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(ValidateTestUserRegistrationResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(VeROReportItemsResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(VerifyAddFixedPriceItemResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(VerifyAddItemResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(VerifyAddSecondChanceItemResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(VerifyRelistItemResponseType))]
[System.Xml.Serialization.XmlInclude(typeof(NotificationMessageType))]
public abstract partial class AbstractResponseType {

#region 属性
    /// <summary>
    /// OrderAck, SetShipmentTrackingInfoAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						This value represents the date and time when eBay processed the
    /// 						request. The time zone of this value is GMT and the format is the
    /// 						ISO 8601 date and time format (YYYY-MM-DDTHH:MM:SS.SSSZ). See the <b>Time
    /// 						Values</b> section in the eBay Features Guide for information about this
    /// 						time format and converting to and from the GMT time zone. <br>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						<b>GetCategories</b> and other Trading API calls are designed to retrieve very large sets
    /// 						of metadata that change once a day or less often. To improve performance, these
    /// 						calls return cached responses when you request all available data (with no
    /// 						filters). When this occurs, this time value reflects the time the cached response
    /// 						was created. Thus, this value is not necessarily when the request was processed.
    /// 						However, if you specify an input filter to reduce the amount of data returned, the
    /// 						calls retrieve the latest data (not cached). When this occurs, this time value does
    /// 						reflect when the request was processed.</span>
    /// 					
    /// </remarks>

	public System.DateTime? Timestamp { get; set; }
    /// <summary>
    /// CompleteSale, GetPopularKeywordsPartialFailureAlways
    /// CompleteSaleGetPopularKeywordsAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						A token representing the application-level acknowledgement code that indicates
    /// 						the response status (e.g., success). The <b>AckCodeType</b> list specifies
    /// 						the possible values for the <b>Ack</b> field.
    /// 					
    /// </remarks>

	public AckCodeType? Ack { get; set; }
    /// <summary>
    /// OrderAck, SetShipmentTrackingInfoConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Most Trading API calls support a <b>MessageID</b> element in the request
    /// 						and a <b>CorrelationID</b> element in the response. If you pass in a
    /// 						<b>MessageID</b> in a request, the same value will be returned in the
    /// 						<b>CorrelationID</b> field in the response. Pairing these values can
    /// 						help you track and confirm that a response is returned for every request and to
    /// 						match specific responses to specific requests.
    /// 						If you do not pass a <b>MessageID</b> value in the request,
    /// 						<b>CorrelationID</b> is not returned.<br>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						<b>GetCategories</b> is designed to retrieve very large sets of metadata
    /// 						that change once a day or less often. To improve performance, these calls return
    /// 						cached responses when you request all available data (with no filters). When this
    /// 						occurs, the <b>MessageID</b> and <b>CorrelationID</b> fields
    /// 						aren't applicable. However, if you specify an input filter to reduce the amount of
    /// 						data returned, the calls retrieve the latest data (not cached). When this occurs,
    /// 						<b>MessageID</b> and <b>CorrelationID</b> are applicable.
    /// 						</span>
    /// 					
    /// </remarks>

	public string CorrelationID { get; set; }
    /// <summary>
    /// Conditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						A list of application-level errors (if any) that occurred when eBay
    /// 						processed the request.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("Errors")]

	public System.Collections.Generic.List<ErrorType> Errors { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsAddToItemDescriptionEndItemPlaceOfferRelistFixedPriceItemRelistItemRespondToWantItNowPostReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemConditionally
    /// Standard Data for All Callshttps://developer.ebay.com/DevZone/guides/features-guide/Basics/Call-StandardCallData.html
    /// </summary>
    /// <remarks>
    /// 
    /// 						Supplemental information from eBay, if applicable. May elaborate on
    /// 						errors (such as how a listing violates eBay policies) or provide
    /// 						useful hints that may help a seller increase sales. This data can
    /// 						accompany the call's normal data result set or a result set that
    /// 						contains only errors. <br>
    /// 						<br>
    /// 						Applications must recognize when the <b>Message</b> field is returned and
    /// 						provide a means to display the listing hints and error message
    /// 						explanations to the user. <br>
    /// 						<br>
    /// 						The string can return HTML, including TABLE, IMG, and HREF elements.
    /// 						In this case, an HTML-based application should be able to include
    /// 						the HTML as-is in the HTML page that displays the results.
    /// 						A non-HTML application would need to parse the HTML
    /// 						and convert the table elements and image references into UI elements
    /// 						particular to the programming language used.
    /// 						As usual for string data types, the HTML markup elements are escaped
    /// 						with character entity references
    /// 						(e.g.,&lt;table&gt;&lt;tr&gt;...).
    /// 					
    /// </remarks>

	public string Message { get; set; }
    /// <summary>
    /// OrderAck, SetShipmentTrackingInfoAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						The version of the response payload schema. Indicates the version of the schema that eBay used to process the request. See the <b>Standard Data for All Calls</b> section in the eBay Features Guide for information on using the response version when troubleshooting <b>CustomCode</b> values that appear in the response.
    /// 					
    /// </remarks>

	public string Version { get; set; }
    /// <summary>
    /// OrderAck, SetShipmentTrackingInfoAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						This refers to the specific software build that eBay used when processing the request
    /// 						and generating the response. This includes the version number plus additional
    /// 						information. eBay Developer Support may request the build information
    /// 						when helping you resolve technical issues.
    /// 					
    /// </remarks>

	public string Build { get; set; }
    /// <remarks>
    /// 
    /// 						Event name of the notification. Only returned by Platform Notifications.
    /// 					
    /// </remarks>

	public string NotificationEventName { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsAddLiveAuctionItemAddOrderAddSecondChanceItemAddToItemDescriptionPlaceOfferRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Information that explains a failure due to a duplicate <b>InvocationID</b> being
    /// 						passed in.
    /// 					
    /// </remarks>

	public DuplicateInvocationDetailsType DuplicateInvocationDetails { get; set; }
    /// <remarks>
    /// 
    /// 						Recipient user ID of the notification. Only returned by Platform Notifications.
    /// 					
    /// </remarks>

	public string RecipientUserID { get; set; }
    /// <remarks>
    /// 
    /// 						Unique Identifier of Recipient user ID of the notification. Only returned by
    /// 						Platform Notifications (not for regular API call responses).
    /// 					
    /// </remarks>

	public string EIASToken { get; set; }
    /// <remarks>
    /// 
    /// 						A Base64-encoded MD5 hash that allows the recipient of a Platform
    /// 						Notification to verify this is a valid Platform Notification sent by
    /// 						eBay.
    /// 					
    /// </remarks>

	public string NotificationSignature { get; set; }
    /// <summary>
    /// FetchToken, OrderAck, SetShipmentTrackingInfo, GetSessionIDConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Expiration date of the user's authentication token. Only returned
    /// 						within the 7-day period prior to a token's expiration. To ensure
    /// 						that user authentication tokens are secure and to help avoid a
    /// 						user's token being compromised, tokens have a limited life span. A
    /// 						token is only valid for a period of time (set by eBay). After this
    /// 						amount of time has passed, the token expires and must be replaced
    /// 						with a new token.
    /// 					
    /// </remarks>

	public string HardExpirationWarning { get; set; }
    /// <summary>
    /// PlaceOfferConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container is conditionally returned in the <b>PlaceOffer</b> call response if eBay wants to challenge the user making the call to ensure that the call is being made by a real user and not a bot. This container consist of an encrypted token, the URL of the image that should be displayed to the user, or the URL of an audio clip for sight-impaired users. After receiving this data in the response, the caller must make another <b>PlaceOffer</b> call, this time passing in the encrypted token and one of the URLs that was received in the previous call response.
    /// 					
    /// </remarks>

	public BotBlockResponseType BotBlock { get; set; }
    /// <summary>
    /// SetNotificationPreferencesConditionally
    /// GetNotificationPreferencesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					An application subscribing to notifications can include an XML-compliant
    /// 					string, not to exceed 256 characters, which will be returned. The string can
    /// 					identify a particular user. Any sensitive information should be passed with due
    /// 					caution.
    /// 					<br><br>
    /// 					To subscribe to and receive eBay Buyer Protection notifications, this field is
    /// 					required, and you must pass in 'eBP notification' as a string.
    /// 					
    /// </remarks>

	public string ExternalUserData { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type used by the <b>BotBlock</b> container of the <b>PlaceOffer</b> call request. The <b>BotBlock</b> container is conditionally required in a <b>PlaceOffer</b> call request if the previous <b>PlaceOffer</b> call resulted in a <b>BotBlock</b> container being returned in the response. The <b>BotBlock</b> container in the response will contain an authentication token and a URL that will need to be passed into the <b>BotBlock</b> container of the <b>PlaceOffer</b> call request in the subsequent call.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class BotBlockRequestType {

#region 属性
    /// <summary>
    /// PlaceOfferConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This string value is an encrypted token that eBay generates and returns in the <b>BotBlock.BotBlockToken</b> field of the <b>PlaceOffer</b> call response when eBay is requiring that the user supply an authentication token and URL in order for eBay to process the <b>PlaceOffer</b> call. As soon as a user gets a <b>BotBlock</b> container returned in the <b>PlaceOffer</b> call response, that user should grab the authentication token and the URL and then run another <b>PlaceOffer</b> call, but this time using the <b>BotBlock</b> container and passing in the authentication token and the URL values.
    /// 					
    /// </remarks>

	public string BotBlockToken { get; set; }
    /// <summary>
    /// PlaceOfferConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This string value is a URL that eBay generates and returns in either the <b>BotBlock.BotBlockUrl</b> or <b>BotBlock.BotBlockAudioUrl</b> field (returned for site-impaired users) of the <b>PlaceOffer</b> call response when eBay is requiring that the user supply an authentication token and URL in order for eBay to process the <b>PlaceOffer</b> call. As soon as a user gets a <b>BotBlock</b> container returned in the <b>PlaceOffer</b> call response, that user should grab the authentication token and the URL and then run another <b>PlaceOffer</b> call, but this time using the <b>BotBlock</b> container and passing in the authentication token and the URL values.
    /// 					
    /// </remarks>

	public string BotBlockUserInput { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is used by the <b>BotBlock</b> container that is returned in the <b>PlaceOffer</b> call response if eBay is requiring that the user supply an authentication token and URL in order for eBay to process the <b>PlaceOffer</b> call. The authentication token and URL values that are returned in the <b>PlaceOffer</b> call response are then passed in the <b>BotBlock</b> container of a subsequent <b>PlaceOffer</b> call.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class BotBlockResponseType {

#region 属性
    /// <summary>
    /// PlaceOfferConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This string value is an encrypted token that eBay generates and returns in the <b>BotBlock.BotBlockToken</b> field of the <b>PlaceOffer</b> call response when eBay is requiring that the user supply an authentication token and URL in order for eBay to process the <b>PlaceOffer</b> call. As soon as a user gets a <b>BotBlock</b> container returned in the <b>PlaceOffer</b> call response, that user should grab the authentication token and the URL and then run another <b>PlaceOffer</b> call, but this time using the <b>BotBlock</b> container and passing in the authentication token and the URL values.
    /// 					
    /// </remarks>

	public string BotBlockToken { get; set; }
    /// <summary>
    /// PlaceOfferConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This string value is a URL to an image that eBay generates and returns in the <b>PlaceOffer</b> call response when eBay is requiring that the user supply an authentication token and URL in order for eBay to process the <b>PlaceOffer</b> call. As soon as a user gets a <b>BotBlock</b> container returned in the <b>PlaceOffer</b> call response, that user should grab the authentication token and this <b>BotBlockUrl</b> and then run another <b>PlaceOffer</b> call, but this time using the <b>BotBlock</b> container and passing in the authentication token and this URL value in the <b>BotBlockUserInput</b> field. For site-impaired users, the <b>BotBlockAudioUrl</b> field might be returned instead, in which case, the <b>BotBlockAudioUrl</b> value should be passed into the<b>BotBlockUserInput</b> field instead.
    /// 					
    /// </remarks>

	public string BotBlockUrl { get; set; }
    /// <summary>
    /// PlaceOfferConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This string value is a URL to an audio clip that eBay generates and returns in the <b>PlaceOffer</b> call response when eBay is requiring that the user supply an authentication token and URL in order for eBay to process the <b>PlaceOffer</b> call. As soon as a user gets a <b>BotBlock</b> container returned in the <b>PlaceOffer</b> call response, that user should grab the authentication token and this <b>BotBlockAudioUrl</b> and then run another <b>PlaceOffer</b> call, but this time using the <b>BotBlock</b> container and passing in the authentication token and this URL value in the <b>BotBlockUserInput</b> field.
    /// 						<br><br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						This field will generally only be returned for site-impaired users. If this field is not returned, but the <b>BotBlockUrl</b> field is returned instead, the <b>BotBlockUrl</b> value should be passed into the <b>BotBlockUserInput</b> field of the subsequent <b>PlaceOffer</b> call instead.
    /// 						</span>
    /// 					
    /// </remarks>

	public string BotBlockAudioUrl { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Security header used for SOAP API calls.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class CustomSecurityHeaderType {

#region 属性
    /// <summary>
    /// 2000
    /// FetchTokenYes
    /// Getting Tokenshttps://developer.ebay.com/DevZone/guides/features-guide/Basics/Tokens.html
    /// </summary>
    /// <remarks>
    /// 
    /// 						Authentication token representing the user who is making the
    /// 						request. The user's token must be retrieved from eBay. To determine
    /// 						a user's authentication token, see the Authentication and
    /// 						Authorization information in the eBay Web Services guide. For calls
    /// 						that list or retrieve item or transaction data, the user usually
    /// 						needs to be the seller of the item in question or, in some cases,
    /// 						the buyer. Similarly, calls that retrieve user or account data may
    /// 						be restricted to the user whose data is being requested. The
    /// 						documentation for each call includes information about such
    /// 						restrictions.
    /// 					
    /// </remarks>

	public string eBayAuthToken { get; set; }
    /// <summary>
    /// GetSessionID,FetchTokenConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Expiration date of the user's authentication token. Only returned
    /// 						within the 7-day period prior to a token's expiration. To ensure
    /// 						that user authentication tokens are secure and to help avoid a
    /// 						user's token being compromised, tokens have a limited life span. A
    /// 						token is only valid for a period of time (set by eBay). After this
    /// 						amount of time has passed, the token expires and must be replaced
    /// 						with a new token.
    /// 					
    /// </remarks>

	public string HardExpirationWarning { get; set; }
    /// <summary>
    /// FetchTokenYes
    /// </summary>
    /// <remarks>
    /// 
    /// 						Authentication information for the user on whose behalf the
    /// 						application is making the request, and authorization information for
    /// 						the application making the request. Only registered eBay users are
    /// 						allowed to make API calls. To verify that a user is registered, your
    /// 						application normally needs to pass a user-specific value called an
    /// 						"authentication token" in the request. This is equivalent to signing
    /// 						in on the eBay Web site. As API calls do not pass session
    /// 						information, you need to pass the user's authentication token every
    /// 						time you invoke a call on their behalf. All calls require an
    /// 						authentication token, except the calls you use to retrieve a token
    /// 						in the first place. For such calls, you use the eBay member's
    /// 						username and password instead.
    /// 					
    /// </remarks>

	public UserIdPasswordType Credentials { get; set; }
    /// <remarks>
    /// 
    /// 						A Base64-encoded MD5 hash that allows the recipient of a Platform
    /// 						Notification to verify this is a valid Platform Notification sent by
    /// 						eBay.
    /// 					
    /// </remarks>

	public string NotificationSignature { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is used by the <b>DuplicateInvocationDetails</b> container that is returned in some calls if a duplicate <b>InvocationID</b> or <b>InvocationTrackingID</b> is used in the call request.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class DuplicateInvocationDetailsType {

#region 属性
    /// <summary>
    /// AddItemAddItemsAddOrderAddSecondChanceItemAddToItemDescriptionPlaceOfferRelistItemReviseItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This value represents the duplicate <b>InvocationID</b> or <b>InvocationTrackingID</b> that was used in the call request.
    /// 					
    /// </remarks>

	public string DuplicateInvocationID { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsAddOrderAddSecondChanceItemAddToItemDescriptionPlaceOfferRelistItemReviseItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This enumeration value indicates the status of the previous call that used the <b>InvocationID</b> or <b>InvocationTrackingID</b> specified in the <b>DuplicateInvocationID</b>.
    /// 					
    /// </remarks>

	public InvocationStatusType? Status { get; set; }
    /// <summary>
    /// AddItemAddItemsAddOrderAddSecondChanceItemAddToItemDescriptionPlaceOfferRelistItemReviseItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This unique identifier identifies the business item the previous API invocation
    /// 						created. For example, the Item ID of the item created by an <b>AddItem</b> call.
    /// 					
    /// </remarks>

	public string InvocationTrackingID { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is used by the <b>ErrorParameters</b> container if one or more errors or warnings occur with the call, and if a specific request parameter has been pinpointed as the reason why the error or warning was triggered.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ErrorParameterType {

#region 属性
    /// <summary>
    /// Conditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This is the value of the request parameter noted in the <b>ParamID</b> attribute. So, if the <b>ParamID</b> value was <b>ItemID</b>, the value in this field would be the actual value of that <b>ItemID</b>.
    /// 					
    /// </remarks>

	public string Value { get; set; }
    /// <summary>
    /// Conditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					This is name of the request parameter that has been pinpointed as the reason why the error or warning was triggered. This value might be <b>ItemID</b>, in which case the identifier of that item would be returned in the <b>Value</b> field.
    /// 				
    /// </remarks>

	public string ParamID { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				These are request errors (as opposed to system errors) that occur due to problems
/// 				with business-level data (e.g., an invalid combination of arguments) that
/// 				the application passed in.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ErrorType {

#region 属性
    /// <summary>
    /// Conditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						A brief description of the condition that raised the error.
    /// 					
    /// </remarks>

	public string ShortMessage { get; set; }
    /// <summary>
    /// Conditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						A more detailed description of the condition that raised the error.
    /// 					
    /// </remarks>

	public string LongMessage { get; set; }
    /// <summary>
    /// other
    /// ActiveInventoryReportActive Inventory Report Errors/api-docs/sell/static/feed/lms-feeds-quick-reference.html#active-inventory-errorsConditionally
    /// ConditionallyErrors By Number/Devzone/XML/docs/Reference/eBay/Errors/ErrorMessages.html#ErrorsByNumber
    /// </summary>
    /// <remarks>
    /// 
    /// 						A unique code that identifies the particular error condition that occurred.
    /// 						Your application can use error codes as identifiers
    /// 						in your customized error-handling algorithms.
    /// 					
    /// </remarks>

	public string ErrorCode { get; set; }
    /// <summary>
    /// AddItemAddItemsAddLiveAuctionItemRelistItemReviseItemReviseLiveAuctionItemVerifyAddItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether the error message text is intended to be displayed to an end user
    /// 						or intended only to be parsed by the application. If true or not present (the default),
    /// 						the message text is intended for the end user. If false, the message text is intended for
    /// 						the application, and the application should translate the error into a more appropriate message.
    /// 						Only applicable to Item Specifics errors and warnings returned from listing requests.
    /// 					
    /// </remarks>

	public bool? UserDisplayHint { get; set; }
    /// <summary>
    /// Conditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether the error is a severe error (causing the request to fail)
    /// 						or an informational error (a warning) that should be communicated to the user.
    /// 					
    /// </remarks>

	public SeverityCodeType? SeverityCode { get; set; }
    /// <summary>
    /// Conditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This optional element carries a list of context-specific
    /// 						error variables that indicate details about the error condition.
    /// 						These are useful when multiple instances of <b>ErrorType</b> are returned.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("ErrorParameters")]

	public System.Collections.Generic.List<ErrorParameterType> ErrorParameters { get; set; }
    /// <summary>
    /// Conditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						API errors are divided between two classes: system errors and request errors.
    /// 					
    /// </remarks>

	public ErrorClassificationCodeType? ErrorClassification { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Basic type for specifying measures and the system of measurement.
/// 				A decimal value (e.g., 10.25) is meaningful
/// 				as a measure when accompanied by a definition of the unit of measure (e.g., Pounds),
/// 				in which case the value specifies the quantity of that unit.
/// 				A MeasureType expresses both the value (a decimal) and, optionally, the unit and
/// 				the system of measurement.
/// 				Details such as shipping weights are specified as measure types.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class MeasureType {

#region 属性
[System.Xml.Serialization.XmlText(DataType="decimal")]

	public decimal Value { get; set; }
    /// <summary>
    /// GetItemShippingGetSellerTransactionsGetShippingDiscountProfilesConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GeteBayDetails GeteBayDetails.html
    /// </summary>
    /// <remarks>
    /// 
    /// 							Unit of measure. This attribute is shared by various fields,
    /// 							representing units such as lbs, oz, kg, g, in, cm.
    /// 							<br><br>
    /// 							For weight, English major/minor units are pounds and ounces,
    /// 							and metric major/minor units are kilograms and grams.
    /// 							For length, the English unit is inches, and metric unit is centimeters.
    /// 							<br><br>
    /// 							To get the full list of package dimension and weight measurement units 
    /// 							(and all alternative spellings and abbreviations) supported by your site, 
    /// 							call <b>GeteBayDetails</b>.
    /// 
    /// 						
    /// </remarks>
[System.Xml.Serialization.XmlAttribute(DataType="token")]

	public string unit { get; set; }
    /// <summary>
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetShippingDiscountProfilesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 							The system of measurement (e.g., English).
    /// 						
    /// </remarks>
[System.Xml.Serialization.XmlAttribute]

	public MeasurementSystemCodeType measurementSystem { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Contains data for controlling pagination in API requests.
/// 				Pagination of returned data is required for some calls and not
/// 				needed in or not supported for some calls. See the documentation
/// 				for individual calls to determine whether pagination is supported,
/// 				required, or desirable.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class PaginationType {

#region 属性
    /// <summary>
    /// GetAccountGetFeedbackGetItemsAwaitingFeedbackGetItemTransactionsGetMemberMessagesGetMyeBayBuyingGetMyeBaySellingGetMyMessagesGetSellerTransactionsGetVeROReportStatusNo
    /// 110025GetOrdersNo
    /// GetBestOffersNo20
    /// GetSellerListYes
    /// 100GetPopularKeywordsNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						This integer value is used to specify the maximum number of entries to return
    /// 						in a single "page" of data. This value, along with the number of entries that
    /// 						match the input criteria, will determine the total pages (see
    /// 						<b>PaginationResult.TotalNumberOfPages</b>) in the result set.
    /// 						<br/><br/>
    /// 						The maximum and default values are not the same for all calls. For most <b>Trading API</b> calls, the maximum value is 200 and the default value is 25 entries per page.
    /// 						<br>
    /// 					
    /// </remarks>

	public int? EntriesPerPage { get; set; }
    /// <summary>
    /// 11GetAccountGetBestOffersGetFeedbackGetItemsAwaitingFeedbackGetItemTransactionsGetMemberMessagesGetMyeBayBuyingGetMyeBaySellingGetMyMessagesGetOrdersGetSellerTransactionsGetVeROReportStatusNo
    /// GetSellerListYes
    /// 1GetPopularKeywordsNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the number of the page of data to return in the current call.
    /// 						Default is 1 for most calls. For some calls, the default is 0. Specify a
    /// 						positive value equal to or lower than the number of pages available (which you
    /// 						determine by examining the results of your initial request).
    /// 						See the documentation for the individual calls to determine the correct
    /// 						default value.<br>
    /// 					
    /// </remarks>

	public int? PageNumber { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class UserIdPasswordType {

#region 属性
    /// <summary>
    /// FetchTokenYes
    /// </summary>
    /// <remarks>
    /// 
    /// 						The application ID that is unique to each application you (or your company)
    /// 						has registered with the eBay Developers Program. If you are executing a call
    /// 						in the Sandbox, this is the "AppId" value that eBay issued to you when you
    /// 						received your Sandbox keys. If you are executing a call in Production, this is
    /// 						the "AppId" value that eBay issued to you when you received your Production
    /// 						keys.
    /// 					
    /// </remarks>

	public string AppId { get; set; }
    /// <summary>
    /// FetchTokenYes
    /// </summary>
    /// <remarks>
    /// 
    /// 						The unique developer ID that the eBay Developers Program issued to you (or
    /// 						your company). If you are executing a call in the Sandbox, this is the "DevId"
    /// 						value that eBay issued to you when you received your Sandbox keys. Typically,
    /// 						you receive your Sandbox keys when you register as a new developer. If you are
    /// 						executing a call in Production, this is the "DevId" value that eBay issued to
    /// 						you when you received your Production keys. Typically, you receive your
    /// 						Production keys when you certify an application.
    /// 					
    /// </remarks>

	public string DevId { get; set; }
    /// <summary>
    /// FetchTokenYes
    /// </summary>
    /// <remarks>
    /// 
    /// 						Authentication certificate that authenticates the application when making API
    /// 						calls. If you are executing a call in the Sandbox, this is the "CertId" value
    /// 						that eBay issued to you when you received your Sandbox keys. If you are
    /// 						executing a call in Production, this is the "CertId" value that eBay issued to
    /// 						you when you received your Production keys. This is unrelated to auth tokens.
    /// 					
    /// </remarks>

	public string AuthCert { get; set; }
    /// <summary>
    /// 64
    /// FetchTokenYes
    /// </summary>
    /// <remarks>
    /// 
    /// 						eBay user ID (i.e., eBay.com Web site login name) for the user the application
    /// 						is retrieving a token for. This is typically the application's end-user (not
    /// 						the developer).
    /// 					
    /// </remarks>

	public string Username { get; set; }
    /// <remarks>
    /// 
    /// 						Password for the user specified in Username.
    /// 					
    /// </remarks>

	public string Password { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class XMLRequesterCredentialsType {

#region 属性
    /// <summary>
    /// 64
    /// FetchTokenYes
    /// </summary>
    /// <remarks>
    /// 
    /// 						eBay user ID (i.e., eBay.com Web site login name) for the user the application
    /// 						is retrieving a token for. This is typically the application's end-user (not
    /// 						the developer).
    /// 					
    /// </remarks>

	public string Username { get; set; }
    /// <remarks>
    /// 
    /// 						Password for the user specified in Username.
    /// 					
    /// </remarks>

	public string Password { get; set; }
    /// <summary>
    /// 2000
    /// FetchTokenYes
    /// Getting Tokenshttps://developer.ebay.com/DevZone/guides/features-guide/Basics/Tokens.html
    /// </summary>
    /// <remarks>
    /// 
    /// 						Authentication token representing the user who is making the request. The
    /// 						user's token must be retrieved from eBay. To determine a user's authentication
    /// 						token, see the Authentication and Authorization information in the eBay Web
    /// 						Services guide. For calls that list or retrieve item or transaction data, the
    /// 						user usually needs to be the seller of the item in question or, in some cases,
    /// 						the buyer. Similarly, calls that retrieve user or account data may be
    /// 						restricted to the user whose data is being requested. The documentation for
    /// 						each call includes information about such restrictions.
    /// 					
    /// </remarks>

	public string eBayAuthToken { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 			This type is used by the <b>ASQPreferences</b> container to allow the seller to add custom Ask Seller a Question (ASQ) subjects to item listings, or to reset the custom subjects to the default eBay values.
/// 		
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ASQPreferencesType {

#region 属性
    /// <summary>
    /// SetMessagePreferencesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					This boolean field can be used in the <b>SetMessagePreferences</b> call to reset all custom Ask Seller a Question (ASQ) subjects to their default eBay values. For any given <b>SetMessagePreferences</b> call, either  <b>ResetDefaultSubjects</b> or one or more <b>Subject</b> fields can be used, but not both in the same call.
    /// 				
    /// </remarks>

	public bool? ResetDefaultSubjects { get; set; }
    /// <summary>
    /// 60
    /// 9
    /// GetMessagePreferencesConditionally
    /// SetMessagePreferencesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					Each <b>Subject</b> field contains one custom Ask a Question (ASQ) subject. A maximum of nine custom ASQ subjects can be created. eBay's "General question about this item" subject will always be included in all listings.
    /// 					<br><br>
    /// 					For any given <b>SetMessagePreferences</b> call, either  <b>ResetDefaultSubjects</b> or one or more <b>Subject</b> fields can be used, but not both in the same call.  ASQ subjects are displayed on the drop-down list in the same order as they are passed in to the request. So, if the seller would like to rearrange the order of the ASQ subjects, they should keep this behavior in mind.
    /// 					<br><br>
    /// 					Note that the default ASQ subjects will display in the site's
    /// 					language if retrieved from a site other than the seller's own.
    /// 					For example, if a US seller sells on the German and French
    /// 					sites, the default subjects will display in German and French,
    /// 					respectively. However, if the seller adds custom subjects through the API on these sites, the custom subjects will display in the seller's own language - English in this use case.
    /// 					<br><br>
    /// 					The <b>GetMessagePreferences</b> call will retrieve all custom ASQ subjects that have been set by the seller. If custom ASQ subjects have not been set up by the seller, the eBay default ASQ subjects will be returned in the <b>Subject</b> fields instead.
    /// 				
    /// </remarks>
[System.Xml.Serialization.XmlElement("Subject")]

	public System.Collections.Generic.List<string> Subject { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the array of <b>AccountEntry</b> objects that are conditionally returned in the <b>GetAccount</b> response.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class AccountEntriesType {

#region 属性
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Container consisting of detailed information for each debit or credit transaction that occurs on an eBay user's account.  
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("AccountEntry")]

	public System.Collections.Generic.List<AccountEntryType> AccountEntry { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>AccountEntry</b> container returned in the <b>GetAccount</b> response. Each <b>AccountEntry</b> container consists of detailed information for a single credit or debit transaction, or an administrative action which occurred on the eBay user's account.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class AccountEntryType {

#region 属性
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This enumeration value indicates the type of transaction or administrative action that occurred on the eBay user's account. Possible values are defined in the <b>AccountDetailEntryCodeType</b> enumerated type.
    /// 					
    /// </remarks>

	public AccountDetailEntryCodeType? AccountDetailsEntryType { get; set; }
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The category of the monetary transaction or administrative action applied
    /// 						to an eBay account.
    /// 					
    /// </remarks>

	public string Description { get; set; }
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is no longer returned. If the eBay user has an outstanding balance owed to eBay, the owed amount will be displayed in the <b>AccountSummary.CurrentBalance</b> field in the <b>GetAccount</b> response.
    /// 					
    /// </remarks>

	public AmountType Balance { get; set; }
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Timestamp indicating the date and time that the entry was posted to the account, in
    /// 						GMT.
    /// 					
    /// </remarks>

	public System.DateTime? Date { get; set; }
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Gross fees that are assessed by eBay (net fees plus VAT, if any).
    /// 						Returned even if VAT does not apply.
    /// 						The value is positive for debits and negative for credits.
    /// 					
    /// </remarks>

	public AmountType GrossDetailAmount { get; set; }
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						If the account entry is associated with an eBay listing, this field
    /// 						shows the eBay <b>ItemID</b> value. If there is no correlation between the account entry and one of the user's eBay listings, '0' is returned in this field.
    /// 					
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Memo line for the account entry. It can be an empty string.
    /// 					
    /// </remarks>

	public string Memo { get; set; }
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The rate used for the currency conversion for a transaction.
    ///  					
    /// </remarks>

	public AmountType ConversionRate { get; set; }
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Net fees that are assessed by eBay, excluding additional surcharges and VAT
    /// 						(if any). Returned even if VAT does not apply. The value is positive for
    /// 						debits (user pays eBay) and negative for credits (eBay pays user).
    ///  					
    /// </remarks>

	public AmountType NetDetailAmount { get; set; }
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This value is the unique identifier for the account entry. This value is created by eBay once the transaction occurs on the user's account.
    /// 					
    /// </remarks>

	public string RefNumber { get; set; }
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The applicable rate that was used to calculate the VAT (Value-Added Tax) for the transaction. When the <b>VATPercent</b> is specified for a listing, the item's VAT information appears on the View Item page. In addition, the seller can choose to print an invoice that includes the item's net price, VAT percent, VAT amount, and total price. Since VAT rates vary depending on the item and on the user's country of residence, a seller is responsible for entering the correct VAT rate; it is not calculated by eBay. VAT is only applicable to sellers located in a European Union (EU) country. If VAT does not apply to the account entry, this field is still returned but it's value will be '0'.
    /// 					
    /// </remarks>

	public decimal? VATPercent { get; set; }
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						A description or comment about the monetary transaction or administrative action applied to an eBay user account.
    /// 					
    /// </remarks>

	public string Title { get; set; }
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						<b>OrderLineItemID</b> is a unique identifier for an eBay order line item. This field is only returned if the account entry is associated with an order line item.
    /// 					
    /// </remarks>

	public string OrderLineItemID { get; set; }
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The unique identifier of an order line item. This field is only returned if the account entry is associated with an order line item.
    /// 						<br>
    /// 						<br>
    /// 						The <b>TransactionID</b> value for auction listings is always <code>0</code> since there can be only one winning bidder/one sale for an auction listing.
    /// 						<br/><br/>
    /// 						<span class="tablenote"><b>Note: </b> Beginning in July 2024, non-zero transaction IDs will start being returned for auction listings. If necessary, update code to handle non-zero transaction IDs for auction transactions before this time. 
    /// 						</span>
    /// 					
    /// </remarks>

	public string TransactionID { get; set; }
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This boolean field is returned as <code>true</code> if the seller received a discount on the Final Value Fee for the order line item. Only Top-Rated sellers are eligible for this Final Value Fee discount. The Final Value Fee discount percentage varies by country. For more information on becoming a Top-Rated Seller in the US and the requirements for Top-Rated Plus listings, see the <a href="https://www.ebay.com/help/selling/seller-levels-performance-standards/seller-levels-performance-standards?id=4080" target="_blank">Becoming a Top Rated Seller</a> help topic.
    /// 						<br/><br/>
    /// 						This field will not be returned until eBay bills the seller for the Final Value Fee for the eligible order line item.
    /// 					
    /// </remarks>

	public bool? ReceivedTopRatedDiscount { get; set; }
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned if the account fee or credit is associated with an entire (single or multiple line item) order, and not necessarily for a single line item within the order.
    /// 					
    /// </remarks>

	public string OrderId { get; set; }
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container is an array of one or more discounts applied to the corresponding accounty entry. This container will not be returned if there are no discounts applied to the corresponding accounty entry.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("Discount", IsNullable = false)]

	public System.Collections.Generic.List<DiscountType> DiscountDetail { get; set; }
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This boolean field is returned with each account entry if the <b>IncludeNettedEntries</b> field is included in the request and set to <code>true</code>. The value indicates whether or not the corresponding account entry value (charge or credit) is a part of the 'Total Netted Charge Amount' or 'Total Netted Credit Amount' values returned in the <b>AccountSummary.NettedTransactionSummary</b> container.
    /// 						<br>
    /// 						<br>
    /// 						If this value is <code>true</code>, it indicates that the corresponding fee was deducted from a seller payout. If the value is <code>false</code>, it indicates that the fee or credit was invoiced to the seller  instead.
    /// 					
    /// </remarks>

	public bool? Netted { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Summary data for the requesting user's seller account as a whole. This includes a
/// 				balance for the account, any past due amount and date, and defining data for
/// 				additional accounts (if the user has changed country of residency while having an
/// 				active eBay account).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class AccountSummaryType {

#region 属性
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates the current state of the account (such as active or inactive).
    /// 						Possible values are enumerated in <b>AccountStateCodeType</b>.
    /// 					
    /// </remarks>

	public AccountStateCodeType? AccountState { get; set; }
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field specifies the payment amount that has been made by the user for the invoice. This field is only returned if a payment has been made towards the invoice, and if the <b>AccountHistorySelection</b> input field's value was set to <code>LastInvoice</code>. This field is not returned if the <b>AccountHistorySelection</b> input field's value was set to <code>BetweenSpecifiedDates</code> and a custom time period (overlapping multiple billing cycles) was specified. If a credit was issued by eBay to the user instead, this credit will be shown in the <b>InvoiceCredit</b> field.
    /// 					
    /// </remarks>

	public AmountType InvoicePayment { get; set; }
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field specifies the credit amount that has been issued to the user's account by eBay for the invoice. This field is only returned if a credit has been issued towards the invoice, and if the <b>AccountHistorySelection</b> input field's value was set to <code>LastInvoice</code>. This field is not returned if the <b>AccountHistorySelection</b> input field's value was set to <code>BetweenSpecifiedDates</code> and a custom time period (overlapping multiple billing cycles) was specified. If a payment was made by the user instead, this payment amount will be shown in the <b>InvoicePayment</b> field.
    /// 					
    /// </remarks>

	public AmountType InvoiceCredit { get; set; }
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field specifies the balance of any new fees that have been assessed toward the user's account since the last invoice was created. This field is only returned if the <b>AccountHistorySelection</b> input field's value was set to <code>LastInvoice</code>. This field is not returned if the <b>AccountHistorySelection</b> input field's value was set to <code>BetweenSpecifiedDates</code> or <code>OrderId</code>. If there have been no fees since the last invoice was created, this value will be <code>0.0</code>.
    /// 					
    /// </remarks>

	public AmountType InvoiceNewFee { get; set; }
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container shows the identifier and current balance for another eBay account associated with the eBay user. This container will appear under the <b>AccountSummary</b> container for each additional account that the eBay user owns.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("AdditionalAccount")]

	public System.Collections.Generic.List<AdditionalAccountType> AdditionalAccount { get; set; }
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This value indicates the amount of money that is past due on the user's account. If no money is past due, this value will be <code>0.0</code>.
    /// 					
    /// </remarks>

	public AmountType AmountPastDue { get; set; }
    /// <summary>
    /// 4
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This string value represents the first four digits of the bank account the associated with the user account. This field is only applicable if a bank account is being used to pay monthly invoices.
    /// 					
    /// </remarks>

	public string BankAccountInfo { get; set; }
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This timestamp indicates the date and time when the owner of the account last changed the bank account on file as the primary payment method. This field may not be returned if the bank account on file has never been changed, or if the primary payment method is not a bank account.
    /// 					
    /// </remarks>

	public System.DateTime? BankModifyDate { get; set; }
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This integer value indicates the day of the month on which eBay sends a billing invoice to the user. A value of <code>0</code> indicates that an invoice is sent on the last day of each month. A value of <code>15</code>15 indicates that an invoice is sent on the 15th day of each month.
    /// 					
    /// </remarks>

	public int? BillingCycleDate { get; set; }
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This timestamp indicates the expiration date for the credit card that is currently on file and used to pay monthly invoices. This field may not be returned if the primary method is not a credit card.
    /// 					
    /// </remarks>

	public System.DateTime? CreditCardExpiration { get; set; }
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This string value represents the last four digits of the credit card that the user selected as payment method for the account. This field is only applicable if a credit card is being used to pay monthly invoices.
    /// 					
    /// </remarks>

	public string CreditCardInfo { get; set; }
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This timestamp indicates the date and time when the owner of the account last changed the credit card on file as the primary payment method. This field may not be returned if the credit card on file has never been changed, or if the primary payment method is not a credit card.
    /// 					
    /// </remarks>

	public System.DateTime? CreditCardModifyDate { get; set; }
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field shows the current balance for the user's account. This value can be <code>0.0</code>, a positive amount (debit), or a negative amount (credit).
    /// 						<br><br>
    /// 						This field is only returned if the <b>ExcludeBalance</b> flag is included in the call request and set to <code>false</code>.
    /// 					
    /// </remarks>

	public AmountType CurrentBalance { get; set; }
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field specifies the balance for the invoice. This field is only returned if the <b>AccountHistorySelection</b> input field's value was set to <code>LastInvoice</code>. This field is not returned if the <b>AccountHistorySelection</b> input field's value was set to <code>BetweenSpecifiedDates</code> and a custom time period (overlapping multiple billing cycles) was specified. The value is positive for debits and negative for credits.
    /// 					
    /// </remarks>

	public AmountType InvoiceBalance { get; set; }
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This timestamp indicates the date and time of the invoice. This field is only returned if the <b>AccountHistorySelection</b> input field's value was set to <code>LastInvoice</code>. This field is not returned if the <b>AccountHistorySelection</b> input field's value was set to <code>BetweenSpecifiedDates</code> and a custom time period (overlapping multiple billing cycles) was specified.
    /// 					
    /// </remarks>

	public System.DateTime? InvoiceDate { get; set; }
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field shows the amount of the last payment that was made by the user.
    /// 					
    /// </remarks>

	public AmountType LastAmountPaid { get; set; }
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This timestamp shows the date and time of the last payment that was made by the user.
    /// 					
    /// </remarks>

	public System.DateTime? LastPaymentDate { get; set; }
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This boolean field indicates whether or not the account has a past due balance. A value of <code>true</code> indicates that the account is past due, and a value of <code>false</code> indicates  that the account is current. If the account is past due, the amount past due can be found in the <b>AmountPastDue</b> field.
    /// 					
    /// </remarks>

	public bool? PastDue { get; set; }
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This enumeration value indicates the primary payment method used by the user to pay monthly eBay invoices.
    /// 					
    /// </remarks>

	public SellerPaymentMethodCodeType? PaymentMethod { get; set; }
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container shows the total amount of fees (and credits if applicable) that have already been paid through seller payout deductions. The seller must include the <b>IncludeNettedEntries</b> field in the request and set it to <code>true</code> in order for this container to be returned.
    /// 					
    /// </remarks>

	public NettedTransactionSummaryType NettedTransactionSummary { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>AdFormatEnabled</b> field that is returned under the <b>FeatureDefinitions</b> container if <code>AdFormatEnabled</code> is used as a <b>FeatureID</b> value in the request, or if no <b>FeatureID</b> values are used in the request. This field is returned as an empty element (a boolean value is not returned) if one or more eBay API-enabled sites support Classified Ad listings.
/// 				<br>
/// 				<br>
/// 				To verify if a specific eBay site supports Classified Ad listings (for most categories), look for a <code>true</code> value in the <b>SiteDefaults.AdFormatEnabled</b> field.
/// 				<br>
/// 				<br>
/// 				To verify if a specific category on a specific eBay site supports Classified Ad listings, pass in a <b>CategoryID</b> value in the request, and then look for a <code>true</code> value in the <b>AdFormatEnabled</b> field of the corresponding <b>Category</b> node (match up the <b>CategoryID</b> values if more than one Category IDs were passed in the request).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class AdFormatEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is used by the <b>AdFormatLead</b> container that is returned in the <b>GetAdFormatLeads</b> call response. An <b>AdFormatLead</b> container will be returned for each user that has expressed interest in the Classified Ad listing that was specified by the seller in the <b>GetAdFormatLeads</b> call request. Each <b>AdFormatLead</b> container consists of prospective buyer contact information and other details associated with a lead for a Classified Ad listing.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class AdFormatLeadType {

#region 属性
    /// <summary>
    /// GetAdFormatLeadsDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field shows the message that was sent from the prospective buyer to the seller. This will be the same content that is returned in the <b>AdFormatLead.MemberMessage.MemberMessageExchange.Question.Body</b> field (that is only displayed if the <b>IncludeMemberMessages</b> boolean field is included in the request and set to <code>true</code>). The advantage of retrieving the <b>MemberMessageExchange</b> node, however, is that you retrieve the entire exchange between the seller and the prospective buyer.
    /// 					
    /// </remarks>

	public string AdditionalInformation { get; set; }
    /// <summary>
    /// GetAdFormatLeadsDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container consists of contact information for the prospective buyer.
    /// 						This container will not be returned if the buyer did not provide any contact information.
    /// 					
    /// </remarks>

	public AddressType Address { get; set; }
    /// <summary>
    /// GetAdFormatLeadsDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The time of day when the prospective buyer prefers to be contacted by the seller. This field is not returned if this information is unavailable.
    /// 					
    /// </remarks>

	public string BestTimeToCall { get; set; }
    /// <summary>
    /// GetAdFormatLeadsDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Email address for the prospective buyer. If the prospective buyer chooses to
    /// 						hide his email address when contacting the seller, this element contains two
    /// 						dashes (--) instead of an email address.
    /// 					
    /// </remarks>

	public string Email { get; set; }
    /// <summary>
    /// GetAdFormatLeadsDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Date and time (in GMT) that the lead was submitted.
    /// 					
    /// </remarks>

	public System.DateTime? SubmittedTime { get; set; }
    /// <summary>
    /// GetAdFormatLeadsDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The unique identifier of the listing.
    /// 					
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// 80
    /// GetAdFormatLeadsDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The title of the listing.
    /// 					
    /// </remarks>

	public string ItemTitle { get; set; }
    /// <summary>
    /// GetAdFormatLeadsDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The eBay user ID of the user who is interested in the seller's item.
    /// 					
    /// </remarks>

	public string UserID { get; set; }
    /// <summary>
    /// GetAdFormatLeadsDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Contains any mail message content shared between the seller and prospective buyer.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("MemberMessageExchange", IsNullable = false)]

	public System.Collections.Generic.List<MemberMessageExchangeType> MemberMessage { get; set; }
    /// <summary>
    /// GetAdFormatLeadsDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The enumeration value in this field will indicate whether or not the seller has responded to the lead.
    /// 					
    /// </remarks>

	public AdFormatLeadStatusCodeType? Status { get; set; }
    /// <remarks>
    /// 
    /// 						The pay-per-lead feature is no longer available, and this field is scheduled to
    /// 						be removed from the WSDL.
    /// 					
    /// </remarks>

	public AmountType LeadFee { get; set; }
    /// <summary>
    /// 128
    /// GetAdFormatLeadsDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Email address for the prospective buyer as entered in the lead form on the View
    /// 						Item page. Provides a way for sellers to contact prospective buyers who choose not to
    /// 						log in to eBay. This applies to only eBay Motors and eBay Motors categories.
    /// 					
    /// </remarks>

	public string ExternalEmail { get; set; }
    /// <summary>
    /// 255
    /// GetAdFormatLeadsDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Prospective buyer's time frame for purchasing a vehicle as entered in the
    /// 						Lead form on View Item page for eBay Motors and eBay Motors categories.
    /// 						Purchasing Time Frames include:
    /// 						<ul>
    /// 						<li>
    /// 							within next 3 days
    /// 						</li>
    /// 						<li>
    /// 							within a week
    /// 						</li>
    /// 						<li>
    /// 							within a month
    /// 						</li>
    /// 						<li>
    /// 							within three months
    /// 						</li>
    /// 						<li>
    /// 							in more than three months
    /// 						</li>
    /// 						<li>
    /// 							within an undecided time frame
    /// 						</li>
    /// 						</ul>
    /// 					
    /// </remarks>

	public string PurchaseTimeFrame { get; set; }
    /// <summary>
    /// 32
    /// GetAdFormatLeadsDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The year of the vehicle the prospective buyer would like to trade in. Entered on
    /// 						the lead form on the View Item page. Applies to eBay Motors and Motors categories
    /// 						only.
    /// 					
    /// </remarks>

	public string TradeInYear { get; set; }
    /// <summary>
    /// 128
    /// GetAdFormatLeadsDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						 The make of the vehicle the prospective buyer would like to trade in. Entered on
    /// 						 the lead form on the View Item page. Applies to eBay Motors and Motors categories
    /// 						 only.
    /// 					
    /// </remarks>

	public string TradeInMake { get; set; }
    /// <summary>
    /// 128
    /// GetAdFormatLeadsDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The model of the vehicle the prospective buyer would like to trade in. Entered on the lead form on the View Item page. Applies to eBay Motors and Motors categories only.
    /// 					
    /// </remarks>

	public string TradeInModel { get; set; }
    /// <summary>
    /// GetAdFormatLeadsDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Prospective buyer answer whether or not the prospective buyer would like
    /// 						financing. Entered on the lead form on the View Item page. Applies to eBay Motors
    /// 						and Motors categories only. Financing response meanings: 0= no response,1= yes, 2=
    /// 						no.
    /// 					
    /// </remarks>

	public bool? FinancingAnswer { get; set; }
    /// <summary>
    /// GetAdFormatLeadsDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field corresponds to a configurable question on the lead form in the View
    /// 						Item web page. The corresponding question is site-specific. To determine the
    /// 						question for a specific site, you must view the form in the web flow for the given
    /// 						site. This field applies to Classified Ad format listings in Motors categories
    /// 						only.
    /// 					
    /// </remarks>

	public bool? Answer1 { get; set; }
    /// <summary>
    /// GetAdFormatLeadsDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field corresponds to a configurable question on the lead form in the View
    /// 						Item web page. The corresponding question is site-specific. To determine the
    /// 						question for a specific site, you must view the form in the web flow for the given
    /// 						site. This field applies to Classified Ad format listings in Motors categories
    /// 						only.
    /// 					
    /// </remarks>

	public bool? Answer2 { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>AddItemRequestContainer</b> containers that are used in an <b>AddItems</b> call. An <b>AddItemRequestContainer</b> container is required for each item being created through an <b>AddItems</b> call. Each item being created through an <b>AddItems</b> call is identified through a unique <b>AddItemRequestContainer.MessageID</b> value that is defined by the seller.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class AddItemRequestContainerType {

#region 属性
    /// <summary>
    /// AddItemsYes
    /// </summary>
    /// <remarks>
    /// 
    /// 						Container holding all values that define a new listing. One <b>Item</b>
    /// 						container is required for each <b>AddItemRequestContainer</b>.
    /// 					
    /// </remarks>

	public ItemType Item { get; set; }
    /// <summary>
    /// AddItemsYes
    /// </summary>
    /// <remarks>
    /// 
    /// 						Most Trading API calls support a <b>MessageID</b> element in the request
    /// 						and a <b>CorrelationID</b> element in the response. With
    /// 						<b>AddItems</b>, a unique <b>MessageID</b> value is required for
    /// 						each <b>AddItemRequestContainer</b> container that is used in the request. The
    /// 						<b>CorrelationID</b> value returned under each
    /// 						<b>AddItemResponseContainer</b> container is used to correlate each
    /// 						item request container with its corresponding response container. The same <b>MessageID</b> value that you pass into a request will
    /// 						be returned in the <b>CorrelationID</b> field in the response.
    /// 					
    /// </remarks>

	public string MessageID { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>AddItemResponseContainer</b> containers that are returned in an <b>AddItems</b> call. An <b>AddItemResponseContainer</b> container is returned for each item created through an <b>AddItems</b> call. Each item being created through an <b>AddItems</b> call is identified through a unique <b>AddItemRequestContainer.MessageID</b> value that is defined by the seller. To match up the <b>AddItemResponseContainer</b> to the <b>AddItemRequestContainer</b>, look for a <b>AddItemResponseContainer.CorrelationID</b> value that matches the <b>AddItemRequestContainer.MessageID</b> value in the request.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class AddItemResponseContainerType {

#region 属性
    /// <summary>
    /// AddItemsAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Unique identifier for the new listing. This field is returned as long as the listing was successfully created.
    /// 					
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// AddItemsAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Starting date and time for the new listing. This value is based on the time the listing was received and processed, or the time the item will be listed if the seller included the <b>Item.ScheduleTime</b> field in the request and set a custom start time of the listing (in the future).
    /// 					
    /// </remarks>

	public System.DateTime? StartTime { get; set; }
    /// <summary>
    /// AddItemsAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Date and time when the new listing is scheduled to end based on the start time and the listing duration value that was set in the <b>ListingDuration</b> field at listing time. If the value of <b>ListingDuration</b> was set to <code>GTC</code> (Good 'Til Cancelled) this value will be set one month ahead of the start time, and this value will continue to be updated one month ahead each time  the GTC listing needs to be renewed. Fixed-price listings get renewed automatically as long as there is still a quantity of <code>1</code> or above, or even if the quantity is <code>0</code>, but the 'out-of-stock control' feature is enabled.
    /// 						<br><br>
    /// 						Note that <code>GTC</code> is not a supported listing duration for auction listings, but is the only supported listing duration for fixed-price listings except for a few motor vehicle categories on eBay Motors US, eBay UK, and eBay Italy.
    /// 					
    /// </remarks>

	public System.DateTime? EndTime { get; set; }
    /// <summary>
    /// AddItemsAlways
    /// eBay.com Selling Feeshttps://www.ebay.com/help/selling/fees-credits-invoices/selling-fees?id=4822
    /// Fees by marketplacehttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/fees-by-marketplace.html
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container is an array of fees associated with the creation of the listing. The fees in this container will not include any fees that are based on the purchase price (such as transaction fees) and only come into play when the listing has a sale.
    /// 						<br>
    /// 						<br>
    /// 						All listing fee types are returned, even if those fees are not applicable for the revised listings and are '0.0'.
    /// 						<br>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note:</b> The currency used for all fees returned under the <b>Fees</b> container reflects the currency used for the listing site, and not necessarily in the seller's default/home currency. For example, if a Canadian seller is using the <b>AddItems</b> call to list items on the eBay US site, the currency type shown for each fee will be <code>USD</code> and not <code>CAD</code>.
    /// 						</span>
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("Fee", IsNullable = false)]

	public System.Collections.Generic.List<FeeType> Fees { get; set; }
    /// <summary>
    /// 10
    /// AddItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The unique identifier of the primary category in which the item was listed. This field is only returned if the <b>Item.CategoryMappingAllowed</b> boolean field is set to <code>true</code> in the request (or omitted) and the Category ID passed in as the primary listing category was automatically mapped to a new Category ID by eBay. If the primary category ID passed in the request is still active/valid, this field is not returned.
    /// 					
    /// </remarks>

	public string CategoryID { get; set; }
    /// <summary>
    /// 10
    /// AddItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Unique identifier of the secondary category in which the item was listed. This field is only returned if the <b>Item.CategoryMappingAllowed</b> boolean field is set to <code>true</code> in the request (or omitted) and the Category ID passed in as the secondary listing category was automatically mapped to a new Category ID by eBay. If the secondary category ID passed in the request is still active/valid, this field is not returned.
    /// 					
    /// </remarks>

	public string Category2ID { get; set; }
    /// <summary>
    /// AddItemsAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Most Trading API calls support a <b>MessageID</b> element in the request
    /// 						and a <b>CorrelationID</b> element in the response. With
    /// 						<b>AddItems</b>, a unique <b>MessageID</b> value is required for
    /// 						each <b>AddItemRequestContainer</b> container that is used in the request. The
    /// 						<b>CorrelationID</b> value returned under each
    /// 						<b>AddItemResponseContainer</b> container is used to correlate each
    /// 						item request container with its corresponding response container. The same <b>MessageID</b> value that you pass into a request will
    /// 						be returned in the <b>CorrelationID</b> field in the response.
    /// 					
    /// </remarks>

	public string CorrelationID { get; set; }
    /// <summary>
    /// AddItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container is an array of one or more errors and/or warnings (if any) that occurred when eBay attempted to create the corresponding listing. Note that one or more errors and/or warnings may also occur at the call-level.
    /// 						<br>
    /// 						<br>
    /// 						This container is only returned if there were one or more warnings and/or errors that occurred with the creation of the corresponding listing.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("Errors")]

	public System.Collections.Generic.List<ErrorType> Errors { get; set; }
    /// <summary>
    /// AddItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Supplemental information from eBay, if applicable. May elaborate on errors or
    /// 						provide useful hints for the seller. This data can accompany the call's normal
    /// 						data result set or a result set that contains only errors. The string can
    /// 						return HTML, including TABLE, IMG, and HREF elements. In this case, an HTML-
    /// 						based application should be able to include the HTML as-is in the HTML page
    /// 						that displays the results. A non-HTML application would need to parse the HTML
    /// 						and convert the table elements and image references into UI elements
    /// 						particular to the programming language used. Because this data is returned as
    /// 						a string, the HTML markup elements are escaped with character entity
    /// 						references (e.g.,&lt;table&gt;&lt;tr&gt;...).
    /// 					
    /// </remarks>

	public string Message { get; set; }
    /// <summary>
    /// AddItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container is an array of one or more listing fee/upgrade discount types being offered by eBay to the seller.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("DiscountReason")]

	public System.Collections.Generic.List<DiscountReasonCodeType> DiscountReason { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is used by the <b>AddMemberMessagesAAQToBidderRequestContainer</b> container. An <b>AddMemberMessagesAAQToBidderRequestContainer</b> container is required for each bidder the seller is sending a message to. The seller can communicate with up to 10 bidders with one <b>AddMemberMessagesAAQToBidder</b> call.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class AddMemberMessagesAAQToBidderRequestContainerType {

#region 属性
    /// <summary>
    /// AddMemberMessagesAAQToBidderYes
    /// </summary>
    /// <remarks>
    /// 
    /// 						A <b>CorrelationID</b> value is required for
    /// 						each <b>AddMemberMessagesAAQToBidderRequestContainer</b> container that is used in the request. The
    /// 						<b>CorrelationID</b> value returned under each
    /// 						<b>AddMemberMessagesAAQToBidderResponseContainer</b> container is used to correlate each
    /// 						member message container in the request with its corresponding member message container in the
    /// 						response. The same <b>CorrelationID</b> value that you pass into a request will
    /// 						be returned in the <b>CorrelationID</b> field in the response.
    /// 					
    /// </remarks>

	public string CorrelationID { get; set; }
    /// <summary>
    /// AddMemberMessagesAAQToBidderYes
    /// </summary>
    /// <remarks>
    /// 
    /// 						A unique identifier for an eBay listing. This field is required and identifies the active listing that is being discussed between the seller and the bidder.
    /// 					
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// AddMemberMessagesAAQToBidderYes
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container consists of message body, the recipient(s) of the message, and a boolean flag to control whether or not a copy of the message is sent to the sender's My eBay Inbox.
    /// 					
    /// </remarks>

	public MemberMessageType MemberMessage { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is used by the <b>AddMemberMessagesAAQToBidderResponseContainer</b> container. A <b>AddMemberMessagesAAQToBidderResponseContainer</b> container is returned for each message that was sent from the seller to the bidders/potential buyers through a separate <b>AddMemberMessagesAAQToBidderRequestContainer</b>. The <b>Ack</b> value in each <b>AddMemberMessagesAAQToBidderResponseContainer</b>  container indicates whether or not each message sent through the call was successful or not, and an <b>AddMemberMessagesAAQToBidderResponseContainer</b> is matched up to the corresponding <b>AddMemberMessagesAAQToBidderRequestContainer</b> through the <b>CorrelationID</b> value.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class AddMemberMessagesAAQToBidderResponseContainerType {

#region 属性
    /// <summary>
    /// AddMemberMessagesAAQToBidderAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						This is a unique identifier for a message that was sent through the <b>AddMemberMessagesAAQToBidder</b> call. The seller must provide a <b>CorrelationID</b> value for each message that is sent through an <b>AddMemberMessagesAAQToBidderRequestContainer</b> container in the request. The <b>CorrelationID</b> value returned under each <b>AddMemberMessagesAAQToBidderResponseContainer</b> container is used to correlate each member message container in the request with its corresponding member message container in the response.
    /// 					
    /// </remarks>

	public string CorrelationID { get; set; }
    /// <summary>
    /// AddMemberMessagesAAQToBidderAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						This enumerated value indicates whether or not the corresponding message was successfully sent to the bidder(s)/potential buyer(s). If the value returned in this field is not <code>Success</code>, the message may have to be resent with another <b>AddMemberMessagesAAQToBidder</b> call.
    /// 					
    /// </remarks>

	public AckCodeType? Ack { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 						Contains the data for one additional account. An additional account is
/// 						created when the user has an active account and changes country of
/// 						registry (i.e., registers with the eBay site for the new country). A
/// 						new account is created and the old account becomes inactive as an
/// 						additional account. A user who never changes country of residency while
/// 						having an account will never have any additional accounts.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class AdditionalAccountType {

#region 属性
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Indicates the current balance of the additional account.
    /// 					
    /// </remarks>

	public AmountType Balance { get; set; }
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Indicates the currency in which monetary amounts for the additional account
    /// 								are expressed.
    /// 					
    /// </remarks>

	public CurrencyCodeType? Currency { get; set; }
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								Indicates the unique identifier for the additional account (the account ID).
    /// 					
    /// </remarks>

	public string AccountCode { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>AdditionalCompatibilityEnabled</b> field that is
/// 				returned under the <b>FeatureDefinitions</b> container of the
/// 				<b>GetCategoryFeatures</b> response (as long as
/// 				<code>AdditionalCompatibilityEnabled</code> is included as a <b>FeatureID</b> value in
/// 				the call request or no <b>FeatureID</b> values are passed into the call
/// 				request). This field is returned as an
/// 				empty element (a boolean value is not returned) if one or more eBay API-enabled sites
/// 				support the Boats Parts Compatibility feature.
/// 				<br/><br/>
/// 				To verify if a specific eBay site supports Boats Parts Compatibility (for most
/// 				categories), look for a <code>true</code> value in the
/// 				<b>SiteDefaults.AdditionalCompatibilityEnabled</b> field.
/// 				<br/><br/>
/// 				To verify if a specific category on a specific eBay site supports Boats Parts
/// 				Compatibility, pass in a <b>CategoryID</b> value in the request, and then
/// 				look for a <code>true</code> value in the <b>AdditionalCompatibilityEnabled</b> field
/// 				of the corresponding Category node (match up the <b>CategoryID</b> values
/// 				if more than one Category IDs were passed in the request).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class AdditionalCompatibilityEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is used to display the value of the <b>type</b> attribute of the <b>AddressAttribute</b> field.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class AddressAttributeType {

#region 属性
[System.Xml.Serialization.XmlText(DataType="string")]

	public string Value { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								The only supported value for this attribute is <code>ReferenceNumber</code>, but in the future, other address attributes may be supported. The <code>ReferenceNumber</code> is a unique identifier for a 'Click and Collect' order. Click and Collect orders are only available on the eBay UK and eBay Australia sites.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlAttribute]

	public AddressAttributeCodeType type { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 			Contains the data for an eBay user's address. This is the base type for a
/// 			number of user addresses, including seller payment address, buyer
/// 			shipping address, and buyer and seller registration address.
/// 		
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class AddressType {

#region 属性
    /// <summary>
    /// 128
    /// GetItemRegistrationAddressDetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAllConditionally
    /// GetUserConditionallyRegistrationAddressDetailLevel: ReturnAll
    /// GetUserConditionallySellerPaymentAddressDetailLevel: ReturnAll
    /// GetUserContactDetailsAlways
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					<br>
    /// 					The eBay user's name associated with an address on file with eBay.
    /// 					<br>
    /// 						<span class="tablenote"><b>Note: </b> The <b>Seller.RegistrationAddress</b> container and its child fields will stop being returned in <b>GetSellerTransactions</b> on January 31, 2024. 
    /// 					</span>
    /// 				
    /// </remarks>

	public string Name { get; set; }
    /// <summary>
    /// GetBidderListConditionallyShippingAddress
    /// GetItemRegistrationAddressDetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAllConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionallyShippingAddress
    /// GetUserConditionallyRegistrationAddressDetailLevel: ReturnAll
    /// AddItemAddItemsRelistItemReviseItemVerifyAddItemVerifyRelistItemNo
    /// </summary>
    /// <remarks>
    /// 
    /// 					A concatenation of <b>Street1</b> and <b>Street2</b>, primarily used for a registration address.
    /// 				
    /// </remarks>

	public string Street { get; set; }
    /// <summary>
    /// GB, DE - 35; US, CA - 40; AU - 80; Other countries - 50
    /// GetBidderListConditionallyShippingAddress
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionallyShippingAddressShipToAddress
    /// GetAdFormatLeadsDetailLevel: ReturnAllConditionally
    /// GetItemRegistrationAddressDetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAllConditionally
    /// GetItemSellerContactDetailsDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetUserConditionallyRegistrationAddressDetailLevel: ReturnAll
    /// GetUserConditionallySellerPaymentAddressDetailLevel: ReturnAll
    /// GetOrdersDetailLevel: none, ReturnAllAlways
    /// OrderReportAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 					The first line of the user's street address.
    /// 					<br><br>
    /// 					<span class="tablenote"><b>Note: </b> Note the different maximum lengths noted below for different countries. If a street name exceeds the maximum length for the applicable country, the full street name may be expressed through both the <b>Street1</b> and <b>Street2</b> fields.
    /// 					</span>
    /// 				
    /// </remarks>

	public string Street1 { get; set; }
    /// <summary>
    /// GB, DE - 35; US, CA - 40; AU - 80; Other countries - 50
    /// GetBidderListConditionallyShippingAddress
    /// GetItemRegistrationAddressDetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAllConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllSellerContactDetailsConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionallyShippingAddressShipToAddress
    /// GetUserConditionallyRegistrationAddressDetailLevel: ReturnAll
    /// GetUserConditionallySellerPaymentAddressDetailLevel: ReturnAll
    /// GetOrdersDetailLevel: none, ReturnAllAlways
    /// OrderReportAlways
    /// AddItemAddItemsRelistItemReviseItemVerifyAddItemVerifyRelistItemNo
    /// </summary>
    /// <remarks>
    /// 
    /// 					The second line of the user's street address (such as an apartment number or suite number).<br/><br/>
    /// 					Returned if the user specified a second street value for their address. 
    /// 					<br/>
    /// 					<span class="tablenote"><b>Note: </b> In case of <b>Item.SellerContactDetails</b>, <b>Street2</b> can be used to provide City, Address, State, and Zip code (if applicable). </span>
    /// 					<span class="tablenote"><b>Note: </b> Note the different maximum lengths noted below for different countries. If a street name exceeds the maximum length for the applicable country, the full street name may be expressed through both the <b>Street1</b> and <b>Street2</b> fields.
    /// 					</span>						
    /// 					<span class="tablenote"><b>Note: </b> In the case of <b>TransactionArray.Transaction.MultiLegShippingDetails.SellerShipmentToLogisticsProvider.ShipToAddress</b>, if the item is being shipped through eBay International Shipping and this address refers to an intermediated warehouse address, the eBay Virtual Tracking number (eVTN) that is used for the domestic leg of the shipment is appended to <b>Street2</b>. This value is generated by eBay when the order is completed. Example:&quot;Reference #1234567890123456&quot;</span>
    /// 				
    /// </remarks>

	public string Street2 { get; set; }
    /// <summary>
    /// GB, DE - 35; US, CA - 40; AU - 80; Other countries - 50
    /// GetAdFormatLeadsDetailLevel: ReturnAllConditionally
    /// GetBidderListConditionallyShippingAddress
    /// GetItemRegistrationAddressDetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAllConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionallyShippingAddressShipToAddress
    /// GetUserConditionallyRegistrationAddressDetailLevel: ReturnAll
    /// GetUserConditionallySellerPaymentAddressDetailLevel: ReturnAll
    /// GetUserContactDetailsConditionally
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					The city associated with an address on file with eBay. Most addresses include a city name, but not all. For example, Singapore is an island city-state, so <code>SG</code> would appear in the <b>Country</b> field, and 'Singapore' or 'Republic of Singapore' would appear in the <b>CountryName</b> field, but the <b>CityName</b> field is not applicable.
    /// 					<br>
    /// 				
    /// </remarks>

	public string CityName { get; set; }
    /// <summary>
    /// AddItemAddItemsRelistItemReviseItemVerifyAddItemVerifyRelistItemNo
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllSellerContactDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					The county associated with an address on file with eBay. This field should only be passed in or returned if applicable/defined.
    /// 				
    /// </remarks>

	public string County { get; set; }
    /// <summary>
    /// GB, DE - 35; US, CA - 40; AU - 80; Other countries - 50
    /// GetAdFormatLeadsDetailLevel: ReturnAllConditionally
    /// GetBidderListConditionallyShippingAddress
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionallyShippingAddressShipToAddress
    /// GetUserConditionallyRegistrationAddressDetailLevel: ReturnAll
    /// GetUserConditionallySellerPaymentAddressDetailLevel: ReturnAll
    /// GetUserContactDetailsConditionally
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					The state or province associated with an address on file with eBay. Whether it's a state or a province will depend on the region and/or country. This field should only be passed in or returned if applicable/defined.
    /// 					<br>
    /// 				
    /// </remarks>

	public string StateOrProvince { get; set; }
    /// <summary>
    /// GetAllBiddersGetUserContactDetailsAlways
    /// GetBidderListGetUserPreferencesConditionally
    /// GetItemRegistrationAddressShippingAddressDetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAllConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllShippingAddressShipToAddressConditionally
    /// GetOrdersDetailLevel: none, ReturnAllAlways
    /// OrderReportAlways
    /// GetSellerListConditionallyHighBidderDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Fine
    /// GetUserConditionallyRegistrationAddressDetailLevel: ReturnAll
    /// GetUserConditionallySellerPaymentAddressDetailLevel: ReturnAll
    /// SetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 					The two-digit code representing the country of the user.<br>
    /// 					<br>
    /// 					If not provided as input, eBay uses the country associated
    /// 					with the eBay Site ID when the call is made.<br>
    /// 					<br>
    /// 				
    /// </remarks>

	public CountryCodeType? Country { get; set; }
    /// <summary>
    /// 
    /// 						eBay validates the content, but not the length for this field. Note: The eBay
    /// 						database allocates up to 128 characters for this field.
    /// 					
    /// GetBidderListConditionallyShippingAddress
    /// GetItemRegistrationAddressDetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAllConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllShippingAddressShipToAddressConditionally
    /// GetUserConditionallyRegistrationAddressDetailLevel: ReturnAll, ReturnSummary, none
    /// GetUserConditionallySellerPaymentAddressDetailLevel: ReturnAll
    /// GetOrdersDetailLevel: none, ReturnAllAlways
    /// OrderReportAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 					The full name of the country associated with an address on file with eBay.
    /// 					<br/>
    /// 				
    /// </remarks>

	public string CountryName { get; set; }
    /// <summary>
    /// 
    /// 						eBay validates the content (should only be integer values and delimiters), but not
    /// 						the length for this field. Note: The eBay database allocates up to 128 characters
    /// 						for this field.
    /// 					
    /// GetItemRegistrationAddressDetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAllConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllShippingAddressShipToAddressConditionally
    /// GetBidderListShippingAddressConditionally
    /// GetUserConditionallyRegistrationAddressDetailLevel: ReturnAll
    /// GetUserConditionallySellerPaymentAddressDetailLevel: ReturnAll
    /// GetUserContactDetailsAlways
    /// GetOrdersDetailLevel: none, ReturnAllAlways
    /// OrderReportAlways
    /// GetAdFormatLeadsDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					User's primary phone number. This may return a value of
    /// 					<code>Invalid Request</code> if:<ul><li>the seller has not enabled the preference for the <a href="https://developer.ebay.com/Devzone/XML/docs/Reference/eBay/SetUserPreferences.html#Request.RequiredShipPhoneNumberPreference">RequiredShipPhoneNumberPreference</a> field</li><li>the buyer did not provide a phone number in the shipping address during the checkout process</li></ul>					
    /// 					In the US, the area code (3 digits), the prefix (3 digits), the line number (4
    /// 					digits), and phone extension (if specified by the user) are returned in this field.
    /// 					The extension can be one or more digits. Non-breaking spaces are used as delimiters
    /// 					between these phone number components.
    /// 					<br>
    /// 				
    /// </remarks>

	public string Phone { get; set; }
    /// <summary>
    /// AddItemAddItemsRelistItemReviseItemVerifyAddItemVerifyRelistItemNo
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllSellerContactDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					Standard ISO code for the country of the user's primary telephone phone number.
    /// 					For Classified Ad listings, this code is used to look up the country's
    /// 					international calling prefix. Both the ISO code and country phone prefix are
    /// 					stored with listings of this type.
    /// 					This field applies to Classified Ad listings only.
    /// 				
    /// </remarks>

	public CountryCodeType? PhoneCountryCode { get; set; }
    /// <summary>
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllSellerContactDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					Country Prefix of the secondary phone number. This value is derived from
    /// 					inputs supplied for <b>PhoneCountryCode</b>.
    /// 					This field applies to Classified Ad listings only.
    /// 				
    /// </remarks>

	public string PhoneCountryPrefix { get; set; }
    /// <summary>
    /// AddItemAddItemsRelistItemReviseItemVerifyAddItemVerifyRelistItemNo
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllSellerContactDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					Area or City Code of a user's primary phone number.
    /// 					This field applies to Classified Ad listings only.
    /// 				
    /// </remarks>

	public string PhoneAreaOrCityCode { get; set; }
    /// <summary>
    /// 30
    /// AddItemAddItemsRelistItemReviseItemVerifyAddItemVerifyRelistItemNo
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllSellerContactDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					The local number portion of the user's primary phone number.
    /// 					This field applies to Classified Ad listings only.
    /// 					<br><br>
    /// 					<b>Note:</b> The full primary phone number is constructed by
    /// 					combining <b>PhoneLocalNumber</b> with <b>PhoneAreaOrCityCode</b> and <b>PhoneCountryPrefix</b>.
    /// 					<br>
    /// 				
    /// </remarks>

	public string PhoneLocalNumber { get; set; }
    /// <summary>
    /// GB, DE - 35; US, CA - 40; AU - 80; Other countries - 50
    /// GetBidderListConditionally
    /// GetAdFormatLeadsDetailLevel: ReturnAllConditionally
    /// GetSellerListHighBidderDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: FineConditionally
    /// GetItemRegistrationAddressShippingAddressDetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAllConditionally
    /// GetItemTransactionsGetSellerTransactionsShippingAddressShipToAddressDetailLevel: none, ReturnAllConditionally
    /// GetUserConditionallyRegistrationAddressDetailLevel: ReturnAll
    /// GetUserConditionallySellerPaymentAddressDetailLevel: ReturnAll
    /// GetMyeBaySellingSoldListDeletedFromSoldListDetailLevel: none, ReturnAllConditionally
    /// GetAllBiddersAlways
    /// GetOrdersDetailLevel: none, ReturnAllAlways
    /// OrderReportAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 					User's postal code.<br>
    /// 				
    /// </remarks>

	public string PostalCode { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllAlways
    /// OrderReportAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 					<br>
    /// 					Unique ID for a user's address in the eBay database.
    /// 					This value can help prevent the need to
    /// 					store an address multiple times across multiple orders.
    /// 					The ID changes if a user changes their address.
    /// 					<br>
    /// 					<br>
    /// 					<span class="tablenote"><b>Note:</b>
    /// 						For orders subject to Australian 'Goods and Services' tax (GST),  in addition to the unique identifier for the address, the last two digits of the user's Australian Business Number (ABN) will also appear in this field. Australian 'Goods and Services' tax (GST) is automatically charged to buyers outside of Australia when they purchase items on the eBay Australia site.
    /// 					</span>
    /// 						<span class="tablenote"><b>Note: </b> The <b>Seller.RegistrationAddress</b> container and its child fields will stop being returned in <b>GetSellerTransactions</b> on January 31, 2024. 
    /// 					</span>
    /// 				
    /// </remarks>

	public string AddressID { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllAlways
    /// OrderReportAlways
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionallyShipToAddress
    /// </summary>
    /// <remarks>
    /// 
    /// 					This enumeration value returned here indicates the company that has the address on file. The value returned here should always be <code>eBay</code>. 
    /// 				
    /// </remarks>

	public AddressOwnerCodeType? AddressOwner { get; set; }

	public AddressStatusCodeType? AddressStatus { get; set; }
    /// <summary>
    /// GetUserConditionallySellerPaymentAddressDetailLevel: ReturnAll
    /// GetBidderListConditionallyShippingAddress
    /// </summary>
    /// <remarks>
    /// 
    /// 					Seller's international name that is associated with the payment address.
    /// 					This field is only applicable to seller payment/billing addresses.
    /// 				
    /// </remarks>

	public string InternationalName { get; set; }
    /// <summary>
    /// GetUserConditionallySellerPaymentAddressDetailLevel: ReturnAll
    /// GetBidderListConditionallyShippingAddress
    /// </summary>
    /// <remarks>
    /// 
    /// 					International state and city that is associated with the seller's payment address. This field is only applicable to seller payment/billing addresses.
    /// 				
    /// </remarks>

	public string InternationalStateAndCity { get; set; }
    /// <summary>
    /// GetUserConditionallySellerPaymentAddressDetailLevel: ReturnAll
    /// GetBidderListConditionallyShippingAddress
    /// </summary>
    /// <remarks>
    /// 
    /// 					Seller's international street address that is associated with the payment address. This field is only applicable to seller payment/billing addresses.
    /// 				
    /// </remarks>

	public string InternationalStreet { get; set; }
    /// <summary>
    /// GetUserContactDetailsAlways
    /// GetBidderListConditionallyShippingAddress
    /// AddItemAddItemsRelistItemReviseItemVerifyAddItemVerifyRelistItemNo
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllSellerContactDetailsConditionally
    /// GetUserConditionallyRegistrationAddressDetailLevel: ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 					User's company name. This field should only be passed in or returned if applicable/defined.
    /// 				
    /// </remarks>

	public string CompanyName { get; set; }

	public AddressRecordTypeCodeType? AddressRecordType { get; set; }
    /// <summary>
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// GetAdFormatLeadsConditionallyDetailLevel: ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 					Displays the first name of the seller (in a business card
    /// 					format) if the seller's <b>SellerBusinessCodeType</b> value is
    /// 					<code>Commercial</code>.
    /// 				
    /// </remarks>

	public string FirstName { get; set; }
    /// <summary>
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// GetAdFormatLeadsConditionallyDetailLevel: ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 					Displays the last name of the seller (in a business card
    /// 					format) if the seller's <b>SellerBusinessCodeType</b> is set to
    /// 					<code>Commercial</code>.
    /// 				
    /// </remarks>

	public string LastName { get; set; }
    /// <summary>
    /// GetAdFormatLeadsDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 				Secondary Phone number of the lead. Not returned if information is unavailable.
    /// 				
    /// </remarks>

	public string Phone2 { get; set; }
    /// <summary>
    /// GetItemTransactionsGetSellerTransactionsGetOrdersSellerShipmentToLogisticsProvider.ShipToAddressDetailLevel: none, ReturnAllConditionally
    /// OrderReportSellerShipmentToLogisticsProvider.ShipToAddressConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					Uniquely identifies an order shipped using the Global Shipping Program. This value is generated by eBay when the order is completed. The international shipping provider uses the <b>ReferenceID</b> as the primary reference when processing the shipment. Sellers must include this value on the package immediately above the street address of the international shipping provider.
    /// 					<br/><br/>
    /// 					Example: "Reference #1234567890123456"
    /// 					<span class="tablenote"><b>Note:</b>
    /// 						International orders being sent through eBay International Shipping also contain reference IDs, but reference IDs for eBay International Shipping will be returned in the <b>Street2</b> field instead.
    /// 					</span>					
    /// 				
    /// </remarks>

	public string ReferenceID { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						<br>
    /// 						This field shows an attribute for the address, and its corresponding value. Currently, this field is only used to display the reference ID for a "Click and Collect" order, but in the future, other address attributes may be returned in this field.
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> The <b>Seller.RegistrationAddress</b> container and its child fields will stop being returned in <b>GetSellerTransactions</b> on January 31, 2024. 
    /// 						</span>
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("AddressAttribute")]

	public System.Collections.Generic.List<AddressAttributeType> AddressAttribute { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type used by the <b>AffiliateTrackingDetails</b> container, which is included in the <b>PlaceOffer</b> call to pass in eBay Partner Network affiliate-related data, so affiliates can earn commissions based on user activity and the number of calls made by the user's application.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class AffiliateTrackingDetailsType {

#region 属性
    /// <summary>
    /// PlaceOfferConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						<span class="tablenote"><b>Note: </b> If you are using
    /// 						affiliate tracking, this field is required.
    /// 						</span>
    /// 						The value you specify in this field is obtained from your tracking partner.
    /// 						For the eBay Partner Network, the <b>TrackingID</b> is the Campaign ID ("campid")
    /// 						provided by the eBay Partner Network. A Campaign ID is a 10-digit, unique
    /// 						number for associating traffic. A Campaign ID is valid across all
    /// 						programs to which you have been accepted.
    /// 					
    /// </remarks>

	public string TrackingID { get; set; }
    /// <summary>
    /// eBay Partner Networkhttps://partnernetwork.ebay.com/
    /// PlaceOfferConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						<span class="tablenote"><b>Note: </b> If you are using
    /// 						affiliate tracking, this field is required.
    /// 						</span>
    /// 						Specifies your tracking partner for affiliate commissions.
    /// 						Depending on your tracking partner, specify one of the
    /// 						following values. Not all partners are valid for all sites.
    /// 						For <b>PlaceOffer</b>, only eBay Partner Network is valid:
    /// 						<br>
    /// 						<br>9 = eBay Partner Network
    /// 						<br>
    /// 						<br>
    /// 						For information about the eBay Partner Network, see
    /// 						<a href="https://www.ebaypartnernetwork.com" target="_blank">eBay Partner Network</a>.
    /// 					
    /// </remarks>

	public string TrackingPartnerCode { get; set; }
    /// <summary>
    /// PlaceOfferConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						<span class="tablenote"><b>Note: </b> If you are using
    /// 						affiliate tracking, this field is required.
    /// 						</span>
    /// 						Type of device or platform from which the call originated.
    /// 					
    /// </remarks>

	public ApplicationDeviceTypeCodeType? ApplicationDeviceType { get; set; }
    /// <summary>
    /// 256
    /// PlaceOfferConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is not required, but an affiliate may want to use this identifier to better monitor marketing efforts. If you are using the eBay Partner Network, and you provide an <b>AffiliateUserID</b>, the tracking URL returned by eBay Partner Network will contain the <b>AffiliateUserID</b>, but it will be referred to as a "customid".
    /// 	 				
    /// </remarks>

	public string AffiliateUserID { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				An eBay-defined complex type for specifying monetary amounts.
/// 				<br><br>
/// 				A double value (e.g., 1.00 or 1.0) is meaningful as a monetary amount when accompanied by a specification of the currency, in which case the value specifies the amount in that currency. An <b>AmountType</b> expresses both the value (a double) and the currency.
/// 				<br><br>
/// 				The <b>AmountType</b> data type is typically used to specify details such as prices, fees, costs, and payments. In some cases, a whole number (i.e., without a period) can be passed or returned as a monetary value. This is necessary to support certain currencies that are only expressed as whole numbers.
/// 				<br><br>
/// 				Because a double is used to represent the amount, this also means whole monetary amounts may be returned with only one 0 after the decimal. For example, a dollar value could be returned as 1.0 instead of 1.00 in calls like <b>AddItem</b>.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class AmountType {

#region 属性
[System.Xml.Serialization.XmlText(DataType="double")]

	public double Value { get; set; }
    /// <summary>
    /// GetBidderListGetItemShippingGetMyeBaySellingConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// AddOrderOrder.TotalYes
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetMyeBayBuyingDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// GetShippingDiscountProfilesConditionally
    /// SetShippingDiscountProfilesConditionally
    /// RespondToBestOfferNo
    /// InternationalShippingServiceOptionShippingServiceOptionsShippingServiceSelectedAlways
    /// GetBestOffersDetailLevel: none, ReturnAllAlways
    /// GetOrdersInternationalShippingServiceOptionShippingServiceOptionsShippingServiceSelectedDetailLevel: none, ReturnAllAlways
    /// OrderReportInternationalShippingServiceOptionShippingServiceOptionsShippingServiceSelectedAlways
    /// GetOrdersInternationalShippingServiceOptionShippingServiceOptionsShippingServiceSelectedDetailLevel: none, ReturnAllConditionally
    /// OrderReportInternationalShippingServiceOptionShippingServiceOptionsShippingServiceSelectedConditionally
    /// GetSellerTransactionsInternationalShippingServiceOptionShippingServiceOptionsShippingServiceSelectedDetailLevel: noneConditionally
    /// PlaceOfferConvertedCurrentPriceCurrentPriceAlways
    /// PlaceOfferMinimumToBidConditionally
    /// AddItemAddItemsRelistItemReviseItemVerifyAddItemNoAlways
    /// AddLiveAuctionItemReviseLiveAuctionItemNoAlways
    /// GetAllBiddersYesAlways
    /// RelistItemNo
    /// SendInvoiceShippingInsuranceCost, ShippingServiceCost,
    /// 								ShippingServiceAdditionalCost, SalesTaxAmount, InsuranceFee
    /// 							No
    /// </summary>
    /// <remarks>
    /// 
    /// 							Three-digit code representing the currency type being used. <br>
    /// 							<br>
    /// 							In <b>Add</b>/<b>Revise</b>/<b>Relist</b> calls, the currency can be specified in
    /// 							the <b>Item.Currency</b> field in requests instead.
    /// 							If you do specify this attribute in <b>Add</b>/<b>Revise</b>/<b>Relist</b> calls,
    /// 							the value must match the site currency (i.e., it must be the same
    /// 							as the value in <b>Item.Currency</b>) unless otherwise stated.<br>
    /// 							<br>
    /// 							In <b>Add</b>/<b>Revise</b>/<b>Relist</b> calls, listing fees are returned in the
    /// 							currency of the user's registration site.
    /// 							For example, a user who is registered on the eBay US site always
    /// 							sees their fees returned in USD, even when their listing request
    /// 							is sent to another site, such as eBay UK or eBay Germany.
    /// 						
    /// </remarks>
[System.Xml.Serialization.XmlAttribute]

	public CurrencyCodeType currencyID { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>ShippingServiceDetails.DeprecationDetails</b> container that is returned in the <b>GeteBayDetails</b> response. The <b>ShippingServiceDetails.DeprecationDetails</b> container consists of information related to a deprecated shipping service.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class AnnouncementMessageType {

#region 属性
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The date on which an upcoming event can start to be announced.
    /// 					
    /// </remarks>

	public System.DateTime? AnnouncementStartTime { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The date on which the event occurs. This is also the ending date of the
    /// 						announcement that lead up to the event (see <b>AnnouncementStartTime</b>).
    /// 					
    /// </remarks>

	public System.DateTime? EventTime { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Control of what messages to display.
    /// 					
    /// </remarks>

	public AnnouncementMessageCodeType? MessageType { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type used by the <b>ApplicationDeliveryPreferences</b> container to control/indicate where and how Platform Notifications and/or Client Alerts are delivered to a user application, server, and/or email address.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ApplicationDeliveryPreferencesType {

#region 属性
    /// <summary>
    /// SetNotificationPreferencesNo
    /// GetNotificationPreferencesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The URL to which eBay delivers all Platform Notifications and Client Alerts sent to the application. For delivery to a server, the URL must begin with "<code>https://</code>" and must be well formed.
    /// 					
    /// </remarks>

	public string ApplicationURL { get; set; }
    /// <summary>
    /// SetNotificationPreferencesNo
    /// GetNotificationPreferencesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field allows the user to enable or disable Platform Notifications and Client Alerts. Notice that disabling Platform Notifications and Client Alerts will not affect others preferences set in this container.
    /// 					
    /// </remarks>

	public EnableCodeType? ApplicationEnable { get; set; }
    /// <summary>
    /// SetNotificationPreferencesNo
    /// GetNotificationPreferencesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The email address to which eBay sends all application markup and markdown event
    /// 						notifications. When setting the email address, input must be in the format
    /// 						"<code>mailto://youremailaddress@yoursite.com</code>". Note that the <b>AlertEnable</b> field must be set to <code>Enable</code> for alert emails to be sent.
    /// 					
    /// </remarks>

	public string AlertEmail { get; set; }
    /// <summary>
    /// SetNotificationPreferencesNo
    /// GetNotificationPreferencesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						<b>For SetNotificationPreferences</b>: include and set <b>AlertEnable</b> to
    /// 						<code>Enable</code> to receive application markup and markdown alerts, or set to <code>Disable</code> to
    /// 						disable the alerts. If not included, the <b>AlertEnable</b> defaults to
    /// 						its current value.
    /// 						<br/><br/>
    /// 						<b>For GetNotificationPreferences</b>: this field's value indicates
    /// 						whether application markup and markdown alerts are enabled or disabled.
    /// 					
    /// </remarks>

	public EnableCodeType? AlertEnable { get; set; }
    /// <summary>
    /// GetNotificationPreferencesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The value in this field indicates the type of schema to use for notification payloads. The only supported value is <code>eBLSchemaSOAP</code>, so this field no longer has to be included in a <strong>SetNotificationPreferences</strong> call, since it defaults to<code>eBLSchemaSOAP</code>.
    /// 					
    /// </remarks>

	public NotificationPayloadTypeCodeType? NotificationPayloadType { get; set; }
    /// <summary>
    /// SetNotificationPreferencesNo
    /// GetNotificationPreferencesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The means of receipt of notification. In most cases, it is Platform (typical API
    /// 						calls and web interaction), so this is the default, if not specified. For
    /// 						wireless applications, use SMS. Do not test Client Alerts in production if you
    /// 						are currently using Platform Notifications.
    /// 					
    /// </remarks>

	public DeviceTypeCodeType? DeviceType { get; set; }
    /// <summary>
    /// SetNotificationPreferencesNo
    /// GetNotificationPreferencesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Use this field to specify the API version for all notifications for the calling
    /// 						application. If you do not specify PayloadVersion in
    /// 						SetNotificationPreferences, the API version for notifications will be based on
    /// 						the API version specified in your SetNotificationPreferences call.
    /// 					
    /// </remarks>

	public string PayloadVersion { get; set; }
    /// <summary>
    /// SetNotificationPreferencesNo
    /// GetNotificationPreferencesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Defines settings for notification URLs (including the URL name in DeliveryURLName). You
    /// 						define settings for up to 25 notification URLs (including the URL name in
    /// 						DeliveryURLName) in separate DeliveryURLDetails containers. Associate a user token with
    /// 						notification URLs by using the token in a SetNotificationPreferences request that
    /// 						specifies the URL name or names in SetNotificationPreferencesRequest.DeliveryURLName. Use
    /// 						comma-separated format to specify multiple URL names in
    /// 						SetNotificationPreferencesRequest.DeliveryURLName. Notifications will be sent to these
    /// 						URL(s) if ApplicationDeliveryPreferencesType.ApplicationEnable is set to Enable.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("DeliveryURLDetails")]

	public System.Collections.Generic.List<DeliveryURLDetailType> DeliveryURLDetails { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
///  
/// 				This enumerated type is deprecated.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class AttributeConversionEnabledFeatureDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 			This type is used by the <b>AuthenticityVerification</b> container, which gives status on whether the order line
/// 			item has passed or failed the authenticity inspection, or if the test is still pending. The following table
/// 			describes the relationship between the <b>Status</b> and <b>OutcomeReason</b> fields.
/// 			<table>
/// 				<col />
/// 				<col />
/// 				<col />
/// 				<thead>
/// 					<tr>
/// 						<th>
/// 							<p>Status</p>
/// 						</th>
/// 						<th>
/// 							<p>OutcomeReason</p>
/// 						</th>
/// 						<th>
/// 							<p>Description</p>
/// 						</th>
/// 					</tr>
/// 				</thead>
/// 				<tbody>
/// 					<tr>
/// 						<td>PENDING</td>
/// 						<td><em>Not applicable</em></td>
/// 						<td>Authenticity checks have not completed (the authentication status is pending). The order's authenticity
/// 						is still unknown</td>
/// 					</tr>
/// 					<tr>
/// 						<td>PASSED</td>
/// 						<td><em>Not applicable</em></td>
/// 						<td>The authentication has been accepted. The order is authentic. The authentication partner sends the order
/// 						line item to the buyer with the message that the item is authentic</td>
/// 					</tr>
/// 					<tr>
/// 						<td rowspan="2">PASSED_WITH_EXCEPTION <br />There may be legal reasons or requirements such that the item
/// 						cannot be labeled authentic. </td>
/// 						<td>CUSTOMIZED</td>
/// 						<td>The order line item has been altered or customized, and cannot be labeled as authentic but will be sent
/// 						to the buyer</td>
/// 					</tr>
/// 					<tr>
/// 						<td>MISCATEGORIZED</td>
/// 						<td>The order line item was in the wrong eBay category and cannot be labeled as authentic but will be sent
/// 						to the buyer</td>
/// 					</tr>
/// 					<tr>
/// 						<td>PASSED_WITH_PARTIAL_FAILURE </td>
/// 						<td><em>Dependent</em></td>
/// 						<td>Multi-quantity use case where part of the order is authentic, but the other part of the order FAILED</td>
/// 					</tr>
/// 					<tr>
/// 						<td rowspan="3">FAILED</td>
/// 						<td>NOT_AUTHENTIC</td>
/// 						<td>The order could not be authenticated. The authentication partner returns the order line item to the
/// 						seller; refunds the buyer</td>
/// 					</tr>
/// 					<tr>
/// 						<td>NOT_AS_DESCRIBED</td>
/// 						<td>The order is not as described. The authentication partner returns the order line item to the seller;
/// 						refunds the buyer</td>
/// 					</tr>
/// 					<tr>
/// 						<td>NOT_AUTHENTIC_NO_RETURN</td>
/// 						<td>This enumeration value indicates that the order line item was found as counterfeit and cannot be
/// 						returned to the seller because of legal constraints; refunds the buyer</td>
/// 					</tr>
/// 				</tbody>
/// 			</table>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class AuthenticityVerificationType {

#region 属性
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The value in this field indicates whether the order line item has passed or failed the authenticity inspection, or if the test and/or results are still pending. The possible values returned here are <code>PENDING</code>, <code>PASSED</code>, <code>PASSED_WITH_EXCEPTION</code>, <code>PASSED_WITH_PARTIAL_FAILURE</code>, or <code>FAILED</code>.
    /// 					
    /// </remarks>

	public string Status { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned after the third-party authenticator has performed the authentication inspection on the order line item.
    /// 						<br/><br/>
    /// 						Different values will be returned based on whether the item passed or failed the authentication inspection. This field is not returned when the status value of the order line item is <code>PENDING</code> or <code>PASSED</code>. The possible values returned here are <code>CUSTOMIZED</code>, <code>MISCATEGORIZED</code>, <code>NOT_AUTHENTIC</code>, <code>NOT_AS_DESCRIBED</code>, or <code>NOT_AUTHENTIC_NO_RETURN</code>.
    /// 					
    /// </remarks>

	public string OutcomeReason { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container shows service cost to the buyer for an item that will go through the Authenticity Guarantee process. 
    /// 					
    /// </remarks>

	public ServiceCostType ServiceCost { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Applicable to sites that support the Detailed Seller Rating (DSR) feature.
/// 				The <b>AverageRatingDetails</b> container consists of the average detailed seller ratings in an area. When buyers leave an overall Feedback rating (positive, neutral, or negative) for a seller, they also can leave ratings in four areas: item as described, communication, shipping time, and charges for shipping and handling. Users retrieve detailed ratings as averages of the ratings left by buyers.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class AverageRatingDetailsType {

#region 属性
    /// <summary>
    /// GetFeedbackConditionallyDetailLevel: none, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						The value shown in this field indicates the Detailed Seller Rating area. The corresponding <b>Rating</b> value is the average rating that the seller has received for this DSR area, and the <b>RatingCount</b> value is the total number of buyer ratings that the seller has received in this DSR area. When buyers leave an overall Feedback rating (positive, neutral, or negative) for a seller, they also can leave ratings in four areas: item as described, communication, shipping time, and charges for shipping and handling.
    /// 					
    /// </remarks>

	public FeedbackRatingDetailCodeType? RatingDetail { get; set; }
    /// <summary>
    /// GetFeedbackConditionallyDetailLevel: none, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						This value is the seller's average rating (given by buyers) for the DSR area noted in the corresponding <b>RatingDetail</b> field.
    /// 					
    /// </remarks>

	public double? Rating { get; set; }
    /// <summary>
    /// GetFeedbackConditionallyDetailLevel: none, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						This value is the total count of buyer ratings given for the DSR area noted in the corresponding <b>RatingDetail</b> field.
    /// 					
    /// </remarks>

	public int? RatingCount { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is used by the <b>AverageRatingSummary</b> container that is returned in the <b>GetFeedback</b> call to display the seller's rating information across the four different Detail Seller Rating areas. The Detail Seller Rating subject areas include Item as Described, Communication, Shipping Time, and Shipping and Handling charges.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class AverageRatingSummaryType {

#region 属性
    /// <summary>
    /// GetFeedbackConditionallyDetailLevel: none, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						This enumeration value will indicate whether the statistics in each AverageRatingDetails container is for the last year (<code>FiftyTwoWeeks</code>) or the last month (<code>ThirtyDays</code>).
    /// 					
    /// </remarks>

	public FeedbackSummaryPeriodCodeType? FeedbackSummaryPeriod { get; set; }
    /// <summary>
    /// GetFeedbackConditionallyDetailLevel: none, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						Applicable to sites that support the Detailed Seller Ratings feature.
    /// 						Each <b>AverageRatingDetails</b> container consists of the average detailed seller ratings in an area. When buyers leave an overall Feedback rating (positive, neutral, or negative) for a seller, they also can leave ratings in four areas: item as described, communication, shipping time, and charges for shipping and handling.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("AverageRatingDetails")]

	public System.Collections.Generic.List<AverageRatingDetailsType> AverageRatingDetails { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
///         Base64 is a binary-to-text encoding scheme that represents binary data in an ASCII string format by translating it into a radix-64 representation. The term "Base64" originates from a specific MIME content transfer encoding.
///         <br/><br/>
///         <span class="tablenote">
///         <strong>Note:</strong> This type contains the name or reference ID of the binary attachment, not the attachment data. 
///         </span>
///       
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class Base64BinaryType {

#region 属性
[System.Xml.Serialization.XmlText(DataType="base64Binary")]

	public byte[] Value { get; set; }
    /// <summary>
    /// UploadSiteHostedPicturesNo
    /// </summary>
    /// <remarks>
    /// 
    ///               This optional attribute allows the binary attachment to be named.
    ///             
    /// </remarks>
[System.Xml.Serialization.XmlAttribute(DataType="string")]

	public string contentType { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
///  
/// 				This type is deprecated.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class BasicUpgradePackEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>BestOfferAutoAcceptEnabled</b> field that is
/// 				returned under the <b>FeatureDefinitions</b> container of the
/// 				<b>GetCategoryFeatures</b> response (as long as
/// 				<code>BestOfferAutoAcceptEnabled</code> or <code>BestOfferAutoDeclineEnabled</code> is included as a <b>FeatureID</b> value in
/// 				the call request or no <b>FeatureID</b> values are passed into the call
/// 				request). This field is returned as an
/// 				empty element (a boolean value is not returned) if one or more eBay API-enabled sites
/// 				support the Best Offer Auto Accept feature.
/// 				<br/><br/>
/// 				To verify if a specific eBay site supports the Best Offer Auto Accept feature (for most
/// 				categories), look for a <code>true</code> value in the
/// 				<b>SiteDefaults.BestOfferAutoAcceptEnabled</b> field.
/// 				<br/><br/>
/// 				To verify if a specific category on a specific eBay site supports the Best Offer Auto Accept feature, pass in a <b>CategoryID</b> value in the request, and then
/// 				look for a <code>true</code> value in the <b>BestOfferAutoAcceptEnabled</b> field
/// 				of the corresponding Category node (match up the <b>CategoryID</b> values
/// 				if more than one Category IDs were passed in the request).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class BestOfferAutoAcceptEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>BestOfferAutoDeclineEnabled</b> field that is
/// 				returned under the <b>FeatureDefinitions</b> container of the
/// 				<b>GetCategoryFeatures</b> response (as long as
/// 				<code>BestOfferAutoDeclineEnabled</code> or <code>BestOfferAutoAcceptEnabled</code> is included as a <b>FeatureID</b> value in
/// 				the call request or no <b>FeatureID</b> values are passed into the call
/// 				request). This field is returned as an
/// 				empty element (a boolean value is not returned) if one or more eBay API-enabled sites
/// 				support the Best Offer Auto Decline feature.
/// 				<br/><br/>
/// 				To verify if a specific eBay site supports the Best Offer Auto Decline feature (for most
/// 				categories), look for a <code>true</code> value in the
/// 				<b>SiteDefaults.BestOfferAutoDeclineEnabled</b> field.
/// 				<br/><br/>
/// 				To verify if a specific category on a specific eBay site supports the Best Offer Auto Decline feature, pass in a <b>CategoryID</b> value in the request, and then
/// 				look for a <code>true</code> value in the <b>BestOfferAutoDeclineEnabled</b> field
/// 				of the corresponding Category node (match up the <b>CategoryID</b> values
/// 				if more than one Category IDs were passed in the request).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class BestOfferAutoDeclineEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>BestOfferCounterEnabled</b> field that is
/// 				returned under the <b>FeatureDefinitions</b> container of the
/// 				<b>GetCategoryFeatures</b> response (as long as
/// 				<code>BestOfferCounterEnabled</code> is included as a <b>FeatureID</b> value in
/// 				the call request or no <b>FeatureID</b> values are passed into the call
/// 				request). This field is returned as an
/// 				empty element (a boolean value is not returned) if one or more eBay API-enabled sites
/// 				support the Best Offer Counter Offer feature.
/// 				<br/><br/>
/// 				To verify if a specific eBay site supports the Best Offer Counter Offer feature (for most
/// 				categories), look for a <code>true</code> value in the
/// 				<b>SiteDefaults.BestOfferCounterEnabled</b> field.
/// 				<br/><br/>
/// 				To verify if a specific category on a specific eBay site supports the Best Offer Counter Offer feature, pass in a <b>CategoryID</b> value in the request, and then
/// 				look for a <code>true</code> value in the <b>BestOfferCounterEnabled</b> field
/// 				of the corresponding Category node (match up the <b>CategoryID</b> values
/// 				if more than one Category IDs were passed in the request).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class BestOfferCounterEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>BestOfferDetails</b> container, which consists
/// 				of Best Offer details associated with a listing. The <b>BestOfferEnabled</b>
/// 				field in this container is used by <b>Add</b>/<b>Revise</b>/<b>Relist</b> calls to enable the Best Offer feature on a listing.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class BestOfferDetailsType {

#region 属性
    /// <summary>
    /// GetBidderListGetSellerListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetMyeBaySellingActiveListDetailLevel: none, ReturnAllConditionally
    /// GetSellerEventsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The number of Best Offers made for this item, if any. In other words, if there are no Best Offers made, this field will not appear in the response. This field is not applicable to the <b>Add</b>/<b>Revise</b>/<b>Relist</b> calls.
    /// 					
    /// </remarks>

	public int? BestOfferCount { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemNo
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetSellerEventsDetailLevel: none, ReturnAllConditionally
    /// GetBidderListConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field indicates whether or not the Best Offer feature is enabled for the listing. A seller can enable the Best Offer feature for a listing as long as the category supports the Best Offer feature. To see if an eBay category supports the Best Offer feature, run a <b>GetCategoryFeatures</b> call, including <code>BestOfferEnabled</code> as a <b>FeatureID</b> value in the call request payload.
    /// 						<br/><br>
    /// 						A listing enabled with the Best Offer feature allows a buyer to bargain with the seller and make a lower-priced offer than the fixed price or the starting bid price for an auction listing. The seller can then decide whether to accept the buyer's Best Offer price or propose a counter offer higher than the Best Offer price, but lower than the fixed price or starting bid price.
    /// 						<br/><br/>
    /// 						<span class="tablenote"><b>Note: </b>
    /// 						The Best Offer feature is now available for auction listings on the following sites: US, Canada, UK, Germany, Australia, France, Italy, and Spain. However, sellers must choose between offering Best Offer or Buy It Now on an auction listing, as both features cannot be enabled on the same auction listing. If an auction listing is enabled with Best Offer, this feature will no longer be applicable once the listing receives its first qualifying bid.
    /// 						</span>
    /// 						<span class="tablenote"><b>Note: </b> Best Offer is not available for multi-variation listings.
    /// 						</span>
    /// 					
    /// </remarks>

	public bool? BestOfferEnabled { get; set; }
    /// <summary>
    /// GetMyeBayBuyingBestOfferListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This is the amount of the buyer's current Best Offer. This field will not appear in the <b>GetMyeBayBuying</b> response if the buyer has not made a Best Offer. This field is also not applicable to the <b>Add</b>/<b>Revise</b>/<b>Relist</b> calls.
    /// 					
    /// </remarks>

	public AmountType BestOffer { get; set; }
    /// <summary>
    /// GetMyeBayBuyingConditionallyBestOfferListDetailLevel: none, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						This enumeration value indicates the status of the latest
    /// 						Best Offer from the buyer. This field is only applicable to the <b>GetMyeBayBuying</b> call, and will not appear in the
    /// 						 response if the buyer has not made a Best Offer.
    /// 					
    /// </remarks>

	public BestOfferStatusCodeType? BestOfferStatus { get; set; }
    /// <remarks>
    /// 
    /// 						Note: this field is no longer used. The Best Offer type is only returned in the <b>BestOfferCodeType</b> field of the <b>GetBestOffers</b> call, and the applicable values for Best Offer type (<code>BuyerBestOffer</code>, <code>BuyerCounterOffer</code>, <code>SellerCounterOffer</code>, etc.) are defined in <b>BestOfferTypeCodeType</b>.
    /// 					
    /// </remarks>

	public BestOfferTypeCodeType? BestOfferType { get; set; }
    /// <remarks>
    /// 
    /// 						This field is deprecated.
    /// 					
    /// </remarks>

	public bool? NewBestOffer { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
/// </summary>
/// <remarks>
/// 
/// 				Type defining the <b>BestOfferEnabled</b> field that is
/// 				returned under the <b>FeatureDefinitions</b> container of the
/// 				<b>GetCategoryFeatures</b> response (as long as
/// 				<code>BestOfferEnabled</code> is included as a <b>FeatureID</b> value in
/// 				the call request or no <b>FeatureID</b> values are passed into the call
/// 				request). This field is returned as an
/// 				empty element (a boolean value is not returned) if one or more eBay API-enabled sites
/// 				support the Best Offer feature.
/// 				<br/><br/>
/// 				To verify if a specific eBay site supports the Best Offer feature (for most
/// 				categories), look for a <code>true</code> value in the
/// 				<b>SiteDefaults.BestOfferEnabled</b> field.
/// 				<br/><br/>
/// 				To verify if a specific category on a specific eBay site supports the Best Offer feature, pass in a <b>CategoryID</b> value in the request, and then
/// 				look for a <code>true</code> value in the <b>BestOfferEnabled</b> field
/// 				of the corresponding Category node (match up the <b>CategoryID</b> values
/// 				if more than one Category IDs were passed in the request).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class BestOfferEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>BestOffer</b> container, which consists of information on one Best Offer or counter offer. This information includes the price of the offer, the expiration of the offer, and any messaging provided by the prospective buyer or seller.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class BestOfferType {

#region 属性
    /// <summary>
    /// GetBestOffersDetailLevel: none, ReturnAllAlways
    /// PlaceOfferConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Unique identifier for a Best Offer. This identifier is created once a prospective buyer makes a Best Offer on an item.
    /// 					
    /// </remarks>

	public string BestOfferID { get; set; }
    /// <summary>
    /// GetBestOffersDetailLevel: none, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Timestamp indicating when a Best Offer will naturally expire (if the
    /// 						seller has not accepted or declined the offer).
    /// 					
    /// </remarks>

	public System.DateTime? ExpirationTime { get; set; }
    /// <summary>
    /// GetBestOffersDetailLevel: none, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Container consisting of information about the prospective buyer who made the Best Offer.
    /// 					
    /// </remarks>

	public UserType Buyer { get; set; }
    /// <summary>
    /// GetBestOffersDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The amount of the Best Offer or counter offer. For this field to be returned, the user must have a relationship to the Best Offer, either as the seller, buyer, or potential buyer who has made the Best Offer or counter offer.
    /// 					
    /// </remarks>

	public AmountType Price { get; set; }
    /// <summary>
    /// GetBestOffersDetailLevel: none, ReturnAllAlways
    /// Accepted, AdminEnded, Declined, ExpiredPlaceOfferConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The status of the Best Offer or counter offer. For <b>PlaceOffer</b>, the only applicable values are <code>Accepted</code>, <code>AdminEnded</code>, <code>Declined</code>, and <code>Expired</code>.
    /// 					
    /// </remarks>

	public BestOfferStatusCodeType? Status { get; set; }
    /// <summary>
    /// GetBestOffersDetailLevel: none, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						The quantity of the item for which the buyer is making a Best Offer. This value will usually be <code>1</code>, unless the buyer is making an offer on multiple quantity of a line item in a multi-quantity listing.
    /// 					
    /// </remarks>

	public int? Quantity { get; set; }
    /// <summary>
    /// 500 (in bytes)
    /// GetBestOffersDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						A prospective buyer has the option to include a comment when placing a Best Offer or making a counter offer to the seller's counter offer. This field will display that comment.
    /// 					
    /// </remarks>

	public string BuyerMessage { get; set; }
    /// <summary>
    /// 500 (in bytes)
    /// GetBestOffersDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						A seller has the option to include a comment when making a counter offer to the prospective buyer's Best Offer. This field will display that comment.
    /// 					
    /// </remarks>

	public string SellerMessage { get; set; }
    /// <summary>
    /// GetBestOffersDetailLevel: none, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						This value indicates whether the corresponding offer is a Best Offer, a seller's counter offer, or a buyer counter offer to the seller's counter offer.
    /// 					
    /// </remarks>

	public BestOfferTypeCodeType? BestOfferCodeType { get; set; }
    /// <summary>
    /// RespondToBestOfferAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						The value in this field (<code>Success</code> or <code>Failure</code>) will indicate whether or not the seller's attempt to accept, decline, or counter offer a Best Offer was successful. This field is only used by the <b>RespondToBestOffer</b> response.
    /// 					
    /// </remarks>

	public string CallStatus { get; set; }
    /// <remarks>
    /// 
    /// 						This field is no longer applicable, as it formerly supported the Best Offer Beta feature which is no longer active.
    /// 					
    /// </remarks>

	public bool? NewBestOffer { get; set; }
    /// <remarks>
    /// 
    /// 						This field is no longer applicable, as it formerly supported the Best Offer Beta feature which is no longer active.
    /// 					
    /// </remarks>

	public bool? ImmediatePayEligible { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 			  This type is used by the <b>BidderNoticePreferences</b> container, which consists of the seller's preference for receiving contact information for unsuccessful bidders in auction listings.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class BidderNoticePreferencesType {

#region 属性
    /// <summary>
    /// GetUserPreferencesConditionally
    /// SetUserPreferencesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					  This boolean field should be set to <b>true</b> in a <b>SetUserPreferences</b> call if the seller wishes to receive contact information for bidders who have bid on a seller's auction item, but did not win. This might be helpful to a seller if that seller wishes to proposed Second Chance Offers to these unsuccessful bidders if the seller has multiple, identical items, or if the winning bidder does not pay for the original auction item.
    /// 					  <br/><br/>
    /// 					  This field is always returned with <b>BidderNoticePreferences</b> container in the <b>GetUserPreferences</b> response.
    /// 				  
    /// </remarks>

	public bool? UnsuccessfulBidderNoticeIncludeMyItems { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>BiddingDetails</b> container, which consists of
/// 				information about the buyer's bidding history on a single auction item.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class BiddingDetailsType {

#region 属性
    /// <summary>
    /// GetMyeBayBuyingBidListLostListWonListDeletedFromWonListDeletedFromLostListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Converted value (from seller's currency to buyer's currency) of the amount in the <b>MaxBid</b> field. This field is only applicable and returned if the buyer purchased an item from an eBay site in another country. For active items, it is recommended to refresh the listing's data every 24 hours to pick up the current conversion rates.
    /// 					
    /// </remarks>

	public AmountType ConvertedMaxBid { get; set; }
    /// <summary>
    /// GetMyeBayBuyingBidListLostListWonListDeletedFromWonListDeletedFromLostListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This value is the dollar value of the highest bid that the buyer placed on the
    /// 						auction item.
    /// 					
    /// </remarks>

	public AmountType MaxBid { get; set; }
    /// <summary>
    /// GetMyeBayBuyingBidListLostListWonListDeletedFromWonListDeletedFromLostListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This value is the total number of bids that the buyer placed on the
    /// 						auction item throughout the duration of the listing.
    /// 					
    /// </remarks>

	public int? QuantityBid { get; set; }
    /// <summary>
    /// GetMyeBayBuyingBidListLostListWonListDeletedFromWonListDeletedFromLostListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field will only be returned if the buyer won the auction item, and if it is returned, its value will always be <code>1</code>.
    /// 					
    /// </remarks>

	public int? QuantityWon { get; set; }
    /// <summary>
    /// GetMyeBayBuyingBidListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as <code>true</code> if the prospective buyer is the current high bidder in an active listing.
    /// 					
    /// </remarks>

	public bool? Winning { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type used by the <b>BiddingSummary</b> container, which is returned in the <b>GetAllBidders</b> response if the <b>IncludeBiddingSummary</b> boolean field is included and set to <code>true</code> in the call request. The <b>BiddingSummary</b> container consists of bidding history information for a specific bidder (specified in the <b>User.UserID</b> field).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class BiddingSummaryType {

#region 属性
    /// <summary>
    /// GetAllBiddersConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This integer value indicates the length of time (in number of days) that is being used to calculate all counts in the <b>BiddingSummary</b> container. This value is generally <code>30</code> (days), which means that all counts in the container have been calculated from the present time and going back 30 days in the past.
    /// 						<br/><br/>
    /// 						This field is always returned with the <b>BiddingSummary</b> container.
    /// 					
    /// </remarks>

	public int? SummaryDays { get; set; }
    /// <summary>
    /// GetAllBiddersConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This integer value indicates the total number of bids (from any and all eBay sellers) that the user has placed during the last 30 days (or the number of days specified in the <b>SummaryDays</b> field).
    /// 						<br/><br/>
    /// 						This field is always returned with the <b>BiddingSummary</b> container.
    /// 					
    /// </remarks>

	public int? TotalBids { get; set; }
    /// <summary>
    /// GetAllBiddersConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This integer value is actually a percentage value that indicates what percentage of the user's total number of bids during the last 30 days (or the number of days specified in the <b>SummaryDays</b> field) has been placed on auction items that the seller has listed. The percentage value is rounded up to the highest whole percentage number.
    /// 						<br/><br/>
    /// 						This field is always returned with the <b>BiddingSummary</b> container.
    /// 					
    /// </remarks>

	public int? BidActivityWithSeller { get; set; }
    /// <summary>
    /// GetAllBiddersConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This integer value indicates the total number of bids to unique sellers that the user has placed during the last 30 days (or the number of days specified in the <b>SummaryDays</b> field).
    /// 						<br/><br/>
    /// 						This field is always returned with the <b>BiddingSummary</b> container.
    /// 					
    /// </remarks>

	public int? BidsToUniqueSellers { get; set; }
    /// <summary>
    /// GetAllBiddersConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This integer value indicates the total number of bids made with unique listing categories that the user has placed during the last 30 days (or the number of days specified in the <b>SummaryDays</b> field).
    /// 						<br/><br/>
    /// 						This field is always returned with the <b>BiddingSummary</b> container.
    /// 					
    /// </remarks>

	public int? BidsToUniqueCategories { get; set; }
    /// <summary>
    /// GetAllBiddersConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This integer value indicates the total number of bids that the user has retracted (from any and all sellers) during the last 30 days (or the number of days specified in the <b>SummaryDays</b> field).
    /// 						<br/><br/>
    /// 						This field is always returned with the <b>BiddingSummary</b> container.
    /// 					
    /// </remarks>

	public int? BidRetractions { get; set; }
    /// <summary>
    /// GetAllBiddersConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container provides information on each auction item that the user has placed a bid on during the last 30 days (or the number of days specified in the <b>SummaryDays</b> field).
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("ItemBidDetails")]

	public System.Collections.Generic.List<ItemBidDetailsType> ItemBidDetails { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>BrandMPNIdentifierEnabled</b> field that is
/// 				returned under the <b>FeatureDefinitions</b> container of the
/// 				<b>GetCategoryFeatures</b> response (as long as
/// 				<code>BrandMPNIdentifierEnabled</code> is included as a <b>FeatureID</b> value in
/// 				the call request or no <b>FeatureID</b> values are passed into the call
/// 				request). This field is returned as an
/// 				empty element (a boolean value is not returned) if one or more eBay API-enabled sites
/// 				support the Brand/Manufacturer Part Number feature.
/// 				<br/><br/>
/// 				To verify if a specific eBay site supports the Brand/Manufacturer Part Number feature (for most
/// 				categories), look for a <code>true</code> value in the
/// 				<b>SiteDefaults.BrandMPNIdentifierEnabled</b> field.
/// 				<br/><br/>
/// 				To verify if a specific category on a specific eBay site supports the Brand/Manufacturer Part Number feature, pass in a <b>CategoryID</b> value in the request, and then
/// 				look for a <code>true</code> value in the <b>BrandMPNIdentifierEnabled</b> field
/// 				of the corresponding <b>Category</b> node (match up the <b>CategoryID</b> values
/// 				if more than one Category ID was passed in the request).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class BrandMPNIdentifierEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>BrandMPN</b> container which is used to identify a product (through a unique product brand and Manufacturer Part Number combination).
/// 				<br>
/// 				<br>
/// 				<span class="tablenote"><b>Note:</b>
/// 				If a brand and/or MPN value is required for a category, it is highly recommended that the brand and MPN name/value pair is also passed in through an <b>ItemSpecifics.NameValueList</b> container, since brand and MPN values may be dropped from the listing if eBay is not able to find a eBay catalog product match based on the provided Brand/MPN pair.
/// 				</span>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class BrandMPNType {

#region 属性
    /// <summary>
    /// 65
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The brand of the product. Both <b>Brand</b> and <b>MPN</b> should be specified if the <b>BrandMPN</b> container is used, or an error may occur. If Brand is a required or recommended item specific for a category, but an MPN is not applicable to the category/product, the Brand value should be specified in an <b>Item.ItemSpecifics.NameValueList</b> container instead.
    /// 						<br>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						The <b>BrandMPN</b> container is not applicable for multiple-variation listings. For multiple-variation listings that use MPNs, the <b>Brand</b> value should be specified through an <b>ItemSpecifics.NameValueList</b> container, and the  Manufacturer Part Numbers (MPNs) for each product variation should be specified through a <b>VariationSpecifics.NameValueList</b> container.
    /// 						</span>
    /// 					
    /// </remarks>

	public string Brand { get; set; }
    /// <summary>
    /// 65
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The manufacturer part number of the product. Use the
    /// 						value specified by the manufacturer.  Both <b>Brand</b> and <b>MPN</b> must be specified if the <b>BrandMPN</b> container is used or an error may occur.
    /// 						<br/><br/>
    /// 						If the listing is being posted to a category that expects an MPN value, but one doesn't exist for the product, the seller must pass in the text that can be found in the <b>ProductDetails.ProductIdentifierUnavailableText</b> field of the <b>GeteBayDetails</b> response. To get the <b>ProductDetails</b> container to return in the <b>GeteBayDetails</b> response, <code>ProductDetails</code> should be included as a <b>DetailName</b> value in the call request.
    /// 						<br><br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						The <b>BrandMPN</b> container is not applicable for multiple-variation listings. For multiple-variation listings that use MPNs, the <b>Brand</b> value should be specified through an <b>ItemSpecifics.NameValueList</b> container, and the  Manufacturer Part Numbers (MPNs) for each product variation should be specified through a <b>VariationSpecifics.NameValueList</b> container.
    /// 						</span>
    /// 					
    /// </remarks>

	public string MPN { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 			  Type used by the <b>BusinessSellerDetails</b> container, which is returned in an <b>Item</b> node if the item's seller is registered on eBay as a Business Seller.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class BusinessSellerDetailsType {

#region 属性
    /// <summary>
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field shows the address on file for the Business Seller.
    /// 					
    /// </remarks>

	public AddressType Address { get; set; }
    /// <summary>
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field shows the Fax number on file for the Business Seller. This field is only returned if known and available.
    /// 					
    /// </remarks>

	public string Fax { get; set; }
    /// <summary>
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field shows the email address on file for the Business Seller.
    /// 					
    /// </remarks>

	public string Email { get; set; }
    /// <summary>
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field shows any additional contact for the Business Seller in free-form text. This field is only returned if known and available.
    /// 					
    /// </remarks>

	public string AdditionalContactInformation { get; set; }
    /// <summary>
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field shows the Trade Registration Number for the Business Seller.
    /// 					
    /// </remarks>

	public string TradeRegistrationNumber { get; set; }
    /// <summary>
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						This boolean field is returned as <code>true</code> if the Business Seller provides legal invoices to buyers.
    /// 					
    /// </remarks>

	public bool? LegalInvoice { get; set; }
    /// <summary>
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						This free-form text field provides the Business Seller's terms and conditions for doing business.
    /// 					
    /// </remarks>

	public string TermsAndConditions { get; set; }
    /// <summary>
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container provides Value-Added Tax (VAT) details for the Business Seller, including the seller's VAT ID and the VAT percentage rate applicable to the item. VAT is similar to a sales and/or consumption tax, and it is only applicable to sellers selling on European sites.
    /// 					
    /// </remarks>

	public VATDetailsType VATDetails { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>BuyerGuaranteeEnabled</b> field that is
/// 				returned under the <b>FeatureDefinitions</b> container of the
/// 				<b>GetCategoryFeatures</b> response (as long as
/// 				<code>BuyerGuaranteeEnabled</code> is included as a <b>FeatureID</b> value in
/// 				the call request or no <b>FeatureID</b> values are passed into the call
/// 				request). This field is returned as an
/// 				empty element (a boolean value is not returned) if one or more eBay API-enabled sites
/// 				support the Buyer Guarantee feature.
/// 				<br/><br/>
/// 				To verify if a specific eBay site supports the Buyer Guarantee feature (for most
/// 				categories), look for a <code>true</code> value in the
/// 				<b>SiteDefaults.BuyerGuaranteeEnabled</b> field.
/// 				<br/><br/>
/// 				To verify if a specific category on a specific eBay site supports the Buyer Guarantee feature, pass in a <b>CategoryID</b> value in the request, and then
/// 				look for a <code>true</code> value in the <b>BuyerGuaranteeEnabled</b> field
/// 				of the corresponding Category node (match up the <b>CategoryID</b> values
/// 				if more than one Category IDs were passed in the request).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class BuyerGuaranteeEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>BuyerPackageEnclosure</b> container, which is returned in <b>GetOrders</b> (and other order management calls) if the 'Pay Upon Invoice' option is being offered to the buyer, and the seller is including payment instructions in the shipping package. A <b>BuyerPackageEnclosure</b> container will be returned for each shipping package containing payment instructions. The 'Pay Upon Invoice' option is only available on the German site.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class BuyerPackageEnclosureType {

#region 属性
[System.Xml.Serialization.XmlText(DataType="string")]

	public string Value { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// GetMyeBayBuyingWonListDeletedFromWonListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 							This attribute indicates the type of payment instructions included in the shipping package.
    /// 						
    /// </remarks>
[System.Xml.Serialization.XmlAttribute]

	public PaymentInstructionCodeType type { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>BuyerPackageEnclosures</b> container, which is returned in <b>GetOrders</b> (and other order management calls) if the 'Pay Upon Invoice' option is being offered to the buyer, and the seller is including payment instructions in the shipping package(s). A <b>BuyerPackageEnclosure</b> container will be returned for each shipping package containing payment instructions. The 'Pay Upon Invoice' option is only available on the German site.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class BuyerPackageEnclosuresType {

#region 属性
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// GetMyeBayBuyingWonListDeletedFromWonListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						A <b>BuyerPackageEnclosure</b> container will be returned for each shipping package containing payment instructions. The 'Pay Upon Invoice' option is only available on the German site.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("BuyerPackageEnclosure")]

	public System.Collections.Generic.List<BuyerPackageEnclosureType> BuyerPackageEnclosure { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <strong>ApplyBuyerProtection</strong> container, which
/// 				consists of details related to whether or not the item is eligible for buyer protection
/// 				and which of the buyer protection programs will cover the item.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class BuyerProtectionDetailsType {

#region 属性
    /// <summary>
    /// GetItemTransactionsConditionally
    /// GetSellerTransactionsConditionally
    /// GetItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This value indicates the type of buyer protection program applicable for the item.
    /// 						This field is always returned with the <strong>ApplyBuyerProtection</strong> container.
    /// 					
    /// </remarks>

	public BuyerProtectionSourceCodeType? BuyerProtectionSource { get; set; }
    /// <summary>
    /// GetItemTransactionsConditionally
    /// GetSellerTransactionsConditionally
    /// GetItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This value indicates the item's eligibility for the buyer protection program listed
    /// 						in the <strong>ApplyBuyerProtection.BuyerProtectionSource</strong> field.
    /// 						This field is always returned with the
    /// 						<strong>ApplyBuyerProtection</strong> container.
    /// 					
    /// </remarks>

	public BuyerProtectionCodeType? BuyerProtectionStatus { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>BuyerRequirementDetails</b> container, which indicates if the seller has set any buyer requirements that apply to a listing. Sellers use buyer requirements if they want to avoid working with 'risky' buyers, who may be brand new to eBay, have low/poor Feedback scores, or who have some unpaid item strikes or buyer-initiated cancellations.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class BuyerRequirementDetailsType {

#region 属性
    /// <summary>
    /// false
    /// GetBidderListGetSellerListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as <code>true</code> if the seller has enabled the setting to block buyers/bidders who reside (according to their eBay primary shipping address) in countries that are on the seller's ship-to exclusion list.
    /// 						<br>
    /// 					
    /// </remarks>

	public bool? ShipToRegistrationCountry { get; set; }
    /// <summary>
    /// false
    /// GetBidderListGetSellerListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as <code>true</code> if the seller has enabled the setting to block buyers/bidders with a feedback score of 0 from buying items.
    /// 						<br/>
    /// 					
    /// </remarks>

	public bool? ZeroFeedbackScore { get; set; }
    /// <summary>
    /// GetBidderListGetSellerListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container is returned if the seller has set a maximum quantity threshold buyer requirement. With this buyer requirement, a buyer is limited in regards to the quantity of a line item that may be purchased.
    /// 						<br/><br/>
    /// 						This buyer requirement is only applicable to fixed-price listings where multiple quantity is available for purchase.
    /// 						<br/><br/>
    /// 						In addition to setting a maximum quantity threshold buyer requirement, the seller can also choose to apply this threshold to only those prospective buyers who don't meet or exceed the minimum Feedback score threshold.
    /// 					
    /// </remarks>

	public MaximumItemRequirementsType MaximumItemRequirements { get; set; }
    /// <summary>
    /// GetBidderListGetSellerListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container is returned if the seller has enabled a setting to
    /// 						block prospective buyers who have one or more unpaid items and/or buyer-initiated cancellations on their account during a specified time period. 
    /// 					
    /// </remarks>

	public MaximumUnpaidItemStrikesInfoType MaximumUnpaidItemStrikesInfo { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>BuyerRoleMetrics</b> container, which consists of details relating to the eBay buyer's one-year history of leaving feedback for the seller.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class BuyerRoleMetricsType {

#region 属性
    /// <summary>
    /// GetFeedbackDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This integer value indicates the number of positive feedback entries that the eBay user, acting in the buying role, has left for their order partner (seller) during the last one-year period, counting back from the present date.
    /// 					
    /// </remarks>

	public int? PositiveFeedbackLeftCount { get; set; }
    /// <summary>
    /// GetFeedbackDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This integer value indicates the number of negative feedback entries that the eBay user, acting in the buying role, has left for their order partner (seller) during the last one-year period, counting back from the present date.
    /// 					
    /// </remarks>

	public int? NegativeFeedbackLeftCount { get; set; }
    /// <summary>
    /// GetFeedbackDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This integer value indicates the number of neutral feedback entries that the eBay user, acting in the buying role, has left for their order partner (seller) during the last one-year period, counting back from the present date.
    /// 					
    /// </remarks>

	public int? NeutralFeedbackLeftCount { get; set; }
    /// <summary>
    /// GetFeedbackDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This float value indicates the percentage of time that the eBay user, acting in the buying role, has left feedback for their order partner (seller) during the last one-year period, counting back from the present date.
    /// 					
    /// </remarks>

	public float? FeedbackLeftPercent { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is used by various <b>Get</b> calls, including <b>GetItem</b> and <b>GetOrders</b>. Only the order management calls return the <b>BuyerTaxIdentifier</b> container, and each call that uses <b>BuyerType</b> uses the <b>ShippingAddress</b> container a little differently.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class BuyerType {

#region 属性
    /// <summary>
    /// GetAllBiddersAlways
    /// GetBidderListConditionally
    /// GetMyeBaySellingSoldListDetailLevel: none, ReturnAllConditionally
    /// GetSellerListConditionallyHighBidderDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Fine
    /// GetItemConditionallyHighBidderDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container shows the buyer's shipping address.
    /// 						<br>
    /// 						<br>
    /// 						<p><span class="tablenote"><b>Note:</b> For an Authenticity Guarantee program order returned in <b>GetItemTransactions</b> or <b>GetSellerTransactions</b>, this is the address of the authenticator's warehouse. The authenticator is responsible for delivery to the buyer's shipping address.
    /// 						</span></p>
    /// 						<p><span class="tablenote">
    /// 			            <strong>Note:</strong> For In-Store Pickup and Click and Collect orders, this is the address of the merchant's store where the buyer will pick up the order. This is only applicable for <b>GetItemTransactions</b> and <b>GetSellerTransactions</b> calls. 
    /// 			            </span></p>
    /// 						<p><span class="tablenote"><b>Note:</b>
    /// 						For eBay Vault scenarios: <strong>GetItemTransactions</strong> calls, and <strong>GetSellerTransactions</strong> calls (Seller View only), mock address details are returned for: <br><br>-<em> Vault to vault orders: Buyer and Seller View</em><br><br>-<em> Ship to vault orders</em>: Mock addresses are returned for the Buyer View (only); the address returned for the Seller View will be the authenticator&amp;apos;s address.<br><br>-<em> Vault in-hand submission orders</em>: the address returned for the Buyer View will be the authenticator's address (<b>GetItemTransactions</b> only).<br> <br>
    /// 						The following address details are returned for mock addresses:
    /// 						<pre>
    /// 						&lt;ShippingAddress&gt;
    /// 						<br/>
    /// 							<code> &nbsp;&lt;Name&gt;eBay Vault&lt;/Name&gt;</code>
    /// 							<br/>
    /// 							<code> &nbsp;&lt;AddressID&gt;Invalid Request&lt;/AddressID&gt;</code>
    /// 							<br/>
    /// 							<code> &nbsp;&lt;AddressOwner&gt;eBay&lt;/AddressOwner&gt;</code>
    /// 							<br/>
    /// 							<code> &nbsp;&lt;AddressUsage&gt;Invalid&lt;/AddressUsage&gt;</code>
    /// 							<br/>
    /// 							<code> &nbsp;&lt;CityName&gt;Invalid Request&lt;/CityName&gt;</code>
    /// 							<br/>
    /// 							<code> &nbsp;&lt;Country&gt;US&lt;/Country&gt;</code>
    /// 							<br/>
    /// 							<code> &nbsp;&lt;CountryName&gt;Invalid Request&lt;/CountryName&gt;</code>
    /// 							<br/>
    /// 							<code> &nbsp;&lt;ExternalAddressID&gt;Invalid Request&lt;/ExternalAddressID&gt;</code>
    /// 							<br/>
    /// 							<code> &nbsp;&lt;Phone&gt;Invalid Request&lt;/Phone&gt;</code>
    /// 							<br/>
    /// 							<code> &nbsp;&lt;PostalCode&gt;Invalid Request&lt;/PostalCode&gt;</code>
    /// 							<br/>
    /// 							<code> &nbsp;&lt;StateOrProvince&gt;Invalid Request&lt;/StateOrProvince&gt;</code>
    /// 							<br/>
    /// 							<code> &nbsp;&lt;Street1&gt;Invalid Request&lt;/Street1&gt;</code>
    /// 							<br/>
    /// 							<code> &nbsp;&lt;Street2&gt;&lt;/Street2&gt;</code>
    /// 							<br/>
    /// 						&lt;/ShippingAddress&gt;
    /// 						</pre>
    /// 						<br/>	</span></p>
    /// 					
    /// </remarks>

	public AddressType ShippingAddress { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel:none,ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel:none,ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container consists of taxpayer identification for the buyer. Although this container may be used for other purposes at a later date, it is currently used by sellers selling on the Italy or Spain site to retrieve the taxpayer ID of the buyer.
    /// 						<br/><br/>
    /// 						It is now required that buyers registered on the Italy site provide their Codice Fiscale ID (similar to the Social Security Number for US citizens) before buying an item on the Italy site.
    /// 						<br/><br/>
    /// 						On the Spain site, a Spanish seller has the option to require that Spanish buyers (registered on Spain site) provide a tax ID before checkout. This option is set by the seller at the account level. Once a Spanish buyer provides a tax ID, this tax ID is associated with his/her account, and once a tax ID is associated with the account, Spanish buyer will be asked to provide the tax ID during checkout on all eBay sites. Buyers with a registered address outside of Spain will not be asked to provide a tax ID during checkout.
    /// 						<br/><br/>
    /// 						This container is only returned for Spanish or Italian sellers when the buyer was asked to provide tax identifier information during checkout. A <strong>BuyerTaxIdentifier</strong> will be returned for each tax ID that is associated with the buyer's account.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("BuyerTaxIdentifier")]

	public System.Collections.Generic.List<TaxIdentifierType> BuyerTaxIdentifier { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>BuyingSummary</b> container returned in
/// 				<b>GetMyeBayBuying</b>. The <b>BuyingSummary</b> container
/// 				consists of data that summarizes the buyer's recent buying activity, including the
/// 				number of items the user has bid on, the number of items the user is winning, and the number of items
/// 				the user has won. The <b>BuyingSummary</b> container is only returned if
/// 				the <b>BuyingSummary.Include</b> field is included in the <b>GetMyeBayBuying</b> request and set to
/// 				<code>true</code>.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class BuyingSummaryType {

#region 属性
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 				     The number of auction items the user has bid on.
    /// 					
    /// </remarks>

	public int? BiddingCount { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					 The number of active auction listings in which the user is currently the highest bidder.
    /// 					
    /// </remarks>

	public int? WinningCount { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 				     	The total cost of items that the user is currently the highest bidder on.
    /// 					
    /// </remarks>

	public AmountType TotalWinningCost { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					The number of auction items that the user has won.
    /// 					
    /// </remarks>

	public int? WonCount { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					 The total cost of auction items that the user has won.
    /// 					
    /// </remarks>

	public AmountType TotalWonCost { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					The time period for which won items are displayed. Default is 31 days.
    /// 					
    /// </remarks>

	public int? WonDurationInDays { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 			    		The number of items the user has made Best Offers on.
    /// 			    		
    /// </remarks>

	public int? BestOfferCount { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>CalculatedHandlingDiscount</b> container that is used in the <b>SetShippingDiscountProfiles</b> call to specify the rules used to determine package handling costs for an order in which calculated shipping is used.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class CalculatedHandlingDiscountType {

#region 属性
    /// <summary>
    /// GetShippingDiscountProfilesConditionally
    /// SetShippingDiscountProfilesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The type of discount that is detailed in the profile.
    /// 						If the selection is <code>EachAdditionalAmount</code>, <code>EachAdditionalAmountOff</code> or
    /// 						<code>EachAdditionalPercentOff</code>, the value is set in the child element of same
    /// 						name in <b>CalculatedHandlingDiscount</b>. If the selection is <code>CombinedHandlingFee</code>,
    /// 						specify the amount in <b>CalculatedHandlingDiscount.OrderHandlingAmount</b>.
    /// 						If the selection is <code>IndividualHandlingFee</code>, the amount is determined by eBay
    /// 						by adding the fees of the individual items.
    /// 					
    /// </remarks>

	public HandlingNameCodeType? DiscountName { get; set; }
    /// <summary>
    /// GetShippingDiscountProfilesConditionally
    /// SetShippingDiscountProfilesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						If specified, this is the fixed shipping cost to charge for an order,
    /// 						regardless of the number of items in the order.
    /// 						This field is mutually exclusive with the other amount and percentage
    /// 						fields within this type.
    /// 						This field only applies when the specified <b>DiscountName</b> value is <code>CombinedHandlingFee</code>.
    /// 					
    /// </remarks>

	public AmountType OrderHandlingAmount { get; set; }
    /// <summary>
    /// GetShippingDiscountProfilesConditionally
    /// SetShippingDiscountProfilesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The packaging/handling cost for each item beyond the first item (where the
    /// 						item with the highest packaging/handling cost is selected by eBay as the first
    /// 						item). Let's say the buyer purchases three items, each assigned a
    /// 						packaging/handling cost of $8, and the seller set <b>EachAdditionalAmount</b> to $6.
    /// 						The packaging/handling cost for three items would normally be $24, but since
    /// 						the seller specified $6, the total packaging/handling cost would be $8 + $6 +
    /// 						$6, or $20.
    /// 						This field is mutually exclusive with the other amount and percentage
    /// 						fields within this type.
    /// 						This field only applies when the <b>DiscountName</b> value is <code>EachAdditionalAmount</code>.
    /// 					
    /// </remarks>

	public AmountType EachAdditionalAmount { get; set; }
    /// <summary>
    /// GetShippingDiscountProfilesConditionally
    /// SetShippingDiscountProfilesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The amount by which to reduce the packaging/handling cost for each item beyond
    /// 						the first item (where the item with the highest packaging/handling cost is
    /// 						selected by eBay as the first item). Let's say the buyer purchases three
    /// 						items, each assigned a packaging/handling cost of $8, and the seller set
    /// 						<b>EachAdditionalAmountOff</b> to $2.  The packaging/handling cost for three items
    /// 						would normally be $24, but since the seller specified $2, the total
    /// 						packaging/handling cost would be $24 - (two additional items x $2), or $20.
    /// 						This field is mutually exclusive with the other amount and percentage
    /// 						fields within this type.
    /// 						This field only applies when the <b>DiscountName</b> value is <code>EachAdditionalOffAmount</code>.
    /// 					
    /// </remarks>

	public AmountType EachAdditionalOffAmount { get; set; }
    /// <summary>
    /// GetShippingDiscountProfilesConditionally
    /// SetShippingDiscountProfilesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The percentage by which to reduce the packaging/handling cost for each item
    /// 						beyond the first item (where the item with the highest packaging/handling cost
    /// 						is selected by eBay as the first item). Let's say the buyer purchases three
    /// 						items, each assigned a packaging/handling cost of $8, and the seller set
    /// 						<b>EachAdditionalPercentOff</b> to 0.25.  The packaging/handling cost for three items
    /// 						would normally be $24, but since the seller specified 0.25 ($2 out of 8), the
    /// 						total packaging/handling cost would be $24 - (two additional items x $2), or
    /// 						$20.
    /// 						This field is mutually exclusive with the amount fields within this type.
    /// 						This field only applies when the <b>DiscountName</b> value is <code>EachAdditionalPercentOff</code>.
    /// 					
    /// </remarks>

	public float? EachAdditionalPercentOff { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type used by the <b>CalculatedShippingDiscount</b> container, which is used in the <b>SetShippingDiscountProfiles</b> call to create one or more discounted calculated shipping rules. The <b>CalculatedShippingDiscount</b> container is returned in the response of all other calls that use this type.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class CalculatedShippingDiscountType {

#region 属性
    /// <summary>
    /// GetShippingDiscountProfiles
    /// 								IndividualItemWeight, CombinedItemWeight, WeightOff
    /// 							Conditionally
    /// SetShippingDiscountProfiles
    /// 								IndividualItemWeight, CombinedItemWeight, WeightOff
    /// 							Conditionally
    /// GetItem
    /// 								IndividualItemWeight, CombinedItemWeight, WeightOff
    /// 							DetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// Shipping discount profileshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/shipping-discount-profiles.html
    /// </summary>
    /// <remarks>
    /// 
    /// 						This enumeration value indicates the type of calculated shipping discount rule that is being applied. Each rule is explained below.
    /// 					
    /// </remarks>

	public DiscountNameCodeType? DiscountName { get; set; }
    /// <summary>
    /// GetShippingDiscountProfilesConditionally
    /// SetShippingDiscountProfiles
    /// 								IndividualItemWeight, CombinedItemWeight, WeightOff
    /// 							Conditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// Shipping discount profileshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/shipping-discount-profiles.html
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container provides details of this particular calculated shipping discount profile.
    /// 						<br><br>
    /// 						<b>For SetShippingDiscountProfiles</b>: If the
    /// 						<b>ModifyActionCode</b> value is set to <code>Update</code>, all details of the modified version of the profile must
    /// 						be provided. If the
    /// 						<b>ModifyActionCode</b> value is set to <code>Delete</code>, the <b>DiscountProfileID</b> is required,
    /// 						the <b>MappingDiscountProfileID</b> is optional, and all other fields of the container are no longer applicable.
    /// 						<br><br>
    /// 						Restrictions on how many profiles can exist for a given
    /// 						discount rule are discussed in the Features Guide documentation on Shipping Cost Discount Profiles.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("DiscountProfile")]

	public System.Collections.Generic.List<DiscountProfileType> DiscountProfile { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is used to specify domestic and international package handling costs if calculated shipping is being used.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class CalculatedShippingRateType {

#region 属性
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemNo
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetBidderListGetItemShippingConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllAlways
    /// GetItemTransactionsGetSellerTransactionsGetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Fees a seller might assess for the shipping of the item (in addition to whatever the shipping service might charge). Any packaging/handling cost specified on input is added to each shipping service on output.
    /// 						<br/><br/>
    /// 						If domestic and international calculated shipping is offered for an item and if packaging/handling cost is specified only for domestic shipping, that cost will be applied by eBay as the international packaging/handling cost. (To specify a international packaging/handling cost, you must always specify a domestic packaging/handling cost, even if it is 0.) When UPS is one of the shipping services offered by the seller, package dimensions are required on list/relist/revise.
    /// 						<br/>
    /// 						<span class="tablenote"><strong>Note:</strong>
    /// 						If the listing only has one domestic shipping service and it is free shipping, the domestic package handling cost will be ignored and will not be applied to the listing.
    /// 						</span>
    /// 					
    /// </remarks>

	public AmountType PackagingHandlingCosts { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemNo
    /// GetBidderListGetItemShippingGetSellerListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllAlways
    /// GetItemTransactionsGetSellerTransactionsGetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field shows any package handling cost applied to international shipping. This cost will be in addition to any shipping cost applicable to each international shipping service option. 
    /// 						<br/><br/>
    /// 						For international calculated shipping only.
    /// 					
    /// </remarks>

	public AmountType InternationalPackagingHandlingCosts { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>Category</b> container that is returned in the <b>GetCategoryFeatures</b> response. A <b>Category</b> node is returned for each category that is relevant/applicable to the input criteria in the <b>GetCategoryFeatures</b> request. The <b>CategoryID</b> value identifies the eBay category. The rest of the <b>CategoryFeatureType</b> fields that are returned will be dependent on which <b>FeatureID</b> value(s) are specified in the <b>GetCategoryFeatures</b> request.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class CategoryFeatureType {

#region 属性
    /// <summary>
    /// 10
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the unique identifier of the eBay category. All eBay feature information that is returned under the corresponding <b>Category</b> container is relevant to this eBay category.
    /// 					
    /// </remarks>

	public string CategoryID { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					  A <b>ListingDuration</b> field is returned for each listing type and listing duration combination that is supported for the category. The integer value indicates the number of days of the listing duration, and the <b>type</b> attribute identifies the supported listing type.
    /// 						<br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>ListingDurations</code>.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("ListingDuration")]

	public System.Collections.Generic.List<ListingDurationReferenceType> ListingDuration { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether the category requires sellers to specify shipping details at listing time.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>ShippingTermsRequired</code>.
    /// 					
    /// </remarks>

	public bool? ShippingTermsRequired { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					  Indicates whether the category supports the Best Offer feature for listings.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>BestOfferEnabled</code>.
    /// 					
    /// </remarks>

	public bool? BestOfferEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					  Indicates whether a bidder must consent to the bid by confirming that
    /// 					  he or she read and agrees to the terms in eBay's privacy policy.
    /// 					 	<br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>UserConsentRequired</code>.
    /// 					
    /// </remarks>

	public bool? UserConsentRequired { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					  Indicates whether or not it is possible to enhance a listing by putting
    /// 						it into a rotation for display on a special area of the eBay home page.
    /// 						Support for this feature varies by site. Item or feedback restrictions may apply.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>HomePageFeaturedEnabled</code>.
    /// 					
    /// </remarks>

	public bool? HomePageFeaturedEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is deprecated.
    /// 					
    /// </remarks>

	public bool? ProPackEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether the category supports Classified Ad listings.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>AdFormatEnabled</code>.
    /// 					
    /// </remarks>

	public AdFormatEnabledCodeType? AdFormatEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether the category supports sellers offering a counter offer against a buyer's Best Offer, or a buyer offering a counter offer against the seller's counter offer.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>BestOfferCounterEnabled</code>.
    /// 					
    /// </remarks>

	public bool? BestOfferCounterEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether the category supports the Best Offer Auto Decline feature.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>BestOfferAutoDeclineEnabled</code>.
    /// 					
    /// </remarks>

	public bool? BestOfferAutoDeclineEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether the category supports the Speciality level subscription to Motors Local Market listings. This feature is only available to licensed vehicle dealers.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>LocalMarketSpecialitySubscription</code>.
    /// 					
    /// </remarks>

	public bool? LocalMarketSpecialitySubscription { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether the category supports the Regular level subscription to Motors Local Market listings. This feature is only available to licensed vehicle dealers.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>LocalMarketRegularSubscription</code>.
    /// 					
    /// </remarks>

	public bool? LocalMarketRegularSubscription { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether the category supports the Premium level subscription Motors Local Market listings. This feature is only available to licensed vehicle dealers.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>LocalMarketPremiumSubscription</code>.
    /// 					
    /// </remarks>

	public bool? LocalMarketPremiumSubscription { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether the category supports a seller creating a Motors Local Market listing without a subscription. This feature is only available to licensed vehicle dealers.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>LocalMarketNonSubscription</code>.
    /// 					
    /// </remarks>

	public bool? LocalMarketNonSubscription { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates the Minimum Reserve Price for an auction listing in this category. If there is no Minimum Reserve Price, a value of <code>0.0</code> is returned in this field.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>MinimumReservePrice</code>.
    /// 					
    /// </remarks>

	public double? MinimumReservePrice { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether this category supports seller-level contact information for Classified Ad listings.
    /// 						<br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>SellerContactDetailsEnabled</code>.
    /// 					
    /// </remarks>

	public bool? SellerContactDetailsEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether the Transaction Confirmation Request feature is supported for this category.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default.
    /// 					
    /// </remarks>

	public bool? TransactionConfirmationRequestEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether the payment method should be displayed to the user for
    /// 						Classified Ad format listings.
    /// 						Even if enabled, checkout may or may not be enabled.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>ClassifiedAdPaymentMethodEnabled</code>.
    /// 					
    /// </remarks>

	public ClassifiedAdPaymentMethodEnabledCodeType? ClassifiedAdPaymentMethodEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates if shipping options are available for Classified Ad listings
    /// 						in the category.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>ClassifiedAdShippingMethodEnabled</code>.
    /// 					
    /// </remarks>

	public bool? ClassifiedAdShippingMethodEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates if Best offer is enabled for Classified Ad listings for this category.
    /// 					   <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>ClassifiedAdBestOfferEnabled</code>.
    /// 					
    /// </remarks>

	public ClassifiedAdBestOfferEnabledCodeType? ClassifiedAdBestOfferEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether counter offers are allowed in Classified Ad listings
    /// 						for this category.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>ClassifiedAdCounterOfferEnabled</code>.
    /// 					
    /// </remarks>

	public bool? ClassifiedAdCounterOfferEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether automatic decline for best offers for Classified Ad listings is enabled for this category.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>ClassifiedAdAutoDeclineEnabled</code>.
    /// 					
    /// </remarks>

	public bool? ClassifiedAdAutoDeclineEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether the category supports the telephone as a contact method for Classified Ad listings.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>ClassifiedAdContactByPhoneEnabled</code>.
    /// 					
    /// </remarks>

	public bool? ClassifiedAdContactByPhoneEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether the category supports email as a contact method for Classified Ad listings.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>ClassifiedAdContactByEmailEnabled</code>.
    /// 					
    /// </remarks>

	public bool? ClassifiedAdContactByEmailEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is no longer applicable, as eBay now controls all online payment methods.
    /// 					
    /// </remarks>

	public bool? SafePaymentRequired { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates if pay-per-lead listings are allowed for this category. Pay-per-lead listings can be applicable if the value of <b>ListingType</b> is <code>LeadGeneration</code> and the value of <b>ListingSubtype</b> is <code>ClassifiedAd</code>.
    /// 					   <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default.
    /// 					
    /// </remarks>

	public bool? ClassifiedAdPayPerLeadEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether the category supports the use of Item Specifics in listings. If enabled, sellers can use the <b>Item.ItemSpecifics</b> node in Add/Revise/Relist calls to specify Item Specific name-value pairs.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>ItemSpecificsEnabled</code>.
    /// 					
    /// </remarks>

	public ItemSpecificsEnabledCodeType? ItemSpecificsEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						This field is deprecated since it is only applicable to the eBay India site, and this marketplace is no longer available.</span>
    /// 					
    /// </remarks>

	public bool? PaisaPayFullEscrowEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether the category supports the capability to identify a product using the brand/manufacturer part number combination.
    /// 					 <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>BrandMPNIdentifierEnabled</code>.
    /// 					
    /// </remarks>

	public bool? BrandMPNIdentifierEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether the category supports the Best Offer Automatic Accept feature for Classified Ad listings.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>ClassifiedAdAutoAcceptEnabled</code>.
    /// 					
    /// </remarks>

	public bool? ClassifiedAdAutoAcceptEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether the category supports the Best Offer Automatic Accept feature for listings.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>BestOfferAutoAcceptEnabled</code>.
    /// 					
    /// </remarks>

	public bool? BestOfferAutoAcceptEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether the category supports specifying that listings be displayed in the default search results of North America sites (US and Canada (English).
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>CrossBorderTradeEnabled</code>.
    /// 					
    /// </remarks>

	public bool? CrossBorderTradeNorthAmericaEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether the category supports specifying that listings be displayed in the default search results of the UK and Ireland sites.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>CrossBorderTradeEnabled</code>.
    /// 					
    /// </remarks>

	public bool? CrossBorderTradeGBEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether the category supports specifying that listings be displayed in the default search results of the Australia site.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>CrossBorderTradeEnabled</code>.
    /// 					
    /// </remarks>

	public bool? CrossBorderTradeAustraliaEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						If this field is returned as <code>true</code>, the category supports the Best Price Guarantee feature on the Australia site. This field/feature is only applicable to Australia.
    /// 					
    /// </remarks>

	public bool? BuyerGuaranteeEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned if the Featured Gallery feature is supported for the category. The time unit that is returned in this field indicates how long a gallery will be featured on eBay.
    /// 					   <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>GalleryFeaturedDurations</code>.
    /// 					
    /// </remarks>

	public ListingEnhancementDurationReferenceType GalleryFeaturedDurations { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies whether this category allows Classified Ad listings on eBay Motors. This element is applicable for eBay Motors Pro users.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>eBayMotorsProAdFormatEnabled</code>.
    /// 					
    /// </remarks>

	public AdFormatEnabledCodeType? eBayMotorsProAdFormatEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether this category supports including the telephone in the seller's contact information. This element is for eBay Motors Pro users.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>eBayMotorsProContactByPhoneEnabled</code>.
    /// 					
    /// </remarks>

	public bool? eBayMotorsProContactByPhoneEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates which telephone option is enabled for the seller's contact information. This element is for eBay Motors Pro users.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>eBayMotorsProContactByPhoneEnabled</code>.
    /// 					
    /// </remarks>

	public int? eBayMotorsProPhoneCount { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether this category supports including the address in the seller's contact information. This element is for eBay Motors Pro users.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>eBayMotorsProContactByAddressEnabled</code>.
    /// 					
    /// </remarks>

	public bool? eBayMotorsProContactByAddressEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates which address option is enabled for the seller's contact information. This element is for eBay Motors Pro users.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>eBayMotorsProContactByAddressEnabled</code>.
    /// 					
    /// </remarks>

	public int? eBayMotorsProStreetCount { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether this category supports including the company name in the seller's contact information. This element is for eBay Motors Pro users.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>eBayMotorsProCompanyNameEnabled</code>.
    /// 					
    /// </remarks>

	public bool? eBayMotorsProCompanyNameEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether this category supports including an email address in the seller's contact information. This element is for eBay Motors Pro users.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>eBayMotorsProContactByEmailEnabled</code>.
    /// 					
    /// </remarks>

	public bool? eBayMotorsProContactByEmailEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates if Best Offer is supported for eBay Motors Classified Ad listings in this category. This element is for eBay Motors Pro users.
    /// 						  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>eBayMotorsProBestOfferEnabled</code>.
    /// 					
    /// </remarks>

	public ClassifiedAdBestOfferEnabledCodeType? eBayMotorsProBestOfferEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies whether this category allows auto-accept for Best Offers for eBay Motors Classified Ad listings. This element is for eBay Motors Pro users.
    /// 					   <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>eBayMotorsProAutoAcceptEnabled</code>.
    /// 					
    /// </remarks>

	public bool? eBayMotorsProAutoAcceptEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies whether this category allows auto-decline for Best Offers for eBay Motors Classified Ad listings. This element is for eBay Motors Pro users.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>eBayMotorsProAutoDeclineEnabled</code>.
    /// 					
    /// </remarks>

	public bool? eBayMotorsProAutoDeclineEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates if the payment method should be displayed to the user for this category in an eBay Motors Classified Ad listing. Even if enabled, checkout may or may not be enabled. This element is for eBay Motors Pro users.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>eBayMotorsProPaymentMethodCheckOutEnabled</code>.
    /// 					
    /// </remarks>

	public ClassifiedAdPaymentMethodEnabledCodeType? eBayMotorsProPaymentMethodCheckOutEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates if shipping options should be displayed to the user for this category in an eBay Motors Classified Ad listing. This element is for eBay Motors Pro users.
    /// 					 <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>eBayMotorsProShippingMethodEnabled</code>.
    /// 					
    /// </remarks>

	public bool? eBayMotorsProShippingMethodEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether counter offers are allowed on Best Offers for this category in an eBay Motors Classified Ad listing. This element is for eBay Motors Pro users.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>eBayMotorsProCounterOfferEnabled</code>.
    /// 					
    /// </remarks>

	public bool? eBayMotorsProCounterOfferEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies whether this category allows seller-level contact information for eBay Motors Classified Ad listings. A value of true means seller-level contact information is available for Classified Ad listings. This element is for eBay Motors Pro users.
    /// 					 <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>eBayMotorsProSellerContactDetailsEnabled</code>.
    /// 					
    /// </remarks>

	public bool? eBayMotorsProSellerContactDetailsEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies whether this category supports Motor Local Market Classified Ad listings. This element is for Local Market dealers.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>LocalMarketAdFormatEnabled</code>.
    /// 					
    /// </remarks>

	public AdFormatEnabledCodeType? LocalMarketAdFormatEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether this category supports including the telephone in the seller's contact information. This element is for Local Market dealers.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>LocalMarketContactByPhoneEnabled</code>.
    /// 					
    /// </remarks>

	public bool? LocalMarketContactByPhoneEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates which telephone option is enabled for the seller's contact information. This element is for Local Market dealers.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>LocalMarketContactByPhoneEnabled</code>.
    /// 					
    /// </remarks>

	public int? LocalMarketPhoneCount { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether this category supports including the address in the seller's contact information. This element is for Local Market dealers.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>LocalMarketContactByAddressEnabled</code>.
    /// 					
    /// </remarks>

	public bool? LocalMarketContactByAddressEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates which address option is enabled for the seller's contact information. This element is for Local Market dealers.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>LocalMarketContactByAddressEnabled</code>.
    /// 					
    /// </remarks>

	public int? LocalMarketStreetCount { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether the category supports including a company name in the seller's contact information. This element is for Local Market dealers.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>LocalMarketCompanyNameEnabled</code>.
    /// 					
    /// </remarks>

	public bool? LocalMarketCompanyNameEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether the category supports including an email address in the seller's contact information. This element is for Local Market dealers.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>LocalMarketContactByEmailEnabled</code>.
    /// 					
    /// </remarks>

	public bool? LocalMarketContactByEmailEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates if Best Offer is enabled/required for Motors Local Market Classified Ad listings in this category. This element is for Local Market dealers.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>LocalMarketBestOfferEnabled</code>.
    /// 					
    /// </remarks>

	public ClassifiedAdBestOfferEnabledCodeType? LocalMarketBestOfferEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies whether this category supports auto-accept for Best Offers for Motors Local Market Classified Ads. This element is for Local Market dealers.
    /// 					 <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>LocalMarketAutoAcceptEnabled</code>.
    /// 					
    /// </remarks>

	public bool? LocalMarketAutoAcceptEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies whether this category supports auto-decline for Best Offers for Motors Local Market Classified Ads. This element is for Local Market dealers.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>LocalMarketAutoDeclineEnabled</code>.
    /// 					
    /// </remarks>

	public bool? LocalMarketAutoDeclineEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates if the payment method should be displayed to the user for this category in an Motors Local Market Classified Ad listing. Even if enabled, checkout may or may not be enabled. This element is for Local Market dealers.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>LocalMarketPaymentMethodCheckOutEnabled</code>.
    /// 					
    /// </remarks>

	public ClassifiedAdPaymentMethodEnabledCodeType? LocalMarketPaymentMethodCheckOutEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates if shipping methods should be displayed to the user for this category in an Motors Local Market Classified Ad listing. Even if enabled, checkout may or may not be enabled. This element is for Local market dealers.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>LocalMarketShippingMethodEnabled</code>.
    /// 					
    /// </remarks>

	public bool? LocalMarketShippingMethodEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether counter offers are allowed on Best Offers for this category for Motors Local Market Classified Ad listings. This element is for Local market dealers.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>LocalMarketCounterOfferEnabled</code>.
    /// 					
    /// </remarks>

	public bool? LocalMarketCounterOfferEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the whether this category allows seller-level contact information for Motors Local Market Classified Ad listings. This element is for Local Market dealers.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>LocalMarketSellerContactDetailsEnabled</code>.
    /// 					
    /// </remarks>

	public bool? LocalMarketSellerContactDetailsEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates which telephone option is included in the seller's contact information. This element is for For Sale By Owner listings.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>ClassifiedAdContactByPhoneEnabled</code>.
    /// 					
    /// </remarks>

	public int? ClassifiedAdPhoneCount { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether this category supports including an address in the seller's contact information. This element is for For Sale By Owner listings.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>ClassifiedAdContactByAddressEnabled</code>.
    /// 					
    /// </remarks>

	public bool? ClassifiedAdContactByAddressEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates which address option is included in the seller's contact information. This element is for For Sale By Owner listings.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>ClassifiedAdContactByAddressEnabled</code>.
    /// 					
    /// </remarks>

	public int? ClassifiedAdStreetCount { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether this category supports including a company name in the seller's contact information. This element is for For Sale By Owner listings.
    /// 					 <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>ClassifiedAdCompanyNameEnabled</code>.
    /// 					
    /// </remarks>

	public bool? ClassifiedAdCompanyNameEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The value in this field indicates whether the category supports Motors Local Market listings if the seller has a Specialty vehicle subscription.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>SpecialitySubscription</code>.
    /// 					
    /// </remarks>

	public GeographicExposureCodeType? SpecialitySubscription { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The value in this field indicates whether the category supports Motors Local Market listings if the seller has a Regular vehicle subscription.
    /// 					 <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>RegularSubscription</code>.
    /// 					
    /// </remarks>

	public GeographicExposureCodeType? RegularSubscription { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The value in this field indicates whether the category supports Motors Local Market listings if the seller has a Premium vehicle subscription.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>PremiumSubscription</code>.
    /// 					
    /// </remarks>

	public GeographicExposureCodeType? PremiumSubscription { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The value in this field indicates whether the category supports Motors Local Market listings if the seller does not have a vehicle subscription.
    /// 					 <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>NonSubscription</code>.
    /// 					
    /// </remarks>

	public GeographicExposureCodeType? NonSubscription { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						This field is deprecated since it is only applicable to the eBay India site, and this marketplace is no longer available.</span>
    /// 					
    /// </remarks>

	public INEscrowWorkflowTimelineCodeType? INEscrowWorkflowTimeline { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates if the category allows the seller to revise the quantity of a multi-quantity, active listing.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>ReviseQuantityAllowed</code>.
    /// 					
    /// </remarks>

	public bool? ReviseQuantityAllowed { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates if the category allows the seller to revise the price of a fixed-price listing.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>RevisePriceAllowed</code>.
    /// 					
    /// </remarks>

	public bool? RevisePriceAllowed { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates if an eBay Store owner gets extended listing durations in a given category. When the value of this element is true, it means the listing duration values defined in <b>StoreOwnerExtendedListingDurations</b> are applicable to fixed-price listings in a given category.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>StoreOwnerExtendedListingDurationsEnabled</code>.
    /// 					
    /// </remarks>

	public bool? StoreOwnerExtendedListingDurationsEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Provides additional listings durations that are available to eBay Store owners. The extended listing durations provided here in this element should be merged in with the baseline listing durations provided in the <b>ListingDurations</b> element. Applies to fixed-price Listings.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>StoreOwnerExtendedListingDurations</code>.
    /// 					
    /// </remarks>

	public StoreOwnerExtendedListingDurationsType StoreOwnerExtendedListingDurations { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						<b>For most sites:</b> If true, listings in this
    /// 						category require a return policy. <br/>
    /// 						<br/>
    /// 						<b>For eBay Australia (AU) and
    /// 						US eBay Motors Parts and Accessories:</b>
    /// 						If true, the category supports but does not require a
    /// 						return policy.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>ReturnPolicyEnabled</code>.
    /// 					
    /// </remarks>

	public bool? ReturnPolicyEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates if a seller's stated handling time is enabled for a category. A handling time is generally needed for items that are shipped to the buyer, but not necessarily applicable to freight shipping or local pickup. <br/>
    /// 						<br/>
    /// 						The handling time is the maximum number of business days the seller
    /// 						commits to for preparing an item to be shipped after receiving a
    /// 						cleared payment. The seller's handling time does not include the
    /// 						shipping time (the carrier's transit time).
    /// 						<br/>
    /// 						For a list of the handling time values allowed for each site, use
    /// 						<code>DispatchTimeMaxDetails</code> in <b>GeteBayDetails</b>.<br/>
    /// 						<br/>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						Although the field name ends with "Enabled", a value of true means
    /// 						that a handling time is NOT supported, and value of false means
    /// 						that a handling time IS supported.</span><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>HandlingTimeEnabled</code>.
    /// 					
    /// </remarks>

	public bool? HandlingTimeEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/shipping-flat-rate.html#max-flatFlat rate shipping
    /// </summary>
    /// <remarks>
    /// 
    /// 						The maximum cost the seller can charge for the first domestic flat-rate shipping
    /// 						service.
    /// 						Mutually exclusive with the <b>Group</b><code>N</code><b>MaxFlatShippingCost</b> elements.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>MaxFlatShippingCost</code>.
    /// 					
    /// </remarks>

	public AmountType MaxFlatShippingCost { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Returns the applicable max cap per shipping cost for shipping service group1.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>Group1MaxFlatShippingCost</code>.
    /// 					
    /// </remarks>

	public AmountType Group1MaxFlatShippingCost { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Returns the applicable max cap per shipping cost for shipping service group2.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>Group2MaxFlatShippingCost</code>.
    /// 					
    /// </remarks>

	public AmountType Group2MaxFlatShippingCost { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Returns the applicable max cap per shipping cost for shipping service group3.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>Group3MaxFlatShippingCost</code>.
    /// 					
    /// </remarks>

	public AmountType Group3MaxFlatShippingCost { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates the acceptable payment methods that can be used when listing an item for sale in the corresponding category.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>PaymentMethods</code>.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("PaymentMethod")]

	public System.Collections.Generic.List<BuyerPaymentMethodCodeType> PaymentMethod { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						If <code>true</code>, you can pass in <b>Item.Variations</b> in an
    /// 						Add/Revise/Relist fixed-price item call when you list in this
    /// 						category.<br/>
    /// 						<br/>
    /// 						Multi-variation listings contain items that are logically the same
    /// 						product, but that vary in their manufacturing details or packaging.
    /// 						For example, a particular brand and style of shirt could be
    /// 						available in different sizes and colors, such as "large blue" and
    /// 						"medium black" variations.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>VariationsEnabled</code>.
    /// 					
    /// </remarks>

	public bool? VariationsEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether the category supports free, automatic upgrades for Gallery Plus, which enhances pictures in search results.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>FreeGalleryPlusEnabled</code>.
    /// 					
    /// </remarks>

	public bool? FreeGalleryPlusEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether the category supports free, automatic upgrades for Picture Pack, a discount package that includes super-sizing of pictures.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>FreePicturePackEnabled</code>.
    /// 					
    /// </remarks>

	public bool? FreePicturePackEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether the category supports parts compatibility by application
    /// 						(<b>ByApplication</b>), by specification (<b>BySpecification</b>), or not at all
    /// 						(<b>Disabled</b>). Categories cannot support both types of parts compatibility.
    /// 						<br/><br/>
    /// 						Parts Compatibility is supported in limited Parts & Accessories
    /// 						categories for the eBay Motors (US) site (site ID 100) only.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>CompatibilityEnabled</code>.
    /// 					
    /// </remarks>

	public ItemCompatibilityEnabledCodeType? ItemCompatibilityEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field specifies the minimum number of required compatible applications
    /// 						for listing items. A value of "0" indicates it is not mandatory to specify
    /// 						parts compatibilities when listing.
    /// 						<br/><br/>
    /// 						This applies to categories that are enabled for compatibility by application
    /// 						only. Parts compatiblity by application can be specified by listing with a
    /// 						catalog product that supports parts compatibility or by specifying parts
    /// 						compatibility by application manually (<b class="con">
    /// 						Item.ItemCompatibilityList</b>).
    /// 					 <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>MinCompatibleApplications</code>.
    /// 					
    /// </remarks>

	public int? MinItemCompatibility { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field specifies the maximum number of compatible applications allowed
    /// 						per item when adding or revising items. This is relevant for specifying parts
    /// 						compatibility by application manually (<b class="con">
    /// 						Item.ItemCompatibilityList</b>) only.
    /// 						<br/><br/>
    /// 						Applicable for the US site only.
    /// 						<br/><br/>
    /// 						For DE, UK, and AU sites, this field returns the same value as <b>MaxGranularFitmentCount</b>.
    /// 					 <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>MaxCompatibleApplications</code>.
    /// 					
    /// </remarks>

	public int? MaxItemCompatibility { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether the category supports, requires, or doesn't support the use item condition for an item listing. For categories that require or support the use of item condition, see the <b>ConditionValues</b> and/or <b>SpecialFeatures</b> containers for a list of valid item conditions (display names and ID values).
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>ConditionEnabled</code>.
    /// 					
    /// </remarks>

	public ConditionEnabledCodeType? ConditionEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container specifies all of the item conditions that are supported for the corresponding category. The display name of the item condiation and the ID associated with the description are both shown.
    /// 					  <br/><br/>
    /// 						This container will not be returned for any eBay categories that don't support the use of an item condition value. To see which categories require, support, or don't support the use of item conditions, you can include a <b>FeatureID</b> value of <code>ConditionEnabled</code>. Any eBay category that does not support the use of an item condition value will return a <b>ConditionEnabled</b> value of <code>Disabled</code>.
    /// 						<br/><br/>
    /// 						This container will also not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>ConditionValues</code>.
    /// 						<br/>
    /// 						<br/>
    /// 					
    /// </remarks>

	public ConditionValuesType ConditionValues { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container is only returned if the corresponding category supports a special item condition such as <b>Certified - Refurbished</b> condition (condition ID 2000), <b>Excellent - Refurbished</b> condition (condition ID 2010), <b>Very Good - Refurbished</b> condition (condition ID 2020), and <b>Good - Refurbished</b> condition (condition ID 2030). A seller must be pre-qualified by eBay to list items with the any of these refurbished item conditions.
    /// 						<br/><br/>
    /// 						All other item conditions supported by a category will be returned in the <b>ConditionValues</b> container instead.
    /// 						<br/><br/>
    /// 						Neither the <b>ConditionValues</b> or the <b>SpecialFeatures</b> containers will be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>ConditionValues</code>.
    /// 					
    /// </remarks>

	public ConditionValuesType SpecialFeatures { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Some eBay sites may select a few categories and designate them as
    /// 						"value categories". These are typically selected from
    /// 						categories where buyers can find great deals. (Not all categories
    /// 						with great deals are designated as value categories.)
    /// 						This designation can change over time. <br/>
    /// 						<br/>
    /// 						While a category is designated as a value category (i.e.,
    /// 						when <b>ValueCategory</b> is <code>true</code>), it is subject to the following rule:
    /// 						Items in value categories can only be listed in one category.<br/>
    /// 						<br/>
    /// 						For example, if you attempt to list in two categories and the
    /// 						primary category or secondary category is a value category,
    /// 						then eBay drops the secondary category and lists the
    /// 						item in the primary category only.
    /// 						Similarly, if you attempt to add a secondary category to an existing
    /// 						listing, or you change the category for an existing listing,
    /// 						and if the primary or secondary category is a value category,
    /// 						then eBay drops the secondary category.
    /// 					   <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>ValueCategory</code>.
    /// 					
    /// </remarks>

	public bool? ValueCategory { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					This value is <b>deprecated</b>.
    /// 					
    /// </remarks>

	public ProductCreationEnabledCodeType? ProductCreationEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether or not European Article Numbers (EANs) are supported/required when listing products in the category. A value of <code>Disabled</code> indicates that EANs cannot be used for the category, a value of <code>Enabled</code> indicates that EANs can be used for the category, and a value of <code>Required</code> indicates that an EAN is required when listing a product in this category.
    /// 						<br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>EANEnabled</code>.
    /// 						<br/>
    /// 						<br/>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						It is recommended that sellers always use <b>GetCategoryFeatures</b> to see if an eBay category requires a Global Trade Item Number (GTIN) or a Brand/MPN combination. So, that means that they should look for <b>EANEnabled</b>, <b>ISBNEnabled</b>, <b>UPCEnabled</b>, and <b>BrandMPNIdentifierEnabled</b> at the category level in the <b>GetCategoryFeatures</b> response. </span>
    /// 					
    /// </remarks>

	public ProductIdentiferEnabledCodeType? EANEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether or not International Standard Book Numbers (ISBNs) are supported/required when listing products in the category. A value of <code>Disabled</code> indicates that ISBNs cannot be used for the category, a value of <code>Enabled</code> indicates that ISBNs can be used for the category, and a value of <code>Required</code> indicates that an ISBN is required when listing a product in this category.
    /// 						<br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>ISBNEnabled</code>.
    /// 						<br/>
    /// 						<br/>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						It is recommended that sellers always use <b>GetCategoryFeatures</b> to see if an eBay category requires a Global Trade Item Number (GTIN) or a Brand/MPN combination. So, that means that they should look for <b>ISBNEnabled</b>, <b>EANEnabled</b>,  <b>UPCEnabled</b>, and <b>BrandMPNIdentifierEnabled</b> at the category level in the <b>GetCategoryFeatures</b> response.  </span>
    /// 					
    /// </remarks>

	public ProductIdentiferEnabledCodeType? ISBNEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether or not Universal Product Codes (UPCs) are supported/required when listing products in the category. A value of <code>Disabled</code> indicates that UPCs cannot be used for the category, a value of <code>Enabled</code> indicates that UPCs can be used for the category, and a value of <code>Required</code> indicates that a UPC is required when listing a product in this category.
    /// 						<br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>UPCEnabled</code>.
    /// 						<br/>
    /// 						<br/>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						It is recommended that sellers always use <b>GetCategoryFeatures</b> to see if an eBay category requires a Global Trade Item Number (GTIN) or a Brand/MPN combination. So, that means that they should look for <b>UPCEnabled</b>, <b>ISBNEnabled</b>, <b>EANEnabled</b>, and <b>BrandMPNIdentifierEnabled</b> at the category level in the <b>GetCategoryFeatures</b> response.  </span>
    /// 					
    /// </remarks>

	public ProductIdentiferEnabledCodeType? UPCEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates the maximum number of compatible applications allowed per item when adding or revising items with compatibilities provided at the most detailed granularity. For example, in Car and Truck Parts on the US site, the most granular application would include Year, Make, Model, Trim, and Engine.
    /// 						<br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>MaxGranularFitmentCount</code>.
    /// 					
    /// </remarks>

	public int? MaxGranularFitmentCount { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is for future use. It is currently returned as an empty field, but in the future, the string value in this field will indicate Parts Compatibility vehicle type (e.g. cars, motorcycles, boats).
    /// 						<br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>CompatibleVehicleType</code>.
    /// 					
    /// </remarks>

	public string CompatibleVehicleType { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates the Business Policies category group that may be used for Shipping profiles.
    /// 						<br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>ShippingProfileCategoryGroup</code>.
    /// 					
    /// </remarks>

	public ProfileCategoryGroupCodeType? ShippingProfileCategoryGroup { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates the Business Policies category group that may be used for Payment profiles.
    /// 						<br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>PaymentProfileCategoryGroup</code>.
    /// 					
    /// </remarks>

	public ProfileCategoryGroupCodeType? PaymentProfileCategoryGroup { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates the Business Policies category group that may be used for Return Policy profiles.
    /// 						<br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>ReturnPolicyProfileCategoryGroup</code>.
    /// 					
    /// </remarks>

	public ProfileCategoryGroupCodeType? ReturnPolicyProfileCategoryGroup { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is deprecated.
    /// 					
    /// </remarks>

	public bool? VINSupported { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is deprecated.
    /// 					
    /// </remarks>

	public bool? VRMSupported { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as <code>true</code> if the corresponding category supports the use of a seller-provided title for a motor vehicle listing on the US or Canada Motors marketplaces. A seller-provided title is a descriptive title, given by the seller, that appears below eBay's pre-filled listing title for the motor vehicle. Visually, the seller-provided title is similar to a subtitle on other types of eBay listings (non-vehicle). A seller-provided title can assist in helping buyers discover the vehicle.
    /// 					
    /// </remarks>

	public bool? SellerProvidedTitleSupported { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as <code>true</code> if the corresponding category supports the use of a deposit/down payment on a motor vehicle listing. In an <b>AddItem</b> call, the seller can configure a down payment for a motor vehicle listing using the <b>PaymentDetails</b> container.
    /// 					
    /// </remarks>

	public bool? DepositSupported { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					  Indicates if the Global Shipping Program (GSP) is supported for the category.
    /// 					  <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>GlobalShippingEnabled</code>.
    /// 					
    /// </remarks>

	public bool? GlobalShippingEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field indicates whether or not the category (specified in the <b>Category.CategoryID</b> field) supports Boats and Motorcycles Parts compatibility. If <code>true</code>, parts compatibility name-value pairs for boats and motorcycles can be added to an item listed in the specified category.
    /// 						<br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>AdditionalCompatibilityEnabled</code>.
    /// 					
    /// </remarks>

	public bool? AdditionalCompatibilityEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						A <code>true</code> value in this field indicates that items listed in the category (specified in the <b>Category.CategoryID</b> field) may be enabled with the 'Click and Collect' feature. With the 'Click and Collect' feature, a buyer can purchase certain items on an eBay site and collect them at a local store. Buyers are notified by eBay once their items are available. A <code>false</code> value in this field indicates that items listed in the category are not eligible for the 'Click and Collect' feature.
    /// 						<br/><br/>
    /// 						The 'Click and Collect' feature is only available to large merchants on the eBay UK (site ID - 3), eBay Australia (Site ID - 15), and eBay Germany (Site ID - 77) sites.
    /// 						<br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>PickupDropOffEnabled</code>.
    /// 						<br/>
    /// 						<br/>
    /// 						<span class="tablenote"><b>Note:</b> For Click and Collect eligible sellers, the Click and Collect feature can only be enabled at the account level, and then each of the seller's listings within an Click and Collect enabled category will be automatically evaluated for Click and Collect eligibility.
    /// 						</span>
    /// 					
    /// </remarks>

	public bool? PickupDropOffEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						A <code>true</code> value in this field indicates that digital gift cards (eBay gift cards or third-party gift cards) can be listed in the category specified in the <b>Category.CategoryID</b> field. A <code>false</code> value in this field indicates that digital gift cards can not be listed in the specified category.
    /// 						<br/><br/>
    /// 						Digital gift cards are currently only supported on the US site. There are some restrictions when it comes to selling gift cards, including the following:
    /// 						<ul>
    /// 						<li>Each seller can only have one gift card listing at any given time </li>
    /// 						<li>The maximum dollar value of the gift card may not exceed 500.00</li>
    /// 						<li>Prepaid credit cards from American Express, Discover, MasterCard, or Visa are not allowed</li>
    ///             </ul>
    /// 						For more information on eBay's Gift Card policy, see the <a href="
    ///             http://pages.ebay.com/help/policies/gift.html" target="_blank">Gift cards policy Help page</a>.
    ///             <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>DigitalGoodDeliveryEnabled</code>.
    /// 					
    /// </remarks>

	public bool? DigitalGoodDeliveryEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as <code>true</code> if the category supports the use of an eBay Product ID (e.g. ePID) in an Add/Revise/Relist API call to identify which motorcycles and/or scooters are compatible with a motor vehicle part or accessory. ePIDs can only be used to identify motorcycles and scooters on the Germany and UK sites.
    /// 						<br/><br/>
    /// 						For more information on using an ePID to identify a compatible motorcycle or scooter through an Add/Revise/Relist API call on the Germany or UK site, see the documentation for the <a href="
    ///             https://developer.ebay.com/Devzone/XML/docs/Reference/eBay/AddItem.html#Request.Item.ItemCompatibilityList.Compatibility.NameValueList">Compatibility.NameValueList</a> container.
    ///              <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>EpidSupported</code>.
    /// 					
    /// </remarks>

	public bool? EpidSupported { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as <code>true</code> if the category supports the use of a K Type vehicle number in an Add/Revise/Relist API call to identify which cars and/or trucks are compatible with a motor vehicle part or accessory. K type vehicle numbers can only be used to identify cars and trucks on the Germany site.
    /// 						<br/><br/>
    /// 						For more information on using a K Type vehicle number to identify a compatible car or truck through an Add/Revise/Relist API call on the Germany site, see the documentation for the <a href="
    ///             https://developer.ebay.com/Devzone/XML/docs/Reference/eBay/AddItem.html#Request.Item.ItemCompatibilityList.Compatibility.NameValueList">Compatibility.NameValueList</a> container.
    ///              <br/><br/>
    /// 						Only returned when this value (or this category's setting) overrides the value inherited from the category's parent or the site default. Will not be returned if one or more <a href="types/FeatureIDCodeType.html">FeatureID</a> values are used in the call request, and one of those values does not include <code>KTypeSupported</code>.
    /// 					
    /// </remarks>

	public bool? KTypeSupported { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             The values returned in this field indicate whether or not the seller accepts domestic returns for items listed in the associated marketplace and category.  <br><br>While most categories return the <b>ReturnsAccepted</b> flag (indicating the category supports returns), some categories will also return the <b>ReturnsNotAccepted</b> flag to indicate the seller can choose to not accept returns for an item listed in that category.  <br><br>The values returned in this field are pertinent only if <b>ReturnPolicyEnabled</b> in GetCategoryFeatures is set to <code>true</code> for the associated category, which indicates that items listed in the category must include a return policy. Here, it's worth noting that not accepting returns is a return policy. The values returned in this field are valid in AddItem and its related family of calls, and in the return policies you configure for use with the Account API.
    ///             <br/><br/>
    /// 						<span class="tablenote"><b>Note:</b> Sellers have the option of creating a separate international return policy for items that are shipped to international customers. If a seller does not add a separate international return policy, the settings in the domestic return policy will be used instead. For the international equivalent of this field, see the <b>InternationalReturnsAcceptedValues</b> field.</span>
    /// 					
    /// </remarks>

	public DomesticReturnsAcceptedCodeType DomesticReturnsAcceptedValues { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             The values returned in this field indicate whether or not the seller can offer international returns.  <br><br>The values returned in this field are pertinent only if <b>ReturnPolicyEnabled</b> in GetCategoryFeatures is set to <code>true</code> for the associated category, which indicates that items listed in the category must include a return policy. The values returned in this field are valid in AddItem and its related family of calls, and in the return policies you configure for use with the Account API.
    ///             <br/><br/>
    /// 						<span class="tablenote"><b>Note:</b> Sellers have the option of creating a separate international return policy for items that are shipped to international customers. If a seller does not add a separate international return policy, the settings in the domestic return policy will be used instead. </span>
    /// 					
    /// </remarks>

	public InternationalReturnsAcceptedCodeType InternationalReturnsAcceptedValues { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             The values returned in this field indicate the return duration options that are available for domestic returns for items listed in the associated marketplace and category.  <br><br>The values returned in this field are pertinent only if <b>ReturnPolicyEnabled</b> in GetCategoryFeatures is set to <code>true</code> for the associated category, which indicates that items listed in the category must include a return policy. The values returned in this field are valid in AddItem and its related family of calls, and in the return policies you configure for use with the Account API.
    ///             <br/><br/>
    /// 						<span class="tablenote"><b>Note:</b> Sellers have the option of creating a separate international return policy for items that are shipped to international customers. If a seller does not add a separate international return policy, the settings in the domestic return policy will be used instead. For the international equivalent of this field, see the <b>InternationalReturnsDurationValues</b> field.</span>
    /// 					
    /// </remarks>

	public DomesticReturnsDurationCodeType DomesticReturnsDurationValues { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             The values returned in this field indicate the return duration options that are available for international returns for items listed in the associated marketplace and category.  <br><br>The values returned in this field are pertinent only if <b>ReturnPolicyEnabled</b> in GetCategoryFeatures is set to <code>true</code> for the associated category, which indicates that items listed in the category must include a return policy. The values returned in this field are valid in AddItem and its related family of calls, and in the return policies you configure for use with the Account API.
    ///             <br/><br/>
    /// 						<span class="tablenote"><b>Note:</b> Sellers have the option of creating a separate international return policy for items that are shipped to international customers. If a seller does not add a separate international return policy, the settings in the domestic return policy will be used instead.</span>
    /// 					
    /// </remarks>

	public InternationalReturnsDurationCodeType InternationalReturnsDurationValues { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             The values returned in this field indicate the available options for who pays the return shipping for domestic returns. Possible values are <code>BUYER</code> and <code>SELLER</code>. <br><br>The values returned in this field are pertinent only if <b>ReturnPolicyEnabled</b> in GetCategoryFeatures is set to <code>true</code> for the associated category, which indicates that items listed in the category must include a return policy. The values returned in this field are valid in AddItem and its related family of calls, and in the return policies you configure for use with the Account API.
    ///             <br/><br/>
    /// 						<span class="tablenote"><b>Note:</b> Sellers have the option of creating a separate international return policy for items that are shipped to international customers. If a seller does not add a separate international return policy, the settings in the domestic return policy will be used instead. For the international equivalent of this field, see the <b>InternationalReturnsShipmentPayeeValues</b> field.</span>
    /// 					
    /// </remarks>

	public DomesticReturnsShipmentPayeeCodeType DomesticReturnsShipmentPayeeValues { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             The values returned in this field indicate the available options for who pays the return shipping for international returns. Possible values are <code>BUYER</code> and <code>SELLER</code>. <br><br>The values returned in this field are pertinent only if <b>ReturnPolicyEnabled</b> in GetCategoryFeatures is set to <code>true</code> for the associated category, which indicates that items listed in the category must include a return policy. The values returned in this field are valid in AddItem and its related family of calls, and in the return policies you configure for use with the Account API.
    ///             <br/><br/>
    /// 						<span class="tablenote"><b>Note:</b> Sellers have the option of creating a separate international return policy for items that are shipped to international customers. If a seller does not add a separate international return policy, the settings in the domestic return policy will be used instead.</span>
    /// 					
    /// </remarks>

	public InternationalReturnsShipmentPayeeCodeType InternationalReturnsShipmentPayeeValues { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             On the EBAY_US marketplace only, sellers can offer item replacement in addition to offering money back returns. This flag defines the availability of such options for the given US marketplace category. Sellers can offer item replacements only if returns are enabled (<b>returnPolicyEnabled</b> is set to <code>true</code>) for the item. You can specify item replacement in the AddItem family of calls and in the return policy settings of the Account API.
    ///             <br/><br/>
    /// 						<span class="tablenote"><b>Note:</b> Sellers have the option of creating a separate international return policy for items that are shipped to international customers. If a seller does not add a separate international return policy, the settings in the domestic return policy will be used instead. For the international equivalent of this field, see the <b>InternationalRefundMethodValues</b> field.</span>
    /// 					
    /// </remarks>

	public DomesticRefundMethodCodeType DomesticRefundMethodValues { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             In US, sellers can offer an item replacement for returns, in addition to offering money back returns. The values returned in this field indicate the availability of such options for the given marketplace and category.  <br><br>The values returned in this field are pertinent only if <b>ReturnPolicyEnabled</b> in GetCategoryFeatures is set to <code>true</code> for the associated category, which indicates that items listed in the category must include a return policy. The values returned in this field are valid in AddItem and its related family of calls, and in the return policies you configure for use with the Account API.
    ///             <br/><br/>
    /// 						<span class="tablenote"><b>Note:</b> Sellers have the option of creating a separate international return policy for items that are shipped to international customers. If a seller does not add a separate international return policy, the settings in the domestic return policy will be used instead. </span>
    /// 					
    /// </remarks>

	public InternationalRefundMethodCodeType InternationalRefundMethodValues { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						In some EU countries, sellers are legally required to describe the return policy they offer. The value returned by this field indicates if sellers can provide such a description within the given marketplace and category.  <br><br>The values returned in this field are pertinent only if <b>ReturnPolicyEnabled</b> in GetCategoryFeatures is set to <code>true</code> for the associated category, which indicates that items listed in the category must include a return policy. 
    /// 					
    /// </remarks>

	public bool? ReturnPolicyDescriptionEnabled { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 			 Type defining the <b>CategoryGroup</b> container, which defines the category group to which the corresponding Business Policies profile will be applied, and a flag that indicates whether or not that Business Policies profile is the default for that category group.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class CategoryGroupType {

#region 属性
    /// <summary>
    /// GetUserPreferencesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					 Defines the name of the category group tied to a Business Policies profile. Valid values are
    /// 					 <code>ALL</code> (referring to all non-motor vehicle category groups) or <code>MOTORS_VEHICLE</code> (referring to
    /// 					 only motor vehicle category groups).
    /// 						<br><br>
    /// 						The <b>CategoryGroup</b> container is only returned in <b>GetUserPreferences</b>
    /// 						if the <b>ShowSellerProfilePreferences</b> field is included in the request and set to <code>true</code>.
    /// 					
    /// </remarks>

	public string Name { get; set; }
    /// <summary>
    /// GetUserPreferencesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This boolean value indicates whether the corresponding Business Policies profile is the default for the category group.
    /// 						<br><br>
    /// 						The <b>CategoryGroup</b> container is only returned in <b>GetUserPreferences</b>
    /// 						if the <b>ShowSellerProfilePreferences</b> field is included in the request and set to <code>true</code>.
    /// 					
    /// </remarks>

	public bool? IsDefault { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is used by the <b>CategoryMapping</b> fields that are returned in the <b>GetCategoryMappings</b> response to indicate any eBay Category IDs that have changed recently.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class CategoryMappingType {

#region 属性
    /// <summary>
    /// GetCategoryMappingsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					This attribute value is the unique identifier of an eBay category that has been recently updated to a new Category ID, which is specified in the <b>id</b> attribute. The user will want to use the Category ID value in the <b>id</b> attribute the next time they run a call that requires a Category ID. Note that Category IDs are unique to each eBay site. This attribute is always returned with the <b>CategoryMapping</b> field.
    /// 				
    /// </remarks>

	public string oldID { get; set; }
    /// <summary>
    /// GetCategoryMappingsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					This attribute value is the unique identifier of the currently active eBay category. The user will want to use this Category ID value the next time they run a call that requires a Category ID. Note that Category IDs are unique to each eBay site. This attribute is always returned with the <b>CategoryMapping</b> field.
    /// 					<br><br>
    /// 					<span class="tablenote"><b>Note:</b>
    /// 					Note that more than one <b>OldID</b> values may map into the same new category (same <b>id</b> value) since sometimes multiple eBay categories may be consolidated into a new, expanded category.
    /// 					</span>
    /// 				
    /// </remarks>

	public string id { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
///         Container for data on one listing category. Many of the <b>CategoryType</b> fields are only returned in the <b>GetCategories</b> response. Add/Revise/Relist calls only use the <b>CategoryID</b> field to specify which eBay category in which to list the item.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class CategoryType {

#region 属性
    /// <summary>
    /// GetCategoriesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						If this field is returned as <code>true</code>, the corresponding category supports Best Offers. If this field is not present, the category does not support Best Offers. This field is not returned when <code>false</code>.
    /// 					
    /// </remarks>

	public bool? BestOfferEnabled { get; set; }
    /// <summary>
    /// GetCategoriesDetailLevel: ReturnAllConditionally
    /// Require immediate paymenthttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/payment-immediate.html
    /// </summary>
    /// <remarks>
    /// 
    /// 						If this field is returned as <code>true</code>, the corresponding category supports immediate payment for listings. The immediate payment feature is applicable to fixed-price listings, to auction listings with the Buy It Now option enabled, and for a motor vehicle listing that requires an initial deposit. If the immediate payment feature is enabled for a listing, the buyer must pay immediately after clicking the 'Buy it Now' button.  This field is only returned when <code>true</code>.
    /// 					
    /// </remarks>

	public bool? AutoPayEnabled { get; set; }
    /// <summary>
    /// GetCategoriesDetailLevel: ReturnAllConditionally
    /// Value-added tax (VAT)https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/taxes-vat.html
    /// </summary>
    /// <remarks>
    /// 
    /// 						If this field is returned as <code>true</code>, the corresponding category supports business-to-business (B2B) VAT
    /// 						listings. If this field is not present, the category does not B2B VAT listings. This field is not returned when <code>false</code>. This feature is applicable to the eBay Germany (DE), Austria (AT),
    /// 						and Switzerland (CH) sites only.
    /// 					
    /// </remarks>

	public bool? B2BVATEnabled { get; set; }
    /// <summary>
    /// 10
    /// AddItemAddItemsVerifyAddItemAddFixedPriceItemVerifyAddFixedPriceItemRelistFixedPriceItemReviseFixedPriceItemRelistItemReviseItemVerifyRelistItemPrimaryCategoryConditionally
    /// AddItemAddItemsVerifyAddItemAddFixedPriceItemVerifyAddFixedPriceItemRelistFixedPriceItemReviseFixedPriceItemRelistItemReviseItemVerifyRelistItemSecondaryCategoryConditionally
    /// GetBidderListPrimaryCategoryAlways
    /// GetBidderListConditionallyFreeAddedCategorySecondaryCategory
    /// GetCategoriesDetailLevel: ReturnAllAlways
    /// GetItemAlwaysPrimaryCategoryDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// GetItemConditionallyFreeAddedCategorySecondaryCategoryDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: ReturnAllAlways
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: ReturnAllConditionally
    /// GetSellerListConditionallyFreeAddedCategorySecondaryCategoryDetailLevel: ItemReturnDescription, ReturnAll
    /// GetSellerListConditionallyPrimaryCategorySecondaryCategoryDetailLevel: ItemReturnDescription, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						This string value is the unique identifier of an eBay category.
    /// 						In <b>GetItem</b> and related calls, see the <b>CategoryName</b> field for the text name of
    /// 						the category. The parent category of this eBay category is only shown in  <b>GetCategories</b>.
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> 
    /// 							When listing in categoryID 173651 (Auto Performance Tuning Devices & Software), use of catalog products is required. For more information, see <a href="../../../../../api-docs/user-guides/static/trading-user-guide/tuning-devices-and-software.html" target="_blank">Tuning devices and software</a>.
    /// 						</span>
    /// 						In an Add call, the <b>PrimaryCategory.CategoryID</b> is conditionally required unless the seller successfully uses the <b>ProductListingDetails</b> container to find an eBay catalog product match. When the seller successfully uses an eBay catalog product to create a listing, the listing title, listing description, item specifics, listing category, and stock photo defined in the catalog product is used to create the listing.
    /// 						<br>
    /// 						<br>
    /// 						In an Add/Revise/Relist call, the <b>SecondaryCategory.CategoryID</b> is conditionally required if a Secondary Category is used. Using a Secondary Category can incur a listing fee.
    /// 						<br><br>
    /// 						<b>For ReviseItem only:</b> Previously, removing the listing from a secondary category was only possible within 12 hours of the listing's scheduled end time when an auction listing had no active bids or a multiple-quantity, fixed-price listing had no items sold, but this restriction no longer exists. Now, the secondary category can be dropped for any active listing at any time, regardless of whether an auction listing has bids or a fixed-price listing has sales. To drop a secondary category, the seller passes in a value of <code>0</code> in the <b>SecondaryCategory.CategoryID</b> field.
    /// 						<br>
    /// 					
    /// </remarks>

	public string CategoryID { get; set; }
    /// <summary>
    /// GetCategoriesDetailLevel: ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						This integer value indicates the level where the category fits in the eBay site's category hierarchy. For example, if this field has a value of <code>2</code>, then the category is two levels below the root category in the eBay site's category hierarchy.
    /// 					
    /// </remarks>

	public int? CategoryLevel { get; set; }
    /// <summary>
    /// 50GetCategoriesDetailLevel: ReturnAllAlways
    /// GetBidderListAlwaysPrimaryCategory
    /// GetBidderListConditionallyFreeAddedCategorySecondaryCategory
    /// GetItemAlwaysPrimaryCategoryDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// GetItemConditionallyFreeAddedCategorySecondaryCategoryDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This string value is the display name of the eBay primary category, as it would appear on the eBay site. In <b>GetItem</b>, this will be a fully-qualified category name (e.g., Collectibles:Decorative Collectibles:Hummel, Goebel).
    /// 					
    /// </remarks>

	public string CategoryName { get; set; }
    /// <summary>
    /// 10
    /// GetCategoriesDetailLevel: ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						This string value is the Category ID of the primary category's (indicated in the <b>CategoryID</b> field) parent category. The number of <b>CategoryParentID</b> values that are returned will depend on the <b>LevelLimit</b> value that is set (in <b>GetCategories</b>) and on how far up the primary category is in the eBay category hierarchy. <b>CategoryParentID</b> values are
    /// 						returned in correct sequence, starting from the root category
    /// 						and ending with the category that is the direct parent of
    /// 						the primary category specified in <b>CategoryID</b>. The <b>CategoryID</b> and <b>CategoryParentID</b> values will be the same if the <b>LevelLimit</b> value is set to <code>1</code>.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("CategoryParentID")]

	public System.Collections.Generic.List<string> CategoryParentID { get; set; }
    /// <summary>
    /// GetCategoriesDetailLevel: ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						If this field is returned as <code>true</code>, the corresponding category is no longer a valid eBay category on the site, and items may not be listed in this category. This field is not returned when <code>false</code>.
    /// 					
    /// </remarks>

	public bool? Expired { get; set; }
    /// <summary>
    /// GetCategoriesDetailLevel: ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						If this field is returned as <code>true</code>, the corresponding category is an eBay leaf category, a category in which items may be listed. This field is not returned when <code>false</code>.
    /// 					
    /// </remarks>

	public bool? LeafCategory { get; set; }
    /// <summary>
    /// GetCategoriesDetailLevel: ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						If this field is returned as <code>true</code>, the corresponding category is an eBay virtual category, a category in which items may not be listed. This field is not returned when <code>false</code>.
    /// 					
    /// </remarks>

	public bool? Virtual { get; set; }
    /// <remarks>
    /// 
    /// 						This field is deprecated.
    /// 					
    /// </remarks>

	public int? NumOfItems { get; set; }
    /// <summary>
    /// GetCategoriesDetailLevel: ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						If this field is returned as <code>true</code>, the corresponding category is an exception to the eBay site's standard Reserve Price policy on auction listings. For example, if the site's default setting is to allow setting a Reserve Price, but <b>ORPA</b> is returned as <code>true</code>, this particular category does not support setting a Reserve Price. Or, if the site's default setting is not to allow setting a Reserve Price, but <b>ORPA</b> is returned as <code>true</code>, this particular category is the exception to that rule and does support setting a Reserve Price. If <b>ORPA</b> is <code>true</code> for the corresponding category, you can generally assume that the category's subcategories inherit the same setting. 'ORPA' is an acronym for 'Override Reserve Price Allowed'.
    /// 						<br>
    /// 						<br>
    /// 						This field is not returned when <code>false</code>.
    /// 					
    /// </remarks>

	public bool? ORPA { get; set; }
    /// <summary>
    /// GetCategoriesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						If this field is returned as <code>true</code>, the corresponding category is an exception to the eBay site's standard Reduce Reserve Price (on active auction listing) policy. For example, if the site's default setting is to allow reducing a Reserve Price for the active auction listing, but <b>ORRA</b> is returned as <code>true</code>, this particular category does not support reducing a Reserve Price. Or, if the site's default setting is not to allow reducting a Reserve Price, but <b>ORRA</b> is returned as <code>true</code>, this particular category is the exception to that rule and does support reducing a Reserve Price. If <b>ORRA</b> is <code>true</code> for the corresponding category, you can generally assume that the category's subcategories inherit the same setting. 'ORRA' is an acronym for 'Override Reduce Reserve Allowed'.
    /// 						<br>
    /// 						<br>
    /// 						This field is not returned when <code>false</code>.
    /// 					
    /// </remarks>

	public bool? ORRA { get; set; }
    /// <summary>
    /// GetCategoriesDetailLevel: ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						If this field is returned as <code>true</code>, the corresponding category does not support lot listings. A lot listing is a listing that features multiple related items that must be purchased by one buyer in one transaction. 'LSD' is an acronym for 'Lot Size Disabled'. 'Lot Size' refers to the  <b>LotSize</b> field in the Add/Revise/Relisting calls that is conditionally required if the seller is creating a lot listing. The <b>LSD</b> field is not returned when <code>false</code>.
    /// 					
    /// </remarks>

	public bool? LSD { get; set; }
    /// <remarks>
    /// 
    /// 						This field is deprecated.
    /// 					
    /// </remarks>

	public string Keywords { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>CharityAffiliationDetail</b> container that is returned in the <b>GetUser</b> response. The <b>CharityAffiliationDetail</b> container consists of information on a nonprofit charity organization associated with the seller's account. A separate <b>CharityAffiliationDetail</b> container is returned for each nonprofit charity organization associated with the seller's account.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class CharityAffiliationDetailType {

#region 属性
    /// <summary>
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The eBay unique identifier of the nonprofit organization associated with the seller's account. Once a nonprofit organization comes aboard as an eBay for Charity organization, eBay creates and assigns this ID to the nonprofit organization.
    /// 					
    /// </remarks>

	public string CharityID { get; set; }
    /// <summary>
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The enumeration value returned here indicates whether the eBay user is just selling on the behalf of the nonprofit organization, or if the eBay user is directly affiliated with/representing the nonprofit organization, or the eBay user has been added as a Direct Seller by the nonprofit organization.
    /// 					
    /// </remarks>

	public CharityAffiliationTypeCodeType? AffiliationType { get; set; }
    /// <summary>
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This timestamp indicates when the eBay user last contributed to the nonprofit organization through the donated proceeds of an eBay sale.
    /// 					
    /// </remarks>

	public System.DateTime? LastUsedTime { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is used to provide details about a nonprofit organization that will benefit from each sale generated from an eBay listing.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class CharityType {

#region 属性
    /// <summary>
    /// 150
    /// GetBidderListConditionally
    /// GetItemGetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The full name of the nonprofit organization.
    /// 						<br>
    /// 						<br>
    /// 					
    /// </remarks>

	public string CharityName { get; set; }
    /// <summary>
    /// AddItemAddItemsRelistItemVerifyAddItemAddFixedPriceItemVerifyAddFixedPriceItemRelistFixedPriceItemRelistFixedPriceItemVerifyRelistItemReviseItemReviseFixedPriceItemConditionally
    /// GetBidderListConditionally
    /// GetItemGetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The percentage of the purchase price that the
    /// 						seller chooses to donate to the selected nonprofit
    /// 						organization. This percentage is displayed in the eBay for Charity listing.
    /// 						<b>Possible values</b>: 10.0 to 100.0.
    /// 						<b></b>
    /// 							<ul>
    /// 							  <li>Percentages must increment by 5.0. </li>
    /// 							  <li>Minimum donation
    /// 						percentages may be required for eBay for Charity listings, see
    /// 						<a href="http://pages.ebay.com/help/sell/selling-nonprofit.html">
    /// 						Selling to benefit nonprofit organizations</a> for
    /// 						details. </li>
    /// 						  </ul>
    /// 						  The <b>DonationPercent</b> field is required in an Add/Revise/Relist call if the seller will be donating a percentage of the sale proceeds for each sale generated by the listing.
    /// 					
    /// </remarks>

	public float? DonationPercent { get; set; }
    /// <summary>
    /// AddItemAddItemsRelistItemVerifyAddItemAddFixedPriceItemVerifyAddFixedPriceItemRelistFixedPriceItemRelistFixedPriceItemVerifyRelistItemReviseItemReviseFixedPriceItemConditionally
    /// GetBidderListConditionally
    /// GetItemGetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The unique identifier that eBay creates and assigns to each nonprofit organization.
    /// 						<br>
    /// 						<br>
    /// 						The field is conditionally required in an Add/Revise/Relist call if the seller will be donating a percentage of the sale proceeds to this organization for each sale generated by the listing.
    /// 					
    /// </remarks>

	public string CharityID { get; set; }
    /// <summary>
    /// 511
    /// GetBidderListConditionally
    /// GetItemGetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The stated mission of the nonprofit charity organization. This mission statement is displayed in the eBay for Charity section of the View Item page.
    /// 						<br>
    /// 						<br>
    /// 					
    /// </remarks>

	public string Mission { get; set; }
    /// <summary>
    /// GetItemGetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetBidderListConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The full URL to the nonprofit organization's logo image file. This logo image file is the image that is displayed in all eBay listings that benefit that charity. This field is returned as long as it is defined for the nonprofit organization.
    /// 					
    /// </remarks>

	public string LogoURL { get; set; }
    /// <summary>
    /// GetBidderListConditionally
    /// GetItemGetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This enumeration value indicates whether or not the nonprofit organization is a valid eBay for Charity organization, and is able to receive proceeds from eBay sales.
    /// 					
    /// </remarks>

	public CharityStatusCodeType? Status { get; set; }
    /// <summary>
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						If this field is returned as <code>true</code>, a percentage of order line item's purchase price will be donated to a nonprofit organization.
    /// 					
    /// </remarks>

	public bool? CharityListing { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>CheckoutStatus</b> container that is returned in
/// 				<b>GetOrders</b> to indicate the current checkout status of the order.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class CheckoutStatusType {

#region 属性
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllAlways
    /// OrderReportAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates the status of the buyer's payment for an order. If the payment was successfuly processed, a value of <code>NoPaymentFailure</code> will be returned.
    /// 					
    /// </remarks>

	public PaymentStatusCodeType? eBayPaymentStatus { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllAlways
    /// OrderReportAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						This timestamp indicates when the order was last modified.
    /// 					
    /// </remarks>

	public System.DateTime? LastModifiedTime { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllAlways
    /// OrderReportAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						The payment method that the buyer selected to pay for the order.
    /// 						<br><br>
    /// 						<span class="tablenote"><b>Note: </b>
    /// 							Sellers no longer have to specify any electronic payment methods at listing time, but this field is still returned. The value returned in this field will generally be <code>CreditCard</code>, unless an eBay gift card was used by the buyer to pay a partial or full balance of the order. If this is the case, the value returned in this field will be <code>CCAccepted</code>. Either of these two values will be returned, but neither accurately reflects the actual payment method that the buyer used. If the order was paid for off of eBay's platform using an 'offline' payment method such as 'CashOnPickup' or 'MOCC' (money order or cashier's check), and the seller marked the order as paid, either of those values may get returned here.
    /// 						</span>
    /// 					
    /// </remarks>

	public BuyerPaymentMethodCodeType? PaymentMethod { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllAlways
    /// OrderReportAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates the status of the order. This value is subject to change based on the status of the checkout flow. Generally speaking, the <b>Status</b> field reads <code>Incomplete</code> when payment has yet to be initiated, <code>Pending</code> when payment has been initiated but is in process, and <code>Complete</code> when the payment process has completed.
    /// 						<br><br>
    /// 						<b>Note</b>: If the <b>PaymentMethod</b> is <code>CashOnPickup</code>, the <b>Status</b> value
    /// 						will read <code>Complete</code> right at checkout, even though the seller may not have been
    /// 						officially paid yet, and the <b>eBayPaymentStatus</b> field will read <code>NoPaymentFailure</code>.
    /// 						The <b>Status</b> value will remain as <code>Complete</code> even if the seller changes the checkout status to Pending. However, the
    /// 						<b>eBayPaymentStatus</b> value in <b>GetOrders</b> will change from <code>NoPaymentFailure</code> to
    /// 						<code>PaymentInProcess</code>.
    /// 					
    /// </remarks>

	public CompleteStatusCodeType? Status { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllAlways
    /// OrderReportAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is no longer applicable as eBay sellers can no longer use iMCC gateway accounts to handle buyer payments.
    /// 					
    /// </remarks>

	public bool? IntegratedMerchantCreditCardEnabled { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The enumeration value in this field indicates which payment method was used by the German buyer who was offered the 'Pay Upon Invoice' option. This field will only be returned if a German buyer was offered the 'Pay Upon Invoice' option. Otherwise, the buyer's selected payment method is returned in the <b>PaymentMethod</b> field.
    /// 					
    /// </remarks>

	public BuyerPaymentInstrumentCodeType? PaymentInstrument { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>ClassifiedAdAutoAcceptEnabled</b> field that is 
/// 				returned under the <b>FeatureDefinitions</b> container of the 
/// 				<b>GetCategoryFeatures</b> response (as long as 
/// 				'ClassifiedAdAutoAcceptEnabled' or 'ClassifiedAdAutoDeclineEnabled' is included as a <b>FeatureID</b> value in 
/// 				the call request or no <b>FeatureID</b> values are passed into the call 
/// 				request). This field is returned as an
/// 				empty element (a boolean value is not returned) if one or more eBay API-enabled sites 
/// 				support the Classified Ad Auto Accept feature. 
/// 				<br/><br/>
/// 				To verify if a specific eBay site supports the Classified Ad Auto Accept feature (for most
/// 				categories), look for a 'true' value in the 
/// 				<b>SiteDefaults.ClassifiedAdAutoAcceptEnabled</b> field.
/// 				<br/><br/>
/// 				To verify if a specific category on a specific eBay site supports the Classified Ad Auto Accept feature, pass in a <b>CategoryID</b> value in the request, and then 
/// 				look for a 'true' value in the <b>ClassifiedAdAutoAcceptEnabled</b> field 
/// 				of the corresponding Category node (match up the <b>CategoryID</b> values 
/// 				if more than one Category IDs were passed in the request).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ClassifiedAdAutoAcceptEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>ClassifiedAdAutoDeclineEnabled</b> field that is 
/// 				returned under the <b>FeatureDefinitions</b> container of the 
/// 				<b>GetCategoryFeatures</b> response (as long as 
/// 				'ClassifiedAdAutoDeclineEnabled' or 'ClassifiedAdAutoAcceptEnabled' is included as a <b>FeatureID</b> value in 
/// 				the call request or no <b>FeatureID</b> values are passed into the call 
/// 				request). This field is returned as an
/// 				empty element (a boolean value is not returned) if one or more eBay API-enabled sites 
/// 				support the Classified Ad Auto Decline feature. 
/// 				<br/><br/>
/// 				To verify if a specific eBay site supports the Classified Ad Auto Decline feature (for most
/// 				categories), look for a 'true' value in the 
/// 				<b>SiteDefaults.ClassifiedAdAutoDeclineEnabled</b> field.
/// 				<br/><br/>
/// 				To verify if a specific category on a specific eBay site supports the Classified Ad Auto Decline feature, pass in a <b>CategoryID</b> value in the request, and then 
/// 				look for a 'true' value in the <b>ClassifiedAdAutoDeclineEnabled</b> field 
/// 				of the corresponding Category node (match up the <b>CategoryID</b> values 
/// 				if more than one Category IDs were passed in the request).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ClassifiedAdAutoDeclineEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>ClassifiedAdBestOfferEnabled</b> field that is 
/// 				returned under the <b>FeatureDefinitions</b> container of the 
/// 				<b>GetCategoryFeatures</b> response (as long as 
/// 				'ClassifiedAdBestOfferEnabled' is included as a <b>FeatureID</b> value in 
/// 				the call request or no <b>FeatureID</b> values are passed into the call 
/// 				request). This field is returned as an
/// 				empty element (a boolean value is not returned) if one or more eBay API-enabled sites 
/// 				support the Classified Ad Best Offer feature. 
/// 				<br/><br/>
/// 				To verify if a specific eBay site supports the Classified Ad Best Offer feature (for most
/// 				categories), look for a 'true' value in the 
/// 				<b>SiteDefaults.ClassifiedAdBestOfferEnabled</b> field.
/// 				<br/><br/>
/// 				To verify if a specific category on a specific eBay site supports the Classified Ad Best Offer feature, pass in a <b>CategoryID</b> value in the request, and then 
/// 				look for a 'true' value in the <b>ClassifiedAdBestOfferEnabled</b> field 
/// 				of the corresponding Category node (match up the <b>CategoryID</b> values 
/// 				if more than one Category IDs were passed in the request).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ClassifiedAdBestOfferEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Indicates whether the category supports the use of a company name 
/// 				when contacting the seller for Classified Ad format listings.
/// 				Added for the For Sale By Owner format.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ClassifiedAdCompanyNameEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Indicates whether the category supports the use of an address when 
/// 				contacting the seller for Classified Ad format listings.
/// 				Added for the For Sale By Owner format.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ClassifiedAdContactByAddressEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Indicates if Email can be a contact method for the category
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ClassifiedAdContactByEmailEnabledDefintionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Indicates whether the telephone can be a contact method for the category.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ClassifiedAdContactByPhoneEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>ClassifiedAdCounterOfferEnabled</b> field that is 
/// 				returned under the <b>FeatureDefinitions</b> container of the 
/// 				<b>GetCategoryFeatures</b> response (as long as 
/// 				'ClassifiedAdCounterOfferEnabled' is included as a <b>FeatureID</b> value in 
/// 				the call request or no <b>FeatureID</b> values are passed into the call 
/// 				request). This field is returned as an
/// 				empty element (a boolean value is not returned) if one or more eBay API-enabled sites 
/// 				support the Classified Ad Best Offer Counter Offer feature. 
/// 				<br/><br/>
/// 				To verify if a specific eBay site supports the Classified Ad Best Offer Counter Offer feature (for most
/// 				categories), look for a 'true' value in the 
/// 				<b>SiteDefaults.ClassifiedAdCounterOfferEnabled</b> field.
/// 				<br/><br/>
/// 				To verify if a specific category on a specific eBay site supports the Classified Ad Best Offer Counter Offer feature, pass in a <b>CategoryID</b> value in the request, and then 
/// 				look for a 'true' value in the <b>ClassifiedAdCounterOfferEnabled</b> field 
/// 				of the corresponding Category node (match up the <b>CategoryID</b> values 
/// 				if more than one Category IDs were passed in the request).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ClassifiedAdCounterOfferEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Defines the pay-per-lead feature. If the field is present, the corresponding feature applies to the category. The field is returned as an empty element (i.e., a boolean value is not returned).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ClassifiedAdPayPerLeadEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Indicates whether Contact Seller is enabled Classified Ads.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ClassifiedAdPaymentMethodEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Indicates which phone option the category supports for contacting
/// 				the seller for Classified Ad format listings.
/// 				Added for the For Sale By Owner format.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ClassifiedAdPhoneCountDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				 Indicates whether shipping options are available for the category.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ClassifiedAdShippingMethodEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Indicates which address option the category supports for 
/// 				Classified Ad format listings.
/// 				Added for the For Sale By Owner format.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ClassifiedAdStreetCountDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
///  
///  			Defines the Combined Fixed Price Treatment feature. If the field is present, the corresponding feature applies to the category.
/// 			The field is returned as an empty element (i.e., a boolean value is not returned). 
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class CombinedFixedPriceTreatmentEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 			Type used to indicate if the seller supports <a href="https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/manage-fulfill-combine-invoices.html">Combined Invoice</a>
/// 			orders, and if so, defines whether the seller specifies any shipping discount before or after purchase.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class CombinedPaymentPreferencesType {

#region 属性
    /// <summary>
    /// GetUserPreferencesConditionally
    /// SetUserPreferencesNo
    /// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/manage-fulfill-combine-invoices.htmlCombined Invoice
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies whether or not a seller wants to allow buyers to combine single
    /// 						order line items into a Combined Invoice order. A Combined Invoice order can
    /// 						be created by the buyer or seller if multiple unpaid order line items exist
    /// 						between the same buyer and seller. Often, a Combined Invoice order can
    /// 						reduce shipping and handling expenses for the buyer and seller.
    /// 					
    /// </remarks>

	public CombinedPaymentOptionCodeType? CombinedPaymentOption { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Defines the vehicle type to which parts compatibility applies. If the field is
/// 				present, the corresponding feature applies to the site. The field is returned as an
/// 				empty element (e.g., a boolean value is not returned).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class CompatibleVehicleTypeDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type contains details like name, value, and additional information, that is provided by the seller about the specific condition of an item.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ConditionDescriptorType {

#region 属性
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemConditionally
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						A numeric ID is passed in this field. This numeric ID maps to the name of a condition descriptor. Condition descriptor name-value pairs provide more information about an item's condition in a structured way.<br /><br />To retrieve all condition descriptor numeric IDs for a category, use the <a href = "/api-docs/sell/metadata/resources/marketplace/methods/getItemConditionPolicies">getItemConditionPolicies</a> method of the <b>Metadata API</b>.<br /><br />In the case of trading cards, this field is used to provide condition descriptors for a card. For graded cards, the condition descriptors for <b>Grader</b> and <b>Grade</b> are required, while the condition descriptor for <b>Certification Number</b> is optional. For ungraded cards, only the <b>Card Condition</b> condition descriptor is required.
    /// 					
    /// </remarks>

	public string Name { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemConditionally
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						A numeric ID is passed in this field. This numeric ID maps to the value associated with a condition descriptor name. Condition descriptor name-value pairs provide more information about an item's condition in a structured way.<br /><br />To retrieve all condition descriptor numeric IDs for a category, use the <a href = "/api-docs/sell/metadata/resources/marketplace/methods/getItemConditionPolicies">getItemConditionPolicies</a> method of the <b>Metadata API</b>.<br /><br />In the case of trading cards, this field houses the information on the <b>Grader</b> and <b>Grade</b> descriptors of graded cards and the <b>Card Condition</b> descriptor for ungraded cards.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("Value")]

	public System.Collections.Generic.List<string> Value { get; set; }
    /// <summary>
    /// 30
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemConditionally
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Open text is passed in this field. This text provides additional information about a condition descriptor.<br><br>In the case of trading cards, this field houses the optional <b>Certification Number</b> condition descriptor for graded cards.
    /// 						<br />
    /// 					
    /// </remarks>

	public string AdditionalInfo { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type contains the data for condition descriptors associated with an item.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ConditionDescriptorsType {

#region 属性
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemConditionally
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 					
    /// 						This container is used by the seller to provide additional information about the condition of an item in a structured format. Condition descriptors are name-value attributes that can be either closed set or open text inputs.<br /><br />To retrieve all condition descriptor numeric IDs for a category, use the <a href = "/api-docs/sell/metadata/resources/marketplace/methods/getItemConditionPolicies">getItemConditionPolicies</a> method of the <b>Metadata API</b>.<br>
    /// 						<span class="tablenote"><b>Note: </b> The use of Condition Descriptors is currently only available for the following trading card categories (<b>CategoryID</b>):<br />
    /// 						<ul><li>Non-Sport Trading Card Singles (<code>183050</code>)</li>
    /// 						<li>CCG Individual Cards (<code>183454</code>)</li>
    /// 						<li>Sports Trading Card Singles (<code>261328</code>)</li></ul>
    /// 						</span>
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("ConditionDescriptor")]

	public System.Collections.Generic.List<ConditionDescriptorType> ConditionDescriptor { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>ConditionEnabled</b> field that is 
/// 				returned under the <b>FeatureDefinitions</b> container of the 
/// 				<b>GetCategoryFeatures</b> response (as long as 
/// 				'ConditionEnabled' is included as a <b>FeatureID</b> value in 
/// 				the call request or no <b>FeatureID</b> values are passed into the call 
/// 				request). This field is returned as an
/// 				empty element (a boolean value is not returned) if one or more eBay API-enabled sites 
/// 				support the use of Condition IDs to express the condition of an item. 
/// 				<br/><br/>
/// 				To verify if a specific eBay site supports Condition IDs (for most
/// 				categories), look for a 'Enabled' value in the 
/// 				<b>SiteDefaults.ConditionEnabled</b> field.
/// 				<br/><br/>
/// 				To verify if a specific category on a specific eBay site supports Condition IDs, pass in a <b>CategoryID</b> value in the request, and then 
/// 				look for an 'Enabled' or 'Required' value in the <b>ConditionEnabled</b> field 
/// 				of the corresponding Category node (match up the <b>CategoryID</b> values 
/// 				if more than one Category IDs were passed in the request).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ConditionEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>ConditionValues.Condition</b> and <b>SpecialFeatures.Condition</b> containers that are returned at the site default level and category level in the <b>GetCategoryFeatures</b> response if 'ConditionValues' is specified as a <b>FeatureID</b> value, or if no <b>FeatureID</b> values are specified. A <b>ConditionValues.Condition</b> container is returned for each supported item condition value for each eBay category returned in the response, and a <b>SpecialFeatures.Condition</b> container is returned for item condition values that a seller must be pre-qualified to use, such as the refurbished conditions.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ConditionType {

#region 属性
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The numeric identifier of the item condition (e.g., 1000). The numeric identifier is used in the <b>Item.ConditionID</b> field in Add/Revise/Relist calls to set the condition of an item.
    /// 					
    /// </remarks>

	public int? ID { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The human-readable label for the condition (e.g., "New").
    /// 						This value is typically localized for each site.
    /// 						The display name can vary by category.
    /// 						For example, condition ID 1000 could be called
    /// 						"New: with Tags" in one category and "Brand New" in another.
    /// 					
    /// </remarks>

	public string DisplayName { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Defines the Item Condition feature. If a field of this type is present,
/// 				the corresponding feature applies to the site. The field is returned as 
/// 				an empty element (e.g., a boolean value is not returned).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ConditionValuesDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Fields in this type provide condition values and display names.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ConditionValuesType {

#region 属性
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This repeatable container shows the display name and unique identifier of each item condition supported by the corresponding eBay category.
    /// 						<br>
    /// 						<br>
    /// 						<span class="tablenote"><strong>Note:</strong>
    /// 							 'Certified Refurbished', 'Excellent - Refurbished', 'Very Good - Refurbished', and 'Good - Refurbished' item conditions will not be returned in this container for categories in the eBay Refurbished Program, but instead will be returned in the <b>Category.SpecialFeatures</b> container if the corresponding category supports any of these Refurbished item conditions. To used any of these Refurbished item conditions, sellers must go through an <a href="https://pages.ebay.com/seller-center/listing-and-marketing/ebay-refurbished-program.html" target="_blank">application and qualification process</a>. The new item condition values appearing in the Category.SpecialFeatures container does not necessarily indicate that a seller is eligible to list with these item conditions. If the corresponding category supports it, 'Seller Refurbished' will still be returned in this container.
    /// 						</span>
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("Condition")]

	public System.Collections.Generic.List<ConditionType> Condition { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						URL to the eBay Web site's item condition help for the
    /// 						category. This may include policies about how to assess the
    /// 						condition of an item in the category. To reduce
    /// 						item-not-as-described cases, we recommend that
    /// 						you refer sellers (and buyers) to these help pages.
    /// 						These help pages may vary for some categories.<br>
    /// 						<br>
    /// 						The Sandbox might not return valid help URLs.
    /// 					
    /// </remarks>

	public string ConditionHelpURL { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 			Type defining the <b>ContactHoursDetails</b> container, which is used in Add/Revise/Relist calls to provide contact hours for the owner of a Classified Ad. The <b>ContactHoursDetails</b> container is only applicable to Classified Ad listings.
/// 		
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ContactHoursDetailsType {

#region 属性
    /// <summary>
    /// AddItemAddItemsRelistItemReviseItemVerifyAddItemVerifyRelistItemNo
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetSellerListDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					Indicates the local time zone of the values provided for Hours1From/Hours1To
    /// 					and Hours2From/Hours2To. If you specify a contact hours time range with
    /// 					Hours1From and Hours1To, you must provide a local time zone.
    /// 					To retrieve a complete list of the TimeZoneID values
    /// 					supported by eBay, call <b>GeteBayDetails</b> with <b>DetailName</b>
    /// 					set to <b>TimeZoneDetails</b>.
    /// 				
    /// </remarks>

	public string TimeZoneID { get; set; }
    /// <summary>
    /// AddItemAddItemsRelistItemReviseItemVerifyAddItemVerifyRelistItemNo
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetSellerListDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					Indicates the range of days for which the primary contact hours
    /// 					specified by Hours1AnyTime or Hours1From and Hours1To apply.
    /// 					If a value of None is provided for this field, the values provided for
    /// 					Hours1AnyTime, Hours1From, Hours1To are ignored.
    /// 				
    /// </remarks>

	public DaysCodeType? Hours1Days { get; set; }
    /// <summary>
    /// AddItemAddItemsRelistItemReviseItemVerifyAddItemVerifyRelistItemNo
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetSellerListDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					Indicates whether or not a user is available to be contacted 24 hours a day
    /// 					during the range of days specified using the Hours1Days element.
    /// 					True indicates the user is available 24 hours a day, false indicates otherwise.
    /// 					In the case of this field being true, all values provided for Hours1From and
    /// 					Hours1To will be ignored.  In the case of this field being false,
    /// 					the values provided Hours1From and Hours1To will be considered.
    /// 				
    /// </remarks>

	public bool? Hours1AnyTime { get; set; }
    /// <summary>
    /// AddItemAddItemsRelistItemReviseItemVerifyAddItemVerifyRelistItemNo
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetSellerListDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					Indicates the starting time of day this eBay user is available for other eBay
    /// 					members to contact for the range of days specified using Hours1Days.
    /// 					Enter times in 30 minute increments from the top of the hour. That is, enter
    /// 					values either on the hour (:00) or 30 minutes past the hour (:30).
    /// 					Other values will be will be rounded down to the next closest 30 minute
    /// 					increment. Times entered should be local to the value provided for TimeZoneID.
    /// 				
    /// </remarks>

	public System.DateTime? Hours1From { get; set; }
    /// <summary>
    /// AddItemAddItemsRelistItemReviseItemVerifyAddItemVerifyRelistItemNo
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetSellerListDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					Indicates the ending time of day this eBay user is available for other eBay
    /// 					members to contact them for the range of days specified using Hours1Days.
    /// 					Enter times in 30 minute increments from the top of the hour. That is, enter
    /// 					values either on the hour (:00) or 30 minutes past the hour (:30).
    /// 					Other values will be will be rounded down to the next closest 30 minute
    /// 					increment. Times entered should be local to the value provided for TimeZoneID.
    /// 				
    /// </remarks>

	public System.DateTime? Hours1To { get; set; }
    /// <summary>
    /// AddItemAddItemsRelistItemReviseItemVerifyAddItemVerifyRelistItemNo
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetSellerListDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					Indicates the range of days for which the secondary contact hours
    /// 					specified by Hours2AnyTime or Hours2From and Hours2To apply.
    /// 					If a value of None is provided for this field, the values provided for
    /// 					Hours2AnyTime, Hours2From, Hours2To are ignored.
    /// 					<br>
    /// 					<b>Note:</b> You cannot set Hours2Days to EveryDay. If Hours1Days
    /// 					is set to EveryDay, secondary contact hours do not apply. Hours2Days cannot be
    /// 					set to the same value as Hours1Days.
    /// 				
    /// </remarks>

	public DaysCodeType? Hours2Days { get; set; }
    /// <summary>
    /// AddItemAddItemsRelistItemReviseItemVerifyAddItemVerifyRelistItemNo
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetSellerListDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					Indicates whether or not a user is available to be contacted 24 hours a day
    /// 					during the range of days specified using the Hours2Days element.
    /// 					True indicates the user is available 24 hours a day, false indicates otherwise.
    /// 					In the case of this field being true, all values provided for Hours2From and
    /// 					Hours2To will be ignored.  In the case of this field being false,
    /// 					the values provided Hours2From and Hours2To will be considered.
    /// 				
    /// </remarks>

	public bool? Hours2AnyTime { get; set; }
    /// <summary>
    /// AddItemAddItemsRelistItemReviseItemVerifyAddItemVerifyRelistItemNo
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetSellerListDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					Indicates the starting time of day this eBay user is available for other eBay
    /// 					members to contact for the range of days specified using Hours2Days.
    /// 					Enter times in 30 minute increments from the top of the hour. That is, enter
    /// 					values either on the hour (:00) or 30 minutes past the hour (:30).
    /// 					Other values will be will be rounded down to the next closest 30 minute
    /// 					increment. Times entered should be local to the value provided for TimeZoneID.
    /// 				
    /// </remarks>

	public System.DateTime? Hours2From { get; set; }
    /// <summary>
    /// AddItemAddItemsRelistItemReviseItemVerifyAddItemVerifyRelistItemNo
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetSellerListDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					Indicates the ending time of day this eBay user is available for other eBay
    /// 					members to contact them for the range of days specified using Hours1Days.
    /// 					Enter times in 30 minute increments from the top of the hour. That is, enter
    /// 					values either on the hour (:00) or 30 minutes past the hour (:30).
    /// 					Other values will be will be rounded down to the next closest 30 minute
    /// 					increment. Times entered should be local to the value provided for TimeZoneID.
    /// 				
    /// </remarks>

	public System.DateTime? Hours2To { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Details about a specific country.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class CountryDetailsType {

#region 属性
    /// <summary>
    /// Item.Country in AddItemAddItem.html#Request.Item.Country
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Two-letter code representing a country. These two-letter codes are typically used
    /// 						in Add/Revise/Relist calls when referring to a country.
    /// 					
    /// </remarks>

	public CountryCodeType? Country { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Full country name for display purposes. May be similar to (but not necessarily identical to)
    /// 						CountryName in addresses (e.g., User.RegistrationAddress.CountryName in GetUser).
    /// 					
    /// </remarks>

	public string Description { get; set; }
    /// <summary>
    /// GeteBayDetailsDetailLevel: none, ReturnSummary, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Returns the latest version number for this field. The version can be used to
    /// 						determine if and when to refresh cached client data.
    /// 					
    /// </remarks>

	public string DetailVersion { get; set; }
    /// <summary>
    /// GeteBayDetailsDetailLevel: none, ReturnSummary, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Gives the time in GMT that the feature flags for the
    /// 						details were last updated. This timestamp can be used to
    /// 						determine if and when to refresh cached client data.
    /// 					
    /// </remarks>

	public System.DateTime? UpdateTime { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type specifies custom product compliance and/or take-back policies that apply to a specified country.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class CountryPoliciesType {

#region 属性
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						Defines the 2-letter country code set.
    /// 						<br><br>
    /// 						Use the <a href ="http://developer.ebay.com/DevZone/XML/docs/Reference/eBay/GeteBayDetails.html">GeteBayDetails</a> call to see the list of currently supported codes,
    /// 						and the English names associated with each code (e.g., KY="Cayman Islands").			
    /// 						<br><br>
    /// 						Most of the codes that eBay uses conform to the ISO 3166 standard, but some of the
    /// 						codes in the ISO 3166 standard are not used by eBay. Plus, there are some non-ISO
    /// 						codes in the eBay list. (Additional codes appear at the end of this code list and
    /// 						are noted as non-ISO.)
    /// 						<br><br>
    /// 					
    /// </remarks>

	public CountryCodeType? Country { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						The policy Id specifying product compliance or take-back policy information.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("PolicyID")]

	public System.Collections.Generic.List<long> PolicyID { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
///  
///  				Type defining the <b>CrossBorderTradeAustraliaEnabled</b> field that is 
/// 				returned under the <b>FeatureDefinitions</b> container of the 
/// 				<b>GetCategoryFeatures</b> response (as long as 
/// 				'CrossBorderTradeEnabled' is included as a <b>FeatureID</b> value in 
/// 				the call request or no <b>FeatureID</b> values are passed into the call 
/// 				request). This field is returned as an
/// 				empty element (a boolean value is not returned) if one or more eBay API-enabled sites 
/// 				support Cross Border Trade listings on the eBay Australia site. 
/// 				<br/><br/>
/// 				To verify if a specific eBay site supports Cross Border Trade listings on the eBay Australia site (for most
/// 				categories), look for a 'true' value in the 
/// 				<b>SiteDefaults.CrossBorderTradeAustraliaEnabled</b> field.
/// 				<br/><br/>
/// 				To verify if a specific category on a specific eBay site supports Cross Border Trade listings on the eBay Australia site, pass in a <b>CategoryID</b> value in the request, and then 
/// 				look for a 'true' value in the <b>CrossBorderTradeAustraliaEnabled</b> field 
/// 				of the corresponding Category node (match up the <b>CategoryID</b> values 
/// 				if more than one Category IDs were passed in the request).
///  			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class CrossBorderTradeAustraliaEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
///  
///  				Type defining the <b>CrossBorderTradeGBEnabled</b> field that is 
/// 				returned under the <b>FeatureDefinitions</b> container of the 
/// 				<b>GetCategoryFeatures</b> response (as long as 
/// 				'CrossBorderTradeEnabled' is included as a <b>FeatureID</b> value in 
/// 				the call request or no <b>FeatureID</b> values are passed into the call 
/// 				request). This field is returned as an
/// 				empty element (a boolean value is not returned) if one or more eBay API-enabled sites 
/// 				support Cross Border Trade listings on the eBay UK and eBay Ireland sites. 
/// 				<br/><br/>
/// 				To verify if a specific eBay site supports Cross Border Trade listings on the eBay UK and eBay Ireland sites (for most
/// 				categories), look for a 'true' value in the 
/// 				<b>SiteDefaults.CrossBorderTradeGBEnabled</b> field.
/// 				<br/><br/>
/// 				To verify if a specific category on a specific eBay site supports Cross Border Trade listings on the eBay UK and eBay Ireland sites, pass in a <b>CategoryID</b> value in the request, and then 
/// 				look for a 'true' value in the <b>CrossBorderTradeGBEnabled</b> field 
/// 				of the corresponding Category node (match up the <b>CategoryID</b> values 
/// 				if more than one Category IDs were passed in the request).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class CrossBorderTradeGBEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
///  
///  				Type defining the <b>CrossBorderTradeNorthAmericaEnabled</b> field that is 
/// 				returned under the <b>FeatureDefinitions</b> container of the 
/// 				<b>GetCategoryFeatures</b> response (as long as 
/// 				'CrossBorderTradeEnabled' is included as a <b>FeatureID</b> value in 
/// 				the call request or no <b>FeatureID</b> values are passed into the call 
/// 				request). This field is returned as an
/// 				empty element (a boolean value is not returned) if one or more eBay API-enabled sites 
/// 				support Cross Border Trade listings on the eBay US and eBay Canada sites. 
/// 				<br/><br/>
/// 				To verify if a specific eBay site supports Cross Border Trade listings on the eBay US and eBay Canada sites (for most
/// 				categories), look for a 'true' value in the 
/// 				<b>SiteDefaults.CrossBorderTradeNorthAmericaEnabled</b> field.
/// 				<br/><br/>
/// 				To verify if a specific category on a specific eBay site supports Cross Border Trade listings on the eBay US and eBay Canada sites, pass in a <b>CategoryID</b> value in the request, and then 
/// 				look for a 'true' value in the <b>CrossBorderTradeNorthAmericaEnabled</b> field 
/// 				of the corresponding Category node (match up the <b>CategoryID</b> values 
/// 				if more than one Category IDs were passed in the request).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class CrossBorderTradeNorthAmericaEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>CurrencyDetails</b> container that is returned in the <b>GeteBayDetails</b> response if 'CurrencyDetails' is used as a <b>DetailName</b> value in the request, or no <b>DetailName</b> values are used in the request. A <b>CurrencyDetails</b> container is returned for each currency value that is available to use in the <b>Item.Currency</b> field in an Add/Revise/Relist call.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class CurrencyDetailsType {

#region 属性
    /// <summary>
    /// Item.CurrencyAddItem.html#Request.Item.Currency
    /// Item.StartPriceAddItem.html#Request.Item.StartPrice
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Three-digit currency codes as defined in ISO 4217. The currency codes returned in
    /// 						<b>GeteBayDetails</b> can be used as values in the
    /// 						<b>Currency</b> field of the Add/Revise/Relist and other Trading API
    /// 						calls.
    /// 					
    /// </remarks>

	public CurrencyCodeType? Currency { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Full currency name for display purposes.
    /// 					
    /// </remarks>

	public string Description { get; set; }
    /// <summary>
    /// GeteBayDetailsDetailLevel: none, ReturnSummary, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Returns the latest version number for this field. The version can be used
    /// 						to determine if and when to refresh cached client data.
    /// 					
    /// </remarks>

	public string DetailVersion { get; set; }
    /// <summary>
    /// GeteBayDetailsDetailLevel: none, ReturnSummary, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Gives the time in GMT that the feature flags for the
    /// 						details were last updated. This timestamp can be used to determine if
    /// 						and when to refresh cached client data.
    /// 					
    /// </remarks>

	public System.DateTime? UpdateTime { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is used by the <strong>CustomPolicies</strong> container, which specifies custom policy IDs. A custom policy ID refers to the relevant policy created for product compliance and other purposes. For more information, see the <b>Custom Policies</b> page for your site (for example, <a href="https://www.ebay.fr/help/selling/custom-policies/custom-policies?id=5311" target="_blank">https://www.ebay.fr/help/selling/custom-policies/custom-policies?id=5311</a>). To create and manage custom policies, use the <a href="https://developer.ebay.com/api-docs/sell/account/resources/methods#h2-custom_policy" target="_blank">custom_policy</a> resource of the <b>Account API</b>. 
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class CustomPoliciesType {

#region 属性
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is used if the seller wants to apply a <i>global</i> take-back policy to the listing. The law in some countries may require sellers to take back a used product when the buyer buys a new product.<br /><br />Use this field to specify one <i>global</i> take-back policy ID for the listing.
    /// 						<span class="tablenote"><strong>Note: </strong>
    /// 							For countries that support country-specific policies, use <b>RegionalTakeBackPolicies</b> to apply them to a listing.
    /// 						</span>				
    /// 					
    /// </remarks>

	public long? TakeBackPolicyID { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemNo
    /// </summary>
    /// <remarks>
    /// 		
    /// 						The list of unique identifiers indicating the seller-created 
    /// country-specific
    ///  take-back policies that will be used for a listing. The law in some countries may require sellers to take back a used product when the buyer buys a new product.<br /><br />
    /// 						Each listing may include one (1) country-specific take-back policy for <i>each</i> of the following countries:<ul><li>United Kingdom [GB]</li><li>Germany [DE]</li><li>France [FR]</li><li>Italy [IT]</li><li>Spain [ES]</li></ul>		
    /// 						<span class="tablenote"><strong>Note: </strong>
    /// 							Take-back policies that apply to <i>all</i> countries to which a seller ships are specified using <b>TakeBackPolicyID</b>.
    /// 						</span>
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("CountryPolicies", IsNullable = false)]

	public System.Collections.Generic.List<CountryPoliciesType> RegionalTakeBackPolicies { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is used if the seller wants to apply one or more seller-created <i>global</i> product compliance policies that will be used in a listing. A separate <b>ProductCompliancePolicyID</b> field is required for each policy to be applied, and the seller specifies the identifier of each policy in this field.<br />			
    /// 						Product compliance policies provide buyers with important information and disclosures about products. For example, if you sell batteries and specific disclosures are required to be shared with all potential buyers, your global product compliance policy could contain the required disclosures.<br /><br />A maximum of six (6) global product compliance policies may be applied to each listing.
    /// 						<span class="tablenote"><strong>Note: </strong>
    /// 							For countries that support country-specific policies, use <b>RegionalProductCompliancePolicies</b> to apply them to a listing.
    /// 						</span>					
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("ProductCompliancePolicyID")]

	public System.Collections.Generic.List<long> ProductCompliancePolicyID { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemNo
    /// </summary>
    /// <remarks>
    /// 			
    /// 						The set of compliance policies for indicating the seller-created country-specific product compliance policies that that will be used for a listing.<br /><br />
    /// 						Product compliance policies provide buyers with important information and disclosures about products. For example, if you sell batteries in a country requiring disclosures that apply <i>only</i> to that country, a country-specific product compliance policy could contain this information.<br /><br />
    /// 						Each listing may include up to six (6) product compliance policies for <i>each</i> of the following countries:<ul><li>United Kingdom [GB]</li><li>Germany [DE]</li><li>France [FR]</li><li>Italy [IT]</li><li>Spain [ES]</li></ul>	
    /// 						For example, if a seller offers products in the UK, Germany, and Italy, each of which requires custom product compliance information, up to 18 policies (in other words, 6 policies x 3 countries) may be included for each listing.	
    /// 						<span class="tablenote"><strong>Note: </strong>
    /// 							Product compliance policies that apply to <i>all</i> countries to which a seller ships are specified using <b>ProductCompliancePolicyID</b>.
    /// 						</span>						
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("CountryPolicies", IsNullable = false)]

	public System.Collections.Generic.List<CountryPoliciesType> RegionalProductCompliancePolicies { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is used by the <b>DeliveryDetails</b>	container that is returned by <b>GetOrders</b> and other order management calls. The <b>DeliveryDetails</b> container is only applicable and returned if the buyer purchased a digital gift card, and is either keeping the gift card or giving that gift card to another person.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class DeliveryDetailsType {

#region 属性
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container consists of the name and email of the person who is receiving the digital gift card. If the buyer has purchased the gift card for themselves, the buyer's name and email will appear in this container. If the buyer is giving the gift card to another individual, that individual's name and email will appear in this container. This container is always returned for a digital gift card line item.
    /// 						<br><br>
    /// 						<b>For GetOrders and GetItemTransactions only:</b> If using Trading WSDL Version 1019 or above, this container will only be returned to the buyer or seller, and no longer returned at all to third parties. If using a Trading WSDL older than Version 1019, real data is only returned to the buyer or seller, and dummy/masked data will be returned to all third parties.
    /// 					
    /// </remarks>

	public DigitalDeliveryUserType Recipient { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container consists of the name and email of the person who purchased the digital gift card. This container is only returned if the purchaser of the digital gift card is giving the gift card to someone else, and that individual's name and email will appear in the <strong>Recipient</strong> container.
    /// 						<br><br>
    /// 						<b>For GetOrders and GetItemTransactions only:</b> If using Trading WSDL Version 1019 or above, this container will only be returned to the buyer or seller, and no longer returned at all to third parties. If using a Trading WSDL older than Version 1019, real data is only returned to the buyer or seller, and dummy/masked data will be returned to all third parties.
    /// 					
    /// </remarks>

	public DigitalDeliveryUserType Sender { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is used by the <b>DeliveryStatus</b> container, which will list the current status of whatever delivery method is being used (indicated in the <b>DigitalDeliverySelected.DeliveryMethod</b>	field). Currently, the only supported delivery method is by email.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class DeliveryStatusType {

#region 属性
    /// <summary>
    /// DeliveryStatusEmailCodeType
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This value indicates the current delivery status for the digital gift card that is being delivered by email. Currently, the only supported delivery status value is 'Notified', which indicates that the link to download the digital gift card has been sent to the recipient by email.
    /// 					
    /// </remarks>

	public string Email { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 			  Defines settings for a notification URL (including the URL name in DeliveryURLName).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class DeliveryURLDetailType {

#region 属性
    /// <summary>
    /// GetNotificationPreferencesConditionally
    /// SetNotificationPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						The name of a notification delivery URL. You can list up to 25 instances of
    /// 						DeliveryURLName, and then subscribe these URLs to notifications by listing them in comma-
    /// 						separated format in the DeliveryURLName element outside of
    /// 						ApplicationDeliveryPreferences.
    /// 					
    /// </remarks>

	public string DeliveryURLName { get; set; }
    /// <summary>
    /// SetNotificationPreferencesNo
    /// GetNotificationPreferencesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The address of a notification delivery URL.
    /// 						This address applies to the DeliveryURLName
    /// 						within the same
    /// 						ApplicationDeliveryPreferences.DeliveryURLDetails container.
    /// 						For delivery to a server, the URL must
    /// 						begin with "<code>https://</code>" and must be well
    /// 						formed. Use a URL that is functional at the time of the
    /// 						call.
    /// 					
    /// </remarks>

	public string DeliveryURL { get; set; }
    /// <summary>
    /// GetNotificationPreferencesConditionally
    /// SetNotificationPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						The status of a notification delivery URL.
    /// 						This status applies to the DeliveryURLName and delivery URL
    /// 						within the same ApplicationDeliveryPreferences.DeliveryURLDetails container.
    /// 		        If the status is disabled, then notifications will not be sent to the delivery URL.
    /// 					
    /// </remarks>

	public EnableCodeType? Status { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				If present, the site defines category settings for whether the seller can specify a vehicle deposit for US eBay Motors listings.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class DepositSupportedDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type that provides detailed information on a Listing Designer Theme or Layout.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class DescriptionTemplateType {

#region 属性
    /// <summary>
    /// GetDescriptionTemplatesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This integer value is a unique identifier for the Listing Designer Theme group, such as Holiday/Seasonal, Special Events, or Patterns/Textures. This field is not applicable and will not be returned for a Listing Designer Layout.
    /// 					
    /// </remarks>

	public int? GroupID { get; set; }
    /// <summary>
    /// GetDescriptionTemplatesAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						This integer value is a unique identifier of the Listing Designer Theme or Layout.
    /// 					
    /// </remarks>

	public int? ID { get; set; }
    /// <summary>
    /// GetDescriptionTemplatesAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						This URL is the path to a small image providing a sample of the appearance of a Listing Designer Theme or Layout.
    /// 					
    /// </remarks>

	public string ImageURL { get; set; }
    /// <summary>
    /// GetDescriptionTemplatesAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						This string value is the name of the Listing Designer Theme or Layout.
    /// 					
    /// </remarks>

	public string Name { get; set; }
    /// <summary>
    /// GetDescriptionTemplatesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This string value is actually a CDATA representation of the Listing Designer template. Image-related elements in a template include <code>ThemeTop</code>, <code>ThemeUserCellTop</code>, <code>ThemeUserContent,</code>, <code>ThemeUserCellBottom</code>, and <code>ThemeBottom</code>. This field is not applicable and will not be returned for a Listing Designer Layout.
    /// 					
    /// </remarks>

	public string TemplateXML { get; set; }
    /// <summary>
    /// GetDescriptionTemplatesAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the information returned under the <b>DescriptionTemplate</b> container is related to a Listing Designer Theme or Layout.
    /// 					
    /// </remarks>

	public DescriptionTemplateCodeType? Type { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is used by the <b>DigitalDeliverySelected</b>	container that is returned by <b>GetOrders</b> and other order management calls. The <b>DigitalDeliverySelected</b> container is only applicable and returned if the buyer purchased a digital gift card for themselves, or is giving the digital gift card to someone else as a gift.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class DigitalDeliverySelectedType {

#region 属性
    /// <summary>
    /// DeliveryMethodCodeType
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This value indicates the method in which the digital gift card will be delivered to the buyer or to the person whom the purchaser is giving the digital gift card to. Currently, the only supported delivery method is by email.
    /// 					
    /// </remarks>

	public string DeliveryMethod { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container consists of the current status of whatever delivery method is being used (indicated in the <b>DigitalDeliverySelected.DeliveryMethod</b>	field). Currently, the only supported delivery method is by email.
    /// 					
    /// </remarks>

	public DeliveryStatusType DeliveryStatus { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container is returned by <b>GetOrders</b> and other order management calls to provide details on the recipient of a digital gift card that was purchased. The <b>DeliveryDetails</b> container is only returned if the buyer is buying a digital gift card and giving that gift card to another person.
    /// 					
    /// </remarks>

	public DeliveryDetailsType DeliveryDetails { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is used to provide the name and email of both the purchaser of a digital gift card, and the recipient of the digital gift card.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class DigitalDeliveryUserType {

#region 属性
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field displays the actual name (not the eBay user ID) of the sender/purchaser of the digital gift card (applicable for the <strong>Sender</strong> container) or the actual name of the recipient of the digital gift card (applicable for the <strong>Recipient</strong> container). Both the sender and recipient name is provided by the purchaser of the digital gift card at time of purchase.
    /// 						<br><br>
    /// 						<b>For GetItemTransactions only:</b> If using Trading WSDL Version 1019 or above, this field will only be returned to the buyer or seller, and no longer returned at all to third parties. If using a Trading WSDL older than Version 1019, real data is only returned to the buyer or seller, and a string value of <code>Unavailable</code> will be returned to all third parties.
    /// 					
    /// </remarks>

	public string Name { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field displays the email address of the sender/purchaser of the digital gift card (applicable for the <strong>Sender</strong> container) or the email address of the recipient of the digital gift card (applicable for the <strong>Recipient</strong> container). Both the sender and recipient email address is provided by the purchaser of the digital gift card at time of purchase.
    /// 						<br><br>
    /// 						<b>For GetItemTransactions only:</b> If using Trading WSDL Version 1019 or above, this field will only be returned to the buyer or seller, and no longer returned at all to third parties. If using a Trading WSDL older than Version 1019, real data is only returned to the buyer or seller, and a string value of <code>Unavailable</code> will be returned to all third parties.
    /// 					
    /// </remarks>

	public string Email { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>DigitalGoodDeliveryEnabled</b> field that is returned under the <b>FeatureDefinitions</b> container of the <b>GetCategoryFeatures</b> response (as long as <b>DigitalGoodDeliveryEnabled</b> is included as a <b>FeatureID</b> value in the call request or no <b>FeatureID</b> values are passed into the call request). The <b>DigitalGoodDeliveryEnabled</b> field is returned as an empty element (a boolean value is not returned) if one or more eBay API-enabled sites support digital gift card listings.
/// 				<br><br>
/// 				To verify if a specific eBay site supports digital gift card listings (for most categories), look for a <code>true</code> value in the <b>SiteDefaults.DigitalGoodDeliveryEnabled</b> field.
/// 				<br><br>
/// 				To verify if a specific category on a specific eBay site supports digital gift card listings, pass in a <b>DigitalGoodDeliveryEnabled</b> value in the request, and then look for a <code>true</code> value in the <b>DigitalGoodDeliveryEnabled</b> field of the corresponding <b>Category</b> node (match up the <b>CategoryID</b> values if more than one category ID was passed in the request).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class DigitalGoodDeliveryEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is used by the <b>DigitalGoodInfo</b> container, which is used in <b>Add</b>/<b>Relist</b>/<b>Revise</b>/<b>Verify</b> listing calls to designate the listing as a digital gift card listing.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class DigitalGoodInfoType {

#region 属性
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemNo
    /// GetItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field must be included in the request and set to <code>true</code> if the seller plans to list a digital gift card in a category that supports digital gift cards.
    /// 						<br><br>
    /// 						To verify if a specific category on a specific eBay site supports digital gift card listings, use the <a href="https://developer.ebay.com/DevZone/XML/docs/Reference/eBay/GetCategoryFeatures.html">GetCategoryFeatures</a> call, passing in a <b>CategoryID</b> value and a <b>DigitalGoodDeliveryEnabled</b> value in the <b>FeatureID</b> field. Look for a <code>true</code> value in the <b>DigitalGoodDeliveryEnabled</b> field of the corresponding <b>Category</b> node (match up the <b>CategoryID</b> values if more than one Category IDs were passed in the request).
    /// 					
    /// </remarks>

	public bool? DigitalDelivery { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Using this container, a seller can supply original retail price and
/// 				discount price for an item to clarify the discount treatment (also known
/// 				as strike-through pricing). This only applies to fixed-price listings and auction listings with the Buy It Now
/// 				option. This feature is available for large enterprise sellers via
/// 				white list. A seller can provide discount treatment regardless of
/// 				whether the listing includes a SKU.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class DiscountPriceInfoType {

#region 属性
    /// <summary>
    /// AddFixedPriceItemReviseFixedPriceItemRelistFixedPriceItemVerifyAddFixedPriceItemConditionally
    /// AddItemReviseItemRelistItemVerifyAddItemConditionally
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The actual retail price set by the manufacturer (OEM).
    /// 						eBay does not maintain or validate the <b>OriginalRetailPrice</b> supplied
    /// 						by the seller. <b>OriginalRetailPrice</b> should always be more than
    /// 						<b>StartPrice</b>. Compare the <b>StartPrice</b>/<b>BuyItNowPrice</b> to
    /// 						<b>OriginalRetailPrice</b> to determine the amount of savings to the buyer.
    /// 					
    /// </remarks>

	public AmountType OriginalRetailPrice { get; set; }
    /// <summary>
    /// AddFixedPriceItemReviseFixedPriceItemRelistFixedPriceItemVerifyAddFixedPriceItemConditionally
    /// AddItemReviseItemRelistItemVerifyAddItemConditionally
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Minimum Advertised Price (MAP) is an agreement between suppliers (or
    /// 						manufacturers (OEM)) and the retailers (sellers) stipulating
    /// 						the lowest price an item is allowed to be advertised at.
    /// 						Sellers can offer prices below MAP by means of other discounts.
    /// 						This only applies to fixed-price listings and auction listings with the Buy It Now option.
    /// 					
    /// </remarks>

	public AmountType MinimumAdvertisedPrice { get; set; }
    /// <summary>
    /// AddFixedPriceItemReviseFixedPriceItemRelistFixedPriceItemVerifyAddFixedPriceItemConditionally
    /// AddItemReviseItemRelistItemVerifyAddItemConditionally
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						For MinimumAdvertisedPrice (MAP) listings only.
    /// 						A seller cannot show the actual discounted price on eBay's View Item
    /// 						page. Instead, the buyer can either click on a pop-up on eBay's
    /// 						View Item page, or the discount price will be shown during checkout.
    /// 					
    /// </remarks>

	public MinimumAdvertisedPriceExposureCodeType? MinimumAdvertisedPriceExposure { get; set; }
    /// <summary>
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// false
    /// </summary>
    /// <remarks>
    /// 
    /// 						Based on <b>OriginalRetailPrice</b>,
    /// 						<b>MinimumAdvertisedPrice</b>, and <b>StartPrice</b> values, eBay identifies
    /// 						whether the listing falls under MAP or STP (aka
    /// 						<b>OriginalRetailPrice</b>). <b>GetItem</b> returns this for items listed with one
    /// 						of these discount pricing treatments. <b>GetSellerList</b> returns the
    /// 						<b>DiscountPriceInfo</b> container. This field is not applicable for Add/Revise/Relist calls.
    /// 					
    /// </remarks>

	public PricingTreatmentCodeType? PricingTreatment { get; set; }
    /// <summary>
    /// AddFixedPriceItemReviseFixedPriceItemRelistFixedPriceItemVerifyAddFixedPriceItemConditionally
    /// AddItemReviseItemRelistItemVerifyAddItemConditionally
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// false
    /// </summary>
    /// <remarks>
    /// 
    /// 						Used by the eBay UK and eBay Germany (DE) sites, this flag indicates that the discount
    /// 						price (specified as <b>StartPrice</b>) is the price for which the seller offered the same (or
    /// 						similar) item for sale on eBay within the previous 30 days. The discount price is always
    /// 						in reference to the seller's own price for the item.
    /// 						<br><br>
    /// 						If this field is set to <code>true</code>, eBay displays 'Was' in the UK and 'Ursprunglich' in Germany, next
    /// 						to the discounted price of the item. In the event both <b>SoldOffeBay</b> and <b>SoldOneBay</b> fields
    /// 						are set to <code>true</code>, <b>SoldOneBay</b> takes precedence.
    /// 						<br>
    /// 					
    /// </remarks>

	public bool? SoldOneBay { get; set; }
    /// <summary>
    /// AddFixedPriceItemReviseFixedPriceItemRelistFixedPriceItemVerifyAddFixedPriceItemConditionally
    /// AddItemReviseItemRelistItemVerifyAddItemConditionally
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// false
    /// </summary>
    /// <remarks>
    /// 
    /// 						Used by the eBay UK and eBay Germany (DE) sites, this flag indicates that the discount
    /// 						price (specified as StartPrice) is the price for which the seller offered the same (or
    /// 						similar) item for sale on a Web site or offline store other than eBay in the previous 30
    /// 						days. The discount price is always in reference to the seller's own price for the item.
    /// 						<br><br>
    /// 						If this field is set to <code>true</code>, eBay displays 'Was*' in the UK and 'Ursprunglich*' in Germany,
    /// 						next to the discounted price of the item. In the event both <b>SoldOffeBay</b> and <b>SoldOneBay</b> fields
    /// 						are set to <code>true</code>, <b>SoldOneBay</b> takes precedence.
    /// 						<br>
    /// 					
    /// </remarks>

	public bool? SoldOffeBay { get; set; }
    /// <summary>
    /// AddFixedPriceItemReviseFixedPriceItemRelistFixedPriceItemVerifyAddFixedPriceItemConditionally
    /// AddItemReviseItemRelistItemVerifyAddItemConditionally
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Applicable only if the item was specifically made for sale through dedicated eBay outlet pages (e.g., eBay Fashion Outlet).<br>
    /// 						<br>
    /// 						The comparison price is the price of a comparable product sold
    /// 						through non-outlet channels on eBay (or elsewhere), or not
    /// 						specifically made for the outlet.<br>
    /// 						<br>
    /// 						In fashion, a "comparable" product shares the same design, but is
    /// 						not considered an identical product. Some products are specifically
    /// 						made for outlets, and may have a different SKU than the "comparable"
    /// 						product. These made-for-outlet products may be manufactured in a
    /// 						different place, with different materials, or according to different
    /// 						specifications (i.e. different stitch pattern, seam reinforcement,
    /// 						button quality, etc.)
    /// 					
    /// </remarks>

	public AmountType MadeForOutletComparisonPrice { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Details of a flat or calculated shipping discount rule. Shipping Discount Rules can be set up through the <b>SetShippingDiscountProfiles</b> call or through My eBay.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class DiscountProfileType {

#region 属性
    /// <summary>
    /// GetShippingDiscountProfilesAlways
    /// SetShippingDiscountProfilesConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The unique eBay-created unique identifier for the shipping discount, assigned when the shipping discount rule is created.
    /// 						<br/>
    /// 						In a <b>SetShippingDiscountProfiles</b> call,
    /// 						<ul>
    /// 						  <li>If the value of <b>ModifyActionCode</b> is set to <code>Add</code>, this field is not applicable and is ignored   <li>If provided.</li>
    /// 						  <li>If the value of <b>Mod  <li>IfyActionCode</b> is set to <code>Update</code>, all fields of the modified rule must be provided, even   if the values are not changing.</li>
    /// 						  <li>If the value of <b>ModifyActionCode</b> is set to <code>Delete</code>, either the <b>DiscountProfileID</b> value or is <b>DiscountProfileName</b> value is required, the <b>MappingDiscountProfileID</b> is optional, and all other fields of the <b>DiscountProfile</b> container are ignored.</li>
    /// 						</ul>
    /// 					
    /// </remarks>

	public string DiscountProfileID { get; set; }
    /// <summary>
    /// GetShippingDiscountProfilesConditionally
    /// SetShippingDiscountProfilesConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The seller-provided title for the shipping discount rule.
    /// 						<br/>
    /// 						In a <b>SetShippingDiscountProfiles</b> call,
    /// 						<ul>
    /// 							<li>If the value of <b>ModifyActionCode</b> is set to <code>Add</code>, this field is ignored (if provided) if this is the first shipping discount rule being created, but this field is required if there is more than one existing shipping discount rule of that type (flat rate or calculated)</li>
    /// 							<li>If the value of <b>ModifyActionCode</b> is set to <code>Update</code>, all fields of the modified rule must be provided, even if the values are not changing</li>
    /// 							<li>If the value of <b>ModifyActionCode</b> is set to <code>Delete</code>, the <b>DiscountProfileID</b> is required, the <b>MappingDiscountProfileID</b> is optional, and all other fields of the <b>DiscountProfile</b> container are ignored</li>
    /// 							<li>If the value of <b>ModifyActionCode</b> is set to <code>Delete</code>, either the <b>DiscountProfileID</b> value or is <b>DiscountProfileName</b> value is required, the <b>MappingDiscountProfileID</b> is optional, and all other fields of the <b>DiscountProfile</b> container are ignored</li>
    /// 						</ul>
    /// 					
    /// </remarks>

	public string DiscountProfileName { get; set; }
    /// <summary>
    /// GetShippingDiscountProfilesFlatShippingDiscountConditionally
    /// SetShippingDiscountProfilesFlatShippingDiscountConditionally
    /// GetItemFlatShippingDiscountInternationalFlatShippingDiscountDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The cost to ship each item beyond the first item (where the item with the highest shipping cost is selected by eBay as the first item). Let's say the buyer purchases three items, each set to ship for $8, and the seller set the <b>EachAdditionalAmount</b> to $6. The cost to ship three items would normally be $24, but since the seller specified $6, the total shipping cost would be $8 + $6 + $6, or $20. This field is only applicable for flat-rate shipping.
    /// 					
    /// </remarks>

	public AmountType EachAdditionalAmount { get; set; }
    /// <summary>
    /// GetShippingDiscountProfilesFlatShippingDiscountConditionally
    /// SetShippingDiscountProfilesFlatShippingDiscountConditionally
    /// GetItemFlatShippingDiscountInternationalFlatShippingDiscountDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The amount by which to reduce the cost to ship each item beyond the first item (where the item with the highest shipping cost is selected by eBay as the first item). Let's say the buyer purchases three items, each set to ship for $8, and the seller set <b>EachAdditionalAmountOff</b> to $2. The cost to ship three items would normally be $24, but since the seller specified $2, the total shipping cost would be <i>$24 - (two additional items x $2)</i>, or $20. This field is only applicable for flat-rate shipping.
    /// 					
    /// </remarks>

	public AmountType EachAdditionalAmountOff { get; set; }
    /// <summary>
    /// GetShippingDiscountProfilesFlatShippingDiscountConditionally
    /// SetShippingDiscountProfilesFlatShippingDiscountConditionally
    /// GetItemFlatShippingDiscountInternationalFlatShippingDiscountDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The percentage by which to reduce the cost to ship each item beyond the first item (where the item with the highest shipping cost is selected by eBay as the first item). Let's say the buyer purchases three items, each set to ship for $8, and the seller set <b>EachAdditionalPercentOff</b> to 0.25. The cost to ship three items would normally be $24, but since the seller specified 0.25 ($2 out of $8), the total shipping cost would be <i>$24 - (two additional items x $2)</i>, or $20. This field is only applicable for flat-rate shipping.
    /// 					
    /// </remarks>

	public float? EachAdditionalPercentOff { get; set; }
    /// <summary>
    /// GetShippingDiscountProfilesCalculatedShippingDiscountConditionally
    /// SetShippingDiscountProfilesCalculatedShippingDiscountConditionally
    /// GetItemCalculatedShippingDiscountInternationalCalculatedShippingDiscountDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The amount of weight to subtract for each item beyond the first item before shipping costs are calculated. For example, there may be less packing material when the items are combined in one box than if they were shipped individually. Let's say the buyer purchases three items, each 10 oz. in weight, and the seller set <b>WeightOff</b> to 2 oz. The combined weight would be 30 oz., but since the seller specified 2 oz. off, the total weight for shipping cost calculation would be <i>30 oz. - (two additional items x 2 oz.)</i>, or 26 oz. This field is only applicable for calculated shipping.
    /// 					
    /// </remarks>

	public MeasureType WeightOff { get; set; }
    /// <summary>
    /// GetShippingDiscountProfilesCalculatedShippingDiscountConditionally
    /// SetShippingDiscountProfilesCalculatedShippingDiscountConditionally
    /// GetItemCalculatedShippingDiscountInternationalCalculatedShippingDiscountDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						For <b>SetShippingDiscountProfiles</b>, if <b>MappedDiscountProfileID</b> is omitted when
    /// 						<b>ModifyActionCode</b> is set to <code>Delete</code>, any listings currently using the profile
    /// 						identified by <b>DiscountProfileID</b> will have that profile removed.
    /// 					
    /// </remarks>

	public string MappedDiscountProfileID { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				The type is used to indicate the discount type and amount applied to an account entry.
/// 				<br>
/// 				<br>
/// 				<span class="tablenote"><b>Note: </b>
/// 				The discount amount will only be shown if the corresponding fee was deducted from a seller payout.
/// 				</span>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class DiscountType {

#region 属性
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The value in this field indicates the type of discount applied to the corresponding account entry.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("DiscountType")]
	public string DiscountType1 { get; set; }
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The amount of the discount in the currency indicated in the <b>currencyID</b> attribute.<br>
    /// 				      <br>
    /// 							<span class="tablenote"><b>Note: </b>
    /// 							The discount amount will only be shown if the corresponding fee was deducted from a seller payout.
    /// 				      </span>
    /// 					
    /// </remarks>

	public AmountType Amount { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 			  Contains a seller's cut off time preferences for same day handling for item shipping.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class DispatchCutoffTimePreferencesType {

#region 属性
    /// <summary>
    /// SetUserPreferencesConditionally
    /// GetUserPreferencesConditionally
    /// Same day handlinghttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/shipping-handling-same-day.htmldetails about dispatch cut off times
    /// </summary>
    /// <remarks>
    /// 
    /// 								If the seller specifies a <strong>DispatchTimeMax</strong> value of <code>0</code> to indicate same-day handling for an item, the seller's shipping commitment depends on the value of <strong>CutoffTime</strong> for the eBay site on which the item is listed.
    /// 								<br/><br/>
    /// 								For orders placed (and cleared payment received) before the indicated cut off time, the item must be shipped by the end of the current day. For orders completed on or after the cut off time, the item must be shipped by the end of the following day (excluding weekends and local holidays).
    /// 								<br/><br/>
    /// 								<span class="tablenote">
    /// 								<strong>Note:</strong> For sellers opted in to the feature that supports different order cutoff times for each business day, the order cutoff time is not applicable. This cutoff time cannot be changed with the <strong>SetUserPreferences</strong> call, and the value returned in the <strong>GetUserPreferences</strong> call may not be accurate if the seller has customized this cutoff time for one or more business days. In order for the seller to change and/or confirm the actual order cutoff times for same-day handling, that seller should go to Shipping Preferences in My eBay.
    /// 								</span>
    /// 								<strong>CutoffTime</strong> has a default initial value for each eBay site, but you can use <strong>SetUserPreferences</strong> to override the default for individual sellers. The default value for most eBay sites is 2:00PM local time. Enter times in 30 minute increments from the top of the hour. That is, enter values either on the hour (:00) or 30 minutes past the hour (:30). Other values will be rounded down to the next closest 30 minute increment. Times entered should be local to the value provided for <strong>TimeZoneID</strong>.
    /// 								<br/>
    /// 							
    /// </remarks>

	public System.DateTime? CutoffTime { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Details about the maximum number of business days required to ship an item to domestic buyers after receiving a cleared payment.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class DispatchTimeMaxDetailsType {

#region 属性
    /// <summary>
    /// GeteBayDetailsConditionally
    /// Same day handlinghttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/shipping-handling-same-day.htmldetails about dispatch cut off times
    /// </summary>
    /// <remarks>
    /// 
    /// 						Integer value that indicates the maximum number of business days that the eBay site allows as a seller's handling time. The clock starts ticking when the buyer pays for the order. This means that if a buyer pays for the order on a Wednesday, the seller would have to ship the item by the next day (Thursday) if the <b>DispatchTimeMax</b> value is set to <code>1</code>. Typical values for this field are 0, 1, 2, 3, 4, 5, 10, 15, or 20.
    /// 						<br/><br/>
    ///                   A <b>DispatchTimeMax</b> value of <code>0</code> indicates <em>same day handling</em> for an item. In this case, the seller's handling time commitment depends on the <em>order cut off time</em> set in the seller's user preferences. This defaults to 2:00 PM local time on most eBay sites. For orders placed (and cleared payment received) before the local order cut off time, the item must be shipped by the end of the current day. For orders completed on or after the order cut off time, the item must be shipped by the end of the following day (excluding weekends and local holidays).
    /// 						<br/><br/>
    /// 
    /// 						<span class="tablenote">
    ///                   <strong>Note:</strong> If a same day shipping carrier is selected, and the carrier delivers on one or both weekend days, sellers on the eBay US site are assumed to be open for business on the same days, and those days will be used when calculating total shipping time.
    ///                   </span>
    /// 
    /// 						If using <b>GeteBayDetails</b> specifically to return this value, the caller sets the DetailName field in the request to <b>DispatchTimeMaxDetails</b>.
    /// 						<br/><br/>
    /// 						When creating, revising, or relisting an item, the seller cannot set the <b>Item.DispatchTimeMax</b> value higher than the value returned in this field.
    /// 					
    /// </remarks>

	public int? DispatchTimeMax { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Value and unit (e.g., 10 Days) for the maximum dispatch time.
    /// 						Useful for display purposes.
    /// 					
    /// </remarks>

	public string Description { get; set; }
    /// <summary>
    /// GeteBayDetailsDetailLevel: none, ReturnSummary, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Returns the latest version number for this field. The version can be
    /// 						used to determine if and when to refresh cached client data.
    /// 					
    /// </remarks>

	public string DetailVersion { get; set; }
    /// <summary>
    /// GeteBayDetailsDetailLevel: none, ReturnSummary, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Gives the time in GMT that the feature flags for the
    /// 						details were last updated. This timestamp can be used to determine
    /// 						if and when to refresh cached client data.
    /// 					
    /// </remarks>

	public System.DateTime? UpdateTime { get; set; }
    /// <summary>
    /// GeteBayDetailsDetailLevel: none, ReturnSummary, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						A value of <code>true</code> indicates that the seller has specified a handling time of 4 business days or more (an <em>exception handling time</em>). Sellers should be aware that long handling times might adversely affect the buying decisions of potential customers.
    /// 					
    /// </remarks>

	public bool? ExtendedHandling { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
///                 Type defining the unique identifier of a regulatory document associated with the listing. 
///             
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class DocumentType {

#region 属性
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemConditionally
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///                         The unique identifier of a regulatory document associated with the listing. <br /><br /> This value can be found in the response of the <a href = "/api-docs/commerce/media/resources/document/methods/createDocument" target="_blank">createDocument</a> method of the Media API.
    ///                     
    /// </remarks>

	public string DocumentID { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
///                 Type that provides an array of one or more regulatory documents associated with a listing for Regulatory Compliance. 
/// 				<br />
/// 				<span class="tablenote"><b>Note: </b> As a part of General Product Safety Regulation (GPSR) requirements effective from December 13th, 2024, sellers operating in, or shipping to, EU-based countries or Northern Ireland are conditionally required to provide document information in their eBay listings. For more information on GPSR, see <a href = "https://www.ebay.com/sellercenter/resources/general-product-safety-regulation" target="_blank">General Product Safety Regulation (GPSR)</a>.</span>
///             
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class DocumentsType {

#region 属性
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemConditionally
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///                         A regulatory document associated with the listing.<br /><br />Regulatory documents can be created and uploaded using the <a href = "/api-docs/commerce/media/resources/document/methods/createDocument" target="_blank">createDocument</a> method of the Media API. A variety of document types can be provided for regulatory compliance. For a list of supported document types, see <a href = "/api-docs/commerce/media/types/api:DocumentTypeEnum" target="_blank">DocumentTypeEnum</a>.
    ///                     
    /// </remarks>
[System.Xml.Serialization.XmlElement("Document")]

	public System.Collections.Generic.List<DocumentType> Document { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type defines the available options the seller has for handling domestic returns.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class DomesticRefundMethodCodeType {

#region 属性
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Defines the available options the seller has for handling domestic returns in the specified marketplace and category.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("DomesticRefundMethod")]

	public System.Collections.Generic.List<ReturnsRefundMethodCodeType> DomesticRefundMethod { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				On the EBAY_US marketplace only, sellers can offer item replacement in addition to offering money back returns. This flag defines the availability of such options for the given US marketplace category. Sellers can offer item replacements only if returns are enabled (<b>returnPolicyEnabled</b> is set to <code>true</code>) for the item. You can specify item replacement in the AddItem family of calls and in the return policy settings of the Account API.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class DomesticRefundMethodDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type defines the available options the seller has for accepting domestic returns.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class DomesticReturnsAcceptedCodeType {

#region 属性
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Defines the available options the seller has for accepting domestic returns in the specified marketplace and category.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("DomesticReturnsAccepted")]

	public System.Collections.Generic.List<ReturnsAcceptedCodeType> DomesticReturnsAccepted { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				The values returned in this field indicate whether or not the seller accepts domestic returns for items listed in the associated marketplace and category.  <br><br>While most categories return the <b>ReturnsAccepted</b> flag (indicating the category supports returns), some categories will also return the <b>ReturnsNotAccepted</b> flag to indicate the seller can choose to not accept returns for an item listed in that category.  <br><br>The values returned in this field are pertinent only if <b>ReturnPolicyEnabled</b> in GetCategoryFeatures is set to <code>true</code> for the associated category, which indicates that items listed in the category must include a return policy. Here, it's worth noting that not accepting returns is a return policy. The values returned in this field are valid in AddItem and its related family of calls, and in the return policies you configure for use with the Account API.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class DomesticReturnsAcceptedDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type defines the available options for the return durations for domestic returns.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class DomesticReturnsDurationCodeType {

#region 属性
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Defines the available options for the return durations for domestic returns in the specified marketplace and category. This is the time the buyer has to initiate a return once they receive the item.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("DomesticReturnsDuration")]

	public System.Collections.Generic.List<ReturnsDurationCodeType> DomesticReturnsDuration { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				The values returned in this field indicate the return-duration options that are available for domestic returns for items listed in the associated marketplace and category.  <br><br>The values returned in this field are pertinent only if <b>ReturnPolicyEnabled</b> in GetCategoryFeatures is set to <code>true</code> for the associated category, which indicates that items listed in the category must include a return policy. The values returned in this field are valid in AddItem and its related family of calls, and in the return policies you configure for use with the Account API.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class DomesticReturnsDurationDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type defines the available options for who pays the return shipping costs for domestic returns.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class DomesticReturnsShipmentPayeeCodeType {

#region 属性
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Defines the available options for who pays the return shipping costs for domestic returns in the specified marketplace and category.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("DomesticReturnsShipmentPayee")]

	public System.Collections.Generic.List<ReturnsShipmentPayeeCodeType> DomesticReturnsShipmentPayee { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				The values returned in this field indicate the available options for who pays the return shipping for domestic returns. Possible values are <code>BUYER</code> and <code>SELLER</code>. <br><br>The values returned in this field are pertinent only if <b>ReturnPolicyEnabled</b> in GetCategoryFeatures is set to <code>true</code> for the associated category, which indicates that items listed in the category must include a return policy. The values returned in this field are valid in AddItem and its related family of calls, and in the return policies you configure for use with the Account API.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class DomesticReturnsShipmentPayeeDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 					This type is deprecated.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class DutchBINEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>EANEnabled</b> field that is returned under the <b>FeatureDefinitions</b> container of the <b>GetCategoryFeatures</b> response (as long as 'EANEnabled' is included as a <b>FeatureID</b> value in the call request or no <b>FeatureID</b> values are passed into the call request). This field is returned as an empty element (a boolean value is not returned) if one or more eBay API-enabled sites support the EAN product identifying feature.
/// 				<br><br>
/// 				To verify if a specific eBay site supports the EAN product identifying feature (for most categories), look for a 'true' value in the <b>SiteDefaults.EANEnabled</b> field.
/// 				<br><br>
/// 				To verify if a specific category on a specific eBay site supports the EAN product identifying feature, pass in a <b>CategoryID</b> value in the request, and then look for a 'true' value in the <b>EANEnabled</b> field of the corresponding <b>Category</b> node (match up the <b>CategoryID</b> values if more than one Category IDs were passed in the request).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class EANEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 			A container to specify a single eBay item to end.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class EndItemRequestContainerType {

#region 属性
    /// <summary>
    /// EndItemsYes
    /// </summary>
    /// <remarks>
    /// 
    /// 						The unique identifier of the eBay listing to end.
    /// 					
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// EndItemsYesProductDeleted
    /// </summary>
    /// <remarks>
    /// 
    /// 						The seller's reason for ending the listing early is input into this required field. The seller is not allowed to use the <code>ProductDeleted</code> value, as this ending reason can only be used internally by eBay to administratively end a listing due to the associated Catalog product being removed from the eBay Catalog.
    /// 					
    /// </remarks>

	public EndReasonCodeType? EndingReason { get; set; }
    /// <summary>
    /// EndItemsNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						Most Trading API calls support a <b>MessageID</b> element in the request
    /// 						and a <b>CorrelationID</b> element in the response. With
    /// 						<b>EndItems</b>, the seller can pass in a different
    /// 						<b>MessageID</b> value for
    /// 						each <b>EndItemRequestContainer</b> container that is used in the request. The
    /// 						<b>CorrelationID</b> value returned under each
    /// 						<b>EndItemResponseContainer</b> container is used to correlate each
    /// 						End Item request container with its corresponding End Item response container. The same <b>MessageID</b> value that you pass into a request will
    /// 						be returned in the <b>CorrelationID</b> field in the response.
    /// 						<br>
    /// 						<br>
    /// 						If you do not pass in a <b>MessageID</b> value in the request,
    /// 						<b>CorrelationID</b> is not returned.
    /// 					
    /// </remarks>

	public string MessageID { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type includes the acknowledgement of the date and time when an eBay listing was ended due to the call to <b>EndItems</b>.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class EndItemResponseContainerType {

#region 属性
    /// <summary>
    /// EndItemEndItemsAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						This timestamp indicates the date and time (returned in GMT) when the specified eBay listing was ended.
    /// 					
    /// </remarks>

	public System.DateTime? EndTime { get; set; }
    /// <summary>
    /// EndItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Most Trading API calls support a <b>MessageID</b> element in the request
    /// 						and a <b>CorrelationID</b> element in the response. With
    /// 						<b>EndItems</b>, the seller can pass in a different
    /// 						<b>MessageID</b> value for
    /// 						each <b>EndItemRequestContainer</b> container that is used in the request. The
    /// 						<b>CorrelationID</b> value returned under each
    /// 						<b>EndItemResponseContainer</b> container is used to correlate each
    /// 						End Item request container with its corresponding End Item response container. The same <b>MessageID</b> value that you pass into a request will
    /// 						be returned in the <b>CorrelationID</b> field in the response.
    /// 						<br>
    /// 						<br>
    /// 						If you do not pass in a <b>MessageID</b> value in the request,
    /// 						<b>CorrelationID</b> is not returned.
    /// 					
    /// </remarks>

	public string CorrelationID { get; set; }
    /// <summary>
    /// Conditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						A list of application-level errors or warnings (if any) that were raised
    /// 						when eBay processed the request. <br>
    /// 						<br>
    /// 						Application-level errors occur due to
    /// 						problems with business-level data on the client side or on the eBay
    /// 						server side. For example, an error would occur if the request contains
    /// 						an invalid combination of fields, or it is missing a required field,
    /// 						or the value of the field is not recognized. An error could also occur
    /// 						if eBay encountered a problem in our internal business logic while
    /// 						processing the request.<br>
    /// 						<br>
    /// 						Only returned if there were warnings or errors.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("Errors")]

	public System.Collections.Generic.List<ErrorType> Errors { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Contains the seller's preferences for the email that can be sent to the winner of an auction listing.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class EndOfAuctionEmailPreferencesType {

#region 属性
    /// <summary>
    /// 3948
    /// GetUserPreferencesConditionally
    /// SetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						The seller can customize the text of the email that is sent to the winner of an auction listing. The text of the email is provided in this field. If the seller is going to customize the text of the email through this field, the seller must also include the <b>TextCustomized</b> field and set its value to <code>true</code>.The text of the custom message for the email.
    /// 						<br>
    /// 						<br>
    /// 						This field is only returned if set for the account.
    /// 					
    /// </remarks>

	public string TemplateText { get; set; }
    /// <summary>
    /// GetUserPreferencesConditionally
    /// SetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						The seller can include a customized logo in the email that is sent to the winner of an auction listing. The full URI to this logo image should be applied in this field. If the seller is going to include a customized logo in the email through this field, the seller must also include the <b>LogoCustomized</b> field and set its value to <code>true</code>, and include the <b>LogoType</b> field and set its value to <code>Customized</code>.
    /// 						<br>
    /// 						<br>
    /// 						This field is only returned if a customized logo is being used for the customized email.
    /// 					
    /// </remarks>

	public string LogoURL { get; set; }
    /// <summary>
    /// GetUserPreferencesAlways
    /// SetUserPreferencesNoneConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is needed in the <b>SetUserPreferences</b> call if the seller would like to use a customized or eBay Store logo. If the seller would like to use a customized logo, this field's value will be set to <code>Customized</code>. If the seller would like to use their eBay Store logo (if it exists), this field's value will be set to <code>Store</code>.
    /// 						<br>
    /// 						<br>
    /// 						This field is always returned, and its value will be <code>None</code> if no logo is used in the customized email.
    /// 					
    /// </remarks>

	public EndOfAuctionLogoTypeCodeType? LogoType { get; set; }
    /// <summary>
    /// GetUserPreferencesAlways
    /// SetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is used in a <b>SetUserPreferences</b> call to set/change the setting of whether a customized email will be sent to the winning bidder or not.
    /// 						<br>
    /// 						<br>
    /// 						This field is always returned to indicate whether or not a customized email will be sent to the winning bidder.
    /// 					
    /// </remarks>

	public bool? EmailCustomized { get; set; }
    /// <summary>
    /// GetUserPreferencesConditionally
    /// SetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is used in a <b>SetUserPreferences</b> call to set/change the setting of whether customized text will be used or not in the customized email that is sent to the winning bidder. Customized text is provided through the <b>LogoURL</b> field.
    /// 						<br>
    /// 						<br>
    /// 						This field is always returned to indicate whether or not customized text is used in a customized email that is sent to the winning bidder.
    /// 					
    /// </remarks>

	public bool? TextCustomized { get; set; }
    /// <summary>
    /// GetUserPreferencesConditionally
    /// SetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is used in a <b>SetUserPreferences</b> call to set/change the setting of whether a customized logo will be used or not in the customized email that is sent to the winning bidder. The URI to a customized logo is provided through the <b>TemplateText</b> field. If the seller would like to use a customized logo, the <b>LogoType</b> field must also be included, and its value will be set to <code>Customized</code>.
    /// 						<br>
    /// 						<br>
    /// 						This field is always returned to indicate whether or not a customized logo is used in a customized email that is sent to the winning bidder.
    /// 					
    /// </remarks>

	public bool? LogoCustomized { get; set; }
    /// <summary>
    /// 
    /// 889
    /// NoOp
    /// 993
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is deprecated.
    /// 					
    /// </remarks>

	public bool? CopyEmail { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>ImageURL</b>, <b>ImageDescription</b>, and <b>ProductInformationsheet</b> regulatory fields that are used at the listing level to provide Energy Efficiency Label related information.<br>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class EnergyEfficiencyType {

#region 属性
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemConditionally
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The URL to the Energy Efficiency Label image that is applicable to an item. This field is required if an Energy Efficiency Label is provided. The URL provided must be an eBay Picture Services (EPS) URL only. You can upload pictures to eBay Picture Services via the <strong>UploadSiteHostedPictures</strong> call.
    /// 					
    /// </remarks>

	public string ImageURL { get; set; }
    /// <summary>
    /// 280
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemConditionally
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						A brief verbal summary of the information included on the Energy Efficiency Label for an item.<br />For example, <em>On a scale of A to G the rating is E</em>.<br />As with all strings, you need to escape reserved characters such as ampersand. This field is required if an Energy Efficiency Label is provided.
    /// 					
    /// </remarks>

	public string ImageDescription { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemConditionally
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The URL to the Product Information Sheet that provides complete manufacturer-provided efficiency information about an item. This field is required if an Energy Efficiency Label is provided. The URL provided must be an eBay Picture Services (EPS) URL only. You can upload pictures to eBay Picture Services via the <strong>UploadSiteHostedPictures</strong> call.
    /// 					
    /// </remarks>

	public string ProductInformationsheet { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>EpidSupported</b> field that is returned under the <b>FeatureDefinitions</b> container of the <b>GetCategoryFeatures</b> response (as long as <b>EpidSupported</b> is included as a <b>FeatureID</b> value in the call request, or no <b>FeatureID</b> values are passed into the call request). The <b>EpidSupported</b> field is returned as an empty element (a boolean value is not returned) if one or more eBay API-enabled sites support specifying parts compatibility through an eBay product ID (ePID).
/// 				<br><br>
/// 				At this time, this feature is only supported for motorcycle and scooter listings on the Germany and UK sites.
/// 				<br><br>
/// 				To verify if a specific category supports specifying parts compatibility through an ePID, pass in a <b>EpidSupported</b> value in the request, and then look for a <code>true</code> value in the <b>EpidSupported</b> field of the corresponding <b>Category</b> node (match up the <b>CategoryID</b> values if more than one category ID was passed in the request).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class EpidSupportedDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type used by the <b>ExcludeShippingLocationDetails</b> containers that are returned in the <b>GeteBayDetails</b> response. The values returned in the <b>ExcludeShippingLocationDetails.Location</b> fields are the values that can be specified when specifying excluded shipping locations in an Add/Revise/Relist item call, or in a shipping business policy.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ExcludeShippingLocationDetailsType {

#region 属性
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The localized location name.
    /// 					
    /// </remarks>

	public string Description { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The location or region code to be used with the AddItem family of calls. These
    /// 						codes are also returned by GetItem. This code reflects the <a href=
    /// 						"http://www.iso.org/iso/country_codes/iso_3166_code_lists/english_country_names_and_code_elements.htm"
    /// 						>ISO 3166</a> codes.
    /// 					
    /// </remarks>

	public string Location { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The region code to which the location belongs.
    /// 					
    /// </remarks>

	public string Region { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Returns the current version number of the ExcludeShippingLocation data. Use
    /// 						the version number to determine if you need to refresh your cached client data.
    /// 					
    /// </remarks>

	public string DetailVersion { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The time in GMT that the feature flags for the details were last updated.
    /// 						Use this timestamp to determine if you need to refresh your cached client data.
    /// 					
    /// </remarks>

	public System.DateTime? UpdateTime { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// 
/// 579
/// 681
/// NoOp
/// </summary>
/// <remarks>
///  
/// 				This type is deprecated.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ExpressConditionRequiredDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// 
/// 579
/// 681
/// NoOp
/// </summary>
/// <remarks>
///  
/// 				This type is deprecated.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ExpressEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// 
/// 579
/// 681
/// NoOp
/// </summary>
/// <remarks>
///  
/// 			   This type is deprecated.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ExpressPicturesRequiredDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is used to provide contact hours for a seller of a Classified Ad listing, including motor vehicles. There is also a boolean field in this type that indicates whether or not potential buyer can contact the seller by email.
/// 		
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ExtendedContactDetailsType {

#region 属性
    /// <summary>
    /// AddItemAddItemsRelistItemReviseItemVerifyAddItemVerifyRelistItemNo
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetSellerListDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This containers consists of fields that allows the seller of a Classified Ad listing to tell potential buyers what days and times they may be contacted to inquire about the listing.
    /// 					
    /// </remarks>

	public ContactHoursDetailsType ContactHoursDetails { get; set; }
    /// <summary>
    /// AddItemAddItemsReviseItemVerifyAddItemRelistItemVerifyRelistItemNo
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						A value of <code>true</code> in this field indicates that potential buyers can contact the seller of the Classified Ad listing by email.
    /// 					
    /// </remarks>

	public bool? ClassifiedAdContactByEmailEnabled { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is used by the <b>ExtendedPictureDetails</b> container, which is no longer returned under any circumstances, including when self-hosted pictures are used for the item. When self-hosted pictures are used by the seller, only the external URL of the gallery image is shown in the <b>PictureDetails.ExternalPictureURL</b> field, and only the equivalent eBay Picture Server (EPS) URLs are shown for the rest of the item's images in separate <b>PictureDetails.PictureURL</b> fields.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ExtendedPictureDetailsType {

#region 属性
    /// <summary>
    /// 1375
    /// NotReturned
    /// PictureDetails.ExternalPictureURL
    /// GetItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					The <b>ExtendedPictureDetails</b> container and its child fields are no longer returned under any circumstances, including when self-hosted pictures are used for the item. When self-hosted pictures are used by the seller, only the external URL of the gallery image is shown in the <b>PictureDetails.ExternalPictureURL</b> field, and only the equivalent eBay Picture Server (EPS) URLs are shown for the rest of the item's images in separate <b>PictureDetails.PictureURL</b> fields.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("PictureURLs")]

	public System.Collections.Generic.List<PictureURLsType> PictureURLs { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is used by the <b>ExtendedProducerResponsibility</b> container, which provides IDs for the producer or importer related to the new item, packaging, added documentation, or an eco-participation fee. In some markets, such as in France, this may be the importer of the item. For more information, see the <b>Extended Producer Responsibility for business sellers</b> page for your site (for example, <a href="https://www.ebay.com/help/selling/all-about-selling/selling-internationally/extended-producer-responsibility-for-business-sellers?id=5314" target="_blank">https://www.ebay.com/help/selling/all-about-selling/selling-internationally/extended-producer-responsibility-for-business-sellers?id=5314</a>). 
/// 				<br/><br/>For <b>GetItem</b> calls, this container is only returned to the listing owner, if the container is available.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ExtendedProducerResponsibilityType {

#region 属性
    /// <summary>
    /// 16
    /// 0.0
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemNo
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This is the fee paid for new items to the eco-organization (for example, "eco-organisme" in France). It is a contribution to the financing of the elimination of the item responsibly. For multiple-variation listings, the <b>EcoParticipationFee</b> in the <b>VariationExtendedProducerResponsibility</b> container is used for each variation in the listing, and not the <b>EcoParticipationFee</b> in the <b>ExtendedProducerResponsibility</b> container.
    /// 					
    /// </remarks>

	public AmountType EcoParticipationFee { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// ProductCreationEnabled
/// </summary>
/// <remarks>
/// 
/// 				This type is used by the <b>FeatureDefinitions</b> container that is returned in the <b>GetCategoryFeatures</b> response to indicate which eBay features are available on one more eBay marketplaces. If no <b>FeatureID</b> field is included in the call request, all eBay features available for one more eBay marketplaces are returned. If one or more <b>FeatureID</b> fields are included in the call request, only those eBay features specified in each <b>FeatureID</b> field are returned in the response.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class FeatureDefinitionsType {

#region 属性
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support multiple listing durations. Listing durations will vary based on the selling format (auction, fixed-price, or classified ad) and the eBay category. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>ListingDurations</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public ListingDurationDefinitionsType ListingDurations { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces require shipping terms at listing time, which includes at least one domestic shipping service option and its associated costs. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>ShippingTermsRequired</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public ShippingTermRequiredDefinitionType ShippingTermsRequired { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the Best Offer feature. The Best Offer feature allows buyers and sellers to negotiate the price of the item.  This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>BestOfferEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public BestOfferEnabledDefinitionType BestOfferEnabled { get; set; }
    /// <remarks>
    /// 
    /// 						This field is no longer applicable as Dutch auctions are no longer supported on any eBay marketplace.
    /// 					
    /// </remarks>

	public DutchBINEnabledDefinitionType DutchBINEnabled { get; set; }
    /// <remarks>
    /// 
    /// 						This field is deprecated.
    /// 					
    /// </remarks>

	public UserConsentRequiredDefinitionType UserConsentRequired { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the temporary display of a seller's listing on a section of the eBay Home Page. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>HomePageFeaturedEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public HomePageFeaturedEnabledDefinitionType HomePageFeaturedEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the Pro Pack listing upgrade bundle. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>ProPackEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public ProPackEnabledDefinitionType ProPackEnabled { get; set; }
    /// <remarks>
    /// 
    /// 						This field is deprecated.
    /// 					
    /// </remarks>

	public BasicUpgradePackEnabledDefinitionType BasicUpgradePackEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the Value Pack listing upgrade bundle. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>ValuePackEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public ValuePackEnabledDefinitionType ValuePackEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the Pro Pack Plus listing upgrade bundle. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>ProPackPlusEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public ProPackPlusEnabledDefinitionType ProPackPlusEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support Classified Ad listings. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>AdFormatEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public AdFormatEnabledDefinitionType AdFormatEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support counter offers to Best Offers. The Best Offer feature allows buyers and sellers to negotiate the price of the item, and once a Best Offer price is proposed, the seller can send the buyer a counter offer, and a buyer may even send another counter offer to the seller's counter offer. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>BestOfferCounterEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public BestOfferCounterEnabledDefinitionType BestOfferCounterEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the Best Offer Auto-Decline feature. The Best Offer Auto-Decline feature allows a seller to set a lower threshold dollar value on a listing, and any Best Offer amount below this amount is automatically declined by the eBay system. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>BestOfferAutoDeclineEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public BestOfferAutoDeclineEnabledDefinitionType BestOfferAutoDeclineEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support Motors Local Market listings for dealership subscribers with a specialty subscription. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>LocalMarketSpecialitySubscription</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public LocalMarketSpecialitySubscriptionDefinitionType LocalMarketSpecialitySubscription { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						TThis field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support Motors Local Market listings for dealership subscribers with a regular subscription. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>LocalMarketRegularSubscription</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public LocalMarketRegularSubscriptionDefinitionType LocalMarketRegularSubscription { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support Motors Local Market listings for dealership subscribers with a premium subscription. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>LocalMarketPremiumSubscription</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public LocalMarketPremiumSubscriptionDefinitionType LocalMarketPremiumSubscription { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support Motors Local Market listings for dealerships without a subscription. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>LocalMarketNonSubscription</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public LocalMarketNonSubscriptionDefinitionType LocalMarketNonSubscription { get; set; }
    /// <summary>
    /// 579
    /// 681
    /// NoOp
    /// 
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is deprecated.
    /// 					
    /// </remarks>

	public ExpressEnabledDefinitionType ExpressEnabled { get; set; }
    /// <summary>
    /// 579
    /// 681
    /// NoOp
    /// 
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is deprecated.
    /// 					
    /// </remarks>

	public ExpressPicturesRequiredDefinitionType ExpressPicturesRequired { get; set; }
    /// <summary>
    /// 579
    /// 681
    /// NoOp
    /// 
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is deprecated.
    /// 					
    /// </remarks>

	public ExpressConditionRequiredDefinitionType ExpressConditionRequired { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces require a minimum reserve price for an auction item. This feature is only applicable to auction listings. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>MinimumReservePrice</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public MinimumReservePriceDefinitionType MinimumReservePrice { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is deprecated.
    /// 					
    /// </remarks>

	public TCREnabledDefinitionType TransactionConfirmationRequestEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces allow the seller to provide contact information at listing time for a classified ad listing. This feature is only applicable to classified ad listings. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>SellerContactDetailsEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public SellerContactDetailsEnabledDefinitionType SellerContactDetailsEnabled { get; set; }
    /// <remarks>
    /// 
    /// 						This field is deprecated.
    /// 					
    /// </remarks>

	public StoreInventoryEnabledDefinitionType StoreInventoryEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is deprecated.
    /// 					
    /// </remarks>

	public SkypeMeTransactionalEnabledDefinitionType SkypeMeTransactionalEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is deprecated.
    /// 					
    /// </remarks>

	public SkypeMeNonTransactionalEnabledDefinitionType SkypeMeNonTransactionalEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support allow dealership subscribers with a regular subscription to specify local market radius for Motors Local Market listings. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>LocalListingDistancesRegular</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public LocalListingDistancesRegularDefinitionType LocalListingDistancesRegular { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces allow dealership subscribers with a specialty subscription to specify local market radius for Motors Local Market listings. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>LocalListingDistancesSpecialty</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public LocalListingDistancesSpecialtyDefinitionType LocalListingDistancesSpecialty { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces allow dealership subscribers without a subscription to specify local market radius for Motors Local Market listings. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>LocalListingDistancesNonSubscription</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public LocalListingDistancesNonSubscriptionDefinitionType LocalListingDistancesNonSubscription { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces allow for the display of acceptable payment methods for classified ad listings. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>ClassifiedAdPaymentMethodEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public ClassifiedAdPaymentMethodEnabledDefinitionType ClassifiedAdPaymentMethodEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces allow for the display of shipping service options for classified ad listings. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>ClassifiedAdShippingMethodEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public ClassifiedAdShippingMethodEnabledDefinitionType ClassifiedAdShippingMethodEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the Best Offer feature for classified ad listings. The Best Offer feature allows buyers and sellers to negotiate the price of the item. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>ClassifiedAdBestOfferEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public ClassifiedAdBestOfferEnabledDefinitionType ClassifiedAdBestOfferEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support counter offers to Best Offers for classified ad listings. The Best Offer feature allows buyers and sellers to negotiate the price of the item, and once a Best Offer price is proposed, the seller can send the buyer a counter offer, and a buyer may even send another counter offer to the seller's counter offer. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>ClassifiedAdCounterOfferEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public ClassifiedAdCounterOfferEnabledDefinitionType ClassifiedAdCounterOfferEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the Best Offer Auto-Decline feature for classified ad listings. The Best Offer Auto-Decline feature allows a seller to set a lower threshold dollar value on a listing, and any Best Offer amount below this amount is automatically declined by the eBay system. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>ClassifiedAdAutoDeclineEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public ClassifiedAdAutoDeclineEnabledDefinitionType ClassifiedAdAutoDeclineEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the use of a phone number when contacting the
    /// 						seller about a classified ad listing. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>ClassifiedAdContactByPhoneEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public ClassifiedAdContactByPhoneEnabledDefinitionType ClassifiedAdContactByPhoneEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the use of an email address when contacting the seller about a classified ad listing. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>ClassifiedAdContactByEmailEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public ClassifiedAdContactByEmailEnabledDefintionType ClassifiedAdContactByEmailEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						eBay controls all forms of electronic payment methods that are avaialable to buyers, so this field is no longer applicable.
    /// 					
    /// </remarks>

	public SafePaymentRequiredDefinitionType SafePaymentRequired { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is deprecated.
    /// 					
    /// </remarks>

	public ClassifiedAdPayPerLeadEnabledDefinitionType ClassifiedAdPayPerLeadEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the use of Item Specifics in listings. Item Specifics are typical aspects that items in a specific  category tend to have, and they allow sellers to provide descriptive details of an item in a structured manner. For example, in a jewelry category, sellers might describe lockets with Item Specifics name-value pairs like "Chain Length=18 in." and "Main Shape=Heart", or in a Washers & Dryers category, sellers might include "Type=Top-Loading". This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>ItemSpecificsEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public ItemSpecificsEnabledDefinitionType ItemSpecificsEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						PaisaPay is a deprecated payment method, so this field is no longer applicable.
    /// 					
    /// </remarks>

	public PaisaPayFullEscrowEnabledDefinitionType PaisaPayFullEscrowEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the use of Brand and MPN (Manufacturer Part Number) to identify a product. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>BrandMPNIdentifierEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public BrandMPNIdentifierEnabledDefinitionType BrandMPNIdentifierEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the Best Offer Auto-Accept feature. The Best Offer Auto-Accept feature allows a seller to set a threshold dollar value on a listing, and any Best Offer amount at or above this amount is automatically accepted by the eBay system. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>BestOfferAutoAcceptEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public BestOfferAutoAcceptEnabledDefinitionType BestOfferAutoAcceptEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the Best Offer Auto-Accept feature for classified ad listings. The Best Offer Auto-Accept feature allows a seller to set a threshold dollar value on a listing, and any Best Offer amount at or above this amount is automatically accepted by the eBay system. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>ClassifiedAdAutoAcceptEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public ClassifiedAdAutoAcceptEnabledDefinitionType ClassifiedAdAutoAcceptEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 							This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support cross-border trading on the US and CA (English) sites. In cross-border trading, also referred to as International site visibility, a seller is able to post a listing to an additional eBay site for an additional small fee. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>CrossBorderTradeNorthAmericaEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 						
    /// </remarks>

	public CrossBorderTradeNorthAmericaEnabledDefinitionType CrossBorderTradeNorthAmericaEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 							This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support cross-border trading on the UK and Ireland sites. In cross-border trading, also referred to as International site visibility, a seller is able to post a listing to an additional eBay site for an additional small fee. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>CrossBorderTradeGBEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 						
    /// </remarks>

	public CrossBorderTradeGBEnabledDefinitionType CrossBorderTradeGBEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is for future use, as cross-border trading (aka International site visibility) is not currently supported for Australia.
    /// 					
    /// </remarks>

	public CrossBorderTradeAustraliaEnabledDefinitionType CrossBorderTradeAustraliaEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is deprecated.
    /// 					
    /// </remarks>

	public BuyerGuaranteeEnabledDefinitionType BuyerGuaranteeEnabled { get; set; }
    /// <remarks>
    /// 
    /// 							This field is deprecated.
    /// 						
    /// </remarks>

	public CombinedFixedPriceTreatmentEnabledDefinitionType CombinedFixedPriceTreatmentEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is deprecated.
    /// 					
    /// </remarks>

	public ListingEnhancementDurationDefinitionType GalleryFeaturedDurations { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						PaisaPay is a deprecated payment method, so this field is no longer applicable.
    /// 					
    /// </remarks>

	public INEscrowWorkflowTimelineDefinitionType INEscrowWorkflowTimeline { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support motor vehicle classified ad listings. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>eBayMotorsProAdFormatEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public eBayMotorsProAdFormatEnabledDefinitionType eBayMotorsProAdFormatEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the use of a phone number when contacting the
    /// 						seller about a motor vehicle classified ad listing. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>eBayMotorsProContactByPhoneEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public eBayMotorsProContactByPhoneEnabledDefinitionType eBayMotorsProContactByPhoneEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the use of multiple phone numbers for the seller for a motor vehicle classified ad listing. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>eBayMotorsProContactByPhoneEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public eBayMotorsProPhoneCountDefinitionType eBayMotorsProPhoneCount { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						TThis field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the use of an address when contacting the
    /// 						seller about a motor vehicle classified ad listing. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>eBayMotorsProContactByAddressEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public eBayMotorsProContactByAddressEnabledDefinitionType eBayMotorsProContactByAddressEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the use of multiple street address for the seller for a motor vehicle classified ad listing. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>eBayMotorsProContactByAddressEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public eBayMotorsProStreetCountDefinitionType eBayMotorsProStreetCount { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the use of a company name when contacting the
    /// 						seller about a motor vehicle classified ad listing. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>eBayMotorsProCompanyNameEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public eBayMotorsProCompanyNameEnabledDefinitionType eBayMotorsProCompanyNameEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the use of an email address when contacting the seller about a motor vehicle classified ad listing. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>eBayMotorsProContactByEmailEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public eBayMotorsProContactByEmailEnabledDefinitionType eBayMotorsProContactByEmailEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the Best Offer feature is for motor vehicle classified ad listings. The Best Offer feature allows buyers and sellers to negotiate the price of the item. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>eBayMotorsProBestOfferEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public eBayMotorsProBestOfferEnabledDefinitionType eBayMotorsProBestOfferEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the Best Offer Auto-Accept feature for motor vehicle classified ad listings. The Best Offer Auto-Accept feature allows a seller to set a threshold dollar value on a listing, and any Best Offer amount at or above this amount is automatically accepted by the eBay system. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>eBayMotorsProAutoAcceptEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public eBayMotorsProAutoAcceptEnabledDefinitionType eBayMotorsProAutoAcceptEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the Best Offer Auto-Decline feature for motor vehicle classified ad listings. The Best Offer Auto-Decline feature allows a seller to set a lower threshold dollar value on a listing, and any Best Offer amount below this amount is automatically declined by the eBay system. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>eBayMotorsProAutoDeclineEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public eBayMotorsProAutoDeclineEnabledDefinitionType eBayMotorsProAutoDeclineEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces allow for the display of acceptable payment methods for motor vehicle classified ad listings. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>eBayMotorsProPaymentMethodCheckOutEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public eBayMotorsProPaymentMethodCheckOutEnabledDefinitionType eBayMotorsProPaymentMethodCheckOutEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces allow for the display of shipping service options for motor vehicle classified ad listings. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>eBayMotorsProShippingMethodEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public eBayMotorsProShippingMethodEnabledDefinitionType eBayMotorsProShippingMethodEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support counter offers to Best Offers for motor vehicle classified ad listings. The Best Offer feature allows buyers and sellers to negotiate the price of the item, and once a Best Offer price is proposed, the seller can send the buyer a counter offer, and a buyer may even send another counter offer to the seller's counter offer. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>eBayMotorsProCounterOfferEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public eBayMotorsProCounterOfferEnabledDefinitionType eBayMotorsProCounterOfferEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces allow the seller to provide contact information at listing time for a motor vehicle classified ad listing. This feature is only applicable to motor vehicle classified ad listings. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>eBayMotorsProSellerContactDetailsEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public eBayMotorsProSellerContactDetailsEnabledDefinitionType eBayMotorsProSellerContactDetailsEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support Motors Local Market listings. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>LocalMarketAdFormatEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public LocalMarketAdFormatEnabledDefinitionType LocalMarketAdFormatEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces allow the use of a phone number when contacting the
    /// 						seller about a Motors Local Market listing. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>LocalMarketContactByPhoneEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public LocalMarketContactByPhoneEnabledDefinitionType LocalMarketContactByPhoneEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces allow the use of multiple phone numbers for the seller for a Motors Local Market listing. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>LocalMarketPhoneCount</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public LocalMarketPhoneCountDefinitionType LocalMarketPhoneCount { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces allow the use of an address when contacting the
    /// 						seller about a Motors Local Market listing. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>LocalMarketContactByAddressEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public LocalMarketContactByAddressEnabledDefinitionType LocalMarketContactByAddressEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces allow the use of multiple street address for the seller for a Motors Local Market listing. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>LocalMarketStreetCount</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public LocalMarketStreetCountDefinitionType LocalMarketStreetCount { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the use of a company name when contacting the
    /// 						seller about a Motors Local Market listing. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>LocalMarketCompanyNameEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public LocalMarketCompanyNameEnabledDefinitionType LocalMarketCompanyNameEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the use of an email address when contacting the seller about a Motors Local Market listing. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>LocalMarketContactByEmailEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public LocalMarketContactByEmailEnabledDefinitionType LocalMarketContactByEmailEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the Best Offer feature is for Motors Local Market listings. The Best Offer feature allows buyers and sellers to negotiate the price of the item. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>LocalMarketBestOfferEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public LocalMarketBestOfferEnabledDefinitionType LocalMarketBestOfferEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the Best Offer Auto-Accept feature for Motors Local Market listings. The Best Offer Auto-Accept feature allows a seller to set a threshold dollar value on a listing, and any Best Offer amount at or above this amount is automatically accepted by the eBay system. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>LocalMarketAutoAcceptEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public LocalMarketAutoAcceptEnabledDefinitionType LocalMarketAutoAcceptEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the Best Offer Auto-Decline feature for Motors Local Market listings. The Best Offer Auto-Accept feature allows a seller to set a threshold dollar value on a listing, and any Best Offer amount at or above this amount is automatically accepted by the eBay system. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>LocalMarketAutoDeclineEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public LocalMarketAutoDeclineEnabledDefinitionType LocalMarketAutoDeclineEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces allow for the display of acceptable payment methods for Motors Local Market listings. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>LocalMarketPaymentMethodCheckOutEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public LocalMarketPaymentMethodCheckOutEnabledDefinitionType LocalMarketPaymentMethodCheckOutEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces allow for the display of shipping service options for Motors Local Market listings. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>LocalMarketShippingMethodEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public LocalMarketShippingMethodEnabledDefinitionType LocalMarketShippingMethodEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support counter offers to Best Offers for Motors Local Market listings. The Best Offer feature allows buyers and sellers to negotiate the price of the item, and once a Best Offer price is proposed, the seller can send the buyer a counter offer, and a buyer may even send another counter offer to the seller's counter offer. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>LocalMarketCounterOfferEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public LocalMarketCounterOfferEnabledDefinitionType LocalMarketCounterOfferEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces allow the seller to provide contact information at listing time for Motors Local Market listings. This feature is only applicable to motor vehicle classified ad listings. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>LocalMarketSellerContactDetailsEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public LocalMarketSellerContactDetailsEnabledDefinitionType LocalMarketSellerContactDetailsEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the use of multiple phone numbers for the seller for a classified ad listing. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>ClassifiedAdPhoneCount</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public ClassifiedAdPhoneCountDefinitionType ClassifiedAdPhoneCount { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the use of an address when contacting the
    /// 						seller about a classified ad listing. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>ClassifiedAdContactByAddressEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a>
    /// 					
    /// </remarks>

	public ClassifiedAdContactByAddressEnabledDefinitionType ClassifiedAdContactByAddressEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the use of multiple street addresses for the seller for a classified ad listing. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>ClassifiedAdStreetCount</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public ClassifiedAdStreetCountDefinitionType ClassifiedAdStreetCount { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the use of a company name when contacting the
    /// 						seller about a classified ad listing. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>ClassifiedAdCompanyNameEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public ClassifiedAdCompanyNameEnabledDefinitionType ClassifiedAdCompanyNameEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is deprecated.
    /// 					
    /// </remarks>

	public SpecialitySubscriptionDefinitionType SpecialitySubscription { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is deprecated.
    /// 					
    /// </remarks>

	public RegularSubscriptionDefinitionType RegularSubscription { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is deprecated.
    /// 					
    /// </remarks>

	public PremiumSubscriptionDefinitionType PremiumSubscription { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is deprecated.
    /// 					
    /// </remarks>

	public NonSubscriptionDefinitionType NonSubscription { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the use of return policies in listings. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>ReturnPolicyEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public ReturnPolicyEnabledDefinitionType ReturnPolicyEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the use of a stated handling time in listings. The handling time is the maximum number of business days the seller
    /// 						commits to for preparing an item to be shipped after receiving a
    /// 						cleared payment. The seller's handling time does not include the
    /// 						shipping time (the carrier's transit time). This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>HandlingTimeEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public HandlingTimeEnabledDefinitionType HandlingTimeEnabled { get; set; }
    /// <remarks>
    /// 
    /// 						This field is deprecated.
    /// 					
    /// </remarks>

	public PayPalRequiredForStoreOwnerDefinitionType PayPalRequiredForStoreOwner { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces allow the quantity of a listing to be revised during the life of the listing. This feature is not applicable to auction listings. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>ReviseQuantityAllowed</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public ReviseQuantityAllowedDefinitionType ReviseQuantityAllowed { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces allow the price of a listing to be revised during the life of the listing. This feature is not applicable to auction listings. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>RevisePriceAllowed</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public RevisePriceAllowedDefinitionType RevisePriceAllowed { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support extended listing durations for eBay Business Sellers with eBay Stores. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>RevisePriceAllowed</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public StoreOwnerExtendedListingDurationsEnabledDefinitionType StoreOwnerExtendedListingDurationsEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is deprecated.
    /// 					
    /// </remarks>

	public StoreOwnerExtendedListingDurationsDefinitionType StoreOwnerExtendedListingDurations { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces allow for the display of acceptable payment methods in listings. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>PaymentMethod</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 						<br><br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						eBay now controls all electronic payment methods available to buyers, but sellers still need to specify offline payment methods for listings that require/support offline payment such as motor vehicle listings.</span>
    /// 					
    /// </remarks>

	public PaymentMethodDefinitionType PaymentMethod { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces allow for the applicable max cap per shipping cost for shipping service group1. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>Group1MaxFlatShippingCost</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public Group1MaxFlatShippingCostDefinitionType Group1MaxFlatShippingCost { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces allow for the applicable max cap per shipping cost for shipping service group2. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>Group2MaxFlatShippingCost</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public Group2MaxFlatShippingCostDefinitionType Group2MaxFlatShippingCost { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						TThis field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces allow for the applicable max cap per shipping cost for shipping service group3. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>Group3MaxFlatShippingCost</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public Group3MaxFlatShippingCostDefinitionType Group3MaxFlatShippingCost { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces do not impose a maximum flat-rate shipping cost if the item is being shipped internationally. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>MaxFlatShippingCostCBTExempt</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public MaxFlatShippingCostCBTExemptDefinitionType MaxFlatShippingCostCBTExempt { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces do not impose a maximum flat-rate shipping cost. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>MaxFlatShippingCost</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public MaxFlatShippingCostDefinitionType MaxFlatShippingCost { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support multiple-variation listings for some categories. Multiple-variation listings contain items that are logically the same product, but that vary in color, size, or other aspect. For example, a particular brand and style of shirt could be available in different sizes and colors, such as "large blue" and "medium black" variations. This feature is only applicable to fixed-price listings. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>VariationsEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public VariationsEnabledDefinitionType VariationsEnabled { get; set; }
    /// <remarks>
    /// 
    /// 						This field is deprecated.
    /// 					
    /// </remarks>

	public AttributeConversionEnabledFeatureDefinitionType AttributeConversionEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support free, automatic upgrades for Gallery Plus for some categories. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>FreeGalleryPlusEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public FreeGalleryPlusEnabledDefinitionType FreeGalleryPlusEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support a free Picture Pack upgrade for some categories. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>FreePicturePackEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public FreePicturePackEnabledDefinitionType FreePicturePackEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support Parts Compatibility for some Parts & Accessories categories. Parts compatibility allows a seller to show a list of all the vehicles that a part or accessory is compatible with in a listing. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>ItemCompatibilityEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public ItemCompatibilityEnabledDefinitionType ItemCompatibilityEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces define a maximum limit for the number of compatible applications for items listed with parts compatibilities by application. Parts compatibility allows a seller to show a list of all the vehicles that a part or accessory is compatible with in a listing. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>MaxItemCompatibility</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public MaxItemCompatibilityDefinitionType MaxItemCompatibility { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces define a minimum amount for the number of compatible applications for items listed with parts compatibilities by application. Parts compatibility allows a seller to show a list of all the vehicles that a part or accessory is compatible with in a listing. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>MinItemCompatibility</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public MinItemCompatibilityDefinitionType MinItemCompatibility { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the textual description of an item's condition at listing time. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>ConditionEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public ConditionEnabledDefinitionType ConditionEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support Condition IDs to specify an item's condition at listing time. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>ConditionValues</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public ConditionValuesDefinitionType ConditionValues { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support value categories. A Value category will typically have lower listing fees or another eBay promotion. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>ValueCategory</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public ValueCategoryDefinitionType ValueCategory { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is no longer applicable.
    /// 					
    /// </remarks>

	public ProductCreationEnabledDefinitionType ProductCreationEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the EAN product identifying feature. This field will be returned as long as <b>EANEnabled</b> is included as a <b>FeatureID</b> value in the call request or no <b>FeatureID</b> values are passed into the call request.
    /// 						<br>
    /// 						<br>
    /// 						To verify if a specific eBay site supports the EAN product identifying feature (for most categories), look for a <code>true</code> value in the <b>SiteDefaults.EANEnabled</b> field.
    /// 						<br>
    /// 						<br>
    /// 						To verify if a specific category on a specific eBay site supports the EAN product identifying feature, pass in a <b>CategoryID</b> value in the request, and then look for a <code>true</code> value in the <b>EANEnabled</b> field of the corresponding <b>Category</b> node (match up the <b>CategoryID</b> values if more than one Category IDs were passed in the request).
    /// 					
    /// </remarks>

	public EANEnabledDefinitionType EANEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the ISBN product identifying feature. This field will be returned as long as <b>ISBNEnabled</b> is included as a <b>FeatureID</b> value in the call request or no <b>FeatureID</b> values are passed into the call request.
    /// 						<br>
    /// 						<br>
    /// 						To verify if a specific eBay site supports the ISBN product identifying feature (for most categories), look for a <code>true</code> value in the <b>SiteDefaults.ISBNEnabled</b> field.
    /// 						<br>
    /// 						<br>
    /// 						To verify if a specific category on a specific eBay site supports the ISBN product identifying feature, pass in a <b>CategoryID</b> value in the request, and then look for a <code>true</code> value in the <b>ISBNEnabled</b> field of the corresponding <b>Category</b> node (match up the <b>CategoryID</b> values if more than one Category IDs were passed in the request).
    /// 					
    /// </remarks>

	public ISBNEnabledDefinitionType ISBNEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the UPC product identifying feature. This field will be returned as long as <b>UPCEnabled</b> is included as a <b>FeatureID</b> value in the call request or no <b>FeatureID</b> values are passed into the call request.
    /// 						<br>
    /// 						<br>
    /// 						To verify if a specific eBay site supports the UPC product identifying feature (for most categories), look for a <code>true</code> value in the <b>SiteDefaults.UPCEnabled</b> field.
    /// 						<br>
    /// 						<br>
    /// 						To verify if a specific category on a specific eBay site supports the UPC product identifying feature, pass in a <b>CategoryID</b> value in the request, and then look for a <code>true</code> value in the <b>UPCEnabled</b> field of the corresponding <b>Category</b> node (match up the <b>CategoryID</b> values if more than one Category IDs were passed in the request).
    /// 					
    /// </remarks>

	public UPCEnabledDefinitionType UPCEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the Parts Compatibility feature for motor vehicles. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>CompatibleVehicleType</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public CompatibleVehicleTypeDefinitionType CompatibleVehicleType { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces define a maximum limit for the number of fine-grained item compatibilities that can be applied to a listing. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>MaxGranularFitmentCount</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public MaxGranularFitmentCountDefinitionType MaxGranularFitmentCount { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the use of category groups in shipping business policies. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>ShippingProfileCategoryGroup</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public ProfileCategoryGroupDefinitionType ShippingProfileCategoryGroup { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///  						TThis field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the use of category groups in payment business policies. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>PaymentProfileCategoryGroup</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public ProfileCategoryGroupDefinitionType PaymentProfileCategoryGroup { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the use of category groups in return business policies. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>ReturnPolicyProfileCategoryGroup</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public ProfileCategoryGroupDefinitionType ReturnPolicyProfileCategoryGroup { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the use of the VIN (Vehicle Identification Number) field to identify a motor vehicle and create a listing is supported. VINs are supported on the US, Canada, Canada-French, and Australia sites. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>VINSupported</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public VINSupportedDefinitionType VINSupported { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the use of the VRM (Vehicle Registration Mark) field to identify a motor vehicle and create a listing is supported. VRMs are only supported on the UK site. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>VRMSupported</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public VRMSupportedDefinitionType VRMSupported { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support seller-provided titles in motor vehicle listings. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>SellerProvidedTitleSupported</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public SellerProvidedTitleSupportedDefinitionType SellerProvidedTitleSupported { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support deposits for motor vehicle listings. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>DepositSupported</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public DepositSupportedDefinitionType DepositSupported { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the Global Shipping Program (GSP) as the method for shipping orders internationally. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <code>GlobalShippingEnabled</code> is not one of the values passed into those <a href="types/FeatureIDCodeType.html">FeatureID</a> fields.
    /// 					
    /// </remarks>

	public GlobalShippingEnabledDefinitionType GlobalShippingEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the Boat and Motorcycle Parts Compatibility feature. This field will be returned as long as <b>AdditionalCompatibilityEnabled</b> is included as a <b>FeatureID</b> value in the call request or no <a href="types/FeatureIDCodeType.html">FeatureID</a> values are passed into the call request.
    /// 						<br>
    /// 						<br>
    /// 						To verify if a specific eBay site supports Boat or Motorcycle Parts Compatibility (for most categories), look for a <code>true</code> value in the <b>SiteDefaults.AdditionalCompatibilityEnabled</b> field.
    /// 						<br>
    /// 						<br>
    /// 						To verify if a specific category on a specific eBay site supports Boat and Motorcycle Parts Compatibility, pass in a
    /// 						<b>CategoryID</b> value in the request, and then look for a
    /// 						<code>true</code>
    /// 						<br> value in the <b>AdditionalCompatibilityEnabled</b> field of the corresponding <b>Category</b> node (match up the <b>CategoryID</b> values if more than one Category IDs were passed in the request).
    /// 					
    /// </remarks>

	public AdditionalCompatibilityEnabledDefinitionType AdditionalCompatibilityEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the Click and Collect feature. This field will be returned as long as <b>PickupDropOffEnabled</b> is included as a <b>FeatureID</b> value in the call request or no <a href="types/FeatureIDCodeType.html">FeatureID</a> values are passed into the call request.
    /// 						<br>
    /// 						<br>
    /// 						To verify if a specific eBay site supports the Click and Collect feature (for most categories), look for a <code>true</code> value in the <b>SiteDefaults.PickupDropOffEnabled</b> field.
    /// 						<br>
    /// 						<br>
    /// 						To verify if a specific category on a specific eBay site supports the Click and Collect feature, pass in a <b>CategoryID</b> value in the request, and then look for a <code>true</code> value in the <b>PickupDropOffEnabled</b> field of the corresponding <b>Category</b> node (match up the <b>CategoryID</b> values if more than one Category IDs were passed in the request).
    /// 						<br>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note:</b> For Click and Collect eligible sellers, the Click and Collect feature can only be enabled at the account level, and then each of the seller's listings within an Click and Collect enabled category will be automatically evaluated for Click and Collect eligibility.
    /// 						</span>
    /// 					
    /// </remarks>

	public PickupDropOffEnabledDefinitionType PickupDropOffEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support digital gift card listings. This field will be returned as long as <b>DigitalGoodDeliveryEnabled</b> is included as a <b>FeatureID</b> value in the call request or no <a href="types/FeatureIDCodeType.html">FeatureID</a> values are passed into the call request.
    /// 						<br>
    /// 						<br>
    /// 						To verify if a specific eBay site supports digital gift card listings (for most categories), look for a <code>true</code> value in the <b>SiteDefaults.DigitalGoodDeliveryEnabled</b> field.
    /// 						<br>
    /// 						<br>
    /// 						To verify if a specific category on a specific eBay site supports digital gift card listings, pass in a <b>CategoryID</b> value in the request, and then look for a <code>true</code> value in the <b>DigitalGoodDeliveryEnabled</b> field of the corresponding <b>Category</b> node (match up the <b>CategoryID</b> values if more than one Category IDs were passed in the request).
    /// 						<br>
    /// 						<br>
    /// 						Digital gift cards are currently only supported on the US site. There are some restrictions when it comes to selling gift cards, including the following:
    /// 						<ul>
    /// 						<li>Each seller can only have one gift card listing at any given time </li>
    /// 						<li>The maximum dollar value of the gift card may not exceed 500.00</li>
    /// 						<li>Prepaid credit cards from American Express, Discover, MasterCard, or Visa are not allowed</li>
    ///             </ul>
    /// 						For more information on eBay's Gift Card policy, see the <a href="
    ///             https://www.ebay.com/help/policies/prohibited-restricted-items/gift-cards-policy?id=4294" target="_blank">Gift cards policy</a>  help page.
    ///           
    /// </remarks>

	public DigitalGoodDeliveryEnabledDefinitionType DigitalGoodDeliveryEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the use of an eBay Product ID (e.g. ePID) in an Add/Revise/Relist API call to identify which motorcycles and/or scooters are compatible with a motor vehicle part or accessory. ePIDs can only be used to identify motorcycles and scooters on the Germany and UK sites. This field will be returned as long as <b>EpidSupported</b> is included as a <b>FeatureID</b> value in the call request or no <a href="types/FeatureIDCodeType.html">FeatureID</a> values are passed into the call request.
    /// 						<br/><br/>
    /// 						For more information on using an ePID to identify a compatible motorcycle or scooter through an Add/Revise/Relist API call on the Germany or UK site, see the documentation for the <a href="
    ///             https://developer.ebay.com/Devzone/XML/docs/Reference/eBay/AddItem.html#Request.Item.ItemCompatibilityList.Compatibility.NameValueList">Compatibility.NameValueList</a> container.
    /// 					
    /// </remarks>

	public EpidSupportedDefinitionType EpidSupported { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						TThis field is returned as an empty element (a boolean value is not returned) if one or more eBay marketplaces support the use of a K Type vehicle number in an Add/Revise/Relist API call to identify which cars and/or trucks are compatible with a motor vehicle part or accessory. K type vehicle numbers can only be used to identify cars and trucks on the Germany site. This field will be returned as long as <b>KTypeSupported</b> is included as a <b>FeatureID</b> value in the call request or no <a href="types/FeatureIDCodeType.html">FeatureID</a> values are passed into the call request.
    /// 						<br/><br/>
    /// 						For more information on using a K Type vehicle number to identify a compatible car or truck through an Add/Revise/Relist API call on the Germany site, see the documentation for the <a href="
    ///             https://developer.ebay.com/Devzone/XML/docs/Reference/eBay/AddItem.html#Request.Item.ItemCompatibilityList.Compatibility.NameValueList">Compatibility.NameValueList</a> container.
    /// 					
    /// </remarks>

	public KTypeSupportedDefinitionType KTypeSupported { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is deprecated. No eBay categories require listings based on an eBay catalog product.
    /// 					
    /// </remarks>

	public ProductRequiredEnabledDefinitionType ProductRequiredEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						If present, this flag indicates the seller can set how to handle domestic returns.
    /// 					
    /// </remarks>

	public DomesticReturnsAcceptedDefinitionType DomesticReturnsAcceptedValues { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						If present, this flag indicates the seller can set how to handle international returns.
    /// 					
    /// </remarks>

	public InternationalReturnsAcceptedDefinitionType InternationalReturnsAcceptedValues { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						If present, this flag indicates the seller can set the time duration for domestic returns.
    /// 					
    /// </remarks>

	public DomesticReturnsDurationDefinitionType DomesticReturnsDurationValues { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						If present, this flag indicates the seller can set the time duration for international returns.
    /// 					
    /// </remarks>

	public InternationalReturnsDurationDefinitionType InternationalReturnsDurationValues { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						If present, this flag indicates the seller can set who pays the shipping for domestic returns.
    /// 					
    /// </remarks>

	public DomesticReturnsShipmentPayeeDefinitionType DomesticReturnsShipmentPayeeValues { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						If present, this flag indicates the seller can set who pays the shipping for international returns.
    /// 					
    /// </remarks>

	public InternationalReturnsShipmentPayeeDefinitionType InternationalReturnsShipmentPayeeValues { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						If present, this flag indicates the seller can set the method they use to refund domestic returns.
    /// 					
    /// </remarks>

	public DomesticRefundMethodCodeType DomesticRefundMethodValues { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						If present, this flag indicates the seller can set the method they use to refund international returns.
    /// 					
    /// </remarks>

	public InternationalRefundMethodCodeType InternationalRefundMethodValues { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						If present, this flag indicates the seller can choose to describe the return policy they offer (providing return-policy details is required in some EU countries).
    /// 					
    /// </remarks>

	public ReturnPolicyDescriptionEnabledDefinitionType ReturnPolicyDescriptionEnabled { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Indicates whether the seller making the request can list with certain features.
/// 				A seller's eligibility is determined by their Feedback score.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class FeatureEligibilityType {

#region 属性
    /// <summary>
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether the seller is eligible to create auction listings enabled with the 'Buy It Now' option. A value of <code>true</code> means that the seller is eligible; a value of <code>false</code> indicates that they are not eligible.
    /// 					
    /// </remarks>

	public bool? QualifiesForBuyItNow { get; set; }
    /// <summary>
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether the seller is eligible to specify the 'Buy It Now' option for multiple-quantity listings. A value of <code>true</code> means that the seller is eligible; a value of <code>false</code> indicates that they are not eligible.
    /// 					
    /// </remarks>

	public bool? QualifiesForBuyItNowMultiple { get; set; }
    /// <summary>
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether the seller is eligible to create fixed-price listings with a one-day listing duration. A value of <code>true</code> means that the seller is eligible; a value of <code>false</code> indicates that the seller is not eligible. Note that this field only controls user eligibility. The listing type and category must support this feature for this field to be applicable.
    /// 					
    /// </remarks>

	public bool? QualifiedForFixedPriceOneDayDuration { get; set; }
    /// <summary>
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 					Indicates whether or not the seller is eligible to create
    /// 					multiple-variation, fixed-price listings.
    /// 					
    /// </remarks>

	public bool? QualifiesForVariations { get; set; }
    /// <summary>
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						 Indicates whether the seller is eligible to create an auction listing with a one-day duration. Limitation: the Adult-Only and Motor Vehicle categories do not support one-day auctions, so the seller cannot create one-day auction listings in these categories, even if the seller has the eligibility.
    /// 					
    /// </remarks>

	public bool? QualifiedForAuctionOneDayDuration { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Identifies the name and cost of a listing feature that a member pays to eBay. These listing feature names, fees, and possible discounts are intended only as
/// 				an aid to help estimate the fees for a listing.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class FeeType {

#region 属性
    /// <summary>
    /// Feeshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/fees.html
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseInventoryStatusReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						This is the name of the listing feature, such as <code>ListingFee</code>, <code>SubtitleFee</code>, or <code>BoldFee</code>.
    /// 					
    /// </remarks>

	public string Name { get; set; }
    /// <summary>
    /// eBay.com Feeshttp://pages.ebay.com/help/sell/fees.htmla current list of listing features and their associated fees.
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseInventoryStatusReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Amount of the fee that eBay will charge the member for the associated listing
    /// 						feature.
    /// 						
    /// </remarks>

	public AmountType Fee { get; set; }
    /// <summary>
    /// Standard selling feeshttp://pages.ebay.com/help/sell/fees.htmlA current schedule of listing features and their associated fees.
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemReviseInventoryStatusRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field exists in the response when the user has selected a feature that
    /// 						participates in a promotional discount.
    /// 						<br/><br/>
    /// 						<span class="tablenote"><b>Note: </b>
    /// 						Verify calls might not return the PromotionalDiscount fee in the response.
    /// 						</span>
    /// 					
    /// </remarks>

	public AmountType PromotionalDiscount { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type used by the <b>FeedbackDetail</b> containers that are returned in the <b>GetFeedback</b> response. Each <b>FeedbackDetail</b> container consists of detailed information on one Feedback entry for a specific
/// 				order line item. This container will only be returned if uses the <b>DetailLevel</b> field and sets its value to <code>ReturnAll</code>.
/// 				<br/><br/>
/// 				<span class="tablenote"><b>Note: </b> Although it is possible for users to retrieve Feedback entries for order line items in which they are not the buyer or seller, some of the fields of the <b>FeedbackDetail</b> container will not be returned or masked. More details on the fields that will not be returned or masked are discussed in this type's individual fields.
/// 				</span>
/// 		  
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class FeedbackDetailType {

#region 属性
    /// <summary>
    /// GetFeedbackDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The eBay User ID of the user who left the Feedback entry.
    /// 						<br/><br/>
    /// 						<span class="tablenote"><b>Note: </b> This field is returned, but masked to users who are not either the buyer or seller of the order line item.
    /// 						</span>
    /// 					
    /// </remarks>

	public string CommentingUser { get; set; }
    /// <summary>
    /// GetFeedbackDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This enumeration value is the Feedback Rating Star of the user indicated in the <b>CommentingUser</b> field. See <a href="types/FeedbackRatingStarCodeType.html">FeedbackRatingStarCodeType</a> for the full list of Feedback Rating Stars, and the Feedback score ranges associated with those stars.
    /// 					
    /// </remarks>

	public FeedbackRatingStarCodeType? FeedbackRatingStar { get; set; }
    /// <summary>
    /// GetFeedbackDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This integer value is the Feedback score of the user indicated in the  <b>CommentingUser</b> field.
    /// 					
    /// </remarks>

	public int? CommentingUserScore { get; set; }
    /// <summary>
    /// 500
    /// GetFeedbackDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This free-form text is the actual comment that the commenting user left for their order partner. The Feedback comment's purpose is to explain, clarify, or justify the Feedback rating specified
    /// 						in the <b>CommentType</b> field.
    /// 						<br><br>
    /// 						The comment is returned as text in the language that the comment was originally left in. This comment will still be displayed even if a submitted Feedback entry is withdrawn.
    /// 					
    /// </remarks>

	public string CommentText { get; set; }
    /// <summary>
    /// GetFeedbackDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This timestamp (in GMT) indicates the date/time that the Feedback entry was submitted to eBay.
    /// 					
    /// </remarks>

	public System.DateTime? CommentTime { get; set; }
    /// <summary>
    /// GetFeedbackDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This value indicates the rating of the Feedback left by the user identified in the <b>CommentingUser</b> field.
    /// 						<br><br>
    /// 						A <b>Positive</b> rating increases a user's Feedback score, a <b>Negative</b> rating decreases a user's Feedback score, and a <b>Neutral</b> rating does not affect a user's Feedback score.
    /// 						<br><br>
    /// 						Sellers cannot leave <b>Neutral</b> or <b>Negative</b> ratings for buyers.
    /// 					
    /// </remarks>

	public CommentTypeCodeType? CommentType { get; set; }
    /// <summary>
    /// 500
    /// GetFeedbackDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This free-form text is the comment that the recipient of the Feedback may leave in response or rebuttal to the Feedback. Responses to Feedback comments cannot be submitted or edited via the API.
    /// 					
    /// </remarks>

	public string FeedbackResponse { get; set; }
    /// <summary>
    /// 500
    /// GetFeedbackDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This free-form text is the explanation that a user can give to a response. Follow-ups to Feedback comments cannot be submitted or edited via the API.
    /// 					
    /// </remarks>

	public string Followup { get; set; }
    /// <summary>
    /// GetFeedbackDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The unique identifier of the eBay listing associated with the Feedback entry. <br/><br/>
    /// 						<span class="tablenote"><b>Note: </b> For Feedback entries that were submitted less than five years ago, this field is returned to users who are not the buyer or seller of the order line item, but a dummy value such as '111111111' will be displayed. For Feedback entries that were submitted more than five years ago, this field will not be returned at all to users who do not have a relationship (as a buyer or seller) to the Feedback entry.
    /// 						</span>
    /// 					
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// GetFeedbackDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether the recipient of the Feedback entry is the buyer
    /// 						or the seller for the corresponding order line item.
    /// 					
    /// </remarks>

	public TradingRoleCodeType? Role { get; set; }
    /// <summary>
    /// 80
    /// Seller ratingshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/feedback-seller-ratings.html
    /// GetFeedbackDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The title of the item listing for which Feedback was provided. The title is returned as CDATA. This value can be returned as part of the Detailed Seller Ratings feature. Not returned if a listing ended more than 90 days ago. For Feedback entries that were left for the buyer by the seller, an <b>ItemTitle</b> value will not be returned to a user that was not involved in the transaction as either the buyer or seller.
    /// 					
    /// </remarks>

	public string ItemTitle { get; set; }
    /// <summary>
    /// Seller ratingshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/feedback-seller-ratings.html
    /// GetFeedbackDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The purchase price for the item that was associated with the Feedback entry.
    /// 						This value can be returned as part of the Detailed Seller Ratings feature.
    /// 						Not returned if a listing ended more than 90 days ago. For Feedback entries that were left for the buyer by the seller, an <b>ItemPrice</b> value will not be returned to a user that was not involved in the transaction as either the buyer or seller.
    /// 					
    /// </remarks>

	public AmountType ItemPrice { get; set; }
    /// <summary>
    /// GetFeedbackDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Unique identifier for the Feedback entry.
    /// 					
    /// </remarks>

	public string FeedbackID { get; set; }
    /// <summary>
    /// GetFeedbackDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Unique identifier for an eBay order line item for which the Feedback entry was left. This field is not returned if the Feedback entry was left for an auction listing, since all auction listings have a <b>TransactionID</b> value of 0.
    /// 						<br/><br/>
    /// 						<span class="tablenote"><b>Note: </b> Beginning in July 2024, non-zero transaction IDs will start being returned for auction listings. If necessary, update code to handle non-zero transaction IDs for auction transactions before this time. 
    /// 						</span>
    /// 						<span class="tablenote"><b>Note: </b> For Feedback entries that were submitted less than five years ago, this field is returned to users who are not the buyer or seller of the order line item, but a dummy value such as '111111111' will be displayed. For Feedback entries that were submitted more than five years ago, this field will not be returned at all to users who do not have a relationship (as a buyer or seller) to the Feedback entry.
    /// 						</span>
    /// 					
    /// </remarks>

	public string TransactionID { get; set; }
    /// <summary>
    /// GetFeedbackDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This boolean value indicates whether or not eBay replaced the Feedback comment with a message that the Feedback comment was removed.
    /// 					
    /// </remarks>

	public bool? CommentReplaced { get; set; }
    /// <summary>
    /// GetFeedbackDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This boolean value indicates whether or not eBay replaced the response to the Feedback comment with a message that the response to the Feedback comment was removed.
    /// 					
    /// </remarks>

	public bool? ResponseReplaced { get; set; }
    /// <summary>
    /// GetFeedbackDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This boolean value indicates whether or not eBay replaced the follow-up to the Feedback comment with a message that the follow-up to the Feedback comment was removed.
    /// 					
    /// </remarks>

	public bool? FollowUpReplaced { get; set; }
    /// <summary>
    /// true
    /// GetFeedbackDetailLevel: ReturnAllConditionally
    /// (GetUser) ItemDetailsGetUser.html#Response.User.SiteVerfied
    /// </summary>
    /// <remarks>
    /// 
    /// 						This boolean value indicates whether or not the Feedback entry will affect the user's Feedback score. Only Feedback left by verified users can count toward the aggregate score of another user. If a unverified user leaves a Feedback entry, then later becomes verified, that Feedback entry will still have no affect on the recipient user's Feedback score. Or, if a user is verified and at some later date changes to unverified status, the Feedback entry left while the user was verified remains in effect.
    /// 					
    /// </remarks>

	public bool? Countable { get; set; }
    /// <summary>
    /// GetFeedbackDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This flag indicates whether or not a Feedback entry was revised (rating was
    /// 						changed).
    /// 					
    /// </remarks>

	public bool? FeedbackRevised { get; set; }
    /// <summary>
    /// GetFeedbackDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The unique identifier for an eBay order line item. For Feedback entries that were left for the buyer by the seller, an <b>OrderLineItemID</b> value will not be returned to a user that was not involved in the transaction as either the buyer or seller.
    /// 						<br/><br/>
    /// 						<span class="tablenote"><b>Note: </b> For Feedback entries that were submitted less than five years ago, this field is returned to users who are not the buyer or seller of the order line item, but a dummy value such as '11111111-0' will be displayed. For Feedback entries that were submitted more than five years ago, this field will not be returned at all to users who do not have a relationship (as a buyer or seller) to the Feedback entry.
    /// 						</span>
    /// 					
    /// </remarks>

	public string OrderLineItemID { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the Feedback details for an order line item, including the eBay User ID
/// 				of the user the feedback is intended for, the Feedback rating, and the Feedback comment.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class FeedbackInfoType {

#region 属性
    /// <summary>
    /// 500
    /// CompleteSaleConditionally
    /// GetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Textual comment that explains, clarifies, or justifies the Feedback rating specified
    /// 						in <b>CommentType</b>. This field is required in <b>CompleteSale</b> if the
    /// 						<b>FeedbackInfo</b> container is used.
    /// 						<br><br>
    /// 						This comment will still be displayed even if submitted Feedback is withdrawn.
    /// 					
    /// </remarks>

	public string CommentText { get; set; }
    /// <summary>
    /// CompleteSalePositiveConditionally
    /// GetItemsAwaitingFeedbackConditionallyFeedbackReceived
    /// GetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// GetMyeBayBuyingWonListDeletedFromWonListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingSoldListDeletedFromSoldListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This value indicates the Feedback rating for the user specified in the
    /// 						<b>TargetUser</b> field. This field is required in <b>CompleteSale</b> if the
    /// 						<b>FeedbackInfo</b> container is used.
    /// 						<br><br>
    /// 						A Positive rating increases the user's Feedback score, a Negative rating decreases
    /// 						the user's Feedback score, and a Neutral rating does not affect the user's Feedback
    /// 						score. eBay users also have the right to withdraw feedback for whatever reason.
    /// 						<br><br>
    /// 						Sellers cannot leave Neutral or Negative ratings for buyers.
    /// 					
    /// </remarks>

	public CommentTypeCodeType? CommentType { get; set; }
    /// <summary>
    /// CompleteSaleNo
    /// GetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This eBay User ID identifies the recipient user for whom the feedback is being left.
    /// 						This field is required in <b>CompleteSale</b> if the
    /// 						<b>FeedbackInfo</b> container is used.
    /// 					
    /// </remarks>

	public string TargetUser { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is used by the <b>FeedbackPeriod</b> containers that are returned in the <b>GetFeedback</b> call to indicate how many Negative, Neutral, Positive, Retracted, and Total Feedback entries a user has received within different periods of time, typically 30 days, 180 days, and 365 days.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class FeedbackPeriodType {

#region 属性
    /// <summary>
    /// GetFeedbackDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This integer value indicates the total number of days in the time period for the Feedback count. Typically, the returned time periods are 30 days, 180 days, and 365 days. This field is always returned with the <b>FeedbackPeriod</b> container.
    /// 					
    /// </remarks>

	public int? PeriodInDays { get; set; }
    /// <summary>
    /// GetFeedbackDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This integer value indicates the total number of Feedback entries that occurred within the time period specified in the <b>PeriodInDays</b> field. This field is always returned with the <b>FeedbackPeriod</b> container.
    /// 					
    /// </remarks>

	public int? Count { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Specifies all feedback summary information (except Score). Contains
/// 				FeedbackPeriodArrayType objects that each convey feedback counts for positive,
/// 				negative, neutral, and total feedback counts - for various time periods each. Also
/// 				conveys counts of bid retractions for the predefined time periods.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class FeedbackSummaryType {

#region 属性
    /// <summary>
    /// GetFeedbackDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Bid retractions count, for multiple predefined time periods preceding
    /// 						the call. Returned if no detail level is specified.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("FeedbackPeriod", IsNullable = false)]

	public System.Collections.Generic.List<FeedbackPeriodType> BidRetractionFeedbackPeriodArray { get; set; }
    /// <summary>
    /// GetFeedbackDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Negative feedback entries count, for multiple predefined time periods preceding
    /// 						the call. Returned if no detail level is specified.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("FeedbackPeriod", IsNullable = false)]

	public System.Collections.Generic.List<FeedbackPeriodType> NegativeFeedbackPeriodArray { get; set; }
    /// <summary>
    /// GetFeedbackDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Neutral feedback entries count, for multiple predefined time periods preceding
    /// 						the call. Returned if no detail level is specified.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("FeedbackPeriod", IsNullable = false)]

	public System.Collections.Generic.List<FeedbackPeriodType> NeutralFeedbackPeriodArray { get; set; }
    /// <summary>
    /// GetFeedbackDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Positive feedback entries count, for multiple predefined time periods
    /// 						preceding the call. Returned if no detail level is specified.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("FeedbackPeriod", IsNullable = false)]

	public System.Collections.Generic.List<FeedbackPeriodType> PositiveFeedbackPeriodArray { get; set; }
    /// <summary>
    /// GetFeedbackDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Total feedback score, for multiple predefined time periods preceding the
    /// 						call. Returned if no detail level is specified.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("FeedbackPeriod", IsNullable = false)]

	public System.Collections.Generic.List<FeedbackPeriodType> TotalFeedbackPeriodArray { get; set; }
    /// <summary>
    /// GetFeedbackDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Number of neutral comments received from suspended users. Returned if no
    /// 						detail level is specified.
    /// 					
    /// </remarks>

	public int? NeutralCommentCountFromSuspendedUsers { get; set; }
    /// <summary>
    /// GetFeedbackDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Total number of negative Feedback comments, including weekly repeats. Returned if no detail level is specified.
    /// 					
    /// </remarks>

	public int? UniqueNegativeFeedbackCount { get; set; }
    /// <summary>
    /// GetFeedbackDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Total number of positive Feedback comments, including weekly repeats. Returned if no detail level is specified.
    /// 					
    /// </remarks>

	public int? UniquePositiveFeedbackCount { get; set; }
    /// <summary>
    /// GetFeedbackDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Total number of neutral Feedback comments, including weekly repeats. Returned if no detail level is specified.
    /// 					
    /// </remarks>

	public int? UniqueNeutralFeedbackCount { get; set; }
    /// <summary>
    /// Seller ratingshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/feedback-seller-ratings.html
    /// GetFeedbackConditionallyDetailLevel: none, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						Container for information about detailed seller ratings (DSRs)
    /// 						that buyers have left for a seller.
    /// 						Sellers have access to the number of ratings they've received, as well as
    /// 						to the averages of DSRs they've received in each
    /// 						DSR area (i.e., to the average of ratings in the item-description area, etc.).
    /// 						The DSR feature is available everywhere on API-enabled country sites, 
    /// 						including the US site (site ID 0).
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("AverageRatingSummary", IsNullable = false)]

	public System.Collections.Generic.List<AverageRatingSummaryType> SellerRatingSummaryArray { get; set; }
    /// <summary>
    /// GetFeedbackConditionallyDetailLevel: none, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						Container for information about 1 year feedback metric as seller.
    /// 					
    /// </remarks>

	public SellerRoleMetricsType SellerRoleMetrics { get; set; }
    /// <summary>
    /// GetFeedbackConditionallyDetailLevel: none, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						Container for information about 1 year feedback metric as buyer.
    /// 					
    /// </remarks>

	public BuyerRoleMetricsType BuyerRoleMetrics { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Details of an individual discount profile defined by the
/// 				user for flat-rate shipping.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class FlatShippingDiscountType {

#region 属性
    /// <summary>
    /// GetShippingDiscountProfiles
    /// 								EachAdditionalAmount, EachAdditionalAmountOff, EachAdditionalPercentOff
    /// 							Conditionally
    /// SetShippingDiscountProfiles
    /// 								EachAdditionalAmount, EachAdditionalAmountOff, EachAdditionalPercentOff
    /// 							Conditionally
    /// GetItem
    /// 								EachAdditionalAmount, EachAdditionalAmountOff, EachAdditionalPercentOff
    /// 							DetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// Shipping discount profileshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/shipping-discount-profiles.html
    /// </summary>
    /// <remarks>
    /// 
    /// 						The type of discount or rule that is being used by the profile.
    /// 						The value corresponding to the selected rule is set in the same-named field
    /// 						of <b>FlatShippingDiscount.DiscountProfile</b>.
    /// 					
    /// </remarks>

	public DiscountNameCodeType? DiscountName { get; set; }
    /// <summary>
    /// GetShippingDiscountProfilesConditionally
    /// SetShippingDiscountProfiles
    /// 								EachAdditionalAmount, EachAdditionalAmountOff, EachAdditionalPercentOff
    /// 							Conditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// Shipping discount profileshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/shipping-discount-profiles.html
    /// </summary>
    /// <remarks>
    /// 
    /// 						Details of this particular flat-rate shipping discount profile. If the value of <b>ModifyActionCode</b> is <code>Modify</code>, all details of the new version of the profile must be provided. If <b>ModifyActionCode</b> is <code>Delete</code>, <b>DiscountProfileID</b> is required, <b>MappingDiscountProfileID</b> is optional, and all other fields of <b>DiscountProfile</b> are ignored.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("DiscountProfile")]

	public System.Collections.Generic.List<DiscountProfileType> DiscountProfile { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>FreeGalleryPlusEnabled</b> field that is returned under the <b>FeatureDefinitions</b> container of the <b>GetCategoryFeatures</b> response (as long as <code>FreeGalleryPlusEnabled</code> is included as a <b>FeatureID</b> value in the call request, or no <b>FeatureID</b> values are passed into the call request). This field is returned as an empty element (a boolean value is not returned) if one or more eBay API-enabled sites support the Free Gallery Plus feature for one or multiple categories.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class FreeGalleryPlusEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>FreePicturePackEnabled</b> field that is returned under the <b>FeatureDefinitions</b> container of the <b>GetCategoryFeatures</b> response (as long as <code>FreePicturePackEnabled</code> is included as a <b>FeatureID</b> value in the call request, or no <b>FeatureID</b> values are passed into the call request). This field is returned as an empty element (a boolean value is not returned) if one or more eBay API-enabled sites support the Free Picture Pack feature for one or multiple categories.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class FreePicturePackEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is used to provide details about an order line item being fulfilled by eBay or an eBay fulfillment partner.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class FulfillmentType {

#region 属性
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The value returned in this field indicates the party that is handling fulfillment of the order line item. <br> <br>
    /// 			For eBay Vault scenarios, for the <strong>GetOrders</strong> <strong>GetItemTransactions</strong>, and <strong>GetSellerTransactions</strong> calls, this value is returned as <code>EBAY</code> for either of the following fulfillment options:<ul><li>Vault to Vault</li><li>Vault to Buyer</li></ul>
    /// 					
    /// </remarks>

	public string FulfillmentBy { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The value in this field identifies the warehouse where the order line item is located. <br> <br>
    /// 			For eBay Vault scenarios: <strong>GetOrders</strong> and <strong>GetSellerTransactions</strong> calls, if <b>FulfillmentBy</b> is returned as <code>EBAY</code>, <strong>FulfillmentRefId</strong> is not returned.
    /// 					
    /// </remarks>

	public string FulfillmentRefId { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is used by the <b>GiftSummary</b> container that is returned in <b>GetOrders</b> and other order management calls if a buyer has purchased a digital gift card but has sent it to another individual as a gift. The <b>GiftSummary</b> container consists of the message that the buyer wrote for the recipient of the digital gift card.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GiftSummaryType {

#region 属性
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This free-form text contains the message that the purchaser of the digital gift card left for the recipient of the gift card.
    /// 						<br><br>
    /// 						<b>For GetItemTransactions only:</b> If using Trading WSDL Version 1019 or above, this field will only be returned to the buyer or seller, and no longer returned at all to third parties. If using a Trading WSDL older than Version 1019, real data is only returned to the buyer or seller, and a string value of <code>Unavailable</code> will be returned to all third parties.
    /// 					
    /// </remarks>

	public string Message { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Specifies whether the Global Shipping Program (GSP) is enabled or not. The field is
/// 				returned as an empty element (i.e., a boolean value is not returned).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class GlobalShippingEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				About shipping service group 1.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class Group1MaxFlatShippingCostDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				About shipping service group 2.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class Group2MaxFlatShippingCostDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				About shipping service group 3.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class Group3MaxFlatShippingCostDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Defines the feature that specifies whether a handling time (dispatch time)
/// 				could be enabled on the site.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class HandlingTimeEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>Pictograms</b> and <b>Statements</b> containers, and the <b>Component</b> and <b>SignalWord</b> fields, that provide hazardous material related information. For additional information, see <a href="https://developer.ebay.com/api-docs/sell/static/metadata/feature-regulatorhazmatcontainer.html#Signal" target="_blank">Signal word information</a>. 
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class HazmatType {

#region 属性
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemConditionally
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container is used by the seller to provide pictograms for the listing. This field is required if hazmat information is supplied.
    /// 					
    /// </remarks>

	public PictogramsType Pictograms { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemConditionally
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field sets the signal word for hazardous materials in the listing. If your product contains hazardous substances or mixtures, please select a value corresponding to the signal word that is stated on your product's Safety Data Sheet. The selected hazard information will be displayed on your listing. This field is required if hazmat information is supplied. Example values include: <br> <ul><li> <code>Danger</code></li><li> <code>Warning</code></li></ul><span class="tablenote"><strong>Note:</strong> Use the <a href="https://developer.ebay.com/api-docs/sell/metadata/resources/marketplace/methods/getHazardousMaterialsLabels">getHazardousMaterialsLabels</a> method in the <a href="https://developer.ebay.com/api-docs/sell/metadata/resources/methods">Metadata API</a> to find supported values for a specific marketplace/site. For additional information, see <a href="https://developer.ebay.com/api-docs/sell/static/metadata/feature-regulatorhazmatcontainer.html#Signal" target="_blank">Signal word information</a>.
    /// 					
    /// </remarks>

	public string SignalWord { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemConditionally
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container is used by the seller to provide hazard statements for the listing. This field is required if hazmat information is supplied.
    /// 					
    /// </remarks>

	public StatementsType Statements { get; set; }
    /// <summary>
    /// 120
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemNo
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is used by the seller to provide component information for the listing. For example, component information can provide the specific material of Hazmat concern.
    /// 					
    /// </remarks>

	public string Component { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
///  
/// 				Defines whether Home Page Featured is available on the site.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class HomePageFeaturedEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				<span class="tablenote"><b>Note:</b>
/// 				This type is deprecated since it is only applicable to the eBay India site, and this marketplace is no longer available.</span>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class INEscrowWorkflowTimelineDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>ISBNEnabled</b> field that is returned under the <b>FeatureDefinitions</b> container of the <b>GetCategoryFeatures</b> response (as long as 'ISBNEnabled' is included as a <b>FeatureID</b> value in the call request or no <b>FeatureID</b> values are passed into the call request). This field is returned as an empty element (a boolean value is not returned) if one or more eBay API-enabled sites support the ISBN product identifying feature.
/// 				<br><br>
/// 				To verify if a specific eBay site supports the ISBN product identifying feature (for most categories), look for a 'true' value in the <b>SiteDefaults.ISBNEnabled</b> field.
/// 				<br><br>
/// 				To verify if a specific category on a specific eBay site supports the ISBN product identifying feature, pass in a <b>CategoryID</b> value in the request, and then look for a <code>true</code> value in the <b>ISBNEnabled</b> field of the corresponding <b>Category</b> node (match up the <b>CategoryID</b> values if more than one Category IDs were passed in the request).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ISBNEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is no longer applicable as eBay sellers can no longer use iMCC gateway accounts to handle buyer payments, and the <b>SellerInfo.IntegratedMerchantCreditCardInfo</b> container is no longer returned in <b>GetUser</b> response.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class IntegratedMerchantCreditCardInfoType {

#region 属性
    /// <summary>
    /// GetUserConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The <b>SellerInfo.IntegratedMerchantCreditCardInfo</b> container (and this field) are no longer returned in <b>GetUser</b> response, as eBay sellers can no longer use iMCC gateway accounts to handle buyer payments.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("SupportedSite")]

	public System.Collections.Generic.List<SiteCodeType> SupportedSite { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type defines the available options the seller has for handling international returns.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class InternationalRefundMethodCodeType {

#region 属性
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Defines the available options the seller has for handling international returns in the specified marketplace and category.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("InternationalRefundMethod")]

	public System.Collections.Generic.List<ReturnsRefundMethodCodeType> InternationalRefundMethod { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				In US, sellers can offer an item replacement for returns, in addition to offering money back returns. The values returned in this field indicate the availability of such options for the given marketplace and category.  <br><br>The values returned in this field are pertinent only if <b>ReturnPolicyEnabled</b> in GetCategoryFeatures is set to <code>true</code> for the associated category, which indicates that items listed in the category must include a return policy. The values returned in this field are valid in AddItem and its related family of calls, and in the return policies you configure for use with the Account API.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class InternationalRefundMethodDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type defines the available options the seller has for accepting international returns.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class InternationalReturnsAcceptedCodeType {

#region 属性
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Defines the available options the seller has for accepting international returns in the specified marketplace and category.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("InternationalReturnsAccepted")]

	public System.Collections.Generic.List<ReturnsAcceptedCodeType> InternationalReturnsAccepted { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				 The values returned in this field indicate whether or not the seller can offer international returns.  <br><br>The values returned in this field are pertinent only if <b>ReturnPolicyEnabled</b> in GetCategoryFeatures is set to <code>true</code> for the associated category, which indicates that items listed in the category must include a return policy. The values returned in this field are valid in AddItem and its related family of calls, and in the return policies you configure for use with the Account API.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class InternationalReturnsAcceptedDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type defines the available options for the return durations for international returns.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class InternationalReturnsDurationCodeType {

#region 属性
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Defines the available options for the return durations for international returns in the specified marketplace and category. This is the time the buyer has to initiate a return once they receive the item.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("InternationalReturnsDuration")]

	public System.Collections.Generic.List<ReturnsDurationCodeType> InternationalReturnsDuration { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				The values returned in this field indicate the return-duration options that are available for international returns for items listed in the associated marketplace and category.  <br><br>The values returned in this field are pertinent only if <b>ReturnPolicyEnabled</b> in GetCategoryFeatures is set to <code>true</code> for the associated category, which indicates that items listed in the category must include a return policy. The values returned in this field are valid in AddItem and its related family of calls, and in the return policies you configure for use with the Account API.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class InternationalReturnsDurationDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type defines the available options for who pays the return shipping costs for international returns.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class InternationalReturnsShipmentPayeeCodeType {

#region 属性
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Defines the available options for who pays the return shipping costs for international returns in the specified marketplace and category.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("InternationalReturnsShipmentPayee")]

	public System.Collections.Generic.List<ReturnsShipmentPayeeCodeType> InternationalReturnsShipmentPayee { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				The values returned in this field indicate the available options for who pays the return shipping for international returns. Possible values are <code>BUYER</code> and <code>SELLER</code>. <br><br>The values returned in this field are pertinent only if <b>ReturnPolicyEnabled</b> in GetCategoryFeatures is set to <code>true</code> for the associated category, which indicates that items listed in the category must include a return policy. The values returned in this field are valid in AddItem and its related family of calls, and in the return policies you configure for use with the Account API.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class InternationalReturnsShipmentPayeeDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
///         Container consisting of shipping costs and other details related to an international
/// 				shipping service. If one or more international shipping services are provided, the
/// 				seller must specify at least one domestic shipping service as well.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class InternationalShippingServiceOptionsType {

#region 属性
    /// <summary>
    /// ShippingServiceCodeType
    /// SendInvoiceNo
    /// AddFixedPriceItemAddItemAddItemsAddOrderRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetBidderListGetItemShippingConditionally
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsDetailLevel: none, ReturnAllConditionally
    /// GeteBayDetailshttps://developer.ebay.com/Devzone/XML/docs/Reference/eBay/GeteBayDetails.html
    /// </summary>
    /// <remarks>
    /// 
    /// 						An international shipping service being offered by the seller to ship an item to
    /// 						a buyer. For a list of valid values, call <b>GeteBayDetails</b>
    /// 						with <b>DetailName</b> set to <b>ShippingServiceDetails</b>.
    /// 						<br/><br/>
    /// 						To view the full list of International shipping service options in the response,
    /// 						look for the <b>ShippingService</b> fields in the <b>ShippingServiceDetails</b> containers that
    /// 						contain a <b>InternationalService</b> = <code>true</code> field, as this indicates that the <b>ShippingService</b>
    /// 						value is an International shipping service option.
    /// 						<br/><br/>
    /// 						The <b>ShippingServiceDetails.ValidForSellingFlow</b> flag must
    /// 						also be present. Otherwise, that particular shipping service option is no longer
    /// 						valid and cannot be offered to buyers through a listing.
    /// 						<br><br>
    /// 						For flat and calculated shipping.
    /// 					
    /// </remarks>

	public string ShippingService { get; set; }
    /// <summary>
    /// SendInvoiceNo
    /// AddFixedPriceItemAddItemAddItemsAddOrderRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAllConditionally
    /// GetBidderListGetItemShippingConditionally
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsDetailLevel: none, ReturnAllConditionally
    /// Shipping typeshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/shipping-types-rates.html
    /// </summary>
    /// <remarks>
    /// 
    /// 						The base cost of shipping the item using the shipping service specified in the <b>ShippingService</b> field.
    /// 						In the case of a multiple-quantity, fixed-price listing, the <b>ShippingServiceAdditionalCost</b> field shows the cost to ship each additional item if the buyer purchases multiple quantity of the same line item.
    /// 						<br>
    /// 						<br>
    /// 						When returned by <b>GetItemShipping</b>, it includes the packaging and
    /// 						handling cost. For flat and calculated shipping.
    /// 						<br>
    /// 						<br>
    /// 						If a shipping service has been specified (even LocalPickup), <b>GetItem</b> returns
    /// 						the shipping service cost, even if the cost is zero. Otherwise, cost is not
    /// 						returned.
    /// 						<br>
    /// 						<br>
    /// 						If this is for calculated shipping for a listing that has not
    /// 						yet ended, note that the cost cannot be determined until the listing
    /// 						has ended and the buyer has specified a postal code.
    /// 						<br>
    /// 						<br>
    /// 						For <b>GetItemShipping</b>, promotional shipping savings is reflected in the cost, if
    /// 						applicable. If the promotional shipping option is lower than other shipping
    /// 						services being offered, the savings is reflected in the returned shipping
    /// 						cost.
    /// 						The shipping service named Promotional Shipping Service (or whatever is
    /// 						the localized name for it) is included among the shipping services.
    /// 						If the promotional shipping cost is lower than the cost of other shipping
    /// 						services being offered, it is presented first in the list. (The LOWEST shipping
    /// 						service cost is always presented first, regardless of whether there is
    /// 						promotional shipping.)
    /// 					
    /// </remarks>

	public AmountType ShippingServiceCost { get; set; }
    /// <summary>
    /// SendInvoiceNo
    /// AddFixedPriceItemAddItemAddItemsAddOrderRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAllConditionally
    /// GetBidderListGetItemShippingConditionally
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The cost of shipping each additional item if the same buyer purchases multiple quantity of the same line item. This field is required when creating a multiple-quantity, fixed-price listing. Generally, the seller will give the buyer a shipping discount if that buyer purchases multiple quantity of the item, so this value should usually be less than the value set for <b>ShippingServiceCost</b>.
    /// 						<br/><br/>
    /// 						The value of this field can even be set to <code>0</code> if the seller wants to encourage buyers to buy multiple quantity of the item, or it could be that the seller can fit multiple quantities of the line item in a single shipping package, so the seller is just passing this shipping savings onto the buyer.  This field is not applicable for single-quantity listings.
    /// 					
    /// </remarks>

	public AmountType ShippingServiceAdditionalCost { get; set; }
    /// <summary>
    /// SendInvoiceNo
    /// AddFixedPriceItemAddItemAddItemsAddOrderRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetBidderListGetItemShippingConditionally
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This integer value controls the order (relative to other shipping services) in
    /// 						which the corresponding <b>ShippingService</b> will appear in the View Item and
    /// 						Checkout page. Sellers can specify up to five international shipping services
    /// 						(with five <b>InternationalShippingServiceOption</b> containers), so valid values are
    /// 						1, 2, 3, 4, and 5. A shipping service with a <b>ShippingServicePriority</b> value of <code>1</code>
    /// 						appears at the top. Conversely, a shipping service with a
    /// 						<b>ShippingServicePriority</b> value of 5 appears at the bottom of a list of five
    /// 						shipping service options. If the Global Shipping Program is enabled on the listing for international shipping, only four additional shipping services may be specified.
    /// 						<br><br>
    /// 							If this field is omitted from international shipping service options, the order of the shipping service options in View Item and Checkout pages will be determined by the order that these shipping service options are presented in the request payload of an Add/Revise/Relist call.
    /// 					
    /// </remarks>

	public int? ShippingServicePriority { get; set; }
    /// <summary>
    /// ShippingRegionCodeType, CountryCodeType
    /// SendInvoiceNo
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetBidderListGetItemShippingConditionally
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsDetailLevel: none, ReturnAllConditionally
    /// AddFixedPriceItemAddItemAddItemsAddOrderRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/shipping-info.htmlShipping information
    /// </summary>
    /// <remarks>
    /// 
    /// 						An international location or region to where the item seller will ship the item.
    /// 						<br/><br/>
    /// 						Use <b>GeteBayDetails</b> with <b>DetailName</b> set to
    /// 						<b>ShippingLocationDetails</b> to determine which locations are valid per site.
    /// 						In the <b>GeteBayDetails</b> response, look for the ShippingLoca<b>tionDetails.ShippingLocation</b> fields.
    /// 						<br/><br/>
    /// 						For the <b>AddItem</b> family of calls, this field is required if any international shipping service is specified.
    /// 						<br><br>
    /// 						<b>For GetOrders and GetItemTransactions only:</b> If using Trading WSDL Version 1019 or above, <b>ShipToLocation</b> fields will only be returned to the buyer or seller, and no longer returned at all to third parties. If using a Trading WSDL older than Version 1019, <b>ShipToLocation</b> fields are only returned to the buyer or seller, and a string value of <code>Unavailable</code> will be returned to all third parties.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("ShipToLocation")]

	public System.Collections.Generic.List<string> ShipToLocation { get; set; }
    /// <summary>
    /// 0
    /// 
    /// GetItemShippingConditionally
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The total cost of customs and taxes for the international leg of an order shipped using the Global Shipping Program. This amount is calculated and supplied for each item by the international shipping provider when a buyer views the item properties.
    /// 					
    /// </remarks>

	public AmountType ImportCharge { get; set; }
    /// <summary>
    /// GetItemShippingConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The last time of day that an order using the specified shipping service will be accepted by the seller. The cut off time applies and is returned only when the <strong>ShippingService</strong> field contains the name of a qualifying time-sensitive shipping service, such as <code>eBayNowImmediateDelivery</code>.
    /// 						<br><br>
    /// 						The cut off time is set by eBay and determined in part by the policies and locations of the seller and the shipping carrier.
    /// 					
    /// </remarks>

	public System.DateTime? ShippingServiceCutOffTime { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This is used in the <b>ReviseInventoryStatus</b> response to provide the set of fees associated with each unique <b>ItemID</b>.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class InventoryFeesType {

#region 属性
    /// <summary>
    /// ReviseInventoryStatusAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						The unique identifier of the listing being changed. <br>
    /// 						<br> The <b>ReviseInventoryStatus</b> response includes a separate
    /// 						set of fees for each item that was successfully revised.<br>
    /// 						<br>
    /// 						Use the <b>ItemID</b> to correlate the Fees data with the Inventory Status data in the response.
    /// 					
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// ReviseInventoryStatusAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Contains the data for one fee (such as name and amount).
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("Fee")]

	public System.Collections.Generic.List<FeeType> Fee { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is used by the <b>ReviseInventoryStatus</b> call to update the price and/or quantity of an item or an item variation within a single-variation or multiple-variation, fixed-price listing.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class InventoryStatusType {

#region 属性
    /// <summary>
    /// ReviseInventoryStatusConditionally
    /// ReviseInventoryStatusAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 							This value is the seller-defined SKU value of the item being revised.
    /// 							<br>
    /// 							<br>
    /// 							For a single-variation listing, either the <b>ItemID</b> of the listing or the <b>SKU</b> value of the item (if it exists) is required, and which one to use will depend on the value of the <b>InventoryTrackingMethod</b> setting. If the value of <b>InventoryTrackingMethod</b> is <code>ItemID</code>, the <b>ItemID</b> field should be used. If the value of <b>InventoryTrackingMethod</b> is <code>SKU</code>, the <b>SKU</b> field should be used. <code>ItemID</code> is the default value of <b>InventoryTrackingMethod</b>, and its value can only be set/changed to <code>SKU</code> through either an <b>AddFixedPriceItem</b> or <b>RelistFixedPriceItem</b> call.
    /// 							<br>
    /// 							<br>
    /// 							For a multiple-variation listing, the <b>SKU</b> value of the item variation is required in order to identify a specific item variation. An <b>ItemID</b> field is also required if the <b>InventoryTrackingMethod</b> value is set to <code>ItemID</code>. However, if the <b>InventoryTrackingMethod</b> value is set to <code>SKU</code>, only the <b>SKU</b> value of the item variation is needed to identify a specific item variation. Note that a seller-defined <b>SKU</b> value is required when a seller creates a multiple-variation listing, regardless of whether they decide to track inventory by Item ID or SKU.
    /// 							<br>
    /// 							<span class="tablenote"><b>Note: </b> When using an LMS_REVISE_INVENTORY_STATUS upload feed in <b>Sell Feed API</b> to revise the price and/or quantity for multiple SKUs for a multiple-SKU listing, you must include both the <b>ItemID</b> and <b>SKU</b> values for each variation. See the <a href="/api-docs/sell/static/feed/trading-upload-flow.html#upload-flow">Upload flow</a> and <a href="/api-docs/sell/static/feed/lms-feeds-quick-reference.html#Trading">Inventory upload feed types</a> for more information.</span>
    /// 							The <b>SKU</b> field is always returned in the response, and if a SKU value doesn't exist for a single-variation listing, it is returned as an empty tag.
    /// 					
    /// </remarks>

	public string SKU { get; set; }
    /// <summary>
    /// ReviseInventoryStatusConditionally
    /// ReviseInventoryStatusAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 							The unique identifier of the listing being revised.
    /// 							<br>
    /// 							<br>
    /// 							For a single-variation listing, either the <b>ItemID</b> of the listing or the <b>SKU</b> value of the item (if it exists) is required, and which one to use will depend on the value of the <b>InventoryTrackingMethod</b> setting. If the value of <b>InventoryTrackingMethod</b> is <code>ItemID</code>, the <b>ItemID</b> field should be used. If the value of <b>InventoryTrackingMethod</b> is <code>SKU</code>, the <b>SKU</b> field should be used. <code>ItemID</code> is the default value of <b>InventoryTrackingMethod</b>, and its value can only be set/changed to <code>SKU</code> through either an <b>AddFixedPriceItem</b> or <b>RelistFixedPriceItem</b> call.
    /// 							<br>
    /// 							<br>
    /// 							For a multiple-variation listing, the <b>SKU</b> value of the item variation is required in order to identify a specific item variation. An <b>ItemID</b> field is also required if the <b>InventoryTrackingMethod</b> value is set to <code>ItemID</code>. However, if the <b>InventoryTrackingMethod</b> value is set to <code>SKU</code>, only the <b>SKU</b> value of the item variation is needed to identify a specific item variation. Note that a seller-defined <b>SKU</b> value is required when a seller creates a multiple-variation listing, regardless of whether they decide to track inventory by Item ID or SKU.
    /// 							<br>
    /// 							<span class="tablenote"><b>Note: </b> When using an LMS_REVISE_INVENTORY_STATUS upload feed in <b>Sell Feed API</b> to revise the price and/or quantity for multiple SKUs for a multiple-SKU listing, you must include both the <b>ItemID</b> and <b>SKU</b> values for each variation. See the <a href="/api-docs/sell/static/feed/trading-upload-flow.html#upload-flow">Upload flow</a> and <a href="/api-docs/sell/static/feed/lms-feeds-quick-reference.html#Trading">Inventory upload feed types</a> for more information.</span>
    /// 							Please note that the same <b>ItemID</b> value can be used
    /// 							multiple times in the same call if you revise several
    /// 							item variations from the same multiple-variation listing.
    /// 							<br>
    /// 							<br>
    /// 							The <b>ItemID</b> field is always returned in the response, even if an <b>ItemID</b> value was not included in the request.
    /// 					
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// Insertion Feeshttp://pages.ebay.com/help/sell/insertion-fee.html
    /// eBay.com Listing Feeshttp://pages.ebay.com/help/sell/fees.html
    /// ReviseInventoryStatusConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is used to update the price of a fixed-price item, or to update the price of an item variation within a multiple-variation listing. To update the price of an item variation, both the <b>ItemID</b> and <b>SKU</b> fields are required to identify the listing and the specific variation within that listing, respectively.
    /// 						<br>
    /// 						<br>
    /// 						In each <b>InventoryStatus</b> container, either <b>StartPrice</b> or <b>Quantity</b> (or both) are required.
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> The <b>StartPrice</b> field should no longer appear in the response payload. If it does appear, it can be ignored. Sellers can leverage the <a href="https://developer.ebay.com/Devzone/XML/docs/Reference/eBay/GetItem.html">GetItem</a> call to verify that the requested price updates were successful.</span>
    /// 					
    /// </remarks>

	public AmountType StartPrice { get; set; }
    /// <summary>
    /// ReviseInventoryStatusConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 							This field is used to update the quantity of a fixed-price listing, or to update the quantity of a variation within a multiple-variation listing. To update a variation, both the <b>ItemID</b> and <b>SKU</b> fields are required to identify the listing and the specific variation within that listing, respectively.
    /// 							<br>
    /// 							<br>
    /// 							In each <b>InventoryStatus</b> container, either <b>StartPrice</b> or <b>Quantity</b> (or both) are required.
    /// 							<br>
    /// 							<span class="tablenote"><b>Note: </b> The <b>Quantity</b> field should no longer appear in the response payload. If it does appear, it can be ignored. Sellers can leverage the <a href="https://developer.ebay.com/Devzone/XML/docs/Reference/eBay/GetItem.html">GetItem</a> call to verify that the requested quantity updates were successful.</span>
    /// 					
    /// </remarks>

	public int? Quantity { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				A collection of details about the Best Offers received for a specific item. Empty if there are no Best Offers. Includes the buyer and seller messages only if
/// 				the <code>ReturnAll</code> detail level is used.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ItemBestOffersArrayType {

#region 属性
    /// <summary>
    /// GetBestOffersDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						A collection of details about the Best Offers received for a specific item. Empty if there are no Best Offers. Includes the buyer and seller messages only if the <code>ReturnAll</code> detail level is used.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("ItemBestOffers")]

	public System.Collections.Generic.List<ItemBestOffersType> ItemBestOffers { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				All Best Offers for the item according to the filter or Best Offer
/// 				ID (or both) used in the input.
/// 				For the notification client usage, this response includes a
/// 				single Best Offer.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ItemBestOffersType {

#region 属性
    /// <summary>
    /// GetBestOffersDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether the eBay user is in the Buyer or
    /// 						Seller role for the corresponding Best Offer.
    /// 					
    /// </remarks>

	public TradingRoleCodeType? Role { get; set; }
    /// <summary>
    /// GetBestOffersDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						All Best Offers for the item according to the filter or
    /// 						Best Offer ID (or both) used in the input. The buyer and
    /// 						seller messages are returned only if the detail level is
    /// 						defined. Includes the buyer and seller message only if
    /// 						detail level <code>ReturnAll</code> is used.
    /// 						Only returned if a Best Offer has been made.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("BestOffer", IsNullable = false)]

	public System.Collections.Generic.List<BestOfferType> BestOfferArray { get; set; }
    /// <summary>
    /// GetBestOffersDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The item for which Best Offers are being returned.
    /// 						Only returned if a Best Offer has been made.
    /// 					
    /// </remarks>

	public ItemType Item { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is used by the <b>ItemBidDetails</b> container that is returned in <b>GetAllBidders</b>. The <b>ItemBidDetails</b> container shows a few details about a user's bid on an auction listing. An <b>ItemBidDetails</b> container is returned for each bid that a user makes during the life of an auction listing. An <b>ItemBidDetails</b> container will only be returned to the seller of the auction listing or to an actual bidder for the listing.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ItemBidDetailsType {

#region 属性
    /// <summary>
    /// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/user-mgmt-anonymous-info.htmlAnonymous user information
    /// GetAllBiddersConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The unique identifier of an item listed on the eBay site.
    /// 						<br><br>
    /// 						Since a bidder's user information is anonymous, this tag will contain the real ID value only for that bidder, and the seller of an item that the user is
    /// 						bidding on. For all other users, the real ID value will be replaced with the anonymous value, according to these rules:
    /// 						<br><br>
    /// 						When bidding on items listed on the US site: UserID is replaced with the value "a****b" where a and b are random characters from the UserID. For example, if the UserID = IBidALot, it might be displayed as, "I****A". 	<br>
    /// 						Note that in this format, the anonymous bidder ID stays the same for every auction.
    /// 						<br><br>
    /// 						(<b>GetMyeBayBuying</b> only) when bidding on items listed on the US site: UserID is replaced with the value "a****b" where a and b are random characters from the UserID.
    /// 						<br><br>
    /// 						When bidding on items listed on the UK and AU sites: UserID is replaced with the value "Bidder X" where X is a number indicating the order of that user's first bid. For example, if the user was the third bidder,
    /// 						UserID = Bidder 3. <br>
    /// 						Note that in this format, the anonymous bidder ID stays the same for a given auction, but is different for different auctions. For example, a bidder who is the third and then the seventh bidder in an auction will be listed for both bids as "Bidder 3". However, if that same bidder is the first bidder on a different auction, the bidder will be listed for that auction as "Bidder 1",
    /// 						not "Bidder 3".
    /// 						<br><br>
    /// 						(<b>GetMyeBayBuying</b> only) when bidding on items listed on the UK and AU sites: UserID is replaced with the string "High Bidder".
    /// 						<br><br>
    /// 						(<b>GetBestOffers</b> only) - all sites: The last part of the user ID is replaced with asterisks for users that submit best offers on an item. The seller of the item will be able to see the full User ID.
    /// 					
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// GetAllBiddersConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Unique identifier of the eBay category that the auction item is listed under.
    /// 					
    /// </remarks>

	public string CategoryID { get; set; }
    /// <summary>
    /// GetAllBiddersConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The total number of bids that the user has placed on the auction item.
    /// 					
    /// </remarks>

	public int? BidCount { get; set; }
    /// <summary>
    /// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/user-mgmt-anonymous-info.htmlAnonymous user information
    /// GetAllBiddersConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The eBay ID of the seller who listed the item.
    /// 						<br><br>
    /// 						This will be returned with the anonymous
    /// 						value "Seller X", where X indicates where the seller falls
    /// 						in the sequence of sellers that the user has purchased items
    /// 						from. For example, if the seller is the third seller that
    /// 						the user has purchased items from, the value "Seller 3" is
    /// 						returned.
    /// 					
    /// </remarks>

	public string SellerID { get; set; }
    /// <summary>
    /// GetAllBiddersConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This timestamp indicates the date/time at which the user placed the last bid on the auction item.
    /// 					
    /// </remarks>

	public System.DateTime? LastBidTime { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Defines the parts compatibility feature. If the field is present, the
/// 				corresponding feature applies to the site. The field is returned as an empty
/// 				element (e.g., a boolean value is not returned).
/// 				<br><br>
/// 				Parts compatibility listings contain information to determine the assemblies with
/// 				which a part is compatible. For example, an automotive part or accessory listed
/// 				witih parts compatibility can be matched with vehicles (e.g., specific years,
/// 				makes, and models) with which the part or accessory can  be used.
/// 				<br><br>
/// 				There are two ways to enter parts compatibility: by application and by
/// 				specification. 
/// 				<ul>
/// 				<li> Entering parts compatibility by application specifies the assemblies
/// 				(e.g., a specific year, make, and model of car) to which the item applies. This 
/// 				can be done automatically by listing with a catalog product that supports parts
/// 				compatibility, or manually, using <b
/// 				class="con">Item.ItemCompatibilityList</b> when listing or revising an
/// 				item. </li>
/// 				<li>Entering parts compatibility by specification involves specifying the
/// 				part's relevant dimensions and characteristics necessary to determine the
/// 				assemblies with which the part is compatible (e.g., Section Width, Aspect Ratio,
/// 				Rim Diammeter, Load Index, and Speed Rating values for a tire) using
/// 				attributes.</li>
/// 				</ul>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ItemCompatibilityEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				A list of compatible applications specified as name and value pairs. Describes an
/// 				assembly with which a part is compatible (i.e., parts compatibility by application). For
/// 				example, to specify a part's compatibility with a vehicle, the name would map to
/// 				standard vehicle characteristics (e.g., Year, Make, Model, Trim, and Engine). The
/// 				values would desribe the specific vehicle, such as a 2006 Honda Accord.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ItemCompatibilityListType {

#region 属性
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetItemConditionallyProduct API ProductCompatibilities call referencehttps://developer.ebay.com/Devzone/product/CallRef/getProductCompatibilities.htmlinformation about retrieving parts compatibility details that correspond to eBay catalog products.
    /// </summary>
    /// <remarks>
    /// 
    /// 						Details for an individual compatible application, consisting of the name-value pair and related parts compatibility notes. When revising or relisting, the <b>Delete</b> field can be used to delete individual parts compatibility nodes.
    /// 						<br/><br/>
    /// 						<span class="tablenote">
    /// 						<strong>Note:</strong> For the <b>GetItem</b> call, <strong>Compatibility</strong> includes only parts compatibility details that were specified manually; that is, they do not correspond to an eBay catalog product. To retrieve parts compatibility details that <em>do</em> correspond to eBay catalog products, use the eBay Product API's <b>getProductCompatibilities</b> call.
    /// 						</span>
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("Compatibility")]

	public System.Collections.Generic.List<ItemCompatibilityType> Compatibility { get; set; }
    /// <summary>
    /// false
    /// RelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Set this value to true to delete or replace all existing parts compatibility information when you revise or relist an item. If set to true, all existing item parts compatibility nodes are removed from the listing. If new item compatibilities are specified in the request, they replace the removed compatibilities.
    /// 						<br/><br/>
    ///                   <span class="tablenote">
    ///                   <strong>Note:</strong> To ensure that buyer expectations are upheld, you cannot delete or replace an item parts compatibility list if the listing has bids or if the auction ends within 12 hours.
    ///                   </span>
    /// 					
    /// </remarks>

	public bool? ReplaceAll { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				All information corresponding to an individual parts compatibility by application.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ItemCompatibilityType {

#region 属性
    /// <summary>
    /// false
    /// ReviseFixedPriceItemReviseItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Removes individual parts compatibility nodes from the compatibility list. Set
    /// 						to <code>true</code> within the compatibility to delete.
    /// 						<br/><br/>
    /// 							<span class="tablenote"><b>Note: </b>
    /// 							This field can only be used with <b>Revise</b> calls or when revising a template.
    /// 							</span>
    /// 						If the listing has bids or ends within 12 hours, you cannot delete item parts
    /// 						compatibilities.
    /// 					
    /// </remarks>

	public bool? Delete { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionallyProduct Metadata API Call Referencehttps://developer.ebay.com/DevZone/product-metadata/CallRef/index.htmlinformation on retrieving parts compatibility search names and corresponding values needed to specify compatibility by application manually
    /// GetItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						A name-value pair describing a single compatible application. The
    /// 						allowed names and values are specific to the primary category in which the
    /// 						item is listed. For example, when listing in a Parts & Accessories
    /// 						category, where the applications are vehicles, the allowed names might include
    /// 						Year, Make, and Model, and the values would correspond to specific vehicles in
    /// 						eBay's catalog. For details and examples, see
    /// 						<a href="https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/manually-specify-compatibility.html"
    /// 						target="_blank">Specify parts compatibility manually</a>.
    /// 						<br><br>
    /// 						The eBay Germany, UK, France, Italy, Spain, and Australia sites support the use of <em>K type</em> vehicle numbers to specify vehicle
    /// 						parts compatibility. To use a K type number, set the <b>Name</b> field to "<code>KType</code>"
    /// 						and set the corresponding <b>Value</b> field to the appropriate K type number.
    /// 						<br><br>
    /// 						The DE and UK eBay sites also support the use of an <em>eBay Product ID</em> (or <em>ePID</em>)
    /// 						number/value pair to specify motorcycle and scooter parts compatibility (currently, only DE supports scooter parts
    /// 						compatibily). To use an ePID number to specify part compatibilities, set the <b>Name</b>
    /// 						field to "<code>ePID</code>" and the corresponding <b>Value</b> field to the ePID
    /// 						number that matches the motorcycle for the part(s) you are listing. Motorcycle ePID numbers are provided
    /// 						by the <em>Master Motorcycle List</em> (MML) file, which contains the ePID numbers and
    /// 						their associated vehicle mappings). For motorcycles, an ePID number contains the vehicle make, model, CCM,
    /// 						year, and submodel data. Please use the following links to obtain the DE and UK MML data files:
    /// 						<br><br>
    /// 						 - DE seller help page: http://verkaeuferportal.ebay.de/fahrzeugteile-und-zubehoer-optimal-einstellen<br>
    /// 						 - UK seller help page: http://pages.ebay.co.uk/help/sell/contextual/master-motorcycle-list-manually.html
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("NameValueList")]

	public System.Collections.Generic.List<NameValueListType> NameValueList { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The seller may optionally enter any notes pertaining to the parts compatibility being specified.
    /// 						Use this field to specify the placement of the part on a vehicle or the type of vehicle a part fits.
    /// 					
    /// </remarks>

	public string CompatibilityNotes { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Defines how a list of items should be returned.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ItemListCustomizationType {

#region 属性
    /// <summary>
    /// GetMyeBayBuyingGetMyeBaySellingNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies whether or not to include the container in the response.
    /// 						Set the value to true to return the default set of fields for the
    /// 						container. Not needed if you set a value for at least one other field
    /// 						in the container.
    /// 						<br><br>
    /// 						If you set DetailLevel to ReturnAll, set Include to false to exclude
    /// 						the container from the response.
    /// 					
    /// </remarks>

	public bool? Include { get; set; }
    /// <summary>
    /// GetMyeBayBuyingBestOfferListNoAuction, FixedPriceItem, StoresFixedPrice, AdType
    /// GetMyeBaySellingActiveListNoAuction, FixedPriceItem, StoresFixedPrice, AdType
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the listing type of items in the returned list.
    /// 					
    /// </remarks>

	public ListingTypeCodeType? ListingType { get; set; }
    /// <summary>
    /// GetMyeBayBuyingBestOfferListBidListDeletedFromLostListDeletedFromWonListLostListWatchListWonListNo
    /// GetMyeBaySellingActiveListBidListScheduledListSoldListUnsoldListNo
    /// GetItemsAwaitingFeedbackNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the sort order of the result. Default is Ascending.
    /// 					
    /// </remarks>

	public ItemSortTypeCodeType? Sort { get; set; }
    /// <summary>
    /// 0
    /// 60
    /// GetMyeBayBuyingBestOfferListDeletedFromLostListDeletedFromWonListLostListWonListNo
    /// GetMyeBaySellingSoldListUnsoldListNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the time period during which an item was won or lost. Similar to the
    /// 						period drop-down menu in the My eBay user interface. For example, to return
    /// 						the items won or lost in the last week, specify a DurationInDays of 7.
    /// 					
    /// </remarks>

	public int? DurationInDays { get; set; }
    /// <summary>
    /// GetMyeBayBuyingBestOfferListBidListDeletedFromWonListDeletedFromLostListLostListWatchListWonListNo
    /// GetMyeBaySellingActiveListBidListScheduledListSoldListUnsoldListNo
    /// false
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies whether or not to include Item.PrivateNotes and Item.eBayNotes
    /// 						in the response.
    /// 					
    /// </remarks>

	public bool? IncludeNotes { get; set; }
    /// <summary>
    /// GetMyeBayBuyingBestOfferListBidListDeletedFromLostListDeletedFromWonListLostListWatchListWonListNo
    /// GetMyeBaySellingActiveListBidListScheduledListSoldListUnsoldListNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies how to create virtual pages in the returned list.
    /// 						<br>
    /// 						Default for EntriesPerPage with GetMyeBayBuying is 200.
    /// 					
    /// </remarks>

	public PaginationType Pagination { get; set; }
    /// <summary>
    /// GetMyeBaySellingSoldListAllNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						Filter to reduce the <b>SoldList</b> response based on whether the seller (or eBay) marked the applicable order as Paid and/or Shipped
    /// 						in My eBay.<br>
    /// 						<br>
    /// 						Sellers can use <b>CompleteSale</b> or My eBay to mark an
    /// 						order as Paid or Shipped.
    /// 					
    /// </remarks>

	public OrderStatusFilterCodeType? OrderStatusFilter { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Specifies the details of policy violations if the item was administratively canceled.
/// 				The details are the policy ID and the policy text.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ItemPolicyViolationType {

#region 属性
    /// <summary>
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: FineConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Policy ID of the violated policy which resulted in item being administratively canceled.
    /// 					
    /// </remarks>

	public long? PolicyID { get; set; }
    /// <summary>
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: FineConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Brief information of the violated policy which resulted in item being administratively canceled.
    /// 					
    /// </remarks>

	public string PolicyText { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Applicable to sites that support the Detailed Seller Ratings feature.
/// 				The <b>ItemRatingDetailsType</b> contains detailed seller ratings for an order line item in one area. When buyers leave an overall Feedback rating (positive, neutral, or negative) for a seller, they also can leave ratings in four areas: item as described, communication, shipping time, and charges for shipping and handling. Users retrieve detailed ratings as averages of the ratings left by buyers.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ItemRatingDetailsType {

#region 属性
    /// <summary>
    /// LeaveFeedbackNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						The area of a specific detailed seller rating for an order line item.
    /// 						When buyers leave an overall Feedback rating (positive, neutral, or negative)
    /// 						for a seller, they also can leave ratings in four areas: item as described,
    /// 						communication, shipping time, and charges for shipping and handling.
    /// 					
    /// </remarks>

	public FeedbackRatingDetailCodeType? RatingDetail { get; set; }
    /// <summary>
    /// LeaveFeedbackNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						A detailed seller rating for an order line item applied to the area
    /// 						in the corresponding RatingDetail field. Valid input values are
    /// 						numerical integers 1 though 5.
    /// 					
    /// </remarks>

	public int? Rating { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is used by the <b>ItemSpecificDetails</b> container that is returned in the <b>GeteBayDetails</b> call. The <b>ItemSpecificDetails</b> container consists of maximum threshold values that must be adhered to when creating, revising, or relisting items with Item Specifics. Item Specifics are used to provide descriptive details of an item in a structured manner.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ItemSpecificDetailsType {

#region 属性
    /// <summary>
    /// Setting Item Specifics in AddItemAddItem.html#Request.Item.ItemSpecificsinstructions on adding Item Specifics when creating a listing
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This value is the maximum number of Item Specifics name-value pairs that can be used when creating, revising, or relisting an item on the specified site. Item Specifics are used to provide descriptive details of an item in a structured manner.
    /// 					
    /// </remarks>

	public int? MaxItemSpecificsPerItem { get; set; }
    /// <summary>
    /// Setting one or more values for Item Specific in AddItemAddItem.html#Request.Item.ItemSpecifics.NameValueList.Value
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This value is the maximum number of corresponding name values that can be used per Item Specific when creating, revising, or relisting an item on the specified site. An example of an Item Specific that might have multiple values is 'Features'. A product can have multiple features, hence multiple features can be passed in through multiple <b>ItemSpecifics.NameValueList.Value</b> fields.
    /// 						<br><br>
    /// 						Once you know the site threshold, it can also be helpful to know specific Item Specifics in a category that can have more than one value, such as 'Features'. Multiple values can only be specified for an Item Specific if the corresponding <a href="/api-docs/commerce/taxonomy/resources/category_tree/methods/getItemAspectsForCategory#response.aspects.aspectConstraint.itemToAspectCardinality" target="_blank">itemToAspectCardinality</a> field of the <b>getItemAspectsForCategory</b> method shows a value of <code>MULTI</code>. 
    /// 					
    /// </remarks>

	public int? MaxValuesPerName { get; set; }
    /// <summary>
    /// Setting Item Specific values in AddItemAddItem.html#Request.Item.ItemSpecifics.NameValueList.Value
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This value is the maximum number of characters that can be used for an Item Specific value on the specified site.
    /// 					
    /// </remarks>

	public int? MaxCharactersPerValue { get; set; }
    /// <summary>
    /// Setting Item Specific names in AddItemAddItem.html#Request.Item.ItemSpecifics.NameValueList.Name
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This value is the maximum number of characters that can be used for an Item Specific name on the specified site.
    /// 					
    /// </remarks>

	public int? MaxCharactersPerName { get; set; }
    /// <summary>
    /// GeteBayDetailsDetailLevel: none, ReturnSummary, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						This string indicates the version of the Item Specifics metadata.
    /// 					
    /// </remarks>

	public string DetailVersion { get; set; }
    /// <summary>
    /// GeteBayDetailsDetailLevel: none, ReturnSummary, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						This timestamp indicates the date and time when the Item Specifics metadata was last updated. Time is in Greenwich Mean Time (GMT) time. This timestamp can be useful in determining if and when to refresh cached client data.
    /// 					
    /// </remarks>

	public System.DateTime? UpdateTime { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
///  
/// 				Defines the Item Specific feature. If the field is present, the corresponding feature applies to the site. The field is returned as an empty element (e.g., a boolean value is not returned).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ItemSpecificsEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// AttributeConversionEnabled, BasicUpgradePack, ClassifiedAdContactByEmailAvailable, ClassifiedAdMaximumBestOffersAllowed, ClassifiedAdPayPerLeadEnabled, CombinedFixedPriceTreatment, DepositSupported, DigitalDeliveryEnabled, DutchBINEnabled, EANIdentifierEnabled, ExpressConditionRequired
/// </summary>
/// <remarks>
/// 
/// 				Contains the data defining one item. A seller populates an object of this type at listing time with the definition of a new item. A seller also uses an object of this type to relist or revise an item. Calls that retrieve item data (such as the <b>GetSellerList</b> call) return an object of this type, filled with the item's data.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ItemType {

#region 属性
    /// <summary>
    /// 32
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemNo
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Coarse, Medium, FineConditionally
    /// GetBidderListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Return custom, application-specific data associated with the item.
    /// 						The data you specify is stored by eBay with the item for your own
    /// 						reference, but it is not used by eBay in any way. Use
    /// 						<b>ApplicationData</b> to store special information for yourself, such as
    /// 						a part number. For a SKU in an eBay.com listing, use the <b>SKU</b>
    /// 						element instead. To remove this value when revising or relisting an
    /// 						item, use <b>DeletedField</b>.
    /// 						<br/>
    /// 					
    /// </remarks>

	public string ApplicationData { get; set; }
    /// <summary>
    /// falseAddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemNo
    /// GetBidderListAlways
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllAlways
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllAlways
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Coarse, Medium, FineConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is included and set to if <code>true</code> in an Add/Revise/Relist call if the seller wants to require immediate payment from the buyer. If this field is set to <code>false</code> or not included, the seller is not requesting immediate payment. 
    /// 						<br/><br/>
    /// 						Note that this field may be set to <code>true</code>, but that does not necessarily mean that the buyer will be required to pay right away. For example, immediate payment is not currently applicable to auctions items won in a competitive bidding process or to items where the buyer and seller negotiated the price through the Best Offer feature. Immediate payment is also not applicable to listings where the payment happens offline between the buyer and seller.
    /// 					
    /// </remarks>

	public bool? AutoPay { get; set; }
    /// <summary>
    /// GetMyeBayBuyingBidListLostListWonListDeletedFromWonListDeletedFromLostListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingBidListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Detailed information about a bid. For <b>GetMyeBayBuying</b>, returned as a self-closed element if no bids meet the request criteria.
    /// 					
    /// </remarks>

	public BiddingDetailsType BiddingDetails { get; set; }
    /// <summary>
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Coarse, Medium, FineConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetBidderListConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The enumeration value returned in this field indicates whether an item is  eligible for the buyer protection.
    /// 					
    /// </remarks>

	public BuyerProtectionCodeType? BuyerProtection { get; set; }
    /// <summary>
    /// AddItemAddItemsRelistItemReviseItemVerifyAddItemVerifyRelistItemNo
    /// GetBestOffersDetailLevel: none, ReturnAllConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Medium, FineConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: ReturnAllConditionally
    /// GetMyeBayBuyingWatchListBestOfferListBidListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingActiveListScheduledListSoldListUnsoldListDetailLevel: none, ReturnAllConditionally
    /// GetBidderListAlways
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllAlways
    /// GetSellerEventsDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is only applicable for auction listings. By specifying a 'Buy It Now' price, a seller is allowing prospective buyers the opportunity to purchase the item in the auction listing at this price immediately. When a buyer uses the 'Buy It Now' option to purchase the item, the auction listing will end immediately.
    /// 						<br/><br/>
    /// 						By including this field and specifying a 'Buy It Now' price, the seller is enabling the 'Buy It Now' feature on the auction listing. If the seller includes this field for any other listing type other than an auction, this field and its price will just be ignored.
    /// 						<br/><br/>
    /// 						The price in this field must be at least 30 percent higher than the starting bid price (which is specified in an Add call through the <b>Item.StartPrice</b> field). Once a bid is made on an auction listing, and the bid meets or exceeds the <b>Item.ReservePrice</b> value (if set), the 'Buy It Now' option becomes unavailable, and this field will no longer be applicable. If there is no Reserve Price, the first bid will nullify the 'Buy It Now' option.
    /// 						<br><br>
    /// 						Keep in mind that <b>GetItem</b> (and other 'Get' calls that retrieve the Item details) may still return the <b>BuyItNowPrice</b> field for an auction item even if the 'Buy It Now' option is no longer available. Instead, a user should look for the <b>ListingDetails.BuyItNowAvailable</b> boolean field in the <b>GetItem</b> response to determine if the 'Buy It Now' option is still available for the auction item.
    /// 						<br/><br/>
    /// 						<span class="tablenote"><b>Note: </b> For the US site, new eBay sellers are subject to <a href="https://developer.ebay.com/api-docs/user-guides/static/make-a-call/fg-replaced.html">Seller Limits</a>, which limit the quantity of items that may be listed and/or the total cumulative value of these listings. While subject to these selling limits, an eBay seller can use the <b>GetMyeBaySelling</b> call to retrieve both the remaining number of listings they can create and the remaining cumulative value of these listings. These values are shown in the <b>Summary.QuantityLimitRemaining</b> and <b>Summary.AmountLimitRemaining</b> fields in the <b>GetMyeBaySelling</b> response. If a call to add an item or revise an item would result in the exceeding of these limits, the add item or revise item call will fail. These fields will only be returned if the seller is subject to seller limits.
    /// 						</span>
    /// 					
    /// </remarks>

	public AmountType BuyItNowPrice { get; set; }
    /// <summary>
    /// trueAddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemNoMaintaining Category Datahttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/categories.html
    /// </summary>
    /// <remarks>
    /// 
    /// 						<span class="tablenote"><b>Note: </b> This field's value now defaults to <code>true</code> if this field is omitted. Previously, the default value was <code>false</code>, so a user had to include this field and set it to <code>true</code> in order for eBay to map an outdated Primary or Secondary Category ID to the updated Category ID.
    /// 						</span>
    /// 						This boolean field controls whether or not eBay automatically maps outdated Category ID(s) specified in a
    /// 						<b>PrimaryCategory</b> and/or <b>SecondaryCategory</b> container(s) to the updatd Category ID(s) no longer exists in the
    /// 						current category structure: If you pass a value of <code>true</code> in
    /// 						<b>CategoryMappingAllowed</b> or just omit the field, eBay will look up the current Category ID(s) that have replaced the specified Category ID(s). If you pass a value of <code>false</code>, eBay will not do any mapping, and the call may fail if specified Category ID(s) are no longer valid IDs for a eBay leaf category. The new Category ID(s) will be returned in the <b>CategoryID</b> and <b>Category2ID</b> fields (if secondary category is used) of the Add/Revise/Relist call response.
    /// 						<br/><br/>
    /// 					
    /// </remarks>

	public bool? CategoryMappingAllowed { get; set; }
    /// <summary>
    /// Buying and selling on eBay to benefit nonprofit organizationshttps://www.ebay.com/help/account/donating-ebay-charity/buying-selling-ebay-benefit-nonprofit-organizations?id=4668
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemNo
    /// GetBidderListConditionally
    /// GetItemDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Coarse, Medium, FineConditionally
    /// Charitable listingshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/charitable-listings.html
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container identifies the nonprofit organization that will benefit with a percentage of the proceeds from each sale of an item through an auction or fixed-price listing. Charity names and IDs can be found by going to <a href="https://charity.ebay.com/charity-auctions/my-causes" target="_blank">eBay for Charity</a> page and doing a search. The donation percentage can be set in 5 percent increments from 10 percent to 100 percent.
    /// 						<br><br>
    /// 						When it comes to revising an auction or fixed-price listing, you can add a benefitting charity (as long as there is at least 12 hours left before end of listing/close of auction), but you cannot remove or change a nonprofit company once one is already established in the original listing.
    /// 						<br><br>
    /// 						<b>For Revise calls</b>: The non-profit organization and donation percentage can now be modified in a Revise call as long as there are no active bids on an auction listing, or no pending Best Offers/Counter Offers on a listing.
    /// 						<br><br>
    /// 						This container will only be returned in Get calls for charitable listings. Charitable listings are only supported in the US and UK marketplaces.
    /// 					
    /// </remarks>

	public CharityType Charity { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsVerifyAddFixedPriceItemVerifyAddItemYes
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: CoarseConditionally
    /// RelistItemReviseItemRelistFixedPriceItemReviseFixedPriceItemVerifyRelistItemNo
    /// GetBidderListAlways
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllAlways
    /// GetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						 This two-digit enumeration value indicates the country where the item is located. <b>CountryCodeType</b> defines the supported values. The <a href="https://developer.ebay.com/DevZone/XML/docs/Reference/eBay/GeteBayDetails.html">GeteBayDetails</a> call can also be used (include the <b>DetailName</b> field and set its value to <b>CountryDetails</b>) to see the full list of supported country codes.
    /// 						<br><br>
    /// 						In an Add/Revise/Relist/Verify call, this field is required.
    /// 					
    /// </remarks>

	public CountryCodeType? Country { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsAddFixedPriceItemVerifyAddFixedPriceItemVerifyAddItemYes
    /// GetBidderListAlways
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllAlways
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllAlways
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Coarse, Medium, FineConditionally
    /// GetBestOffersDetailLevel: none, ReturnAllConditionally
    /// GetSellerEventsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						In an Add/Revise/Relist/Verify call, this required three-digit enumeration value defines the currency associated with the listing site. The item price and all costs passed in the call request will be using this currency. Similarly, the listing fees and other cost-related data will be using this currency. Since the Trading API can only be used for a select number of eBay sites, only a subset of values are supporting when adding/revising/relisting an item. These supported values are discussed in the top section of <b>CurrencyCodeType</b>.
    /// 						<br><br>
    /// 						In 'Get' calls, it is possible that any of the values in <b>CurrencyCodeType</b> may appear, as some cost-related fields will show the buyer's currency type.
    /// 					
    /// </remarks>

	public CurrencyCodeType? Currency { get; set; }
    /// <summary>
    /// 500000 (some sites may allow more, but the exact number may vary)
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionallyIncludeeBayProductDetails#Request.Item.ProductListingDetails.IncludeeBayProductDetails
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetItemDetailLevel: ItemReturnDescription, ReturnAllAlwaysIncludeeBayProductDetails#Response.Item.ProductListingDetails.IncludeeBayProductDetails
    /// </summary>
    /// <remarks>
    /// 
    /// 						The seller's description of the item.
    /// 						In listing requests, you can submit your description
    /// 						using CDATA if you want to use HTML or XML-reserved characters in the
    /// 						description. However, a seller can not use any active content in their listing description. Active content includes animation or video via JavaScript, Flash, plug-ins, or form actions. All active content will be blocked/removed from a listing. Removing/blocking active content will lead to faster load times of listings, make listings more mobile-friendly, improve SEO performance, and lead to a more secure eBay Marketplace.
    /// 						<br><br>
    /// 						<span class="tablenote"><b>Note: </b> To ensure that a listing description is optimized to be viewed on a mobile devices, see <a href="/api-docs/user-guides/static/trading-user-guide/mobile.html" target="_blank">Mobile device optimization</a> in the Trading User Guide. <br><br>
    /// 						Note that the mobile-friendly description snippet feature described in this topic is currently only available in the following eBay marketplaces: US, UK, Australia, France, Germany, Italy, Spain, and eBay Motors.
    /// 						</span>
    /// 						<br>
    /// 						In the listing description, sellers are only allowed to provide links to product videos, freight shipping services, or other legally required information, and when providing these links in the listing description, the secure 'https' protocol must be used instead of 'http'. In addition, any valid  links to sites outside of eBay should use the <em>target="_blank"</em> attribute in the <b>a href</b> tag so a new browser window will be loaded when the link is clicked instead of buyers being redirected off of eBay. For more information on using links in the listing description, see eBay's <a href="http://pages.ebay.com/help/policies/listing-links.html" target="_blank">Links policy</a>. For more information about the stronger security standards that eBay is using, see the <a href="https://pages.ebay.com/seller-center/seller-updates/2018-fall/marketplace-update.html#use-secure-https" target="_blank">Use secure HTTPS for enhanced browser security</a> topic in the 2018 Fall Seller Update. The <a href="https://developer.ebay.com/api-docs/sell/compliance/resources/listing_violation/methods/getListingViolations" target="_blank">getListingViolations</a> method of the Compliance API can be used to see if any of the seller's active listings are not 'HTTPS' compliant.
    /// 						<br><br>
    /// 						If you embed pictures in the description (by using IMG tags) instead of using
    /// 						<b>PictureURL</b>, but you want a camera icon to appear in search and listing pages,
    /// 						specify the following null-image URL in the <b>PictureURL</b> field:
    /// 						https://pics.ebay.com/aw/pics/dot_clear.gif. See <a href="https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/pictures.html" target="_blank">Add pictures</a> in the Trading API User Guide.
    /// 						<br><br>
    /// 						This field is conditionally required for all listings. The exception is when the seller specifies a product identifier, such as a GTIN or ePID, through the <b>ProductListingDetails</b> container and a product match is found in the eBay product catalog. If a matching product is found in the eBay product catalog, the item description will be created automatically (as long as the <b>ProductListingDetails.IncludeeBayProductDetails</b> value is <code>true</code>).
    /// 						<br>
    /// 					
    /// </remarks>

	public string Description { get; set; }
    /// <summary>
    /// ReviseItemReviseFixedPriceItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is conditionally required if the listing is being revised through a Revise call, and the <b>Item.Description</b> field is one of the fields being changed. The enumeration value passed in this field specifies whether the text provided in the <b>Item.Description</b> field will prepend, append, or replace the existing text in the current <b>Item.Description</b> field.
    /// 					
    /// </remarks>

	public DescriptionReviseModeCodeType? DescriptionReviseMode { get; set; }
    /// <summary>
    /// AddOrderGetBestOffersRelistItemReviseItemVerifyRelistItemYes
    /// RelistFixedPriceItemReviseFixedPriceItemConditionally
    /// GetBidderListAlways
    /// GetOrdersTransaction.ItemDetailLevel: none, ReturnAllAlways
    /// OrderReportAlways
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllAlways
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllAlways
    /// GetBestOffersDetailLevel: none, ReturnAllConditionally
    /// GetItemsAwaitingFeedbackGetMemberMessagesConditionally
    /// GetMyeBayBuyingBestOfferListBidListLostListSecondChanceOfferWatchListWonListDeletedFromWonListDeletedFromLostListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingActiveListBidListScheduledListSoldListUnsoldListDetailLevel: none, ReturnAllConditionally
    /// GetSellerEventsDetailLevel: none, ReturnAllConditionally
    /// GetSellerEventsDetailLevel: none, ReturnAllConditionally
    /// GetSellerListDetailLevel: none, ItemReturnDescription, ReturnAllGranularityLevel: Coarse, Medium, FineConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The unique identifier of the eBay listing. This identifier is generated
    /// 						by eBay and returned in the response of an Add call if an item is successfully listed. Once an item is successfully created, the <b>ItemID</b> cannot be modified. <br>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note:</b> Although we represent
    /// 						item IDs as strings in the schema, we recommend you store them as 64-bit
    /// 						signed integers. If you choose to store item IDs as strings, allocate at
    /// 						least 19 characters (assuming decimal digits are used) to hold them. Your code should be prepared to
    /// 						handle IDs of up to 19 digits. </span>
    /// 					
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// GetBestOffersDetailLevel: none, ReturnAllAlways
    /// GetBidderListAlways
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllAlways
    /// GetSellerEventsDetailLevel: none, ReturnAllConditionally
    /// GetCategoryListingsGetItemsAwaitingFeedbackGetMemberMessagesConditionally
    /// GetMyeBayBuyingBestOfferListBidListLostListSecondChanceOfferWatchListWonListDeletedFromWonListDeletedFromLostListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingActiveListBidListScheduledListSoldListUnsoldListDetailLevel: none, ReturnAllConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: ReturnAllConditionally
    /// GetSellerListDetailLevel: none, ItemReturnDescription, ReturnAllGranularityLevel: Coarse, Medium, FineConditionally
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						Various details about a listing, some of which are calculated or
    /// 						derived after the item is listed. These include the start and end
    /// 						time, converted (localized) prices, and certain flags that indicate
    /// 						whether the seller specified fields whose values are not visible to
    /// 						the requesting user. For <b>GetMyeBayBuying</b>, returned as a self-closed element if no listings meet the request criteria.
    /// 						<br/><br/>
    /// 						In an Add/Revise/Relist call, this container is used to set the Best Offer Auto-Accept and Best Offer Auto-Decline threshold values.
    /// 					
    /// </remarks>

	public ListingDetailsType ListingDetails { get; set; }
    /// <summary>
    /// ListingDurationCodeType
    /// AddFixedPriceItemAddItemAddItemsVerifyAddFixedPriceItemVerifyAddItemYes
    /// RelistItemReviseItemRelistFixedPriceItemReviseFixedPriceItemVerifyRelistItemNo
    /// GetBidderListConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetMyeBaySellingScheduledListUnsoldListActiveListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 							Describes the number of days the seller wants the listing to be active (available for bidding/buying). The duration specifies the seller's initial intent at listing time.
    /// 							<br/><br/>
    /// 							The end time for a listing is calculated by adding the duration to the item's start time. If the listing ends early, the value of the listing duration does not change. When a listing's duration is changed, any related fees (e.g., 10-day fee) may be debited or credited (as applicable).
    /// 							<br><br>
    /// 							The valid choice of values depends on the listing format (see <b>Item.ListingType</b>). For
    /// 							a list of valid values, call <b>GetCategoryFeatures</b> with <b>DetailLevel</b> set to <b>ReturnAll</b>
    /// 							and look for <b>ListingDurations</b> information.
    /// 							<br><br>
    /// 							When you revise a listing, the duration cannot be reduced if it will result in ending the listing within 24 hours of the current date-time. You are only allowed to increase the duration of the listing if fewer than 2 hours have passed since you initially listed the item and the listing has no bids. You can decrease the value of this field only if the listing has no bids (or no items have sold) and the listing does not end within 12 hours.
    /// 							<br>
    /// 							<br>
    /// 							<span class="tablenote"><b>Note: </b> As of April 1, 2019, 'GTC' is the only supported listing duration for all eBay marketplaces with the following exceptions:
    /// 							<ul>
    /// 								<li>The following eBay Motors US categories are exempt from this change: <em>Cars & Trucks</em> (6001), <em>Motorcycles</em> (6024), <em>Other Vehicles & Trailers</em> (6038), <em>Boats</em> (26429), <em>Powersports</em> (66466).</li>
    /// 								<li>All child categories under <em>Cars, Motorcycles & Vehicles</em> (9800) categories on the eBay UK and eBay Italy sites are also exempt from this change. </li>
    /// 								</ul>
    /// 								If any other listing duration value besides <code>GTC</code> is specified in this field, it will be ignored, and <code>GTC</code> will be used instead.
    /// 								</span>
    /// 						
    /// </remarks>

	public string ListingDuration { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemNo
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetBidderListGetCategoryListingsConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Describes listing upgrades that sellers can select for a fee, such as the
    /// 						<b>BoldTitle</b> upgrade. 
    /// 						<br><br>
    /// 						You can add a listing upgrade when you revise a listing, but you cannot remove a listing upgrade. When you
    /// 						relist an item, use <b>DeletedField</b> to remove a listing upgrade.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("ListingEnhancement")]

	public System.Collections.Generic.List<ListingEnhancementsCodeType> ListingEnhancement { get; set; }
    /// <summary>
    /// Unknown, Auction, PersonalOffer, Shopping, HalfAddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetBidderListUnknown, Auction, Half, PersonalOfferAlways
    /// GetItemDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAllUnknown, Auction, HalfAlways
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllUnknown, Auction, Half, PersonalOffer, ShoppingConditionally
    /// GetItemTransactionsGetSellerTransactionsUnknown, Auction, Half, ShoppingDetailLevel: none, ItemReturnDescription, ReturnAllAlways
    /// GetCategoryListingsUnknown, Auction, Half, PersonalOfferConditionally
    /// GetMyeBayBuyingBidListLostListWatchListWonListDeletedFromWonListDeletedFromLostListDetailLevel: none, ReturnAllUnknown, Auction, HalfConditionally
    /// GetMyeBaySellingActiveListBidListScheduledListSoldListUnsoldListDetailLevel: none, ReturnAllUnknown, Auction, HalfConditionally
    /// GetSellerEventsDetailLevel: ReturnAllUnknown, Auction, Half, ShoppingConditionally
    /// Listing typeshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/listing-types.html
    /// </summary>
    /// <remarks>
    /// 
    /// 						The selling format of the eBay listing, such as auction (indicated with <code>Chinese</code> value), fixed-price (indicated with <code>FixedPriceItem</code> value), or classified ad (indicated with <code>AdType</code> value).
    /// 						<br><br>
    /// 						If this field is not included in an <b>AddItem</b>, <b>AddItems</b>, or <b>VerifyAddItem</b> call, the listing type defaults to auction
    /// 						<br><br>
    /// 						For <b>AddFixedPriceItem</b>, <b>RelistFixedPriceItem</b>, or <b>VerifyAddFixedPriceItem</b> call, this field must be included and set to <code>FixedPriceItem</code>, since these calls only work with fixed-price listings.
    /// 						<br><br>
    /// 						This field is not applicable to Revise calls because the selling format of active listings cannot be changed.
    /// 					
    /// </remarks>

	public ListingTypeCodeType? ListingType { get; set; }
    /// <summary>
    /// 45
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetBidderListAlways
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllAlways
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Coarse, Medium, FineConditionally
    /// GetCategoryListingsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates the geographical location of the item (along with the value in the <b>Country</b> field).
    /// 						When you revise a listing, you can add or change this value only if the
    /// 						listing has no bids (or no items have sold) and it does not end within
    /// 						12 hours.
    /// 						<br><br>
    /// 						If you do not specify <b>Location</b>, you must specify <b>Item.PostalCode</b>. If you
    /// 						specify a postal code, but do not specify a location, then the location is
    /// 						given a default value derived from the postal code.
    /// 						<br><br>
    /// 						For the Classified Ad format for motors vehicle listings, the value
    /// 						provided in the <b>Location</b> field is used as item location only if the
    /// 						<b>SellerContactDetails.Street</b> and the <b>SellerContactDetails.Street2</b> are empty.
    /// 						Else, the <b>SellerContactDetails.Street</b> and the <b>SellerContactDetails.Street2</b>
    /// 						will be used for item location.
    /// 						<br>
    /// 					
    /// </remarks>

	public string Location { get; set; }
    /// <summary>
    /// 450,000
    /// AddItemAddItemsRelistItemReviseItemVerifyAddItemVerifyRelistItemNo
    /// GetBidderListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						A lot is a set of two or more similar items included in a single listing that must be purchased together in a single order line item. The <b>Item.LotSize</b> value is the number of items in the lot. This field is required if two or more items are including in one listing.
    /// 						<br><br>
    /// 						Lots can be used for auction and fixed-price listings. Lot items can be listed only in lot-enabled categories. Call <b>GetCategories</b> to determine if a category supports lots. If the returned <b>CategoryArray.Category.LSD</b> (<b>LotSize</b> Disabled) value is <code>true</code>, the category does not support lots.
    /// 						<br>
    /// 					
    /// </remarks>

	public int? LotSize { get; set; }
    /// <summary>
    /// AddItemAddItemsRelistItemReviseItemVerifyAddItemVerifyRelistItemNo
    /// GetBidderListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// eBay motors offline payment methodshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/ebay-motors-payments.html
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container is used in an <b>Add/Revise/Relist/Verify</b> call if the seller is selling a motor vehicle. It is used by the seller to specify the amount of the initial deposit, and the due dates for the deposit and the full payment for a motor vehicle listing.
    /// 						<br>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> If you are using business policies with your listing, the details set up in this container will instead be set up via the payment business policy. Payment business policies are associated with the listing via the <b>SellerProfiles.SellerPaymentProfile</b> container. 
    /// 						</span>
    /// 						<br>
    /// 						This container will only be returned in 'Get' calls for motor vehicle listings where an initial deposit is required for that vehicle.
    /// 					
    /// </remarks>

	public PaymentDetailsType PaymentDetails { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetBidderListGetItemsIntegratedMerchantCreditCardConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllIntegratedMerchantCreditCardConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: FineIntegratedMerchantCreditCardConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						<br>
    /// 						<b>For Add/Revise/Relist calls</b>: A <b>PaymentMethods</b> field is required for each offline payment method supported by the seller for the listing. 
    /// 						<br>
    /// 							<span class="tablenote"><b>Note: </b> Sellers no longer have to specify any electronic payment methods for listings, so one or more <b>PaymentMethods</b> fields will only be needed for listings that require/support payments off of eBay's platform. If an electronic payment is supplied in a <b>PaymentMethods</b> field, a warning will be triggered and the payment method will be dropped.
    /// 							</span>
    /// 						<span class="tablenote"><b>Note: </b> If you are already referencing a payments business policy in an Add/Revise/Relist call with the <b>SellerProfiles.SellerPaymentProfile</b> container, no <b>PaymentMethods</b> fields will be needed, as these settings will already be set in the payments business policy.
    /// 						</span>
    /// 						Payment methods are not applicable to any classified ad listings, as any agreement and payment is handled off of the eBay platform.
    /// 						<br>
    /// 						<br>
    /// 						<b>For Get calls that return <b>PaymentMethods</b> fields </b>: One or more <b>PaymentMethods</b> fields will only be returned if the seller set one or more offline payment methods for the listing.
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> This field will stop being returned in order management calls on January 31, 2024.
    /// 						</span>
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("PaymentMethods")]

	public System.Collections.Generic.List<BuyerPaymentMethodCodeType> PaymentMethods { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetBidderListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is no longer applicable, and should not be used.
    /// 					
    /// </remarks>

	public string PayPalEmailAddress { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsVerifyAddFixedPriceItemVerifyAddItemConditionally
    /// RelistItemReviseItemRelistFixedPriceItemReviseFixedPriceItemVerifyRelistItemNo
    /// GetBidderListAlways
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllAlways
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Coarse, Medium, FineConditionally
    /// Applying Categorieshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/categories.html
    /// Maintaining Category Datahttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/categories.html
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container is used in an Add/Revise/Relist call to set the primary listing category. This field is conditionally required in an Add call unless the seller successfully uses the <b>ProductListingDetails</b> container to find an eBay catalog product match. When the seller successfully uses an eBay catalog product to create a listing, the listing title, listing description, Item Specifics, listing category, and stock photo defined in the catalog product is used to create the listing.<br>
    /// 						<br>
    ///                         Once you determine the appropriate eBay category for your product, and want to know which listing features it supports, you can use the
    /// 						<b>GetCategoryFeatures</b> call. To discover required, recommended, and optional Item Specifics for a category, use the <a href="/api-docs/commerce/taxonomy/resources/category_tree/methods/getItemAspectsForCategory" target="_blank">getItemAspectsForCategory</a> method of the Taxonomy API.
    /// 						<br>
    /// 						<br>
    /// 						If you do use an eBay catalog product, it is advised that you do not include this field, as any primary category ID you specify in this field may get dropped if this category is different than the primary category defined in the eBay catalog product.
    /// 						<br>
    /// 						<br>
    /// 						<b>For ReviseItem only:</b> When revising a listing,
    /// 						you can change the primary category only if an auction listing
    /// 						has no bids or a multiple-quantity, fixed-price listing has no sales, and the listing does not end
    /// 						within 12 hours. If you change the listing category, any Item Specifics that
    /// 						were previously specified may be dropped from the listing if they aren't
    /// 						valid for the new category. <br>
    /// 						<br>
    /// 						When you list an event ticket on the US site, you must specify one of the leaf categories under the Tickets & Experiences meta category.
    /// 					
    /// </remarks>

	public CategoryType PrimaryCategory { get; set; }
    /// <summary>
    /// falseAddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemNo
    /// GetBidderListAlways
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllAlways
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllAlways
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						A <code>true</code> value in this field indicates that the listing is private. Sellers may want to use this option when they believe that a listing's potential bidders/buyers would not want their obfuscated user IDs (and feedback scores) exposed to other users.
    /// 						<br><br>
    /// 						<b>For ReviseItem/ReviseFixedPriceItem</b>: The seller will not be able change this setting if the listing has any pending bids, any pending best offers, previous sales (for multiple-quantity, fixed-price listing), or if the listing will end within 12 hours.  
    /// 						<br>
    /// 					
    /// </remarks>

	public bool? PrivateListing { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetBidderListConditionally
    /// GetItemDetailLevel: ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container is used to provide one or more product identifiers for a product, and if desired by the seller, eBay will use the identifier(s) of the product to try to match it to a defined product in the eBay catalog. If a seller's product is matched to an eBay catalog product, the product details associated with that catalog product will be prefilled for the listing. Product details defined for a catalog product include the product title, product description, product aspects, and stock image(s) of the product (if available).
    /// 						<br>
    /// 						<br>
    /// 						In some eBay categories, one or more product identifier types (e.g. UPC or ISBN) may be required, but the category may not have any eBay catalog products defined, or the category does not allow listings to be created using a catalog product. Note that the <b>GetCategoryFeatures</b> call can be used to retrieve supported/required product identifier types.
    /// 						<br>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						 If a product identifier type is required, the corresponding field must be used, even if the seller is not interested in finding an eBay catalog product match. A large percentage of eBay US categories require one or more product identifier types when listing an item. See the <a href="http://pages.ebay.com/sell/item_specifics/product_identifiers.html" target="_blank">Structured Data - Product Identifiers</a> help page for more information on which eBay US categories require which product identifier types. If known, an ePID (specified through the <b>ProductReferenceID</b> field) is always the best bet to find an eBay catalog product match, although an <b>EAN</b>, <b>ISBN</b>, <b>UPC</b>, or Brand/MPN pair can also be used in an attempt to find a catalog product match. If a Brand/MPN pair is required for the product, these values must be input through the <b>BrandMPN</b> container.
    /// 						</span>
    /// 						<br>
    /// 						When you use <b>ProductListingDetails</b>, in an Add/Revise/Relist call, you must specify at least one GTIN, a <b>ProductReferenceID</b> (also known as an ePID), or a Brand/MPN pair. If you specify more than one GTIN value, eBay uses the first one that matches a product in eBay's catalog.
    /// 						<br>
    /// 						<br>
    /// 						<b>For ReviseItem and RelistItem only:</b> When you revise a
    /// 						listing, if it has bids or it ends within 12 hours, you cannot change the
    /// 						product identifier and you cannot remove existing product listing details data. However, you can
    /// 						change or add preferences such as <b>IncludeStockPhotoURL</b>,
    /// 						<b>UseStockPhotoURLAsGallery</b>, and <b>IncludePrefilledItemInformation</b>. To delete all
    /// 						catalog data when you revise or relist an item, specify
    /// 						Item.ProductListingDetails in <b>DeletedField</b> and don't pass
    /// 						<b>ProductListingDetails</b> in the request.
    /// 					
    /// </remarks>

	public ProductListingDetailsType ProductListingDetails { get; set; }
    /// <summary>
    /// 1AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// ReviseItemNo
    /// GetBidderListAlways
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllAlways
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: ReturnAllAlways
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Coarse, Medium, FineConditionally
    /// GetMyeBaySellingActiveListScheduledListSoldListUnsoldListDetailLevel: none, ReturnAllConditionally
    /// GetSellerEventsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						<b>For <b>AddItem</b> family of calls:</b> The <b>Quantity</b> value for auction listings must always be <code>1</code>. For a fixed-price listing, the <b>Quantity</b> value indicates the number of identical items the seller has available for sale in the listing. If this field is not included when creating a new fixed-price listing, quantity defaults to '1'. If variations are specified in <b>AddFixedPriceItem</b> or <b> VerifyAddFixedPriceItem</b>, the <b>Item.Quantity</b> is not required since the quantity of variations is specified in <b>Variation.Quantity</b> instead. See the <a href="https://pages.ebay.com/help/sell/listing-variations.html" target="_blank">Creating a listing with variations</a> eBay Help page for more information on variations.
    /// 						<br><br>
    /// 						<b>For ReviseItem and ReviseFixedPriceItem:</b>
    /// 						This value can only be changed for a fixed-price listing with no variations. The
    /// 						quantity of variations is controlled in the <b>Variation.Quantity</b> field and the <b>Item.Quantity</b>
    /// 						value for an auction  listing should always be <code>1</code>.
    /// 						<br><br>
    /// 						<b>For RelistItem and RelistFixedPriceItem:</b>
    /// 						Like most fields, when you use <b>RelistItem</b> or <b>RelistFixedPriceItem</b>,
    /// 						<b>Quantity</b> retains its original value unless you specifically change
    /// 						it. This means that the item is relisted with the value that was
    /// 						already in <b>Quantity</b>, not with the remaining quantity available.
    /// 						For example, if the original <b>Quantity</b> value was <code>10</code>, and three items have been sold,
    /// 						eBay sets the relisted item's <b>Quantity</b> to <code>10</code> by default, and not <code>7</code>.
    /// 						So, we strongly recommend that you always
    /// 						set <b>Quantity</b> to the correct value (your actual quantity available)
    /// 						in your relist requests.<br>
    /// 						<br>
    /// 						When eBay auto-renews a GTC listing (<b>ListingDuration</b> = <b>GTC</b>)
    /// 						on your behalf, eBay relists with correct quantity available.
    /// 						<br>
    /// 						<br>
    /// 						<b>For GetSellerEvents:</b> <b>Quantity</b> is only returned
    /// 						for listings where item quantity is greater than 1.
    /// 						<br><br>
    /// 						<b>For GetItem and related calls:</b>
    /// 						This is the total of the number of items available for sale plus the quantity
    /// 						already sold. To determine the number of items available, subtract
    /// 						<b>SellingStatus.QuantitySold</b> from this value.
    /// 						<br><br>
    /// 						<b>For order line item calls with variations:</b>
    /// 						In <b>GetItemTransactions</b>, <b>Item.Quantity</b> is the same as <b>GetItem</b> (the
    /// 						total quantity across all variations). In <b>GetSellerTransactions</b>,
    /// 						<b>Transaction.Item.Quantity</b> is the total quantity of the applicable
    /// 						variation (quantity available plus quantity sold).
    /// 						<br>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> For the US site, new eBay sellers are subject to <a href="/api-docs/user-guides/static/make-a-call/fg-replaced.html">Seller Limits</a>, which limit the quantity of items that may be listed and/or the total cumulative value of these listings. While subject to these selling limits, an eBay seller can use the <b>GetMyeBaySelling</b> call to retrieve both the remaining number of listings they can create and the remaining cumulative value of these listings. These values are shown in the <b>Summary.QuantityLimitRemaining</b> and <b>Summary.AmountLimitRemaining</b> fields in the <b>GetMyeBaySelling</b> response. If a call to add an item or revise an item would result in the exceeding of these limits, the add item or revise item call will fail. These fields will only be returned if the seller is subject to seller limits.
    /// 						</span>
    /// 					
    /// </remarks>

	public int? Quantity { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemNo
    /// GetMyeBayBuyingGetMyeBaySellingConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						A note that a user makes on an item from their My eBay account. <b>GetMyeBayBuying</b> and <b>GetMyeBaySelling</b> return this field, and only if you pass in the <b>IncludeNotes</b> field in the request, and set its value to <b>true</b>. This field will only be returned if set for an item, and only returned to the user who created the note.
    /// 						<br><br>
    /// 						Not supported as input in <b>ReviseItem</b>. Use <b>SetUserNotes</b> instead.
    /// 						<br><br>
    /// 						<b>For GetMyeBayBuying</b> In <b>WatchList</b>, notes for variations are only
    /// 						returned at the Item level, not the variation level. They are only set if you
    /// 						specified <b>ItemID</b> (if no purchases) or <b>ItemID</b> and <b>VariationSpecifics</b> (if there are
    /// 						purchases) in <b>SetUserNotes</b> (or selected the equivalent in the My eBay UI on the
    /// 						site).
    /// 						<br><br>
    /// 						In <b>WonList</b>, notes for variations are only returned at the Item level, not the
    /// 						variation level. They are only set if you specified <b>ItemID</b> and <b>TransactionID</b> in
    /// 						<b>SetUserNotes</b> (or selected the equivalent in the My eBay UI on the site).
    /// 					
    /// </remarks>

	public string PrivateNotes { get; set; }
    /// <summary>
    /// RelistItemNo
    /// RelistFixedPriceItemNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						Applicable only to relisting an item. If true, creates a link in the item's
    /// 						old listing for the item that points to the new relist page, which
    /// 						accommodates users who might still look for the item under its old item ID.
    /// 					
    /// </remarks>

	public bool? RelistLink { get; set; }
    /// <summary>
    /// GetItemNoAlwaysDetailLevel: none, ItemReturnAttributes, ItemReturnCategories, ItemReturnDescription, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						If <code>true</code>, the item is eligible for shipping managed by eBay; <code>false</code>, the item is not eligible for shipping managed by eBay.
    /// 					
    /// </remarks>

	public bool? IsItemEMSEligible { get; set; }
    /// <summary>
    /// 16
    /// AddItemAddItemsRelistItemReviseItemVerifyAddItemVerifyRelistItemNo
    /// GetBidderListConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: FineConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetMyeBaySellingActiveListScheduledListSoldListUnsoldListDetailLevel: none, ReturnAllConditionally
    /// Revise a US eBay motors listinghttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/ebay-motors-revise-listing.html
    /// Setting a reserve price (eBay help topic)https://www.ebay.com/help/selling/listings/selling-auctions/reserve-prices?id=4143
    /// Fees for optional listing upgrades (eBay help topic)https://www.ebay.com/help/selling/fees-credits-invoices/selling-fees?id=4822#section5
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is used to set the lowest price at which the seller is willing to sell an auction item. The <b>StartPrice</b> value must be lower than the <b>ReservePrice</b> value. Note that setting a reserve price will incur a listing fee of $5 or 7.5% of the reserve price, whichever is greater, and this fee is charged regardless of whether or not the auction item has a qualifying, winning bidder.
    /// 						<br> <br> 
    /// 						As long as no bidder has matched your reserve price, and the scheduled end time of the auction is 12 or more hours away, you can lower or remove the reserve price. However, even if you remove the reserve price from an active listing, you will still be charged the fee and not eligible for a credit.  
    /// 						<br> <br> 		
    /// 						In 'get' calls that retrieve item data, the <b>ReservePrice</b> field will only be returned to the seller of that particular auction item, and only if a reserve price has been set up. The reserve price is never exposed to anyone other than the seller of the item. 
    /// 					
    /// </remarks>

	public AmountType ReservePrice { get; set; }
    /// <summary>
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Coarse, Medium, FineConditionally
    /// GetBidderListAlways
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container is returned if a listing has been revised in any way since it first became active. One or more boolean fields will be returned under this container based on the type of revision(s) that occured, including a general revision, a price change, or a feature added or removed.
    /// 					
    /// </remarks>

	public ReviseStatusType ReviseStatus { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						Allows the user to specify a time in the future that the listing becomes active on eBay.
    /// 						To schedule the listing start time, specify a time in the future in GMT
    /// 						format. In <b>GetItem</b> and related calls, the scheduled time is returned in
    /// 						<b>StartTime</b>. For <b>ReviseItem</b>, you can modify this value if the currently
    /// 						scheduled start time is in the future (listing has yet to go live).
    /// 						<br><br>
    /// 						When you schedule a start time, the start time is randomized within 15-minute
    /// 						intervals. Randomized start times applies to the following sites:
    /// 						<br>
    /// 						<code>AT, BEFR, BENL, CH, DE, ES, FR, IE, IT, NL, PL, UK</code>
    /// 						<br><br>
    /// 						Also see the following article in the Knowledge Base: <a href=
    /// 						"https://developer.ebay.com/support/kb-article?KBid=1473" target="_blank"
    /// 						>Why scheduled time is sometimes getting reset</a>.
    /// 					
    /// </remarks>

	public System.DateTime? ScheduleTime { get; set; }
    /// <summary>
    /// 10
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemNo
    /// GetBidderListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					The unique identifier for a secondary category. This field is only applicable if the seller decides to list the item under two categories.
    /// 					<br>
    /// 					<br>
    /// 					You cannot list US eBay Motors vehicles in two categories. However, you can
    /// 					list Parts & Accessories in two categories. The final value fee is based
    /// 					on the primary category in which the item is listed. Furthermore, you can
    /// 					list the same item in an eBay Motors Parts & Accessories category and in
    /// 					an eligible eBay category, as long as the primary category is associated
    /// 					with the site on which you are listing. That is, the two categories can be a
    /// 					mix of Motors Parts & Accessories and eBay site categories. (Real
    /// 					Estate, Mature Audience (adult), and Business & Industrial categories
    /// 					are not eligible for listing in two categories in this manner.) For example,
    /// 					if you list on Motors, the primary category could be 6750 (eBay Motors >
    /// 					Parts & Accessories > Apparel & Merchandise > Motorcycle >
    /// 					Jackets & Leathers), and the secondary category could be 57988 (eBay
    /// 					> Clothing, Shoes > Accessories > Men's Clothing > Outerwear).
    /// 					If you list on the main eBay site, the primary category could be 57988 and
    /// 					the secondary category could be 6750. <br>
    /// 					<br>
    /// 					If eBay has designated a listing category as a value category (see ValueCategory in <b>GetCategoryFeatures</b>), and that listing category will be the seller's primary category, the seller will not be able to list their item in a secondary category. If a seller's request payload includes a primary or a secondary category that is designated as a value category, then eBay drops the <b>SecondaryCategory</b> ID and only lists the item in the category specified with the <b>PrimaryCategory</b> ID. Also, if the listing request includes Item Specifics (in <b>ItemSpecifics</b>) that are associated with the <b>SecondaryCategory</b>, eBay drops those values as well when the <b>SecondaryCategory</b> is dropped. The same logic is used if you revise an existing listing to add a secondary category, or to change one of the categories: If either the primary or secondary category is a value category, eBay drops the secondary category from your request.)
    /// 					<br>
    /// 					<br>
    /// 					To remove this value when relisting an item, use <b>DeletedField</b>.
    /// 					<br><br>
    /// 					<b>For ReviseItem only:</b> When revising a listing within 12 hours of the listing's scheduled end time, you can only add or change the secondary category when an auction listing has no active bids or a multiple-quantity, fixed-price listing has no items sold. If you change the secondary category, any corresponding Item Specifics that were previously specified may be dropped from the listing if they aren't valid for the category.
    /// 					<br>
    /// 					<br>
    /// 					<b>For ReviseItem only:</b> Previously, removing the listing from a secondary category was only possible within 12 hours of the listing's scheduled end time when an auction listing had no active bids or a multiple-quantity, fixed-price listing had no items sold, but this restriction no longer exists. Now, the secondary category can be dropped for any active listing at any time, regardless of whether an auction listing has bids or a fixed-price listing has sales. To drop a secondary category, the seller passes in a value of <code>0</code> in the <b>SecondaryCategory.CategoryID</b> field.
    /// 				
    /// </remarks>

	public CategoryType SecondaryCategory { get; set; }
    /// <summary>
    /// GetBidderListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The unique identifier for a secondary category that eBay has added as a free promotion. You cannot add
    /// 						this yourself. This container is only returned if the item was listed in a single category and
    /// 						eBay added a free secondary category.
    /// 					
    /// </remarks>

	public CategoryType FreeAddedCategory { get; set; }
    /// <summary>
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllAlways
    /// GetItemTransactionsDetailLevel: none, ReturnAllConditionally
    /// GetItemsAwaitingFeedbackDetailLevel: none, ReturnAllConditionally
    /// GetCategoryListingsConditionally
    /// GetMyeBayBuyingBestOfferListBidListLostListWatchListWonListDeletedFromWonListDeletedFromLostListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingBidListDetailLevel: none, ReturnAllConditionally
    /// GetBidderListAlways
    /// AddItemAddItemsReviseItemVerifyAddItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Container for information about this listing's seller.
    /// 						<br><br>
    /// 						Returned by <b>GetItemsAwaitingFeedback</b> if Buyer is making the request.
    /// 					
    /// </remarks>

	public UserType Seller { get; set; }
    /// <summary>
    /// GetBidderListAlways
    /// GetSellerEventsDetailLevel: none, ReturnAllAlways
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllAlways
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllAlways
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: FineConditionally
    /// GetCategoryListingsGetMemberMessagesConditionally
    /// GetMyeBayBuyingBestOfferListBidListLostListWatchListWonListDeletedFromWonListDeletedFromLostListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingActiveListBidListScheduledListSoldListUnsoldListDetailLevel: none, ReturnAllConditionally
    /// GetSellerEventsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Various details about the current status of the listing, such as the current
    /// 						number of bids, the current high bidder, quantity sold, current price, and listing status.
    /// 					
    /// </remarks>

	public SellingStatusType SellingStatus { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Coarse, Medium, FineConditionally
    /// GetBidderListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetMyeBayBuyingBestOfferListBidListDeletedFromLostListDeletedFromWonListWatchListWonListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingDetailLevel: none, ReturnAllConditionally
    /// Shipping costshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/shipping-costs.html
    /// Revising Itemshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/revise-listing.htmlrestrictions on changing item properties with ReviseItem
    /// </summary>
    /// <remarks>
    /// 
    /// 						The shipping-related details for an order, including flat and calculated shipping costs.
    /// 						<br>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> For sellers who are using a shipping (aka Fulfillment) business policy to create/revise/relist an item, none of the fields under the <b>ShippingDetails</b> container are necessary. A fulfillment business policy can be set up and/or modified in My eBay, or via the <a href="https://developer.ebay.com/api-docs/sell/account/resources/fulfillment_policy/methods/createFulfillmentPolicy">Account API</a>. A fulfillment business policy is associated to a listing through the <b>Item.SellerProfiles.SellerShippingProfile</b> container.
    /// 						<br>
    /// 						<br>
    ///             If you <i>do not</i> use a fulfillment business policy, many of the fields under this <b>ShippingDetails</b> container become required in your request.
    /// 						</span>
    /// 
    /// 						
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						<b>For ReviseItem and ReviseFixedPriceItem calls: </b> 
    /// 						If you are updating any field under the <b>ShippingDetails</b> container, you must include all containers and fields set under this container even if their values are not changing. If you do not do this, some fields may be removed from the listing. To find out the values included in the current listing, call <a href="https://developer.ebay.com/devzone/xml/docs/Reference/eBay/GetItem.html#GetItem">GetItem</a> and look through the <b>ShippingDetails</b> container in the response. For additional information, see <a href="https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/shipping-revise.html" target="_blank">Revise shipping details</a>. 
    /// 						</span>
    /// 						
    /// 						New users who list their first items in selected categories on the US site
    /// 						must specify at least one domestic shipping service. This applies to a
    /// 						category if <b>GetCategoryFeatures</b> returns <code>true</code> for
    /// 						<b>Category.ShippingTermsRequired</b>.
    /// 						<br>
    /// 						<br>
    /// 						For multi-quantity, fixed-price listings, a seller can revise all shipping details of the
    /// 						listing (except for sales tax and for shipping type of Freight) for all
    /// 						unsold items. This applies to both domestic and international shipping.
    /// 						Checkout is not affected for those who bought items prior to the seller's
    /// 						shipping changes&#8212;the shipping details that were in effect at the time of
    /// 						purchase are used for that buyer at the time of checkout.
    ///             <br>
    /// 						<br>
    /// 						Shipping details are not applicable to any classified ad listings, as shipping/delivery/pickup is handled by the buyer and seller off of the eBay platform.
    /// 						<br>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> To create a listing that is 'Local Pickup only' (buyer picks up, with no shipping/delivery available), the user does the following two things:
    /// 						<ul>
    /// 						<li>Either omit the entire <strong>ShippingDetails</strong> container, or pass in an empty <strong>ShippingDetails</strong> container - &lt;ShippingDetails/&gt; </li>
    /// 						<li>Pass in one <strong>ShipToLocations</strong> field, with its value set to <code>None</code> - &lt;ShipToLocations&gt;None&lt;/ShipToLocations&gt;</li>
    /// 						</ul>
    /// 						</span>
    /// 						<br>
    ///             For <b>GetMyeBayBuying, GetMyeBaySelling</b>: <b>ShippingDetails</b> is not returned.
    /// 					
    /// </remarks>

	public ShippingDetailsType ShippingDetails { get; set; }
    /// <summary>
    /// ShippingRegionCodeType, CountryCodeType
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemNo
    /// GetBidderListAlways
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllAlways
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Coarse, Medium, FineConditionally
    /// Shipping informationhttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/shipping-info.html
    /// GeteBayDetails
    /// </summary>
    /// <remarks>
    /// 
    /// 						An international location or region to which the seller is willing to ship,
    /// 						regardless of shipping service. The country of the listing site is added by eBay.
    /// 						<br>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> For sellers who are using a shipping (aka Fulfillment) business policy to create/revise/relist an item, the <b>ShipToLocations</b> field should not be used in the request. A fulfillment business policy can be set up and/or modified in My eBay, or via the <a href="https://developer.ebay.com/api-docs/sell/account/resources/fulfillment_policy/methods/createFulfillmentPolicy">Account API</a>. A fulfillment business policy is associated to a listing through the <b>Item.SellerProfiles.SellerShippingProfile</b> container.
    /// 						</span>
    /// 						<br>
    ///             Use <b>GeteBayDetails</b> with a <b>DetailName</b> of <b>ShippingLocationDetails</b> to
    /// 						determine which international locations are valid for the site. Omit
    /// 						<b>ShipToLocations</b> if you want to ship only within the country of the listing site.
    /// 						To state that you do not wish to ship at all, set <b>ShipToLocations</b> to <code>None</code>.
    /// 						<b>ReviseItem</b> can add a <b>ShipToLocations</b>. On output, <b>ShipToLocations</b> is the
    /// 						collection of all input item-level <b>ShipToLocations</b> plus international shipping
    /// 						service-level ShipToLocation values.
    /// 						<br>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> The <b>ShipToLocations</b> and <b>ShippingDetails.ExcludeShipToLocation</b> containers are not applicable for motor vehicle listings on the US, CA, or UK marketplaces. If these containers are sent in the request, they are ignored and a warning is returned.
    /// 						</span>
    /// 						<br>
    /// 						If you have specified a region to which you will ship (such as Asia), you can
    /// 						use <b>ExcludeShipToLocation</b> to exclude certain countries within that region to
    /// 						where you will not ship (such as Afghanistan).
    /// 						<br>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> To create a listing that is 'Local Pickup only' (buyer picks up, with no shipping/delivery available), the user does the following two things:
    /// 						<ul>
    /// 						<li>Either omit the entire <strong>ShippingDetails</strong> container, or pass in an empty <strong>ShippingDetails</strong> container - &lt;ShippingDetails/&gt; </li>
    /// 						<li>Pass in one <strong>ShipToLocations</strong> field, with its value set to <code>None</code> - &lt;ShipToLocations&gt;None&lt;/ShipToLocations&gt;</li>
    /// 						</ul>
    /// 						</span>
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("ShipToLocations")]

	public System.Collections.Generic.List<string> ShipToLocations { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemNo
    /// GetBidderListAlways
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllAlways
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: ReturnAllConditionally
    /// GetOrdersTransaction.ItemDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetCategoryListingsConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Coarse, Medium, FineConditionally
    /// GetMyeBayBuyingBestOfferListBidListLostListSecondChanceOfferWatchListWonListDeletedFromWonListDeletedFromLostListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingBidListDetailLevel: none, ReturnAllConditionally
    /// GetSellerEventsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The name of the eBay listing site. The listing site affects
    /// 						the business logic and validation rules that are applied to the request,
    /// 						which in turn affect the values that are returned in the response, as well
    /// 						as values that appear on the eBay site. For example, the listing site
    /// 						can affect the validation of <b>Category</b> in listing requests, international
    /// 						business seller requirements, the values of converted (localized) prices in
    /// 						responses, the item-related time stamps that are displayed on the eBay site, the visibility of the item in some types of searches (e.g.,
    /// 						<b>GetCategoryListings</b>), and other information. In some cases, the rules are
    /// 						determined by a combination of the site, the user's registration address,
    /// 						and other information. You cannot change the site when you revise a
    /// 						listing.<br>
    /// 						<br>
    /// 						When you specify <b>Item.Site</b> in <b>AddItem</b> or <b>AddFixedPriceItem</b>, it must be consistent with the
    /// 						numeric site ID that you specify in the request URL (for the SOAP API) or
    /// 						the <b>X-EBAY-API-SITEID</b> header (for the XML API).
    /// 					
    /// </remarks>

	public SiteCodeType? Site { get; set; }
    /// <summary>
    /// Listing Policieshttps://developer.ebay.com/api-docs/user-guides/static/make-a-call/fg-replaced.html
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemReviseFixedPriceItemVerifyAddFixedPriceItemVerifyAddItemYes
    /// ReviseItemRelistItemVerifyRelistItemNo
    /// GetBidderListAlways
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllAlways
    /// GetMyeBayBuyingBidListLostListWatchListWonListDeletedFromWonListDeletedFromLostListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingActiveListBidListScheduledListSoldListUnsoldListDetailLevel: none, ReturnAllConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: FineConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The original price of the item at listing or re-listing time. If this
    /// 						value changes when the item is revised, the new value becomes the original
    /// 						price.
    /// 						<br><br>
    /// 						<b>For auction listings:</b> Competitive bidding starts at this
    /// 						value. Once at least one bid has been placed, <b>StartPrice</b> remains the same but
    /// 						<b>CurrentPrice</b> is incremented to the amount of each succeeding bid. If <b>ReservePrice</b> is
    /// 						also specified, the value of <b>StartPrice</b> must be lower than the value of
    /// 						<b>ReservePrice</b>.
    /// 						<br><br>
    /// 						<b>For input on fixed-price listings (<b>FixedPriceItem</b>): </b>
    /// 						This is the constant price at which a buyer may purchase the item.
    /// 						<br><br>
    /// 						<b>GetMyeBaySelling</b> does not return <b>Item.StartPrice</b>
    /// 						for fixed price items&#8212;it returns <b>Item.SellingStatus.CurrentPrice</b>.
    /// 						<br><br>
    /// 						<b>For AddFixedPriceItem and VerifyAddFixedPriceItem:</b>
    /// 						Required when no variations are specified. If variations are specified,
    /// 						use <b>Variation.StartPrice</b> for each variation instead.
    /// 						<br><br>
    /// 						<b>For Revise calls:</b>
    /// 						If the <b>StartPrice</b> value for a fixed-price item is changed with a Revise call, the <b>MinimumBestOfferPrice</b> and <b>BestOfferAutoAcceptPrice</b> fields in the <b>ListingDetails</b> container will be dropped (if set), basically turning off the Best Offer Auto Accept and/or Auto Decline features. If the seller wanted to reintroduce either of these Best Offer threshold values in the listing again, an additional Revise call would have to be made, passing in the desired threshold values.
    /// 						<br><br>
    /// 						<span class="tablenote"><b>Note: </b> For the US site, new eBay sellers are subject to <a href="/api-docs/user-guides/static/make-a-call/fg-replaced.html">Seller Limits</a>, which limit the quantity of items that may be listed and/or the total cumulative value of these listings. While subject to these selling limits, an eBay seller can use the <b>GetMyeBaySelling</b> call to retrieve both the remaining number of listings they can create and the remaining cumulative value of these listings. These values are shown in the <b>Summary.QuantityLimitRemaining</b> and <b>Summary.AmountLimitRemaining</b> fields in the <b>GetMyeBaySelling</b> response. If a call to add an item or revise an item would result in the exceeding of these limits, the add item or revise item call will fail. These fields will only be returned if the seller is subject to seller limits.
    /// 						</span>
    /// 					
    /// </remarks>

	public AmountType StartPrice { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemNo
    /// GetBidderListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Coarse, Medium, FineConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container provides details about the seller's eBay store.
    /// 						<br><br>
    /// 						In an Add/Revise/Relist call, the seller can include this container to set/change which customized eBay store category that the item will be placed in.
    /// 						<br><br>
    /// 						For 'Get' calls, this container is returned if the seller of the item has an eBay store.
    /// 					
    /// </remarks>

	public StorefrontType Storefront { get; set; }
    /// <summary>
    /// 55
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemNo
    /// GetBidderListGetCategoryListingsConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetMyeBayBuyingBestOfferListBidListLostListSecondChanceOfferWatchListWonListDeletedFromWonListDeletedFromLostListDetailLevel: none, ReturnAllConditionally
    /// Remove a fieldhttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/relist-remove-field.html
    /// (RelistItem) DeletedFieldRelistItem.html#Request.DeletedField
    /// Create an eBay Motors listinghttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/ebay-motors-create-listing.html#subtitle
    /// </summary>
    /// <remarks>
    /// 
    /// 						Subtitle to use in addition to the title. Provides more keywords when buyers
    /// 						search in titles and descriptions. You cannot use HTML in the Subtitle. (HTML
    /// 						characters will be interpreted literally as plain text.) If you pass any
    /// 						value, this feature is applied (with applicable fees).<br>
    /// 						<br>
    /// 						When you revise a item, you can add, change, or remove the
    /// 						subtitle.
    /// 						<br>
    /// 					
    /// </remarks>

	public string SubTitle { get; set; }
    /// <summary>
    /// GetBidderListAlways
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllAlways
    /// GetMyeBayBuyingBestOfferListBidListSecondChanceOfferWatchListConditionallyDetailLevel: none, ReturnAll
    /// GetMyeBaySellingActiveListBidListScheduledListSoldListUnsoldListDetailLevel: none, ReturnAllConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Coarse, Medium, FineConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Time left before the listing ends.
    /// 						The duration is represented in the ISO 8601 duration format (PnYnMnDTnHnMnS).
    /// 						See Data Types in the Trading API Guide for information about this format.
    /// 						For ended listings, the time left is PT0S (zero seconds).
    /// 					
    /// </remarks>

	public string TimeLeft { get; set; }
    /// <summary>
    /// 80
    /// AddFixedPriceItemAddItemAddItemsVerifyAddFixedPriceItemVerifyAddItemConditionally
    /// RelistItemReviseItemRelistFixedPriceItemReviseFixedPriceItemVerifyRelistItemNo
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Coarse, Medium, FineConditionally
    /// GetCategoryListingsGetItemsAwaitingFeedbackGetMemberMessagesConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: ReturnAllConditionally
    /// GetMyeBayBuyingBestOfferListBidListLostListSecondChanceOfferWatchListWonListDeletedFromWonListDeletedFromLostListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingActiveListScheduledListSoldListUnsoldListBidListDetailLevel: none, ReturnAllConditionally
    /// GetBidderListAlways
    /// GetOrdersTransaction.ItemLinkedLineItem.ItemDetailLevel: none, ReturnAllAlways
    /// OrderReportAlways
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllAlways
    /// GetSellerEventsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is used to specify the title of the listing. This field is conditionally required in an Add call unless the seller successfully uses the <b>ProductListingDetails</b> container to find an eBay catalog product match. When the seller successfully uses an eBay catalog product to create a listing, the listing title, listing description, Item Specifics, and stock photo defined in the catalog product are used to create the listing. <br>
    /// 						<br>
    /// 						You cannot use HTML or JavaScript in the Title. (HTML characters will be
    /// 						interpreted literally as plain text.)<br>
    /// 						<br>
    /// 						The listing title can only be changed if the active listing has yet to have any bids or sales, and the listing does not end within 12 hours.
    /// 						<br>
    /// 						<span class="tablenote"><b>Note:</b> When making a <b>GetSellerEvents</b> call, this field will be returned masked as <code>*****************</code> for on-hold listings.
    /// 						</span>
    /// 						<span class="tablenote"><b>Note:</b> When making a <b>GetSellerTransactions</b> or <b>GetMyeBaySelling</b> call, the item ID value of the listing will be returned in this field to indicate that the listing is on hold.
    /// 						</span>
    /// 					
    /// </remarks>

	public string Title { get; set; }
    /// <summary>
    /// 32
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemNo
    /// GetBidderListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Use an <b>UUID</b> value to ensure that you only list (or relist) a particular item once. This field can be particularly useful if you are listing many items on a daily basis and/or many items at once with an <b>AddItems</b> call. If your call request does not generate a response, or if you get one or more (blocking) errors, be sure to use the same <b>UUID</b> value when you attempt to list or relist the same item with another call request.
    /// 						<br><br>
    /// 						If you pass in a <b>UUID</b> value that has already been used to successfully create or relist an item, you will receive an error message that includes the Item ID for that listing and a boolean value indicating whether the duplicate <b>UUID</b> was sent by the same application.
    /// 						<br><br>
    /// 						We recommend that you use the <b>Item.UUID</b> field for add and relist calls (for example, <b>AddItem</b> and <b>RelistItem</b>), but use the <b>Item.InvocationID</b> field instead when using a revise call.
    /// 						<br><br>
    /// 						The <b>UUID</b> can only contain digits from 0-9 and letters from A-F and must be 32 characters long. The <b>UUID</b> value must be unique across all of the seller's eBay across all eBay marketplaces.
    /// 						<br>
    /// 					
    /// </remarks>

	public string UUID { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetBidderListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// Value-added tax (VAT)https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/taxes-vat.html
    /// German business featureshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/taxes-vat-germany.html
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container is used in an Add/Revise/Relist call to set the VAT (Value-added Tax) percentage rate that will be charged to buyers when an item is purchased from the listing, and to enable Business Seller-related features.
    /// 						<br><br>
    /// 						This container is returned in 'Get' calls only if VAT is applicable to the listing, and unless the person making the 'Get' call owns the listing, only the <b>VATPercent</b> field is returned (if applicable). However, Business Seller-related information will be returned to all users in 'Get' calls under the <b>SellerInfo</b> and <b>BusinessSellerDetails</b> containers.
    /// 						<br>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 							VAT is not applicable to all countries, including the US. Allowed VAT percentage rates can vary by region/country, so sellers should be aware of the rates they are legally required/allowed to charge. Sellers must be registered as Business Sellers on the site they are selling on in order to use the Business Seller-related fields.
    /// 						</span>
    /// 					
    /// </remarks>

	public VATDetailsType VATDetails { get; set; }
    /// <summary>
    /// GetBidderListConditionally
    /// GetItemDetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAllConditionally
    /// GetSellerEventsDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned if the seller of the item is currently on vacation and has configured a custom message to display to potentioal buyers through <a href="https://www.ebay.com/help/selling/selling-tools/time-away?id=5137" target="_blank">Time Away</a> settings.
    /// 						<br>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 							There are two <b>Time Away</b> modes - <b>Pause Sales</b> and <b>Allow Sales</b>. If seller is in the <b>Pause Sales</b> mode, all fixed-price listings for that seller will be hidden from search results during the span of the seller's vacation.
    /// 						</span>
    /// 					
    /// </remarks>

	public string SellerVacationNote { get; set; }
    /// <summary>
    /// GetSellerEventsDetailLevel: ReturnAllConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetMyeBaySellingConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The number of watches placed on this item from buyers' My eBay accounts.
    /// 						Specify <b>IncludeWatchCount</b> as <code>true</code> in the request.
    /// 						Returned by <b>GetMyeBaySelling</b> only if greater than 0.
    /// 					
    /// </remarks>

	public long? WatchCount { get; set; }
    /// <summary>
    /// GetSellerListDetailLevel: ReturnAllGranularityLevel: FineConditionally
    /// GetSellerEventsDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This value indicates the number of page views that a listing has received in the last 30 days.<br><br>We recommend that you use the <a href="https://developer.ebay.com/api-docs/sell/analytics/resources/traffic_report/methods/getTrafficReport" target="_blank">getTrafficReport</a> method of the <b>Analytics API</b> to return user traffic details received by a seller's listings. This RESTful method returns metrics such as click-through rate, listing impressions, listing views, sales conversion rate, and the number of completed transactions.<br><br><span class="tablenote"><b>Note: </b>This field is only returned to authorized applications.</span>
    /// 					
    /// </remarks>

	public long? HitCount { get; set; }
    /// <summary>
    /// false
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemNo
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetBidderListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field can be included and set to <code>true</code> in an Add or Revise call if the seller wishes to disable all buyer requirements (that are set in the seller's account) for the listing. (from <b>Item.BuyerRequirementDetails</b>
    /// 						or Buyer requirements preferences in My eBay) are ignored.
    /// 						<br>
    /// 						<br>
    /// 						This field will only be returned in 'Get' calls if <code>true</code>.
    /// 					
    /// </remarks>

	public bool? DisableBuyerRequirements { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemNo
    /// GetBidderListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetSellerEventsDetailLevel: none, ReturnAllConditionally
    /// GetMyeBayBuyingBestOfferListConditionallyDetailLevel: none, ReturnAll
    /// GetMyeBaySellingActiveListConditionallyDetailLevel: none, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						<b>For Add/Revise/Relist/Verify calls</b>: This container is used to enable the Best Offer feature on a listing. Note that the Best Offer feature can be set for auction listings on the US, Canada, UK, Germany, Australia, France, Italy, and Spain marketplaces, but a seller can only use Best Offer or Buy It Now, but not both. Once an auction listing receives a qualifying bid, the  Best Offer feature will be turned off and any pending Best Offers or Counteroffers will no longer be valid.
    /// 						<br/><br>
    /// 						For <b>GetItem</b> and other calls that retrieve item data, this container will include the status (<b>GetMyeBayBuying</b> only) and dollar amount of the latest Best Offer on a fixed-price listing, and the number of Best Offers received for the fixed-price listing.
    /// 					    <br><br>
    /// 						<span class="tablenote"><b>Note: </b> Best Offer is not available for multi-variation listings.
    /// 						</span>
    /// 					
    /// </remarks>

	public BestOfferDetailsType BestOfferDetails { get; set; }
    /// <summary>
    /// GetBidderListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						If <code>true</code>, eBay provided a central location as a result of the user
    /// 						not specifying a location. This typically occurs when the seller
    /// 						specifies <b>PostalCode</b> without Location.
    /// 					
    /// </remarks>

	public bool? LocationDefaulted { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemNo
    /// Multi-jurisdiction sales taxhttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/taxes.html
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether the seller's tax table is to be used when applying and calculating sales tax for an order line item. A sales tax table can be created programmatically using the <b>SetTaxTable</b> call of Trading API or the <a href="https://developer.ebay.com/api-docs/sell/account/resources/sales_tax/methods/createOrReplaceSalesTax">createOrReplaceSalesTax</a> method of Account API. If <b>UseTaxTable</b> is set to <code>true</code>, the values contained in the seller's sales tax table will supersede the values contained in the <b>Item.ShippingDetails.SalesTax</b> container (if included in the request).
    /// 						<br><br>
    /// 						<span class="tablenote"><b>Note: </b> As of November 2021, buyers in all US states except for Missouri (and several US territories), will automatically be charged sales tax for purchases, and the seller does not set this rate. eBay will collect and remit this sales tax to the proper taxing authority on the buyer's behalf. For more US state-level information on sales tax, see the <a href="https://www.ebay.com/help/selling/fees-credits-invoices/taxes-import-charges?id=4121#section4" target="_blank">eBay sales tax collection</a> help topic.
    /// 						</span>
    /// 					
    /// </remarks>

	public bool? UseTaxTable { get; set; }
    /// <remarks>
    /// 
    /// 						This field is deprecated.
    /// 						
    /// </remarks>

	public bool? GetItFast { get; set; }
    /// <summary>
    /// trueAddItemAddItemsRelistItemReviseItemVerifyAddItemVerifyRelistItemNo
    /// GetBidderListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Applicable for listings in vehicle categories on the US eBay Motors site and
    /// 						eBay Canada site. (No business effect if specified for other categories or
    /// 						sites, as the Web site will not display the information to buyers.)
    /// 						<b></b>
    /// 							<ul>
    /// 								<li>If <code>true</code>,
    /// 						the buyer is responsible for vehicle pickup or shipping. </li>
    /// 								<li>If <code>false</code>, specify
    /// 						vehicle shipping arrangements in the item description.  (The
    /// 						description can also include vehicle shipping arrangements when this value is
    /// 						<code>true</code>.)  </li>
    /// 							</ul>
    /// 						<b></b>
    /// 						If the item has bids or ends within 12 hours, you cannot modify this
    /// 						flag. Do not specify <b>ShippingDetails.ShippingServiceOptions</b>
    /// 						for vehicle listings.
    /// 						<br><br>
    /// 						If <code>true</code> and the listing is on the US eBay Motors site, and you want the
    /// 						listing to be visible on the eBay Canada site, set <b>Item.ShipToLocations</b> to CA.
    /// 						<br><br>
    /// 						If <code>true</code> and the listing is on the eBay Canada site, and you want your listing
    /// 						to be visible on the US eBay Motors site, set <b>Item.ShipToLocations</b> to US.
    /// 						<br>
    /// 					
    /// </remarks>

	public bool? BuyerResponsibleForShipping { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingActiveListScheduledListUnsoldListConditionallyDetailLevel: none, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						Returns a note from eBay displayed below items in the user's My
    /// 						eBay account.
    /// 					
    /// </remarks>

	public string eBayNotes { get; set; }
    /// <summary>
    /// GetMyeBaySellingConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the number of questions buyers have posted about the
    /// 						item. Returned only if greater than 0.
    /// 					
    /// </remarks>

	public long? QuestionCount { get; set; }
    /// <summary>
    /// GetMyeBaySellingConditionallyUnsoldList
    /// </summary>
    /// <remarks>
    /// 
    /// 						This boolean field is returned as <code>true</code> if the item in this listing was relisted. When an item is relisted, a brand new Item ID value is automatically created by eBay. This field is only returned for an original listing whose item has been relisted, so a <code>false</code> value should never get returned.
    /// 						<br><br>
    /// 						<span class="tablenote"><b>Note: </b>
    /// 						A new listing will not return this field.
    /// 						</span>
    /// 					
    /// </remarks>

	public bool? Relisted { get; set; }
    /// <summary>
    /// GetMyeBayBuyingWatchListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingActiveListBidListScheduledListSoldListUnsoldListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This integer value indicates the quantity of an item that is still available for purchase in a multiple-quantity, fixed-price listing. This field is not applicable to auction listings.
    /// 					
    /// </remarks>

	public int? QuantityAvailable { get; set; }
    /// <summary>
    /// 50
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemNo
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetBidderListConditionally
    /// GetOrdersTransaction.ItemDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetMyeBaySellingConditionally
    /// eBay Merchant Data APIAddFixedPriceItem and ReviseFixedPriceItemhttps://developer.ebay.com/DevZone/merchant-data/CallRef/index.html
    /// </summary>
    /// <remarks>
    /// 
    /// 						A SKU (Stock Keeping Unit) value is a seller-defined identifier for a product. Each product within a seller's inventory should be unique. Most large-volume sellers use SKUs, but eBay only requires a SKU value if the <b>InventoryTrackingMethod</b> field is included in an <b>AddFixedPriceItem</b> call and its value is set to <code>SKU</code>. Setting the <b>InventoryTrackingMethod</b> field to <code>SKU</code> allows the seller to use a SKU value instead of an <b>ItemID</b> value as a unique identifier
    /// 						in calls such as <b>GetItem</b> and <b>ReviseInventoryStatus</b>
    /// 						<br><br>
    /// 						A seller can specify a SKU when listing an item with <b>AddItem</b>
    /// 						and related calls. eBay preserves the SKU on the item, enabling you
    /// 						to obtain it before and after an order line item is created.
    /// 						(<b>SKU</b> is recommended as an alternative to <b>ApplicationData</b>.)
    /// 						<br>
    /// 						<br>
    /// 						If both <b>ItemID</b> and <b>SKU</b> are specified in calls that support the use of
    /// 						SKU as a unique identifier, the <b>ItemID</b> value takes precedence.<br>
    /// 						<br>
    /// 						If a seller wants to use SKUs for multiple-variation listings, the SKU value for each product variation is actually specified at the variation level (Item.Variations.Variation.<b>SKU</b>) field, and the Item.<b>SKU</b>) field should not be included in the call request.
    /// 						<br>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 							The eBay site cannot identify listings by SKU. For example,
    /// 							My eBay pages and Search pages all identify listings by item ID.
    /// 							When a buyer contacts you via eBay's messaging functionality, eBay
    /// 							uses the item ID as the identifier. Buyer-focused APIs (like the
    /// 							Shopping API) also do not support SKU as an identifier.
    /// 						</span>
    /// 						<b>For revising and relisting only:</b>
    /// 						To remove a SKU when you revise or relist an item, use <b>DeletedField</b>.
    /// 						(You cannot remove a SKU when <b>Item.InventoryTrackingMethod</b> is set
    /// 						to SKU.)<br>
    /// 						<br>
    /// 						For <b>GetItem</b>, <b>GetMyeBaySelling</b>, and other 'Get' call, the <b>SKU</b> value will only be returned if defined for the listing.
    /// 						<br>
    /// 					
    /// </remarks>

	public string SKU { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetBidderListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Postal code of the place where the item is located. This value is used for
    /// 						proximity searches. To remove this value when revising or relisting an item,
    /// 						use <b>DeletedField</b>. If you do not specify <b>PostalCode</b>, you must specify
    /// 						<b>Item.Location</b>. If you specify <b>PostalCode</b>, but do not specify <b>Item.Location</b>,
    /// 						then <b>Item.Location</b> is given a default value derived from the postal code.
    /// 						<br><br>
    /// 						<span class="tablenote"><b>Note:</b> As of late January 2020, the displayed postal code returned in <b>GetItem</b> is now masked to all users except for the seller of the item. Different countries will mask postal/zip codes in slightly different ways, but an example would be <code>951**</code>.
    /// 						</span>
    /// 					
    /// </remarks>

	public string PostalCode { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetBidderListGetCategoryListingsConditionally
    /// GetMyeBayBuyingBestOfferListBidListSecondChanceOfferWatchListLostListWonListDeletedFromWonListDeletedFromLostListDetailLevel: none,ReturnAllConditionally
    /// GetMyeBaySellingActiveListScheduledListSoldListUnsoldListBidListDetailLevel: none, ReturnAllConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetSellerListDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// Add pictureshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/pictures.html
    /// Adding photos to your listinghttps://pages.ebay.com/help/sell/pictures.html
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container consists of the data associated with photos within the listing. Sellers can have up to 24 pictures in almost any category at no cost. Motor vehicle listings are an exception. The number of included pictures in motor vehicle listings depend on the selected vehicle package (see <a href="https://www.ebay.com/help/selling/fees-credits-invoices/motors-fees?id=4127">Fees for selling vehicles on eBay Motors</a>). These photos can be hosted by eBay Picture Services (EPS), or the seller can host pictures on a non-eBay server. If pictures are externally-hosted, they must be hosted on a site that is using the 'https' protocol.
    /// 						<br/><br/>
    /// 						It is required that all listings have at least one picture.
    /// 					
    /// </remarks>

	public PictureDetailsType PictureDetails { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemNo
    /// GetItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 							This container is used if the seller wants to add a video to their listing. At this time, only one video can be added per listing. The video can be uploaded to eBay using the <a href="https://developer.ebay.com/api-docs/commerce/media/overview.html" target="_blank">Media API</a>. See the <a href="https://developer.ebay.com/api-docs/commerce/media/overview.html" target="_blank">Media API</a> reference documentation for all of the necessary details to upload videos to eBay.
    /// 							<br/><br/>
    /// 							This container will only be returned in <b>GetItem</b> if the listing contains a video, and the seller of the item is the one making the <b>GetItem</b> call.
    /// 							<br/><br/>
    /// 							<span class="tablenote"><b>Note: </b> Videos can only be attached to listings on supported eBay marketplaces and can only be viewed through supported platforms. See <a href="https://developer.ebay.com/api-docs/sell/static/inventory/managing-video-media.html#AddingVideos" target="_blank">Managing videos</a> in the Selling Integration Guide for a full list of supported marketplaces and platforms.</span>
    /// 						
    /// </remarks>

	public VideoDetailsType VideoDetails { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemNo
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					This container is used to provide the eco-participation fee for a product. Use the <a href="https://developer.ebay.com/api-docs/sell/metadata/resources/marketplace/methods/getExtendedProducerResponsibilityPolicies" target="_blank">getExtendedProducerResponsibilityPolicies</a> method of the <b>Sell Metadata API</b> to retrieve categories that support eco-participation fee for a specified marketplace." 
    /// 					<br>For <b>GetItem</b> calls, this container is only returned to the listing owner, if the container is available.
    /// 					
    /// </remarks>

	public ExtendedProducerResponsibilityType ExtendedProducerResponsibility { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container is used to apply one or more custom policies to the listing by specifying custom policy IDs. Custom policies include Product Compliance and Take-Back Policies. For more information, see the <b>Custom Policies</b> page for your site (for example, <a href="https://www.ebay.fr/help/selling/custom-policies/custom-policies?id=5311" target="_blank">https://www.ebay.fr/help/selling/custom-policies/custom-policies?id=5311</a>). This container is supported by a limited number of sites and specific categories. Use the <a href="https://developer.ebay.com/api-docs/sell/metadata/resources/marketplace/methods/getExtendedProducerResponsibilityPolicies" target="_blank">getExtendedProducerResponsibilityPolicies</a> method of the <b>Sell Metadata API</b> to retrieve valid categories for a site. To create and manage custom policies, use the <a href="https://developer.ebay.com/api-docs/sell/account/resources/methods#h2-custom_policy" target="_blank">custom_policy</a> resource of the <b>Account API</b>. 
    /// 					
    /// </remarks>

	public CustomPoliciesType CustomPolicies { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetBidderListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAllConditionally
    /// Handling timehttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/shipping-handling.html 
    /// (GetCategoryFeatures) Category.HandlingTimeEnabledcategories that support handling timesGetCategoryFeatures.html#Response.Category.HandlingTimeEnabled
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the maximum number of business days the seller
    /// 						commits to for preparing an item to be shipped after receiving a
    /// 						cleared payment. This time does not include the shipping time (the carrier's transit time).
    /// 						<br><br>
    /// 						<span class="tablenote"><b>Note:</b> If the seller opts into the eBay Guaranteed Delivery feature and wants to make a listing eligible for eBay Guaranteed Delivery, the <b>DispatchTimeMax</b> value must be set to <code>0</code> or <code>1</code> (days) and the cumulative value of <b>DispatchTimeMax</b> plus the transit time of the shipping service (returned in  <b>ShippingServiceDetails.ShippingTimeMax</b> field of <b>GeteBayDetails</b>) must be 4 business days or less to be eligible for this feature. See the <a href="https://pages.ebay.com/seller-center/shipping/ebay-guaranteed-delivery.html" target="_blank">eBay Guaranteed Delivery</a> page in Seller Center for more information on this program. The eBay Guaranteed Delivery feature is only available on the US and Australia marketplaces.
    /// 						</span>
    /// 						<br>
    /// 						<b>For Add/Revise/Relist calls:</b> Required for
    /// 						listings in certain categories when certain shipping services
    /// 						(with delivery) are offered. See <b>HandlingTimeEnabled</b> in
    /// 						<b>GetCategoryFeatures</b>.<br>
    /// 						<br>
    /// 						The seller sets this to a positive integer value corresponding to the number of 'handling' days. For a list of allowed values
    /// 						on each eBay site, use <b>DispatchTimeMaxDetails</b> in <b>GeteBayDetails</b>. Supported handling times for most sites in most categories range from 0 (same-day handling) to 3 business days, but this can vary by site. Some categories on some sites support longer handling times, and this generally comes into play with extremely large items where freight shipping may be required. <br>
    /// 						<br>
    /// 						This field is required whenever flat-rate or calculated shipping is used, but does not apply when there is no shipping involved, which is the case for digital gift card listings, or any orders where local pickup is available and this option is selected by the buyer.<br>
    /// 						<br>
    /// 						<b>For ReviseItem only:</b>
    /// 						If the listing has bids or sales and it ends within 12 hours, you can't change this value.
    /// 						If the listing is a GTC listing that has sales or ends within 12 hours
    /// 						(one or the other, but not both), you can add or change this value.
    /// 						If the listing has no bids or sales and more than 12 hours remain before
    /// 						the listing ends, you can add or change the dispatch (handling) time.<br>
    /// 						<br>
    /// 						<b>For GetItem:</b> <b>GetItem</b> returns <b>DispatchTimeMax</b>
    /// 						only when shipping service options are specified for the item and
    /// 						the seller specified a dispatch time.
    /// 					
    /// </remarks>

	public int? DispatchTimeMax { get; set; }
    /// <summary>
    /// Classified ad listingshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/classified-ads.html
    /// AddItemAddItemsRelistItemReviseItemVerifyAddItemVerifyRelistItemNo
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container is used by sellers of Classified Ad listings to provide contact information.
    /// 					
    /// </remarks>

	public AddressType SellerContactDetails { get; set; }
    /// <summary>
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The number of questions asked about this item. Applies to eBay Motors Pro
    /// 						applications only.
    /// 					
    /// </remarks>

	public long? TotalQuestionCount { get; set; }
    /// <summary>
    /// GetItemDetailLevel: none, ItemReturnAttributes, ItemReturnDescription,
    /// 								ReturnAllConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Coarse, Medium, FineConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Some listings on the eBay platform originate from eBay affiliates.
    /// 						Depending on the relationship the affiliate has with eBay, there are times
    /// 						when the affiliate retains ownership of the listing. When this occurs
    /// 						the representation of the listing on eBay is considered a proxy item. Proxy
    /// 						items can only be edited using API requests from the applications that
    /// 						originally listed them.
    /// 					
    /// </remarks>

	public bool? ProxyItem { get; set; }
    /// <summary>
    /// AddItemAddItemsRelistItemReviseItemVerifyAddItemVerifyRelistItemNo
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetSellerListDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Extended contact information for sellers using the Classified Ad format.
    /// 						Specifies the days and hours when the seller can be contacted.
    /// 						To remove seller contact information when revising or relisting an item, use
    /// 						<b>DeletedField</b>.
    /// 					
    /// </remarks>

	public ExtendedContactDetailsType ExtendedSellerContactDetails { get; set; }
    /// <summary>
    /// GetMyeBaySellingActiveListUnsoldListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the number of leads (emails) buyers have posted about the item.
    /// 						You must be the seller of the item to retrieve the lead count.
    /// 					
    /// </remarks>

	public int? LeadCount { get; set; }
    /// <summary>
    /// GetMyeBaySellingActiveListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the number of new leads (unanswered emails) buyers have posted
    /// 						about the item.
    /// 					
    /// </remarks>

	public int? NewLeadCount { get; set; }
    /// <summary>
    /// Item Specificshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/item-specifics.html
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// GetOrdersConditionallyLinkedLineItem.Item
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container is a list of Item Specific <b>Name</b>/<b>Value</b> pairs used by the seller to provide desciptive details of an item in a structured manner.
    /// 
    /// 						<br><br>
    /// 						If creating, revising, or relisting an item with an <b>Add</b>, <b>Revise</b>, or <b>Relist</b> call, it is recommended that you use the <a href="/api-docs/commerce/taxonomy/resources/category_tree/methods/getItemAspectsForCategory" target="_blank">getItemAspectsForCategory</a> method of the Taxonomy API to retrieve mandatory and recommended Item Specifics for a category.
    /// 
    /// 						<br><br>
    /// 						<b>For ReviseItem only:</b> When you revise a listing, if an auction listing has one or more bids and ends within 12 hours, you cannot change or add Item Ppecifics. If the auction listing has bids but ends in more than 12 hours, you cannot change existing Item Specifics, but you can add Item Specifics that were not previously included.
    /// 
    /// 						<br><br>
    /// 						If your listing is in a eBay product catalog-enabled category, certain <b>Name</b>/<b>Value</b> pairs will be accepted as product identifying information. The <b>Name</b> can be <code>Brand</code>, <code>MPN</code>, or a Global Trade Item Number (GTIN). GTINs are a set of globally recognized identifiers, including <code>EAN</code>, <code>ISBN</code>, and <code>UPC</code>. However, the <b>Values</b> provided for these <b>Name</b>s must comply with eBay's constraints or they will not be recognized as product identifiers. The <b>Value</b> for Brand must be an actual brand name (except that if the item is not branded, <b>Value</b> can be <code>Unbranded</code>.) The <b>Value</b> for Brand or MPN cannot contain only special characters (e.g. <code>%$*#@</code>). All GTINs must comply with international formatting standards. For more details, see <a href="https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/item-specifics.html" target="_blank">Item Specifics</a>.
    /// 
    /// 						<br><br>
    /// 						If the <b>ProductListingDetails</b> container in an Add/Revise/Relist call is successfully used to find and use an eBay catalog product to create/revise listing, the seller should not remove or change the value of any Item Specific name or value that is defined as part of the eBay catalog product definition.
    /// 
    /// 						<br><br>
    /// 						<span class="tablenote"><b>Note:</b> If a listing is associated with an eBay catalog product, the seller does not need to pass in any Item Specifics that are already defined in the eBay catalog product. Sellers can make a call to the <a href="/api-docs/commerce/taxonomy/resources/category_tree/methods/getItemAspectsForCategory" target="_blank">getItemAspectsForCategory</a> method of the Taxonomy API to see if the category supports any 'instance aspects', which can be thought of as Item Specifics that are unique to the specific item that is being listed. Instance aspects are indicated if the corresponding <a href="/api-docs/commerce/taxonomy/resources/category_tree/methods/getItemAspectsForCategory#response.aspects.aspectConstraint.aspectApplicableTo" target="_blank">aspectApplicableTo</a> field of the <b>getItemAspectsForCategory</b> response shows a value of <code>ITEM</code> (and not <code>PRODUCT</code>). Many categories support the following instance aspects: <em>Custom Bundle</em>, <em>Bundle Description</em>, <em>Modified Item</em>, <em>Modification Description</em>, and <em>California Prop 65 Warning</em>. These instance aspects allow the seller to provide more information about product bundles or modified products in a structured way. Depending on the category, there are other instance aspects as well.
    /// 						</span>
    /// 
    /// 						<span class="tablenote"><b>Note:</b> To specify an item's condition, use the <b>ConditionID</b> field instead of a condition Item Specific. Use <b>GetCategoryFeatures</b> to see which categories support <b>ConditionID</b> and to get a list of valid condition IDs. (If you specify <b>ConditionID</b> and you also specify <b>Condition</b> as a Item Specific, eBay drops the condition Item Specific.)
    /// 						</span>
    /// 
    /// 						<b>For GetItem</b>: This list is returned only when you specify <b>IncludeItemSpecifics</b> in the request (and the seller included Item Specifics in their listing).
    /// 
    /// 						<br><br>
    /// 						To delete all Item Specifics when you revise or relist, specify <b>Item.ItemSpecifics</b> in <b>DeletedField</b>, and don't pass <b>ItemSpecifics</b> in the request.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("NameValueList", IsNullable = false)]

	public System.Collections.Generic.List<NameValueListType> ItemSpecifics { get; set; }
    /// <summary>
    /// GetMyeBaySellingConditionallyDetailLevel: ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						The email and phone lead fee for a pay-per-lead item.
    /// 					
    /// </remarks>

	public AmountType ClassifiedAdPayPerLeadFee { get; set; }
    /// <summary>
    /// GetItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Different Buyer protection schemes and the various status associated with each one of them.
    /// 					
    /// </remarks>

	public BuyerProtectionDetailsType ApplyBuyerProtection { get; set; }
    /// <summary>
    /// About Local Market Listingshttps://pages.ebay.com/help/sell/motors-selling-locally.html
    /// Advertising with Classified Adshttps://pages.ebay.com/help/sell/f-ad.html
    /// AddItemAddItemsRelistItemReviseItemVerifyRelistItemNo
    /// GetItemDetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAllConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates a specific type of lead generation format listing, such as
    /// 						classified ad or local market best offer listing. Only applicable when
    /// 						<b>ListingType</b> = <b>LeadGeneration</b>.
    /// 						<br/><br/>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 							<b>ListingSubtype2</b> replaces the deprecated <b>ListingSubtype</b> field.
    /// 							If both are specified in a request, <b>ListingSubtype2</b> takes precedence.
    /// 						</span>
    /// 					
    /// </remarks>

	public ListingSubtypeCodeType? ListingSubtype2 { get; set; }
    /// <summary>
    /// false
    /// GetItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether the seller allows the bidder to request mechanical
    /// 						inspection services from RAC. For the Car category listings on the UK site.
    /// 					
    /// </remarks>

	public bool? MechanicalCheckAccepted { get; set; }
    /// <summary>
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the details of policy violations if the item was administratively
    /// 						canceled.
    /// 					
    /// </remarks>

	public ItemPolicyViolationType ItemPolicyViolation { get; set; }
    /// <summary>
    /// Cross-border tradinghttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/cross-border-trading.html
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemNo
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Coarse, Medium, FineConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is used by sellers who want their listing to be returned in the search
    /// 						results for other eBay sites. This feature is currently only supported by the US, UK,
    /// 						eBay Canada, and eBay Ireland sites. See <a href="
    /// 						https://pages.ebay.com/help/sell/globalexposure.html">Getting exposure on
    /// 						international sites</a> for full requirements on using this feature. There is a
    /// 						small listing fee for each country specified as a Cross Border Trade country.
    /// 						<br><br>
    /// 						US listings that offer shipping to Canada, North America, or worldwide are
    /// 						automatically returned on eBay.ca at no extra charge, so US listings that offer
    /// 						shipping to these locations do not need to specify Canada as a Cross Border Trade
    /// 						country.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("CrossBorderTrade")]

	public System.Collections.Generic.List<string> CrossBorderTrade { get; set; }
    /// <summary>
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						Returns the seller's information (in a business card format)
    /// 						if the seller's <b>SellerBusinessCodeType</b> is set to <code>Commercial</code>.
    /// 						This is only applicable for sites where Business Seller options
    /// 						are supported.
    /// 					
    /// </remarks>

	public BusinessSellerDetailsType BusinessSellerDetails { get; set; }
    /// <summary>
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Coarse, Medium, FineConditionally
    /// GetBidderListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes,
    /// 								ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The eBay Best Price Guarantee price. The <a href="
    /// 						https://pages.ebay.com.au/buy/Best_Price_Guarantee/">Best Price Guarantee</a> program is only available on the eBay Australia marketplace.
    /// 					
    /// </remarks>

	public AmountType BuyerGuaranteePrice { get; set; }
    /// <summary>
    /// GetBidderListGetSellerListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container is returned if the seller has applied one or more buyer requirement criteria to the listing. Buyer requirement settings are managed in the Selling Preferences section of the seller's account in My eBay. 
    /// 					
    /// </remarks>

	public BuyerRequirementDetailsType BuyerRequirementDetails { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsVerifyAddFixedPriceItemVerifyAddItemConditionally
    /// ReviseFixedPriceItemReviseItemRelistFixedPriceItemRelistItemVerifyRelistItemNo
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes,
    /// 								ReturnAllConditionally
    /// GetBidderListGranularityLevel: Medium, FineConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Coarse, Medium, FineConditionally
    /// Specify a return policyhttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/specify-return-policy.html
    /// </summary>
    /// <remarks>
    /// 
    /// 						Describes the seller's return policy. Most categories on most
    /// 						eBay sites require the seller to clearly specify whether or not
    /// 						returns are accepted (see <b>ReturnsAcceptedOption</b>). 
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> As a part of Digital Services Act (DSA) requirements, as of April 3, 2023, buyers in the EU must be allowed to return an item within 14 days or more, unless the item is exempt. Where applicable, sellers should update their return policies to reflect this requirement of accepting returns from EU buyers. This update can be made through the <b>ReturnPolicy</b> container or through a return business policy that is referenced through the <b>SellerProfiles.SellerReturnProfile</b> container.</span>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> If you are using a return business policy set up through My eBay or via the <a href="https://developer.ebay.com/api-docs/sell/account/resources/return_policy/methods/createReturnPolicy">Account API</a>, then you should not populate the fields in this <b>ReturnPolicy</b> container. Instead, indicate your return policy using the <b>SellerProfiles.SellerReturnProfile</b> container.
    /// 						<br>
    /// 						<br>
    ///             However, if you <i>do not</i> configure a return policy, all the fields in this <b>ReturnPolicy</b> container that are marked <b>conditional</b> must be populated in your request.
    /// 						</span>
    /// 						<br>
    /// 						<b>For the <b>AddItem</b> family of calls:</b> Required for
    /// 						most categories on most sites. Use <b>ReturnPolicyEnabled</b>
    /// 						in <b>GetCategoryFeatures</b> to determine which categories require this
    /// 						field. Also use <b>ReturnPolicyDetails</b> in <b>GeteBayDetails</b> to determine
    /// 						which <b>ReturnPolicy</b> fields can be used on each site.<br>
    /// 						<br>
    /// 						Australia (AU) and US eBay Motors
    /// 						Parts and Accessories categories typically support but do not
    /// 						require a return policy. (However, we strongly recommend that
    /// 						you specify a clear return policy whenever possible.)<br>
    /// 						<br>
    /// 						<b>For ReviseItem only:</b> If the listing has bids or
    /// 						sales and it ends within 12 hours, you can't change the return policy
    /// 						details. If the listing is a GTC listing that has sales or ends within 12
    /// 						hours (one or the other, but not both), you can add a return policy to the
    /// 						GTC listing (but you can't change return policy details if already present).
    /// 						If the listing has no bids or sales and more than 12 hours remain before the
    /// 						listing ends, you can add or change the return policy. When you revise your
    /// 						return policy, you only need to specify the fields you want to add or
    /// 						change. You don't need to specify all the other <b>ReturnPolicy</b> fields again.
    /// 						The other fields will retain their existing settings.<br>
    /// 						<br>
    /// 						<b>For the GetItem family of calls:</b> Only returned if the
    /// 						site you sent the request to supports the seller's return policy. Typically,
    /// 						the return policy details are only returned when the request is sent to the
    /// 						listing site.
    /// 						<br><br>
    /// 						<span class="tablenote"><b>Note:</b> The <b>GeteBayDetails</b> call can be used to retrieve site-wide return policy metadata, but it is recommended that sellers use the <b>GetCategoryFeatures</b> call instead, as this call was recently updated to retrieve category-level metadata for both domestic and international return policies.</span>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note:</b> In May 2018, eBay added the ability to create a separate international return policy for items that are shipped to international customers. If a seller does not add a separate international return policy, the settings in the domestic return policy will be used instead for international returns. For more information on setting separate domestic and international return policies, see the
    /// 						<a href="https://pages.ebay.com/seller-center/seller-updates/2018-summer/simplified-returns.html#international-returns-policy" target="_blank">International returns policy</a> help topic. For the international equivalent of this field, see the <b>InternationalRefundMethodValues</b> field.</span>
    /// 					
    /// </remarks>

	public ReturnPolicyType ReturnPolicy { get; set; }
    /// <summary>
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Enables you to view the sites on which an item can be purchased,
    /// 						based on the payment methods offered for the item.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("PaymentAllowedSite")]

	public System.Collections.Generic.List<SiteCodeType> PaymentAllowedSite { get; set; }
    /// <summary>
    /// AddFixedPriceItemVerifyAddFixedPriceItemRelistFixedPriceItemNoItemID
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes,
    /// 								ReturnAllConditionally
    /// eBay Merchant Data APIAddFixedPriceItem and ReviseFixedPriceItemhttps://developer.ebay.com/DevZone/merchant-data/CallRef/index.html
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether you prefer to track your eBay listings by eBay Item ID or
    /// 						by your own SKU. <br>
    /// 						<br>
    /// 						If a seller will be converting an existing eBay listing into the new Inventory model using the <b>bulkMigrateListings</b> call of the <b>Inventory API</b>, the <b>InventoryTrackingMethod</b> value must be set to <code>ItemID</code> (default value), but the item must also have a SKU value (Item.<b>SKU</b> or Variation.<b>SKU</b>) associated with it.
    /// 						<b>For GetItem and related calls</b>:
    /// 						Only returned when the value is <code>SKU</code>; not returned when the value is <code>ItemID</code>.
    /// 						<br>
    /// 					
    /// </remarks>

	public InventoryTrackingMethodCodeType? InventoryTrackingMethod { get; set; }
    /// <summary>
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes,
    /// 								ReturnAllConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: FineConditionally
    /// GetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is no longer applicable as eBay sellers can no longer use iMCC gateway accounts to handle buyer payments.
    /// 						<br>
    /// 							<span class="tablenote"><b>Note: </b> This field will stop being returned in order management calls on January 31, 2024.
    /// 						</span>
    /// 					
    /// </remarks>

	public bool? IntegratedMerchantCreditCardEnabled { get; set; }
    /// <summary>
    /// Multiple-variation listingshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/variations.html
    /// AddFixedPriceItemReviseFixedPriceItemRelistFixedPriceItemVerifyAddFixedPriceItemNoQualifications for listing with variationshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/variations.html#qualifications
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetMyeBayBuyingLostListWatchListWonListDeletedFromWonListDeletedFromLostListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingActiveListScheduledListSoldListUnsoldListDetailLevel: none, ReturnAllConditionally
    /// GetSellerEventsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						<br>
    /// 						Variations are similar (but not identical) items in a
    /// 						multiple-variation, fixed-price listing. For example, a T-shirt listing
    /// 						could contain multiple items of the same brand
    /// 						that vary by color and size (like "Blue, Large" and
    /// 						"Black, Medium"). Each variation specifies a combination of one of
    /// 						these colors and sizes. Each variation can have a different
    /// 						quantity and price. You can buy multiple items from one
    /// 						variation at the same time. (That is, one order line item can contain
    /// 						multiple items from a single variation.) <br>
    /// 						<br>
    /// 						If you list in two categories, both categories must support
    /// 						listing with variations. See <b>VariationsEnabled</b> in
    /// 						<b>GetCategoryFeatures</b> to determine applicable categories.<br>
    /// 						<br>
    /// 						<b>For ReviseFixedPriceItem and
    /// 						RelistFixedPriceItem:</b> Once a listing has been submitted with variations,
    /// 						you can't delete all the variations when you revise or relist the listing (because
    /// 						it would be considered a different listing). You also can't add or change variation
    /// 						specifics (because they are unique identifiers). However, you can delete or replace
    /// 						individual variations as needed to match your current inventory. If a variation has
    /// 						no purchases, use the <b>Variation.Delete</b> field to delete the variation. If it has
    /// 						inventory, set the Quantity to 0.<br>
    /// 						<br>
    /// 						As a best practice, if you want to revise multiple variations in
    /// 						the same listing at the same time (i.e., within a very short period),
    /// 						use a single <b>ReviseFixedPriceItem</b> request and include all the
    /// 						variation revisions in the same request. If your application design
    /// 						requires you to revise each variation individually, then avoid using
    /// 						multiple parallel threads. Instead, use a serial, synchronous
    /// 						process. That is, wait until each revision has been
    /// 						processed by eBay before submitting the next revision request for
    /// 						another variation in the same listing.<br>
    /// 						<br>
    /// 						<b>For GetItem and related calls</b> Only returned
    /// 						when a listing has variations.
    /// 						<br><br>
    /// 						<b>For GetSellerList:</b> Only returned when a listing
    /// 						has variations, <b>IncludeVariations</b> was set to <code>true</code> in the request,
    /// 						the <b>DetailLevel</b> was set to <b>ReturnAll</b>, and an applicable pagination
    /// 						value and time range were specified.<br>
    /// 						<br>
    /// 						<b>For GetItemTransactions</b> Only returned in Item
    /// 						when a listing has variations and <b>IncludeVariations</b> was set to <code>true</code>
    /// 						in the request. (Also see <b>Variation</b> returned in <b>Transaction</b> for
    /// 						information about which variation was actually purchased.)
    /// 						<br>
    /// 						<br>
    /// 						<b>For GetSellerEvents, GetMyeBayBuying, and GetMyeBaySelling:</b> Only returned
    /// 						when a listing has variations and <b>HideVariations</b> was set to <code>false</code>
    /// 						or not specified in the request.
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> This container will stop being returned in <b>GetItemTransactions</b> on January 31, 2024.
    /// 						</span>
    /// 					
    /// </remarks>

	public VariationsType Variations { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemNoProduct Metadata API Call Referencehttps://developer.ebay.com/DevZone/product-metadata/CallRef/index.htmlinformation on retrieving compatibility search names and corresponding values needed to specify compatibility by application manuallyParts and accessorieshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/ebay-motors-parts-accessories.html#search
    /// GetItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						A list of parts compatibility information specified as name and value pairs.
    /// 						Describes an assembly with which a part is compatible (i.e., compatibility by
    /// 						application). For example, to specify a part's compatibility with a vehicle,
    /// 						the name (search name) would map to standard vehicle characteristics (e.g.,
    /// 						Year, Make, Model, Trim, and Engine). The values would describe the specific
    /// 						vehicle, such as a 2006 Honda Accord. Use the <b>Product Metadata API</b> to
    /// 						retrieve valid search names and corresponding values.
    /// 						<br><br>
    /// 						<b>For the <b>AddItem</b> family of calls:</b> Use this for specifying
    /// 						parts compatibility by application manually. This can only be used in
    /// 						categories that support parts compatibility by application. Use <b
    /// 						class="con">GetCategoryFeatures</b> with the <b>CompatibilityEnabled</b>
    /// 						feature ID to determine which categories support parts compatibility by
    /// 						application.
    /// 						<br><br>
    /// 						<b>For ReviseFixedPriceItem and ReviseItem:</b> When you revise a
    /// 						listing, if the listing has bids and/or ends within 12 hours, item
    /// 						compatibilities cannot be deleted. You may add item compatibilities at any
    /// 						time.
    /// 						<br><br>
    /// 						<b>For GetItem:</b> <b
    /// 						class="con">ItemCompatibilityList</b> is only returned if the
    /// 						seller included item compatibility in the listing and <b
    /// 						class="con">IncludeItemCompatibilityList</b> is set to <code>true</code> in the
    /// 						<b>GetItem</b> request.
    /// 						<br><br>
    /// 					
    /// </remarks>

	public ItemCompatibilityListType ItemCompatibilityList { get; set; }
    /// <summary>
    /// GetItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates the number of compatible applications specified for the given item.
    /// 						Applies to items listed with fitment by application only (either manually or
    /// 						with a catalog product that supports compatibility).
    /// 						<br><br>
    /// 						Not returned if the item has no specified compatible applications. Not
    /// 						returned if <b>IncludeItemCompatibilityList</b> is
    /// 						specified in the request.
    /// 						<br><br>
    /// 						To retrieve the list of compatibility information, set <b>
    /// 						IncludeItemCompatibilityList</b> to <code>true</code> in the request.
    /// 						<br><br>
    /// 						Parts Compatibility is supported in limited Parts & Accessories
    /// 						categories for the eBay Motors (US) site (site ID 100) only.
    /// 					
    /// </remarks>

	public int? ItemCompatibilityCount { get; set; }
    /// <summary>
    /// Item conditionshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/item-conditions.html
    /// ConditionValues in GetCategoryFeaturesGetCategoryFeatures.html#Response.Category.ConditionValues
    /// Item Condition Look-up Table (and Automatic Mapping)https://pages.ebay.com/sellerinformation/news/itemconditionlookup.html
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						This is a numeric identifier for an item's condition. All numeric Condition ID values map to an item condition string value. For example, numeric identifier <code>1000</code> maps to <code>New</code> condition.
    /// 						<br>						
    /// 						<span class="tablenote"><b>Important: </b>
    /// 						For trading card listings in <b>Non-Sport Trading Card Singles (<code>183050</code>)</b>, <b>CCG Individual Cards (<code>183454</code>)</b>, and <b>Sports Trading Card Singles (<code>261328</code>)</b> categories, Condition ID 2750 can be used to specify the card as a <b>Graded</b> card and Condition ID 4000 can be used to specify the card as an <b>Ungraded</b> card. If either of these condition IDs are used, the seller is required to use the <b>ConditionDescriptors</b> container to provide one or more applicable Condition Descriptor name-value pairs. See the <a href="/Devzone/XML/docs/Reference/eBay/AddItem.html#Request.Item.ConditionDescriptors">ConditionDescriptors</a> field description for more information.
    /// 						<br>
    /// 						<br>
    /// 						Beginning on October 23rd, 2023, trading card listings in the affected categories must either use Condition ID 2750 or Condition ID 4000, and no other item conditions will be accepted. These Condition IDs and the <b>ConditionDescriptors</b> container will be required for all new listings. If not provided after this date, the following calls will fail: <b>AddItem</b>, <b>AddFixedPriceItem</b>, <b>AddItems</b>, <b>VerifyAddItem</b>, and <b>VerifyAddFixedPriceItem</b>.
    /// 						<br>
    /// 						<br>
    /// 						By January 22, 2024, all existing listings must be modified with either Condition ID 2750 or Condition ID 4000 and applicable <b>ConditionDescriptors</b> name-value pairs. This adds <b>ReviseItem</b>, <b>ReviseFixedPriceItem</b>, <b>RelistItem</b>, <b>RelistFixedPriceItem</b>, and <b>VerifyRelistItem</b> calls to the requirement.
    /// 						</span>
    /// 						Most eBay listing categories require an item condition, but a few eBay categories do not (such as Digital Gift Cards or Antiques categories). To verify if the listing category requires an item condition, and if so, what are the supported item condition and <b>ConditionID</b> values, you can call <b>GetCategoryFeatures</b>. In this <b>GetCategoryFeatures</b> call, you'd pass in the listing <b>CategoryID</b> value and two <b>FeatureID</b> fields - one of these fields set to <code>ConditionEnabled</code>, and the other field set to <code>ConditionValues</code>.
    ///             <br><br>
    ///             In the <b>GetCategoryFeatures</b> response, look at the Category.<b>ConditionEnabled</b> to see if item condition is required for the category. Then look at the Category.<b>ConditionValues</b> container in the response for the full list of Condition IDs that you can pass in through the <b>ConditionID</b> field of an Add/Revise/Relist/Verify call. Note that the Condition.<b>DisplayName</b> value in the response is the actual condition value that will appear in the actual eBay listing.
    /// 						<br>
    /// 						<br>
    /// 						If you pass in a <b>ConditionID</b> value
    /// 						that is not valid for the category, or if you don't pass in a <b>ConditionID</b> value at all for a category that requires it, the listing request fails.
    /// 						<br><br>
    /// 						If you are listing in two categories (using a secondary category), it is the primary listing category that determines which <b>ConditionID</b> values are supported.
    /// 						<br><br>
    /// 						<b>For Revise/Relist calls:</b> In most cases, you can change the  <b>ConditionID</b> value (if applicable/warranted), with the exception being an auction listing that has one or more bids, or any listing that is scheduled to end in 12 hours or less. <br>
    /// 						<br>
    /// 						<b>For GetItem:</b> The
    /// 						<b>ConditionID</b> value is always returned if set for the listing. <b>GetItem</b> also returns
    /// 						the item condition string value in the <b>ConditionDisplayName</b> field.
    /// 						<br>
    /// 						<br>
    /// 						<span class="tablenote"><strong>Note:</strong>
    /// 							On the US, Canada, UK, Germany, France, Italy, and Australia marketplaces, condition ID 2500 ('Seller Refurbished') can no longer be used in numerous categories. See <a href="/api-docs/sell/static/metadata/condition-id-values.html#Category" target="_blank">Category and marketplace support for the eBay Refurbished Program</a> for the full list. In these categories, the 'Seller Refurbished' item condition has been replaced by one of three new refurbished values, which include condition ID 2010 ('Excellent - Refurbished'), condition ID 2020 ('Very Good - Refurbished'), and condition ID 2030 ('Good - Refurbished'). To use any of these new refurbished item conditions, sellers must go through an application and qualification process. Any seller who is not eligible to use these new refurbished item conditions in these three categories will be blocked if they try to create a new listing or revise an existing listing with any of these three new item conditions. Sellers who are not eligible to list with the new refurbished item conditions, will need to use another item condition supported in these categories, such as condition ID 3000 ('Used').
    /// 							<br>
    /// 							<br>
    /// 							Any seller that is interested in eligibility requirements to list with any refurbished item condition, including condition ID 2000 ('Certified - Refurbished'), should see the <a href="https://pages.ebay.com/seller-center/listing-and-marketing/ebay-refurbished-program.html" target="_blank">eBay Refurbished Program</a> page in Seller Center.
    /// 						</span>
    /// 						<span class="tablenote"><b>Note: </b> This field will stop being returned in order management calls on January 31, 2024.
    /// 						</span>
    /// 					
    /// </remarks>

	public int? ConditionID { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemConditionally
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container is used in <b>Add/Revise/Relist/Verify</b> listing calls to designate the condition descriptors for the listing. It is also returned in <b>GetItem</b> to indicate the condition descriptors applied to the listing.
    /// 						<br>						
    /// 						<span class="tablenote"><b>Important: </b>
    /// 						For trading card listings in <b>Non-Sport Trading Card Singles (<code>183050</code>)</b>, <b>CCG Individual Cards (<code>183454</code>)</b>, and <b>Sports Trading Card Singles (<code>261328</code>)</b> categories, Condition ID 2750 can be used to specify the card as a <b>Graded</b> card and Condition ID 4000 can be used to specify the card as an <b>Ungraded</b> card. If either of these condition IDs are used, the seller is required to use the <b>ConditionDescriptors</b> container to provide one or more applicable Condition Descriptor name-value pairs.
    /// 						<br>
    /// 						<br>
    /// 						Beginning on October 23rd, 2023, trading card listings in the affected categories must either use Condition ID 2750 or Condition ID 4000, and no other item conditions will be accepted. These Condition IDs and the <b>ConditionDescriptors</b> container will be required for all new listings. If not provided after this date, the following calls will fail: <b>AddItem</b>, <b>AddFixedPriceItem</b>, <b>AddItems</b>, <b>VerifyAddItem</b>, and <b>VerifyAddFixedPriceItem</b>.
    /// 						<br>
    /// 						<br>
    /// 						By January 22, 2024, all existing listings must be modified with either Condition ID 2750 or Condition ID 4000 and applicable <b>ConditionDescriptors</b> name-value pairs. This adds <b>ReviseItem</b>, <b>ReviseFixedPriceItem</b>, <b>RelistItem</b>, <b>RelistFixedPriceItem</b>, and <b>VerifyRelistItem</b> calls to the requirement.
    /// 						</span>				
    /// 					
    /// </remarks>

	public ConditionDescriptorsType ConditionDescriptors { get; set; }
    /// <summary>
    /// 1000
    /// AddFixedPriceItemAddItemAddItemsVerifyAddFixedPriceItemVerifyAddItemRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyRelistItemConditionally
    /// GetSellerListConditionallyDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Coarse, Fine, Medium
    /// </summary>
    /// <remarks>
    /// 
    /// 						This string field is used by the seller to more clearly describe the condition of items that are not brand new.
    /// 						<br>
    /// 						<br>
    /// 						The <b>ConditionDescription</b> field is available for all categories, including categories where the condition type is not applicable (e.g., Antiques). This field is applicable for all item conditions except 'New', 'Brand New', 'New with tags', and 'New in box'. If <b>ConditionDescription</b> is used with these conditions (Condition IDs 1000-1499), eBay will simply ignore this field if included, and eBay will return a warning message to the user.
    /// 						<br>
    /// 						<br>
    /// 						The <b>ConditionDescription</b> field is returned by <b>GetItem</b> (and other related calls that return the Item object) if a condition description is specified in the listing.
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> This field should not be included if <b>ConditionDescriptors</b> are being used. If it is used, a warning will be triggered and the field will be dropped from the listing.</span>		
    /// 					
    /// </remarks>

	public string ConditionDescription { get; set; }
    /// <summary>
    /// 50
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						<br>
    /// 						The human-readable label for the item condition.
    /// 						Display names are localized for the site on
    /// 						which they're listed (not necessarily the site on which
    /// 						they're viewed).<br>
    /// 						<br>
    /// 						Most categories use the same display name for the
    /// 						same condition ID. Some categories may override the display name
    /// 						based on buyer expectations for items in the category.
    /// 						For example, condition ID 1000 could be called
    /// 						"New" in one category and "New with tags" in another.<br>
    /// 						<br>
    /// 						Behind the scenes, eBay's search engine uses the ID
    /// 						(not the display name) to determine whether items are
    /// 						new, used, or refurbished.<br>
    /// 						<br>
    /// 						Only returned when the seller specified <b>ConditionID</b> in their
    /// 						listing.
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> This field will stop being returned in order management calls on January 31, 2024.
    /// 						</span>
    /// 					
    /// </remarks>

	public string ConditionDisplayName { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemNo
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container is used by the seller to provide Energy Efficiency Label information, hazardous material related information, product safety related information, manufacturer information, and the repair score for the listing.
    /// 					
    /// </remarks>

	public RegulatoryType Regulatory { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemConditionally
    /// GetItemDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Tax exception category code. This is to be used only
    /// 						by sellers who have opted into sales tax being calculated
    /// 						by a sales tax calculation vendor. If you are interested
    /// 						in becoming a tax calculation vendor partner with eBay,
    /// 						contact developer-relations@ebay.com.
    /// 					
    /// </remarks>

	public string TaxCategory { get; set; }
    /// <summary>
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Coarse, Medium, FineConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates the type of message that will be returned describing the quantity
    /// 						available for the item.
    /// 					
    /// </remarks>

	public QuantityAvailableHintCodeType? QuantityAvailableHint { get; set; }
    /// <summary>
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Coarse, Medium, FineConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The quantity threshold above which the seller prefers not to show the actual
    /// 						quantity available. Returned when the quantity available is greater than the
    /// 						value of quantity threshold. Currently, 10 is the only available value for
    /// 						this threshold.
    /// 					
    /// </remarks>

	public int? QuantityThreshold { get; set; }
    /// <summary>
    /// AddFixedPriceItemReviseFixedPriceItemRelistFixedPriceItemVerifyAddFixedPriceItemNo
    /// AddItemReviseItemRelistItemVerifyAddItemVerifyRelistItemNo
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container provides information for an item that has a Strikethrough Price (STP) or a Minimum Advertised Price (MAP) discount pricing treatment. STP and MAP apply only to fixed-price listings. STP is available on the US, eBay Motors, UK, Germany, Canada (English and French), France, Italy, Spain, and Ireland sites, while MAP is available only on the US site.
    /// 						<br><br>
    /// 						Discount pricing is available to qualified sellers (and their associated developers) who participate in the Discount Pricing Program. Once qualified, sellers receive a 'special account flag' (SAF) that allows them to apply Discount Pricing to both single-variation and multi-variation items. STP is intended for eBay partners and their sellers only.
    /// 						<br><br>
    /// 						As a seller listing Discount Price items, you are required to maintain records of your discount pricing in the event you are called upon to substantiate your item pricing.
    /// 						<br><br>
    /// 						<b>For AddFixedPriceItem, RelistFixedPriceItem, ReviseFixedPriceItem, and VerifyAddFixedPriceItem</b>: If you are listing variations (MSKU items), use <b>Variation.DiscountPriceInfo</b> for each variation.
    /// 					
    /// </remarks>

	public DiscountPriceInfoType DiscountPriceInfo { get; set; }
    /// <summary>
    /// 80
    /// AddFixedPriceItemAddItemAddItemsVerifyAddFixedPriceItemVerifyAddItemConditionally
    /// RelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						A descriptive free-text title for a US or CA eBay Motors vehicle listing. This title appears below eBay's pre-filled listing title on the View Item page (not at the top of the View Item page). It's also appended to the listing title in search results (like a subtitle) on the US eBay Motors site. Keywords in this title help buyers find or distinguish your listing.
    /// 						<br><br>
    /// 						Applicable to listings in US eBay Motors Cars and Trucks, Motorcycle, and some of the Powersport, Boats and RV campers categories; or to Cars and Trucks listings on CA eBay Motors.
    /// 						<br><br>
    /// 						This replaces the older US and Canada eBay Motors Subtitle attribute (attribute ID 4148).
    /// 						<br>
    /// 					
    /// </remarks>

	public string SellerProvidedTitle { get; set; }
    /// <summary>
    /// 17
    /// AddFixedPriceItemAddItemAddItemsVerifyAddFixedPriceItemVerifyAddItemConditionally
    /// RelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemNo
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field displays the Vehicle Identification Number, which is a unique serial number for a motor vehicle.
    /// 						<br><br>
    /// 						This field is applicable to listings in US eBay Motors Cars and Trucks (6001), Motorcycles (6024), Commercial Trucks (63732), RVs and Campers (50054), ATVs (6723), Snowmobiles (42595), and UTVs (173665); and to Cars and Trucks listings in CA, CAFR and AU eBay Motors. For vehicle categories that do not use VIN, make a call to the <a href="/api-docs/commerce/taxonomy/resources/category_tree/methods/getItemAspectsForCategory" target="_blank">getItemAspectsForCategory</a> method of the Taxonomy API to determine applicable Item Specifics (such as 'Hull ID Number' for Boats).
    /// 						<br><br>
    /// 						For the US, CA, and CA-FR eBay Motors categories, required for cars and trucks from model year 1981 and later. (The US developed national standards for VIN values in 1981.)
    /// 						<br><br>
    /// 						For the eBay Australia site, required for vehicles from model year 1989 or later. For the eBay Australia site, only appears on the View Item page if you also specify the date of first registration in the listing's Item Specifics.
    /// 						<br><br>
    /// 						Appears in the VIN field in the Item Specifics section of eBay's View Item page.
    /// 						<br><br>
    /// 						<b>GetItem</b> will return this field for motor vehicle listings where the VIN is defined.<br>
    /// 					
    /// </remarks>

	public string VIN { get; set; }
    /// <summary>
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						<b>GetItem</b> will return this field for motor vehicle listings where the VIN is defined.
    /// 					
    /// </remarks>

	public string VINLink { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsVerifyAddFixedPriceItemVerifyAddItemConditionally
    /// RelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemNo
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						Vehicle Registration Mark, which is a unique identifier for a motor vehicle in the UK.
    /// 						<br><br>
    /// 						Applicable to listings in UK eBay Motors Cars and Trucks, Motorcycle, and some Powersport categories.
    /// 						<br><br>
    /// 						Appears as a VRM field in the Item Specifics section of eBay's View Item page. On the View Item page, the VRM value is masked (i.e., only a portion of the value is shown to users). In the <b>GetItem</b> response, the VRM is only returned if the call is made by the seller (i.e., the AuthToken is associated with the vehicle's seller).<br><br><b>GetItem</b> will return this field for motor vehicle listings where the VRM is defined.
    /// 					
    /// </remarks>

	public string VRM { get; set; }
    /// <summary>
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						<b>GetItem</b> will return this field for motor vehicle listings where the VRM is defined.
    /// 					
    /// </remarks>

	public string VRMLink { get; set; }
    /// <summary>
    /// AddFixedPriceItemReviseFixedPriceItemRelistFixedPriceItemVerifyAddFixedPriceItemConditionally
    /// AddItemAddItemsReviseItemRelistItemVerifyAddItemVerifyRelistItemConditionally
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetSellerEventsGetMyeBaySellingConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container is used if the seller would like to use/reference business policies to create, revise, relist, or verify their listing. The seller's account must be opted in to business policies to use this container. If this container is used, exactly one Payment Business Policy, one Shipping Business Policy, and one Return Business Policy must be specified and applied to the listing. If the seller's account is not opted in to business policies, that seller may not use this container. Sellers must opt-in to business policies through My eBay or by using the <b>optInToProgram</b> call of the <b>eBay Account API</b>.
    /// 						<br><br>
    /// 						If business policies are applied to a listing, all payment, shipping, and return policy settings in these policies will override any other payment, shipping, or return policy legacy fields that are included in the call request.
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> To make sure that the shipping cost override and policies are set correctly on an item (that is using business policies and has one or more shipping service cost overrides set up), the <b>Item.SellerProfiles.SellerShippingProfile</b> container and the <b>Item.ShippingServiceCostOverrideList.ShippingServiceCostOverride</b> container(s) must be included, even if no changes are being made.
    /// 						</span>	
    /// 						This container is only returned in 'Get' calls if business policies are set for the listing, and the person making the API call is the seller of the listing.
    /// 					
    /// </remarks>

	public SellerProfilesType SellerProfiles { get; set; }
    /// <summary>
    /// No
    /// AddFixedPriceItemAddItemAddItemsVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemGetItemGetItemsGetSellerListConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container is used when the seller wants to override the flat shipping costs for all domestic and/or all international shipping services defined in the shipping business policy referenced in the <b>SellerProfiles.SellerShippingProfile.ShippingProfileID</b> field. Shipping costs include the cost to ship one item, the cost to ship each additional identical item, and any shipping surcharges applicable to domestic shipping services.
    /// 						<br><br>
    /// 						A <b>ShippingServiceCostOverrideList.ShippingServiceCostOverride</b> container is required for each domestic and/or international shipping service that is defined in the <b>domesticShippingPolicyInfoService</b> and <b>intlShippingPolicyInfoService</b> containers of the shipping business policy.
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> To make sure that the shipping cost override and policies are set correctly on an item (that is using business policies and has one or more shipping service cost overrides set up), the <b>Item.SellerProfiles.SellerShippingProfile</b> container and the <b>Item.ShippingServiceCostOverrideList.ShippingServiceCostOverride</b> container(s) must be included, even if no changes are being made.
    /// 						</span>
    /// 						Shipping service cost overrides are a listing-level concept, and the shipping costs specified through each <b>ShippingServiceCostOverrideList.ShippingServiceCostOverride</b> container will not change the shipping costs defined for the same shipping services in the shipping business policy.
    /// 						<br><br>
    /// 						<b>For Revise and Relist calls</b>: To delete all shipping service cost overrides when you revise or relist, specify <b>Item.ShippingServiceCostOverrideList</b> in <b>DeletedField</b>, and don't pass <b>ShippingServiceCostOverrideList</b> in the request.
    /// 					
    /// </remarks>

	public ShippingServiceCostOverrideListType ShippingServiceCostOverrideList { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsVerifyAddItemVerifyAddFixedPriceItemConditionally
    /// RelistFixedPriceItemRelistItemVerifyRelistItemReviseFixedPriceItemReviseItemNo
    /// GetItemConditionally
    /// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/shipping-package-size.htmlPackage dimensions and weight
    /// </summary>
    /// <remarks>
    /// 
    /// 						Container consisting of dimension and size details related to a shipping package in which an item will be sent. The information in this container is applicable if the seller is using calculated shipping or flat rate shipping using shipping rate tables with weight surcharges. This container is only returned in the <b>Get</b> calls if specified for the item.
    /// 						<br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						<b>For ReviseItem and ReviseFixedPriceItem calls: </b> 
    /// 						For <a href ="https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/shipping-flat-rate.html">flat-rate</a> shipping, if any of the <b>ShippingPackageDetails</b> fields are defined for the current listing, those fields must be included again in the revise call even if their values are not changing. If you do not do this, some/all of the fields under this container may be removed from the listing. To find out the values included in the current listing, call <a href="https://developer.ebay.com/devzone/xml/docs/Reference/eBay/GetItem.html#GetItem">GetItem</a> and look through the <b>ShippingPackageDetails</b> container in the response.
    /// 						</span>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> Package weight and dimensions are only supported for the following marketplaces: AU, CA, DE, IT, UK, US, and Motors. If this information is provided on other marketplaces, it will be ignored.
    /// 						</span>
    /// 					
    /// </remarks>

	public ShipPackageDetailsType ShippingPackageDetails { get; set; }
    /// <summary>
    /// GetItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This boolean field is returned as <code>true</code> if the listing was created by a Top-Rated Seller and the listing has all of the requirements that qualifies it as a Top-Rated Plus listing. The Top-Rated Seller program is only available on the US, UK, and Germany sites. See the
    /// 						<a href="https://pages.ebay.com/help/sell/top-rated.html#what">Top-Rated Seller requirements</a> help topic for more information on qualifying as a Top-Rated Seller and the <a href="https://pages.ebay.com/help/sell/top-rated.html#plus">Top-Rated Plus listing requirements</a> help topic for more information on what a listing must offer to qualify as a Top-Rated Plus listing and get the Top-Rated Plus badge. Information on the overall program can be found on the <a href="https://pages.ebay.com/sellerinformation/build-your-business-online/status-standards/top-rated-seller.html">Top-Rated Seller home page</a> in the Seller Center.
    /// 					
    /// </remarks>

	public bool? TopRatedListing { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container is used by the seller to restrict the quantity of items that may be purchased by one buyer during the duration of a fixed-price listing (single or multi-variation). This is an optional container that can be used with an <b>Add</b>, <b>Revise</b>, or <b>Relist</b> call.
    /// 						<br><br>
    /// 						This container is not applicable to auction listings.
    /// 					
    /// </remarks>

	public QuantityRestrictionPerBuyerInfoType QuantityRestrictionPerBuyer { get; set; }
    /// <summary>
    /// ReviseItemReviseFixedPriceItemNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						This value sets the minimum price threshold for a seller's product price in a fixed-price listing. Regardless of the product price on eBay Value Box or Amazon listings, the seller's product price will not be reduced lower than this dollar value.
    /// 						<br><br>
    /// 						This value is only applicable to sellers enabled to use the <b>Dynamic Pricing</b> API, and if a dynamic pricing rule is assigned to the listing's product.
    /// 					
    /// </remarks>

	public AmountType FloorPrice { get; set; }
    /// <summary>
    /// ReviseItemReviseFixedPriceItemNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						This value sets the maximum price threshold for a seller's product price in a fixed-price listing. Regardless of the product price on Amazon or eBay Value Box, the seller's product price will not be raised higher than this dollar value.
    /// 						<br><br>
    /// 						This value is only applicable to sellers enabled to use the <b>Dynamic Pricing</b> API, and if a dynamic pricing rule is assigned to the listing's product. If this field is not specified through the <b>Dynamic Pricing</b> API, an eBay system-level threshold is used to avoid any undesirable results.
    /// 					
    /// </remarks>

	public AmountType CeilingPrice { get; set; }
    /// <summary>
    /// GetItemDetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This boolean field is returned as <code>true</code> if the item is eligible is to be shipped internationally via eBay's Global Shipping Program. With the Global Shipping Program, the buyer pays a single shipping fee for the order, which includes the domestic shipping leg, the international shipping leg, and handling charges, and import charges.
    /// 						<br/><br/>
    /// 						eBay uses a shipping partner that allows the seller to ship the package to a domestic location and then the shipping partner takes care of the rest, including the international shipping leg.
    /// 					
    /// </remarks>

	public bool? IsIntermediatedShippingEligible { get; set; }
    /// <summary>
    /// GetItemDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container provides information about the weight, volume or other quantity measurement of a listed item. The European Union requires listings for certain types of products to include the price per unit so buyers can accurately compare prices. eBay uses the <b>UnitType</b> and <b>UnitQuantity</b> values and the item's listed price to calculate and display the per-unit price on eBay EU sites.
    /// 						<br/><br/>
    /// 						This container will only be returned if price per unit information exists for the listing, and the <b>IncludeItemSpecifics</b> field was included in the call request and set to <code>true</code>.
    /// 					
    /// </remarks>

	public UnitInfoType UnitInfo { get; set; }
    /// <summary>
    /// GetItemDetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The identifier of the original listing that contained the item before the item was relisted. This field is only returned for an item that was relisted.
    /// 					
    /// </remarks>

	public long? RelistParentID { get; set; }
    /// <summary>
    /// GetItemGetItemsDetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This string value provides more details about the item's condition.
    /// 					
    /// </remarks>

	public string ConditionDefinition { get; set; }
    /// <summary>
    /// GetItemGetSellerListGetMyeBaySellingConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This boolean field is returned as <code>true</code> if the listing has been hidden from all searches occurring on eBay. If a listing is hidden from eBay searches, the reason can be found in the <b>ReasonHideFromSearch</b> field.
    /// 					
    /// </remarks>

	public bool? HideFromSearch { get; set; }
    /// <summary>
    /// GetItemGetSellerListGetMyeBaySellingConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned only when the listing is currently being hidden from any searches occurring on eBay. Listings may be hidden from search if an active listing is currently out of stock or if the listing has been determined by eBay to be a duplicate listing.
    /// 					
    /// </remarks>

	public ReasonHideFromSearchCodeType? ReasonHideFromSearch { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemGetSellerListNo
    /// GetItemGetSellerListGetItemShippingConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container is used in <b>Add</b>/<b>Revise</b>/<b>Relist</b>/<b>Verify</b> listing calls by the seller to enable a listing with the 'In-Store Pickup' feature. The 'In-Store Pickup' feature is only available to a limited number of large retail merchants in the US, Canada, UK, Germany, and Australia marketplaces.
    /// 						<br/><br/>
    /// 						This container is returned in the 'Get' calls if the listing is enabled with the In-Store Pickup feature.
    /// 					
    /// </remarks>

	public PickupInStoreDetailsType PickupInStoreDetails { get; set; }
    /// <summary>
    /// GetItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This boolean field is returned as <code>true</code> if the actual quantity of a multiple-quantity, fixed-price listing (indicated in the <b>Item.Quantity</b> field) can not be accurately determined by eBay.
    /// 					
    /// </remarks>

	public bool? IgnoreQuantity { get; set; }
    /// <summary>
    /// GetItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is only returned if <code>true</code>, and indicates that the 'Click and Collect' feature is available for this item. With Click and Collect, buyers are able to purchase from thousands of sellers on the eBay UK, Australia, and Germany sites, and then pick up their order from the nearest 'eBay Collection Point'. Note that an item may be eligible for Click and Collect, but this logistics option will only surface if the prospective buyer is within the vicinity of an 'eBay Collection Point'.
    /// 						<br/><br/>
    /// 						The Click and Collect feature is only available on the eBay UK, Australia, and Germany sites. For more information about Click and Collect, see the
    /// 						<a href="https://ebay.co.uk/clickandcollect/">Click and Collect</a> home page on the eBay UK site, the <a href="https://sellercentre.ebay.com.au/click-and-collect">Click and Collect</a> home page on the eBay Australia site, or the <a href="https://pages.ebay.de/einkaufen/click-and-collect.html">Click and Collect</a> home page on the eBay Germany site.
    /// 						<br>
    /// 						<br>
    /// 						Not all categories on the UK, Australia, and Germany sites support Click and Collect listings. To verify if a specific category on these eBay sites support Click and Collect listings, use the <a href="https://developer.ebay.com/DevZone/XML/docs/Reference/eBay/GetCategoryFeatures.html">GetCategoryFeatures</a> call, passing in one or more <b>CategoryID</b> values and a <b>PickupDropOffEnabled</b> value in the <b>FeatureID</b> field.
    /// 						<br/><br/>
    /// 						Look for a <code>true</code> value in the <b>PickupDropOffEnabled</b> field of the corresponding <b>Category</b> node (match up the <b>CategoryID</b> values if more than one Category IDs were passed in the request).
    /// 						<br>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note:</b> For Click and Collect eligible sellers, the Click and Collect feature can only be enabled at the account level, and then each of the seller's listings will be automatically evaluated for Click and Collect eligibility.
    /// 						</span>
    /// 					
    /// </remarks>

	public bool? AvailableForPickupDropOff { get; set; }
    /// <summary>
    /// GetItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						For 'Click and Collect' eligible sellers, this field was once used to set 'Click and Collect' eligibility at the listing level. However, now the seller can only opt in to 'Click and Collect' at the account level, and then each of their listings will be automatically evaluated for 'Click and Collect' eligibility.
    /// 						<br/><br/>
    /// 						<span class="tablenote"><b>Note:</b> Until this field is fully deprecated in the Trading WSDL (and in Add/Revise/Relist/Verify calls), it can still be used, but it will have no functional affect. However, if set in an Add/Revise/Relist/Verify call, it will get returned in <b>GetItem</b>, but it won't be a true indicator if the item is available for the 'Click and Collect' logistics type. Instead, the <b>Item.AvailableForPickupDropOff</b> field should be referenced to see if the item is available for 'Click and Collect'.
    /// 						</span>
    /// 					
    /// </remarks>

	public bool? EligibleForPickupDropOff { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemNo
    /// GetItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						 This container is used in <b>Add</b>/<b>Revise</b>/<b>Relist</b>/<b>Verify</b> listing calls to designate the listing as a digital gift card listing. It is also returned in <strong>GetItem</strong> to indicate that the listing contains a digital gift card.
    /// 					
    /// </remarks>

	public DigitalGoodInfoType DigitalGoodInfo { get; set; }
    /// <summary>
    /// more detailsBay Plushttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/ebay-plus.html
    /// Selling with eBay Plus (Australia help page)https://www.ebay.com.au/help/selling/listings/creating-managing-listings/selling-ebay-plus?id=4756
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemNo
    /// GetItemGetSellerListGetSellerEventsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						eBay Plus is a premium account option for buyers, which provides benefits such as fast and free domestic shipping, and free returns on selected items. To offer this feature to buyers, sellers must opt in to eBay Plus, and their selling status must be 'Above Standard' or above.
    /// 						<br/><br/>
    /// 						<span class="tablenote"><b>Note:</b> Currently, eBay Plus is only available to buyers on the Germany and Australia marketplaces, and this field should only be used by sellers selling eligible items in Germany.
    /// 						<br/><br/>
    /// 						In Australia, the seller has no control/responsibility over setting the eBay Plus feature for a listing. Instead, eBay will evaluate/determine whether a listing is eligible for eBay Plus. Due to this fact, an Australian seller will also get the <code>21919431: This listing isn't eligible for eBay Plus.</code> warning message in an add/revise/relist call, even though eBay may ultimately set the eBay Plus feature on the listing if the item is eligible.
    /// 						</span>
    /// 						<br/>
    /// 						In an add/revise/relist call, a seller on the Germany site must include this field and set its value to <code>true</code>. If the seller is not eligible for/opted in to eBay Plus and/or the listing category or item does not qualify for eBay Plus, a warning message will be returned to the seller in the response indicating this. In addition to the seller, listing category, and item being eligible for eBay Plus, the seller must also set/commit to the following for the listing:
    /// 						<ul>
    /// 							<li>Listing format must be fixed-price.</li>
    /// 							<li>Same-day or one-day handling (<b>DispatchTimeMax</b> set to <code>0</code> or <code>1</code>). </li>
    /// 							<li>A free, next-day shipping option offered.</li>
    /// 							<li>A return policy that offers a 30-day (or longer) return period.</li>
    /// 						</ul>
    /// 
    /// 						If this field is returned as <code>true</code> in a 'Get' call, it indicates that the item is eligible for eBay Plus treatment, but eBay Plus will only come into play if the buyer is subscribed to eBay Plus.
    /// 
    /// 					
    /// </remarks>

	public bool? eBayPlus { get; set; }
    /// <summary>
    /// more detailseBay Plushttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/ebay-plus.html
    /// GetItemGetSellerListGetSellerEventsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						If this field is returned as <code>true</code>, this item is eligible to be listed under the eBay Plus program. eBay Plus is a premium account option for buyers, which provides benefits such as fast and free domestic shipping and free returns on selected items. eBay sellers must opt in to eBay Plus to be able offer the program on qualifying listings. Among other requirements, sellers must commit to next-day delivery of those items.
    /// 						<br/><br/>
    /// 						<span class="tablenote"><b>Note:</b> Currently, eBay Plus is available only to buyers in Germany and Australia marketplaces.
    /// 						</span>
    /// 					
    /// </remarks>

	public bool? eBayPlusEligible { get; set; }
    /// <summary>
    /// GetItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 				The boolean value that is returned in this field will indicate whether or not a digital gift card can be delivered by email to the buyer or recipient of the gift card. This field is only applicable to digital gift card listings.
    /// 			
    /// </remarks>

	public bool? eMailDeliveryAvailable { get; set; }
    /// <summary>
    /// GetItemGetSellerListGetSellerEventsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 				This boolean field indicates whether or not the listing description is HTTPS secure/compliant. To be HTTPS secure/compliant, the <b>Item.Description</b> field may not contain any links to site pages that use the HTTP (and not HTTPS) protocol. This field will be returned with each listing that is found unless one or more <b>OutputSelector</b> fields are used and <code>Item.IsSecureDescription</code> is not one of the values passed in to one of these fields.
    /// 				<br/><br/>
    /// 				If this field is returned as <code>true</code>, the listing is HTTPs secure/compliant, and the whole listing description will appear on the View Item page for the listing. If this field is returned as <code>false</code>, the listing is not HTTPs secure/compliant, and only a partial/brief listing description will appear on the View Item page for the listing, with a link to the full listing description that will load in another tab.
    /// 				<br/><br/>
    /// 				If the listing description is not HTTPS compliant, the fix is to call <b>ReviseItem</b> or <b>ReviseFixedPriceItem</b> and update the <b>Item.Description</b> field, removing all links to HTTP pages.
    /// 				<br/><br/>
    /// 				For more information about why eBay made this change, please see the <a href="http://pages.ebay.com/seller-center/seller-updates/2017-fall/policy-updates.html" target="_blank">Policy Updates</a> page of the Fall 2017 Seller Updates page.
    /// 			
    /// </remarks>

	public bool? IsSecureDescription { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>KTypeSupported</b> field that is returned under the <b>FeatureDefinitions</b> container of the <b>GetCategoryFeatures</b> response (as long as <b>KTypeSupported</b> is included as a <b>FeatureID</b> value in the call request, or no <b>FeatureID</b> values are passed into the call request). The <b>KTypeSupported</b> field is returned as an empty element (a boolean value is not returned) if one or more eBay API-enabled sites support specifying parts compatibility through a K Type vehicle number.
/// 				<br><br>
/// 				At this time, this feature is only supported for car and truck listings on the Germany site.
/// 				<br><br>
/// 				To verify if a specific category supports specifying parts compatibility through a K Type vehicle number, pass in a <b>KTypeSupported</b> value in the request, and then look for a <code>true</code> value in the <b>KTypeSupported</b> field of the corresponding <b>Category</b> node (match up the <b>CategoryID</b> values if more than one category ID was passed in the request).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class KTypeSupportedDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
///          This type provides information about one order line item in a package. The package can contain multiple units of a given order line item.
/// 		
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class LineItemType {

#region 属性
    /// <summary>
    /// SetShipmentTrackingInfoNo
    /// CompleteSaleConditionallyConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The number of units of the order line item in this package; this is required for customs. The seller must ensure that this matches the quantity of the order line item enclosed in the package.<br/><br/>This value must be a positive integer, and it can't be greater than the quantity of this item specified in the original transaction. This field is a required field in <b>CompleteSale</b> if the order type is a Global Shipping Program (GSP) order.
    /// 					
    /// </remarks>

	public int? Quantity { get; set; }
    /// <summary>
    /// CompleteSaleSetShipmentTrackingInfoNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						The Country of Manufacture for the order line item; this is required for customs. This should identify the country in which more than 50% of the value of the item was created.
    /// 						<br/><br/>
    /// 						This value must conform to the ISO 3166 two-letter country code standard.
    /// 						To see the list of currently supported codes, and the English names associated with each code
    /// 						(e.g., KY="Cayman Islands"), call <b>GeteBayDetails</b>
    /// 						with <b>DetailName</b> set to <b>CountryDetails</b>.
    /// 					
    /// </remarks>

	public string CountryOfOrigin { get; set; }
    /// <summary>
    /// CompleteSaleSetShipmentTrackingInfoNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						 The item description of the order line item, based on its <strong>ItemID</strong>.
    /// 					
    /// </remarks>

	public string Description { get; set; }
    /// <summary>
    /// CompleteSaleSetShipmentTrackingInfoNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						Unique identifier for the eBay listing associated with the order line item. A multiple-quantity listing can have multiple order line items, but only one <b>ItemID</b> value. Unless an <b>OrderLineItemID</b> or <b>SKU</b> value is specified in the same node, this field is required for each <b>ItemTransactionID</b> node included in the request.
    /// 					
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// CompleteSaleSetShipmentTrackingInfoNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						Unique identifier for an eBay order line item (transaction). The <b>TransactionID</b> should match the <b>ItemID</b> specified in each <b>ItemTransactionID</b> node included in the request. Optionally, an <b>OrderLineItemID</b> value can substitute for the <b>ItemID</b>/<b>TransactionID</b> pair.
    /// 						<br>
    /// 						<br>
    /// 						The <b>TransactionID</b> value for auction listings is always <code>0</code> since there can be only one winning bidder/one sale for an auction listing.
    /// 						<br/><br/>
    /// 						<span class="tablenote"><b>Note: </b> Beginning in July 2024, non-zero transaction IDs will start being returned for auction listings. If necessary, update code to handle non-zero transaction IDs for auction transactions before this time. 
    /// 						</span>
    /// 					
    /// </remarks>

	public string TransactionID { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// GetOrdersDetailLevel: none, ReturnAllConditionally
/// OrderReportConditionally
/// </summary>
/// <remarks>
/// 
///         Contains details of linked line item objects.
///       
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class LinkedLineItemType {

#region 属性
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             The unique identifier of the order to which the linked line item belongs.
    ///           
    /// </remarks>

	public string OrderID { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             The unique identifier of the linked order line item. For example, the order line item ID of the tire.
    ///           
    /// </remarks>

	public string OrderLineItemID { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             The eBay user ID of the seller who sold the linked line item. For example, the user ID of the tire seller.
    ///           
    /// </remarks>

	public string SellerUserID { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             The <b>EstimatedDeliveryTimeMin</b> and <b>EstimatedDeliveryTimeMax</b> timestamps indicate the original estimated window during which delivery can be expected. The <b>EstimatedDeliveryTimeMax</b> value indicates the latest date and time to receive the order.
    ///           
    /// </remarks>

	public System.DateTime? EstimatedDeliveryTimeMax { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             The <b>EstimatedDeliveryTimeMin</b> and <b>EstimatedDeliveryTimeMax</b> timestamps indicate the original estimated window during which delivery can be expected. The <b>EstimatedDeliveryTimeMin</b> value indicates the earliest date and time to receive the order.
    ///           
    /// </remarks>

	public System.DateTime? EstimatedDeliveryTimeMin { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             Container consisting of details about the linked item.
    ///             <span class="tablenote"><strong>Note:</strong>
    ///             All item specifics for the listing are returned. The name/value pairs returned are in the language of the linked line item's listing site, which may vary from the seller's language.
    ///             </span>
    ///           
    /// </remarks>

	public ItemType Item { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Various details about a listing. Some of the details are calculated or derived after
/// 				an item is listed. The details in this type include the start and end time and
/// 				the converted (localized) prices. The details in this type also include
/// 				input values applicable to the Best Offer feature.
/// 				Additional details in this type include flags indicating if a seller
/// 				specified fields whose values are not visible to the requesting user.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ListingDetailsType {

#region 属性
    /// <summary>
    /// GetBidderListAlways
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllAlways
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Medium, FineConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						If <code>true</code>, the item is listed in a Mature category. Users must accept
    /// 						the Mature Category agreement on the eBay site to retrieve
    /// 						items listed in Mature categories. (Users do not need to sign
    /// 						this agreement to be able to list items in Mature Categories.)
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> This field will stop being returned in <b>GetItemTransactions</b> and <b>GetSellerTransactions</b> on January 31, 2024.
    /// 						</span>
    /// 					
    /// </remarks>

	public bool? Adult { get; set; }
    /// <summary>
    /// GetBidderListAlways
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllAlways
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Medium, FineConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Applicable for Real Estate auctions only. If <code>true</code>, buyers and sellers are expected to follow through on the sale. If false, bids for the Real Estate auction are only expressions of interest.
    /// 						<br>
    /// 							<span class="tablenote"><b>Note: </b> This field will stop being returned in <b>GetItemTransactions</b> and <b>GetSellerTransactions</b> on January 31, 2024.
    /// 						</span>
    /// 					
    /// </remarks>

	public bool? BindingAuction { get; set; }
    /// <summary>
    /// GetBidderListAlways
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllAlways
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Medium, FineConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether or not the seller's Checkout Enabled preference is turned on.
    /// 						<br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 							A 'Checkout Enabled' setting is no longer available to sellers, and this field is always returned as <code>true</code>.
    /// 						</span>
    /// 						<span class="tablenote"><b>Note: </b> This field will stop being returned in <b>GetItemTransactions</b> and <b>GetSellerTransactions</b> on January 31, 2024.
    /// 						</span>
    /// 					
    /// </remarks>

	public bool? CheckoutEnabled { get; set; }
    /// <summary>
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Medium, FineConditionally
    /// GetMyeBayBuyingSecondChanceOfferBestOfferListBidListWatchListDetailLevel: none, ReturnAllConditionally
    /// GetBidderListAlways
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						<br>
    /// 						Converted value of the <b>BuyItNowPrice</b> in the currency of
    /// 						the site that returned this response.
    /// 						For active items, refresh this value every 24 hours to
    /// 						pick up the current conversion rates.
    /// 						<br>
    /// 							<span class="tablenote"><b>Note: </b> The <b>ListingDetails.ConvertedBuyItNowPrice</b> field will stop being returned in <b>GetItemTransactions</b>, <b>GetSellerTransactions</b>, and <b>GetMyeBaySelling</b> (SoldList and DeletedFromSoldList) on January 31, 2024.
    /// 						</span>
    /// 					
    /// </remarks>

	public AmountType ConvertedBuyItNowPrice { get; set; }
    /// <summary>
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: FineConditionally
    /// GetMyeBayBuyingBidListLostListWatchListWonListDeletedFromWonListDeletedFromLostListDetailLevel: none, ReturnAllConditionally
    /// GetBidderListAlways
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						<br>
    /// 						Converted value of the <b>StartPrice</b> in the currency of
    /// 						the site that returned this response.
    /// 						For active items, refresh this value every 24 hours to
    /// 						pick up the current conversion rates.<br>
    /// 						<br>
    /// 						In multi-variation listings, this value matches the lowest-priced
    /// 						variation that is still available for sale.
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> The <b>ListingDetails.ConvertedStartPrice</b> field will stop being returned in <b>GetItemTransactions</b>, <b>GetSellerTransactions</b>, and <b>GetMyeBaySelling</b> (SoldList and DeletedFromSoldList) on January 31, 2024.
    /// 						</span>
    /// 					
    /// </remarks>

	public AmountType ConvertedStartPrice { get; set; }
    /// <summary>
    /// GetBidderListConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: FineConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						<br>
    /// 						Converted value of the <b>ReservePrice</b> in the currency of the site that returned this response. Only returned for listings with a reserve price when the requesting user is the listing's seller. For active items, refresh this value every 24 hours to pick up the current conversion rates. Not applicable to fixed-price listings.
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> The <b>ListingDetails.ConvertedReservePrice</b> field will stop being returned in <b>GetItemTransactions</b>, <b>GetSellerTransactions</b>, and <b>GetMyeBaySelling</b> (SoldList and DeletedFromSoldList) on January 31, 2024.
    /// 						</span>
    /// 					
    /// </remarks>

	public AmountType ConvertedReservePrice { get; set; }
    /// <summary>
    /// GetBidderListAlways
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllAlways
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Medium, FineConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						If <code>true</code>, the seller specified a value in <b>ReservePrice</b>.
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> This field will stop being returned in <b>GetItemTransactions</b> and <b>GetSellerTransactions</b> on January 31, 2024.
    /// 						</span>
    /// 					
    /// </remarks>

	public bool? HasReservePrice { get; set; }
    /// <summary>
    /// GetBidderListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates the new item ID for a re-listed item. When an item is
    /// 						re-listed, the item ID for the new item is added to the
    /// 						old listing, so buyers can navigate to
    /// 						the new listing. This value only appears when the old listing is
    /// 						retrieved. The <b>RelistedItemID</b> of the original item will reflect the last relist.
    /// 						<br>
    /// 							<span class="tablenote"><b>Note: </b> This field will stop being returned in <b>GetItemTransactions</b> and <b>GetSellerTransactions</b> on January 31, 2024.
    /// 						</span>
    /// 					
    /// </remarks>

	public string RelistedItemID { get; set; }
    /// <summary>
    /// GetBidderListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The item ID for the original listing from which a second chance offer
    /// 						is made. This value is only returned when the data for the second chance
    /// 						offer listing is retrieved.
    /// 						Output only.
    /// 					
    /// </remarks>

	public string SecondChanceOriginalItemID { get; set; }
    /// <summary>
    /// GetBidderListAlways
    /// GetItemAlways
    /// GetMemberMessagesConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: ReturnAllConditionally
    /// GetSellerListDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// GetMyeBayBuyingBestOfferListBidListLostListWatchListWonListDeletedFromWonListDeletedFromLostListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingActiveListBidListScheduledListSoldListUnsoldListDetailLevel: none, ReturnAllConditionally
    /// GetSellerEventsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The <b>StartTime</b> value returned by non-search calls such as
    /// 						<b>GetItem</b> is the time stamp (in GMT) for when
    /// 						the item was listed.
    /// 					
    /// </remarks>

	public System.DateTime? StartTime { get; set; }
    /// <summary>
    /// GetBidderListAlways
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllAlways
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: ReturnAllConditionally
    /// GetSellerListDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// GetBestOffersDetailLevel: none, ReturnAllConditionally
    /// GetItemsAwaitingFeedbackGetMemberMessagesConditionally
    /// GetMyeBayBuyingBidListLostListSecondChanceOfferWatchListWonListDeletedFromWonListDeletedFromLostListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingBidListSoldListUnsoldListDetailLevel: none, ReturnAllConditionally
    /// GetSellerEventsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Time stamp (in GMT) when the listing is scheduled to end
    /// 						(calculated based on the values of <b>StartTime</b> and <b>ListingDuration</b> )
    /// 						or the actual end time if the item has ended.
    /// 					
    /// </remarks>

	public System.DateTime? EndTime { get; set; }
    /// <summary>
    /// GetBidderListAlways
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllAlways
    /// GetMyeBayBuyingWatchListDetailLevel: none, ReturnAllConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The URL of the Web page where a user can view the listing.
    /// 						On the US site, this is called the View Item page.
    /// 						If you enabled affiliate tracking in a search-related call
    /// 						(for example, if you used the <b>AffiliateTrackingDetails</b> container
    /// 						in an applicable call), <b>ViewItemURL</b> contains
    /// 						a string that includes affiliate tracking information
    /// 						(see the <a href=
    /// 						"https://www.ebaypartnernetwork.com" target="_blank">eBay Partner Network</a>).
    /// 						<br>
    /// 							<span class="tablenote"><b>Note: </b> This field will stop being returned in <b>GetItemTransactions</b> and <b>GetSellerTransactions</b> on January 31, 2024.
    /// 						</span>
    /// 					
    /// </remarks>

	public string ViewItemURL { get; set; }
    /// <summary>
    /// GetBidderListAlways
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllAlways
    /// GetItemTransactionsDetailLevel: ReturnAllConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 			      Indicates whether the item has any unanswered questions. Use
    /// 						<b>GetMemberMessages</b> to retrieve unanswered questions for the item if this flag
    /// 						indicates that there are any.
    /// 			    
    /// </remarks>

	public bool? HasUnansweredQuestions { get; set; }
    /// <summary>
    /// GetBidderListAlways
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllAlways
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 			      Indicates whether the item has any publicly displayed messages. Use <b>GetMemberMessages</b> to retrieve public messages for the item if this flag indicates that there are any.
    /// 			      <br>
    /// 						<span class="tablenote"><b>Note: </b> The <b>HasPublicMessages</b> field will stop being returned in <b>GetItemTransactions</b> and <b>GetSellerTransactions</b>, on January 31, 2024.
    /// 						</span>
    /// 			    
    /// </remarks>

	public bool? HasPublicMessages { get; set; }
    /// <summary>
    /// GetBidderListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether the Buy It Now feature is available for an auction listing. As a general rule, once an auction listing has bids (and the high bid exceeds the reserve price, if any), the Buy It Now feature becomes disabled for the listing.
    /// 					
    /// </remarks>

	public bool? BuyItNowAvailable { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsReviseFixedPriceItemReviseItemRelistItemRelistFixedPriceItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemNo
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the minimum acceptable Best Offer price. If a buyer
    /// 						submits a Best Offer that is below this value, the offer is automatically
    /// 						declined. This applies only to items listed in categories that
    /// 						support the Best Offer auto-decline feature.
    /// 						<br/><br/>
    /// 						In order for this setting to have an effect, Best Offer must be enabled
    /// 						for the listing, and this value will only be exposed to the seller who listed the item.
    /// 						<br/><br/>
    /// 						<b>For Revise and Relist calls:</b>
    /// 						If a seller wanted to disable the Best Offer auto-accept and/or Best Offer auto-reject feature when revising or relisting an item, the full path to one or both of these two corresponding fields would be provided in a <b>DeletedField</b> tag, like the following: <br/>
    /// 						<pre><code>
    /// 						<DeletedField>Item.ListingDetails.MinimumBestOfferPrice</DeletedField>
    /// 						</code></pre>
    /// 						<br>
    /// 							<span class="tablenote"><b>Note: </b> This field will stop being returned in <b>GetItemTransactions</b> and <b>GetSellerTransactions</b> on January 31, 2024.
    /// 						</span>
    /// 					
    /// </remarks>

	public AmountType MinimumBestOfferPrice { get; set; }
    /// <summary>
    /// AddItemAddItemsAddFixedPriceItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is needed if the seller is selling a motor vehicle through a Motors Local Listing. The string value supplied in this field actually sets the radius of the area (in miles) in which the vehicle will be available and exposed to interested local buyers. The seller's supplied <b>PostalCode</b> or <b>Location</b> field value will be used as the center point for this radius.
    /// 						<br/><br/>
    /// 						There is a closed set of radius values that can be set in this field, and it depends on the seller's subscription level. The user can call
    /// 						<b>GetCategoryFeatures</b>, including <code>LocalListingDistances</code> as a <b>FeatureID</b> value to retrieve the local listing distances supported by a given site, category, and Local Market subscription level.
    /// 					
    /// </remarks>

	public string LocalListingDistance { get; set; }
    /// <summary>
    /// GetBidderListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This URL takes you to the same View Item page as ViewItemURL,
    /// 						but this URL is optimized to support natural search.
    /// 						That is, this URL is designed to make items on eBay easier to find via
    /// 						popular Internet search engines. The URL includes the item title along with other optimizations. To
    /// 						note, "?" (question mark) optimizes to "_W0QQ", "&" (ampersand) optimizes
    /// 						to "QQ", and "=" (equals sign) optimizes to "Z".
    /// 						<br><br>
    /// 						If you are an eBay affiliate, use this URL to promote your affiliate
    /// 						information.
    /// 						<br><br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 							This URL may include additional query parameters that don't appear in <b>ViewItemURL</b>
    /// 							and vice versa. You should not modify the query syntax.  For example, eBay won't
    /// 							recognize the URL if you change QQ to ?.
    /// 						</span>
    /// 						<span class="tablenote"><b>Note: </b> This field will stop being returned in <b>GetItemTransactions</b> and <b>GetSellerTransactions</b> on January 31, 2024.
    /// 						</span>
    /// 					
    /// </remarks>

	public string ViewItemURLForNaturalSearch { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsReviseFixedPriceItemReviseItemRelistItemRelistFixedPriceItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemNo
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The price at which Best Offers are automatically accepted. Similar in use to <b>MinimumBestOfferPrice</b>. If a buyer submits a Best Offer that is at or above this value, the offer is automatically accepted by the seller. This applies only to items listed in categories that support the <b>BestOfferAutoAcceptPrice</b> feature.
    /// 						<br/><br/>
    /// 						For this setting to have an effect, the Best Offer feature must be
    /// 						enabled for the listing, and only the seller who listed the item will see
    /// 						<b>BestOfferAutoAcceptPrice</b> in a call response.
    /// 						<br/><br/>
    /// 						<b>For Revise and Relist calls:</b>
    /// 						If a seller wanted to disable the Best Offer Auto-Accept and/or Best Offer Auto-Reject feature when revising or relisting an item, the full path to one or both of these two corresponding fields would be provided in a <b>DeletedField</b> tag, like the following: <br/>
    /// 						<pre><code>
    /// 						<DeletedField>Item.ListingDetails.BestOfferAutoAcceptPrice</DeletedField>
    /// 						</code></pre>
    /// 					
    /// </remarks>

	public AmountType BestOfferAutoAcceptPrice { get; set; }
    /// <summary>
    /// GetItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is only returned if the item was ended early (before listing duration expired) by the seller (through an API call or on the Web site) or ended administratively by eBay. The value in this field indicates the seller's reason for ending the
    /// 						listing early.
    /// 					
    /// </remarks>

	public EndReasonCodeType? EndingReason { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type used by the <b>ListingDurations</b> container that is returned for each listing type supported for the eBay site. <b>ListingDurations</b> container shows the supported listing duration times for each listing type.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ListingDurationDefinitionType {

#region 属性
    /// <summary>
    /// ListingDurationCodeType
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						All values returned in the <b>Duration</b> fields indicate the listing durations that are supported for that listing type. The allowed durations vary according to the type of listing. The value <code>GTC</code> means Good 'Til Canceled. The complete list of enumeration values that may be returned in this field is shown in <b>ListingDurationCodeType</b>.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("Duration")]

	public System.Collections.Generic.List<string> Duration { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					The integer value in this attribute identifies the type of listing to which the set of durations applies. To match a <b>durationSetID</b> value to a specific listing type, see the <b>Category.ListingDuration</b> field in the call response.
    /// 				
    /// </remarks>

	public int? durationSetID { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				A type used by the <b>ListingDurations</b> container node that is returned in the response of <b>GetCategoryFeatures</b> call. A <b>ListingDurations</b> container is returned for each listing type supported for the eBay site, and the supported listing duration times for those listing types.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ListingDurationDefinitionsType {

#region 属性
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					 A <b>ListingDurations</b> container is returned for each listing type supported for the eBay site, and the supported listing duration times for those listing types. The <b>durationSetID</b> attribute value indicates the listing type.
    /// 				
    /// </remarks>
[System.Xml.Serialization.XmlElement("ListingDuration")]

	public System.Collections.Generic.List<ListingDurationDefinitionType> ListingDuration { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					This attribute indicates the current version of the Listing Durations data. This can be helpful to let users know when modifications have been made to Listing Durations.
    /// 				
    /// </remarks>

	public int? Version { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Identifies the type of listing as an attribute on the <b>ListingDuration</b> node.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ListingDurationReferenceType {

#region 属性
[System.Xml.Serialization.XmlText(DataType="int")]

	public int Value { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllUnknown, Auction, HalfConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 							The type of listing a set of durations describes.
    /// 						
    /// </remarks>
[System.Xml.Serialization.XmlAttribute]

	public ListingTypeCodeType type { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
///  
///  			Defines the Listing Enhancement Duration feature.
/// 			If the field is present, the corresponding feature applies to the category.
/// 			The field is returned as an empty element (i.e., a boolean value is not returned).
///  			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ListingEnhancementDurationDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				<span class="tablenote"><b>Note:</b>
/// 					This type is no longer applicable, as the Featured Gallery listing feature is being deprecated for all sites. If a seller attempts to add Featured Gallery as a listing enhancement, it is allowed, but a warning will be returned announcing the deprecation of the feature. This feature was wired off in September 2019.
/// 				</span>
/// 				<br>
/// 				Type used by the <b>GalleryFeaturedDurations</b> container that is returned at the <b>SiteDefaults</b> and <b>Category</b> level in a <b>GetCategoryFeatures</b> response. <b>GalleryFeaturedDurations</b> container consists of the supported time durations that a picture gallery can be featured
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ListingEnhancementDurationReferenceType {

#region 属性
    /// <summary>
    /// ListingEnhancementDurationCodeType
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						<span class="tablenote"><b>Note:</b>
    /// 							<b>Duration</b> fields are currently still being returned in <b>GetCategoryFeatures</b> response, but Featured Gallery listing feature is deprecated for all sites. If a seller attempts to add Featured Gallery as a listing enhancement, it is allowed, but a warning will be returned announcing the deprecation of the feature.
    /// 						</span>
    /// 						<br>
    /// 						Each returned <b>Duration</b> field indicates a supported time duration that a picture gallery can be featured.
    /// 						The <code>Lifetime</code> value indicates that the Featured Gallery enhancement will be active for the lifetime of the listing.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("Duration")]

	public System.Collections.Generic.List<string> Duration { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// Border, Highlight, ProPack, GiftIcon
/// </summary>
/// <remarks>
/// 
/// 				This type is used by the <b>ListingFeatureDetails</b> container in the <b>GeteBayDetails</b> response. This container indicates the listing features that are enabled or disabled for an eBay site.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ListingFeatureDetailsType {

#region 属性
    /// <summary>
    /// GeteBayDetailsAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						The enumeration value returned in this field indicates whether or not the Bold Title featured is enabled for the eBay site. If this feature is available for an eBay site, the seller can pass in <code>BoldTitle</code> as an enumeration value in the <b>ListingEnhancement</b> field of an Add/Revise/Relist call.
    /// 					
    /// </remarks>

	public BoldTitleCodeType? BoldTitle { get; set; }
    /// <summary>
    /// GeteBayDetailsAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						The Picture Border feature is no longer available on any eBay marketplace site, so this value should not be used in Add/Revise/Relist calls, and will not be returned in 'Get' calls.
    /// 						</span>
    /// 						<br>
    /// 						Defines the availability of the Picture Border feature for the site.
    /// 					
    /// </remarks>

	public BorderCodeType? Border { get; set; }
    /// <summary>
    /// GeteBayDetailsAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						The Highlight feature is no longer available on any eBay marketplace, so this value should not be used in Add/Revise/Relist calls, and will not be returned in 'Get' calls.
    /// 						</span>
    /// 						<br>
    /// 						Defines the availability of the Highlight feature for the site.
    /// 					
    /// </remarks>

	public HighlightCodeType? Highlight { get; set; }
    /// <summary>
    /// GeteBayDetailsAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						The Gift Icon feature is no longer available on any eBay marketplace.
    /// 						</span>
    /// 						<br>
    /// 						Defines the availability of the Gift Icon feature for the site.
    /// 					
    /// </remarks>

	public GiftIconCodeType? GiftIcon { get; set; }
    /// <summary>
    /// GeteBayDetailsAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						<span class="tablenote"><b>Note:</b>
    /// 							Home Page Featured is no longer available on any eBay marketplace.
    /// 						</span>
    /// 						<br>					
    /// 						The enumeration value returned in this field indicates whether or not the Home Page Featured feature is enabled for the eBay site. If this feature is available for an eBay site, the seller can pass in <code>HomePageFeatured</code> as an enumeration value in the <b>ListingEnhancement</b> field of an Add/Revise/Relist call.
    /// 					
    /// </remarks>

	public HomePageFeaturedCodeType? HomePageFeatured { get; set; }
    /// <summary>
    /// GeteBayDetailsAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						<span class="tablenote"><b>Note:</b>
    /// 							Featured First is no longer available on any eBay marketplace.
    /// 						</span>
    /// 						<br>	
    /// 						The enumeration value returned in this field indicates whether or not the Featured First feature is enabled for the eBay site. As of October 2017, this listing feature is only available to Top-Rated Sellers on the Germany site.
    /// 					
    /// </remarks>

	public FeaturedFirstCodeType? FeaturedFirst { get; set; }
    /// <summary>
    /// GeteBayDetailsAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						<span class="tablenote"><b>Note:</b>
    /// 							Featured Plus is no longer available on any eBay marketplace.
    /// 						</span>
    /// 						<br>						
    /// 						The enumeration value returned in this field indicates whether or not the Featured Plus feature is enabled for the eBay site.
    /// 					
    /// </remarks>

	public FeaturedPlusCodeType? FeaturedPlus { get; set; }
    /// <summary>
    /// GeteBayDetailsAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						The Pro Pack Bundle feature is no longer available on any eBay marketplace.
    /// 						</span>
    /// 						<br>
    /// 						Defines the availability of the Pro Pack Bundle for the site.
    /// 					
    /// </remarks>

	public ProPackCodeType? ProPack { get; set; }
    /// <summary>
    /// GeteBayDetailsDetailLevel: none, ReturnSummary, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 				
    /// 						Returns the current version of details.
    /// 					
    /// </remarks>

	public string DetailVersion { get; set; }
    /// <summary>
    /// GeteBayDetailsDetailLevel: none, ReturnSummary, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 						
    /// 						Gives the time in GMT that the feature flags for the
    /// 						details were last updated.
    /// 					
    /// </remarks>

	public System.DateTime? UpdateTime { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>ListingStartPriceDetails</b> container returned in
/// 				<b>GeteBayDetails</b>. The <b>ListingStartPriceDetails</b>
/// 				container lists the minimum start price for auction listings, the minimum sale price
/// 				for fixed-price listings, and the minimum percentage value that a Buy It Now price for
/// 				an auction listing must be above the minimum start price for that same listing.
/// 				<br><br>
/// 				The <b>ListingStartPriceDetails</b> container is returned if
/// 				<b>ListingStartPriceDetails</b> is included as a <b>DetailName</b>
/// 				filter in the request, or if no <b>DetailName</b> filters are used in the request.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ListingStartPriceDetailsType {

#region 属性
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This value is a string description of the listing type for which the pricing data
    /// 						is intended, such as "Pricing for the auction-like listings".
    /// 					
    /// </remarks>

	public string Description { get; set; }
    /// <summary>
    /// Chinese, FixedPriceItem
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This value indicates the listing type of the listing, and is a value defined in
    /// 						<b>ListingTypeCodeType</b> enumerated type. The only possible values for
    /// 						this field are 'Chinese' (auction listing) and 'FixedPriceItem'.
    /// 					
    /// </remarks>

	public ListingTypeCodeType? ListingType { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						For auction listings, the <b>StartPrice</b> indicates the lowest dollar
    /// 						value that can be set for the item's Starting bid.
    /// 						<br><br>
    /// 						For fixed-price listings, the <b>StartPrice</b> indicates the lowest
    /// 						dollar value that can be set for the item's sale price.
    /// 					
    /// </remarks>

	public AmountType StartPrice { get; set; }
    /// <summary>
    /// GeteBayDetailsDetailLevel: none, ReturnSummary, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Returns the latest version number for this field. The version can be used to
    /// 						determine if and when to refresh cached client data.
    /// 					
    /// </remarks>

	public string DetailVersion { get; set; }
    /// <summary>
    /// GeteBayDetailsDetailLevel: none, ReturnSummary, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Gives the time in GMT that the feature flags for the
    /// 						details were last updated. This timestamp can be used to determine
    /// 						if and when to refresh cached client data.
    /// 					
    /// </remarks>

	public System.DateTime? UpdateTime { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is only returned and applicable for auction listings.
    /// 						<br><br>
    /// 						This float value indicates the minimum percentage value that a Buy It Now price for
    /// 						an auction listing must be above the Starting bid price for that same listing.
    /// 						<br><br>
    /// 						On the US eBay Motors site (Site ID 100), this field only applies to the Parts and
    /// 						Accessories categories.
    /// 					
    /// </remarks>

	public float? MinBuyItNowPricePercent { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
///  
/// 				Defines the LocalListingDistancesNonSubscription feature. This feature displays all the supported local 
/// 				listing distances for items listed by sellers who have not subscribed to either Local Market for Vehicles 
/// 				or Local Market for Specialty Vehicles.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class LocalListingDistancesNonSubscriptionDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
///  
/// 				Defines the LocalListingDistancesRegular feature. This feature displays all the supported local listing 
/// 				distances for items listed by sellers subscribed to Local Market for Vehicles.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class LocalListingDistancesRegularDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
///  
/// 				Defines the LocalListingDistancesSpecialty feature. This feature displays the supported local listing 
/// 				distances for items listed by sellers subscribed to Local Market for Specialty Vehicles.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class LocalListingDistancesSpecialtyDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
///  
/// 				Defines the AdFormatEnabled feature. If the field is present, the corresponding feature applies to the category. This field is returned as an empty element (e.g., a boolean value is not returned).
/// 				Added for Local Market users.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class LocalMarketAdFormatEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Indicates whether automatic acceptance of Best Offers is allowed for this category for Motors Local Market listings. Returned only if this category overrides the site default.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class LocalMarketAutoAcceptEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Indicates whether automatic declination of Best Offers is allowed for this category for Motors Local Market listings. Returned only if this category overrides the site default.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class LocalMarketAutoDeclineEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Indicates whether Contact Seller is enabled for Classified Ads.
/// 				Added for Local Market users.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class LocalMarketBestOfferEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Indicates whether the category supports the use of the company name to contact
/// 				the seller for Classified Ad format listings. Added for Local Market users.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class LocalMarketCompanyNameEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Indicates whether the category supports using an address when 
/// 				contacting the seller for Classified Ad format listings. 
/// 				Added for Local Market users.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class LocalMarketContactByAddressEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Indicates whether the category supports the use of email to contact the
/// 				seller for Classified Ad format listings.Added for Local market users.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class LocalMarketContactByEmailEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Indicates whether the category supports using the telephone 
/// 				as a contact method.
/// 				Added for Local Market users.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class LocalMarketContactByPhoneEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Indicates whether counter offers to Best Offers are allowed for this category for Motors Local Market listings. Returned only if this category overrides the site default.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class LocalMarketCounterOfferEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
///  
/// 				Defines the LocalMarketNonSubscription feature. If the field is present, 
/// 				the corresponding feature applies to the category. The field is returned 
/// 				as an empty element (i.e., a boolean value is not returned).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class LocalMarketNonSubscriptionDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Indicates whether the category supports the use of payment method checkOut
/// 				for Classified Ad format listings. Added for Local market users.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class LocalMarketPaymentMethodCheckOutEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Indicates which phone option the category supports when contacting
/// 				the seller about listings in Classified Ad format.
/// 				Added for Local Market users.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class LocalMarketPhoneCountDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
///  
/// 				Defines the LocalMarketPremiumSubscription feature. If this field is 
/// 				present, the corresponding feature applies to the category. The field 
/// 				is returned as an empty element (i.e., a boolean value is not returned).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class LocalMarketPremiumSubscriptionDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
///  
/// 				Defines the LocalMarketRegularSubscription feature. If this field 
/// 				is present, the corresponding feature applies to the category. The 
/// 				field is returned as an empty element (i.e., a boolean value is not 
/// 				returned). A subscription for Local Market for Vehicles will be 
/// 				returned by GetUser if a dealer has subscribed to any of the following 
/// 				Local Market Regular sub-types: Vehicles Regular Six Months, 
/// 				Vehicles Regular Special Promotion, Vehicles Regular Multistore 
/// 				Level S, Vehicles Regular Multistore Level M, or Vehicles Regular 
/// 				Multistore Level L. Each of these sub-types has a separate discount 
/// 				and billing cycle.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class LocalMarketRegularSubscriptionDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Defines the SellerContactDetailsEnabled feature. If the field is 
/// 				present, the category allows retrieval of seller-level contact 
/// 				information. The field is returned as an empty element 
/// 				(e.g., a boolean value is not returned).
/// 				Added for Local Market users.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class LocalMarketSellerContactDetailsEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Indicates if shipping options are available for Classified Ad 
/// 				format listings in the category.
/// 				Added for Local Market users.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class LocalMarketShippingMethodEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
///  
/// 				Defines the LocalMarketSpecialitySubscription feature. If this field 
/// 				is present, the corresponding feature applies to the category. The field is returned as an empty element (i.e., a boolean value is not returned).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class LocalMarketSpecialitySubscriptionDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Indicates which address option the category supports for Classified Ad 
/// 				format listings.
/// 				Added for Local Market users.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class LocalMarketStreetCountDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
///                 Type that provides the name and contact detail information for the manufacturer of the item.
/// 				<br />
/// 				<span class="tablenote"><b>Note: </b> As a part of General Product Safety Regulation (GPSR) requirements effective on December 13th, 2024, sellers operating in, or shipping to, EU-based countries or Northern Ireland are conditionally required to provide product manufacturer information in their eBay listings. For more information on GPSR, see <a href = "https://www.ebay.com/sellercenter/resources/general-product-safety-regulation" target="_blank">General Product Safety Regulation (GPSR)</a>.</span>		
///             
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ManufacturerType {

#region 属性
    /// <summary>
    /// 100 characters for this field
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemConditionally
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///                         The company name of the product manufacturer.
    /// 						<br />
    ///                     
    /// </remarks>

	public string CompanyName { get; set; }
    /// <summary>
    /// 180 characters for this field
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemConditionally
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///                         The first line of the product manufacturer's street address.
    /// 						<br />
    ///                     
    /// </remarks>

	public string Street1 { get; set; }
    /// <summary>
    /// 180 characters for this field
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemNo
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///                         The second line of the product manufacturer's street address. This field is not always used, but can be used for secondary address information such as 'Suite Number' or 'Apt Number'.
    /// 						<br />
    ///                     
    /// </remarks>

	public string Street2 { get; set; }
    /// <summary>
    /// 64 characters for this field
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemConditionally
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///                         The city of the product manufacturer's street address.
    /// 						<br />
    ///                     
    /// </remarks>

	public string CityName { get; set; }
    /// <summary>
    /// 64 characters for this field
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemConditionally
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///                         The state or province of the product manufacturer's street address.
    /// 						<br />
    ///                     
    /// </remarks>

	public string StateOrProvince { get; set; }
    /// <summary>
    /// 9 characters for this field
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemConditionally
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///                         The postal code of the product manufacturer's street address.
    /// 						<br />
    ///                     
    /// </remarks>

	public string PostalCode { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemConditionally
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///                         The two letter <a href="https://www.iso.org/iso-3166-country-codes.html" target="_blank">ISO 3166-1</a> standard abbreviation of the country of the product manufacturer's address.
    ///                     
    /// </remarks>

	public CountryCodeType? Country { get; set; }
    /// <summary>
    /// 64 characters for this field
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemConditionally
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///                         The product manufacturer's business phone number. 
    /// 						<br />
    ///                     
    /// </remarks>

	public string Phone { get; set; }
    /// <summary>
    /// 180 characters for this field
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemConditionally
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///                         The product manufacturer's business email address. 
    /// 						<br />
    ///                     
    /// </remarks>

	public string Email { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Describes an individual mark-up or mark-down event. eBay will automatically
/// 				mark an application as down if attempts to deliver a notification fail
/// 				repeatedly. eBay may mark an application down manually under certain
/// 				circumstances.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class MarkUpMarkDownEventType {

#region 属性
    /// <summary>
    /// GetNotificationsUsageConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Whether the application has been marked up or marked down.
    /// 					
    /// </remarks>

	public MarkUpMarkDownEventTypeCodeType? Type { get; set; }
    /// <summary>
    /// GetNotificationsUsageConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Time when the application was marked up or marked down.
    /// 					
    /// </remarks>

	public System.DateTime? Time { get; set; }
    /// <summary>
    /// GetNotificationsUsageConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Describes how the application was marked down, automatically or
    /// 						manually. When an application is automatically marked down, eBay will
    /// 						ping the application periodically, and if communication is restored, eBay
    /// 						will automatically mark the application up. If your application is marked
    /// 						down manually, you must contact eBay Developer Support to get your
    /// 						application marked up. A Reason is not provided for mark up events.
    /// 					
    /// </remarks>

	public string Reason { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type used by the <b>MaxFlatShippingCostCBTExempt</b> field that is returned under the <b>FeatureDefinitions</b> container. The <b>MaxFlatShippingCostCBTExempt</b> field is returned as empty  and indicates that a maximum flat-rate shipping cost is not imposed by the corresponding eBay site if the item is being shipped internationally. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <b>MaxFlatShippingCostCBTExempt</b> is not one of the values passed into those <b>FeatureID</b> fields.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class MaxFlatShippingCostCBTExemptDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type used by the <b>MaxFlatShippingCost</b> field that is returned under the <b>FeatureDefinitions</b> container. The <b>MaxFlatShippingCost</b> field is returned as empty and indicates that a maximum flat-rate shipping cost threshold is enforced for some categories on the corresponding eBay site. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <b>MaxFlatShippingCost</b> is not one of the values passed into those <b>FeatureID</b> fields.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class MaxFlatShippingCostDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type used by the <b>MaxGranularFitmentCount</b> field that is returned under the <b>FeatureDefinitions</b> container. The <b>MaxGranularFitmentCount</b> field is returned as empty and indicates that a maximum parts compatibility threshold is applicable to some motor vehicle parts and accessory categories on the corresponding eBay site. This field will not be returned if one or more <b>FeatureID</b> fields are included in the call request and <b>MaxGranularFitmentCount</b> is not one of the values passed into those <b>FeatureID</b> fields.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class MaxGranularFitmentCountDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Defines the maximum limit on compatible applications as part of the parts
/// 				compatibility feature. If the field is present, the corresponding feature applies
/// 				to the site. The field is returned as an empty element (e.g., a boolean value is
/// 				not returned).
/// 				<br><br>
/// 				Parts compatibility listings contain information to determine the assemblies with
/// 				which a part is compatible. For example, an automotive part or accessory listed
/// 				witih parts compatibility can be matched with vehicles (e.g., specific years,
/// 				makes, and models) with which the part or accessory can  be used.
/// 				<br><br>
/// 				There are two ways to enter parts compatibility: by application and by
/// 				specification. 
/// 				<ul>
/// 				<li> Entering parts compatibility by application specifies the assemblies
/// 				(e.g., a specific year, make, and model of car) to which the item applies. This can
/// 				be done automatically by listing with a catalog product that supports parts
/// 				compatibility, or manually, using <b
/// 				class="con">Item.ItemCompatibilityList</b> when listing or revising an
/// 				item. </li>
/// 				<li>Entering parts compatibility by specification involves specifying the
/// 				part's relevant dimensions and characteristics necessary to determine the
/// 				assemblies with which the part is compatible (e.g., Section Width, Aspect Ratio,
/// 				Rim Diammeter, Load Index, and Speed Rating values for a tire) using
/// 				attributes.</li>
/// 				</ul>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class MaxItemCompatibilityDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Although the <b>MaximumBuyerPolicyViolations</b> container is still returned in <b>GeteBayDetails</b>, a Maximum Buyer Policy Violations threshold value can no longer be set at the account or listing level, so this type is no longer applicable.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class MaximumBuyerPolicyViolationsDetailsType {

#region 属性
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						As a Maximum Buyer Policy Violations threshold value can no longer be set at the account or listing level, this field is no longer applicable.
    /// 						
    /// </remarks>

	public NumberOfPolicyViolationsDetailsType NumberOfPolicyViolations { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						As a Maximum Buyer Policy Violations threshold value can no longer be set at the account or listing level, this field is no longer applicable.
    /// 						
    /// </remarks>
[System.Xml.Serialization.XmlElement("PolicyViolationDuration")]

	public System.Collections.Generic.List<PolicyViolationDurationDetailsType> PolicyViolationDuration { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is deprecated as sellers can no longer set a buyer policy violation threshold Buyer Requirement at the listing-level in Add/Revise/Relist calls.
/// 				
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class MaximumBuyerPolicyViolationsType {

#region 属性
    /// <summary>
    /// 4
    /// 
    /// 1065
    /// NoOp
    /// 1065
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is deprecated.
    /// 						
    /// </remarks>

	public int? Count { get; set; }
    /// <summary>
    /// Days_30
    /// 
    /// 1065
    /// NoOp
    /// 1065
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is deprecated.
    /// 						
    /// </remarks>

	public PeriodCodeType? Period { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is used by the <b>MaximumItemRequirements</b> container that is returned under the <b>BuyerRequirementDetails</b> in the <b>GeteBayDetails</b>. The Maximum Item Requirement settings of Buyer Requirements allow a seller to restrict the quantity of a line item that may be purchased during a consecutive 10-day period.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class MaximumItemRequirementsDetailsType {

#region 属性
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Values returned in this field indicate the maximum quantity of an order line item that one buyer can purchase during a consecutive 10-day period.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("MaximumItemCount")]

	public System.Collections.Generic.List<int> MaximumItemCount { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						A Minimum Feedback Score threshold can be added to the Maximum Item Requirement rule if the seller only wishes to restrict possible buyers with low Feedback scores. The values returned in this field indicate the minimum Feedback Score thresholds that can be used.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("MinimumFeedbackScore")]

	public System.Collections.Generic.List<int> MinimumFeedbackScore { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type used by the <b>MaximumItemRequirements</b> container to specify the maximum quantity of an order line item that a prospective buyer may purchase during any given 10-day period.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class MaximumItemRequirementsType {

#region 属性
    /// <summary>
    /// GetBidderListGetSellerListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAllConditionally
    /// AddSellingManagerTemplate
    /// ReviseSellingManagerTemplate
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field indicates the maximum quantity of a line item that one prospective buyer may purchase from the listing. 
    /// 						<br/><br/>
    /// 						This buyer requirement is only applicable to fixed-price listings where multiple quantity is available for purchase.
    /// 						<br/><br/>
    /// 						If the <b>MinimumFeedbackScore</b> field is also set/returned, the maximum quantity threshold value will only apply to those prospective buyers who don't meet or exceed the minimum Feedback score threshold returned in that field. If the <b>MinimumFeedbackScore</b> field not set/returned, the maximum quantity threshold value will apply to all prospective buyers.
    /// 						<br/><br/>
    /// 						This field is always returned along with the <b>MaximumItemRequirements</b> container.
    /// 					
    /// </remarks>

	public int? MaximumItemCount { get; set; }
    /// <summary>
    /// GetBidderListGetSellerListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAllConditionally
    /// AddSellingManagerTemplate
    /// ReviseSellingManagerTemplate
    /// </summary>
    /// <remarks>
    /// 
    /// 						If this field is returned, it indicates that the seller has set a maximum quantity threshold value, but this maximum quantity threshold value (returned in <b>MaximumItemCount</b> will only apply to those prospective buyers who don't meet or exceed the minimum Feedback score threshold returned in this field. If this field is not returned, the maximum quantity threshold value will apply to all prospective buyers.
    /// 					
    /// </remarks>

	public int? MinimumFeedbackScore { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// GeteBayDetailsConditionally
/// </summary>
/// <remarks>
/// 
/// 				Type defining the <b>MaximumUnpaidItemStrikesCount</b> container that is returned 
/// 				in the <b>GeteBayDetails</b> response. The <b>MaximumUnpaidItemStrikesCount</b> 
/// 				container consists of multiple <b>Count</b> fields with values that can be 
/// 				used in the <b>BuyerRequirementDetails.MaximumUnpaidItemStrikesInfo.Count</b> 
/// 				field when using the Trading API to add, revise, or relist an item.
/// 				<br><br>
/// 				The <b>Item.MaximumUnpaidItemStrikesInfo</b> container in Add/Revise/Relist 
/// 				API calls is used to block buyers with unpaid item strikes equal to or exceeding
/// 				the specified <b>Count</b> value during the specified <b>Period</b> 
/// 				value from buying/bidding on the item.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class MaximumUnpaidItemStrikesCountDetailsType {

#region 属性
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Each value returned in each <b>MaximumUnpaidItemStrikesCount.Count</b> field
    /// 						can be used in the <b>BuyerRequirementDetails.MaximumUnpaidItemStrikesInfo.Count</b> 
    /// 						field when using the Trading API to add, revise, or relist an item. 					
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("Count")]

	public System.Collections.Generic.List<int> Count { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// GeteBayDetailsConditionally
/// </summary>
/// <remarks>
/// 
/// 				Type used by the <b>MaximumUnpaidItemStrikesDuration</b> container that is returned in <b>GeteBayDetails</b>. The <b>MaximumUnpaidItemStrikesDuration</b> container indicates the periods of time that can be used when evaluating how many unpaid item strikes against a buyer during this given period will exclude the prospective buyer from purchasing the line item.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class MaximumUnpaidItemStrikesDurationDetailsType {

#region 属性
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The period is the number of days (last 60 days, last 180 days, etc.)
    /// 						during which the buyer's unpaid item strikes are calculated.
    /// 						This is applicable only to sellers.
    /// 					
    /// </remarks>

	public PeriodCodeType? Period { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The description of the period, such as 'month', 'quarter', or 'half a year'.
    /// 						The data in this field can be used as a label in your application's display.
    /// 						This is applicable only to sellers.
    /// 					
    /// </remarks>

	public string Description { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Details of a buyer's maximum unpaid item strikes in a pre-defined time period. This is applicable only to sellers.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class MaximumUnpaidItemStrikesInfoDetailsType {

#region 属性
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The number of the maximum unpaid item strikes. This is applicable only to sellers.
    /// 					
    /// </remarks>

	public MaximumUnpaidItemStrikesCountDetailsType MaximumUnpaidItemStrikesCount { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Range of time used to determine maximum unpaid item count. This is applicable only to sellers.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("MaximumUnpaidItemStrikesDuration")]

	public System.Collections.Generic.List<MaximumUnpaidItemStrikesDurationDetailsType> MaximumUnpaidItemStrikesDuration { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>MaximumUnpaidItemStrikesInfo</b> container, which indicates if the seller has enabled a setting to block prospective buyers who have unpaid items and/or buyer-inititated cancellations on their account exceeding the value set in the <b>Count</b>
/// 				field during a specified time period (set in the <b>Period</b> field).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class MaximumUnpaidItemStrikesInfoType {

#region 属性
    /// <summary>
    /// GetBidderListGetSellerListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// AddSellingManagerTemplate
    /// ReviseSellingManagerTemplate
    /// </summary>
    /// <remarks>
    /// 
    /// 						This integer value indicates the maximum number of unpaid items and/or buyer-initiated cancellations that a prospective buyer is allowed to have during a specified time period (<b>MaximumUnpaidItemStrikesInfo.Period</b>) before being blocked from buying or bidding on the item.
    /// 					
    /// </remarks>

	public int? Count { get; set; }
    /// <summary>
    /// GetBidderListGetSellerListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// AddSellingManagerTemplate
    /// ReviseSellingManagerTemplate
    /// </summary>
    /// <remarks>
    /// 
    /// 						This enumerated value defines the length of time over which a prospective buyer's unpaid items and/or buyer-initiated cancellations will be counted. If the prospective buyer's number of unpaid items and/or buyer-initiated cancellations during this defined period exceeds the value set in the <b>MaximumUnpaidItemStrikesInfo.Count</b> field, that prospective buyer is blocked from buying/bidding on the item. <br/><br/> If the <b>Count</b> value is 2, and the specified <b>Period</b> is <code>Days_30</code> (counting back 30 days from the present day), any prospective buyer that has had three or more unpaid items and/or buyer-initiated cancellations is blocked from buying/bidding on the item.
    /// 					
    /// </remarks>

	public PeriodCodeType? Period { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 			Container for message metadata.
/// 		
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class MemberMessageExchangeType {

#region 属性
    /// <summary>
    /// GetMemberMessagesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					The item about which the question was asked. Returned if the parent container is returned.
    /// 				
    /// </remarks>

	public ItemType Item { get; set; }
    /// <summary>
    /// GetAdFormatLeadsDetailLevel: ReturnAllConditionally
    /// GetMemberMessagesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					Contains all the information about the question being asked.  Returned if the
    /// 					parent container is returned.
    /// 				
    /// </remarks>

	public MemberMessageType Question { get; set; }
    /// <summary>
    /// GetAdFormatLeadsDetailLevel: ReturnAllConditionally
    /// GetMemberMessagesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					An answer to the question. Returned if the parent container is returned.
    /// 					<br/><br/>
    /// 					For GetAdFormatLeads, returned if the seller responded to the
    /// 					lead's question. Contains the body of the seller's response
    /// 					message.
    /// 				
    /// </remarks>
[System.Xml.Serialization.XmlElement("Response")]

	public System.Collections.Generic.List<string> Response { get; set; }
    /// <summary>
    /// GetMemberMessagesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					Status of the message. Returned if the parent container is returned.
    /// 				
    /// </remarks>

	public MessageStatusTypeCodeType? MessageStatus { get; set; }
    /// <summary>
    /// GetAdFormatLeadsDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					Date the message was created. Returned if the parent container is returned.
    /// 				
    /// </remarks>

	public System.DateTime? CreationDate { get; set; }
    /// <summary>
    /// GetMemberMessagesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					Date the message was last modified. Returned if the parent container is returned.
    /// 				
    /// </remarks>

	public System.DateTime? LastModifiedDate { get; set; }
    /// <summary>
    /// GetMemberMessagesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 				 	Media details stored as part of the message.
    /// 				
    /// </remarks>
[System.Xml.Serialization.XmlElement("MessageMedia")]

	public System.Collections.Generic.List<MessageMediaType> MessageMedia { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 			Container for individual message information.
/// 		
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class MemberMessageType {

#region 属性
    /// <summary>
    /// GetMemberMessagesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					Type of message being retrieved. Note that some message
    /// 					types can only be created via the eBay Web site.
    /// 				
    /// </remarks>

	public MessageTypeCodeType? MessageType { get; set; }
    /// <summary>
    /// AddMemberMessageAAQToPartnerYes
    /// GetMemberMessagesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					Context of the question (e.g. Shipping, General).
    /// 				
    /// </remarks>

	public QuestionTypeCodeType? QuestionType { get; set; }
    /// <summary>
    /// omitted
    /// AddMemberMessageAAQToPartnerAddMemberMessageRTQAddMemberMessagesAAQToBidderNo
    /// </summary>
    /// <remarks>
    /// 
    /// 					Indicates if a copy of the messages is to be emailed 
    /// 					to the sender. If omitted, this defaults to whatever
    /// 					the user set in preferences.
    /// 				
    /// </remarks>

	public bool? EmailCopyToSender { get; set; }
    /// <summary>
    /// AddMemberMessageRTQNo
    /// GetMemberMessagesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					Indicates if the member message is viewable in the item listing.
    /// 				
    /// </remarks>

	public bool? DisplayToPublic { get; set; }
    /// <summary>
    /// GetMemberMessagesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					The eBay user ID of the person who asked the question or sent
    /// 					the message.
    /// 				
    /// </remarks>

	public string SenderID { get; set; }
    /// <summary>
    /// GetMemberMessagesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					SenderEmail contains the static email address of an eBay member,
    /// 					used within the "reply to"
    /// 					email address when the eBay member sends a message.
    /// 					(Each eBay member is assigned a static alias. The alias is
    /// 					used within a static email address.)
    /// 					SenderEmail is returned if MessageType is AskSellerQuestion.
    /// 					SenderEmail is also returned in the AskSellerQuestion notification.
    /// 					The following functionality of this field has been deprecated:
    /// 					return of a dynamic email address.
    /// 				
    /// </remarks>

	public string SenderEmail { get; set; }
    /// <summary>
    /// AddMemberMessageAAQToPartnerAddMemberMessageRTQAddMemberMessagesAAQToBidderYes
    /// AddMemberMessageRTQGetMemberMessagesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					Recipient's eBay user ID. For
    /// 					AddMemberMessagesAAQToBidder, it must be the seller of an
    /// 					item, that item's bidder, or a user who has made an
    /// 					offer on that item using Best Offer. Note: maxOccurs is a shared schema
    /// 					element and needs to be unbounded for AddMemberMessagesAAQToBidder.
    /// 					For AddMemberMessageRTQ, this field is mandatory if ItemID is not in the request.
    /// 					For all other uses, there can only be one RecipientID.
    /// 				
    /// </remarks>
[System.Xml.Serialization.XmlElement("RecipientID")]

	public System.Collections.Generic.List<string> RecipientID { get; set; }
    /// <summary>
    /// GetMemberMessagesConditionally
    /// AddMemberMessageAAQToPartnerYes
    /// </summary>
    /// <remarks>
    /// 
    /// 					Subject of this email message.
    /// 				
    /// </remarks>

	public string Subject { get; set; }
    /// <summary>
    /// 2000AddMemberMessageAAQToPartnerAddMemberMessageRTQYes
    /// 1000AddMemberMessagesAAQToBidderYes
    /// GetAdFormatLeadsDetailLevel: ReturnAllConditionally
    /// 4000GetMemberMessagesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					Content of the message is input into this string field. HTML formatting is not
    /// 					allowed in the body of the message. If plain HTML is used, an error occurs and the 
    /// 					message will not go through. If encoded HTML is used, the message may go through but 
    /// 					the formatting will not be successful, and the recipient of the message will just 
    /// 					see the HTML formatting tags.
    /// 				
    /// </remarks>

	public string Body { get; set; }
    /// <summary>
    /// GetMemberMessagesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					ID that uniquely identifies a message for a given user.
    /// 					<br><br>
    /// 					This value is not the same as the value used for the
    /// 					GetMyMessages MessageID. However, this MessageID value can be
    /// 					used as the GetMyMessages ExternalID.
    /// 				
    /// </remarks>

	public string MessageID { get; set; }
    /// <summary>
    /// AddMemberMessageRTQYes
    /// </summary>
    /// <remarks>
    /// 
    /// 					ID number of the question to which this message is responding.
    /// 				
    /// </remarks>

	public string ParentMessageID { get; set; }
    /// <summary>
    /// AddMemberMessageAAQToPartnerAddMemberMessageRTQAddMemberMessageCEMAddMemberMessageAAQToSellerNo
    /// GetMemberMessagesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					Media details attached to the message.
    /// 				
    /// </remarks>
[System.Xml.Serialization.XmlElement("MessageMedia")]

	public System.Collections.Generic.List<MessageMediaType> MessageMedia { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 			Type used by the <b>Program</b> container that is returned in the response of the <b>GetUser</b> call if the seller is enrolled in one or more eBay membership programs, such as eBay Plus. The <b>Program</b> container provides the eBay site, program (such as '<code>EBAYPLUS</code>'), and the membership expiration date.
/// 			<br/><br/>
/// 			<span class="tablenote"><b>Note:</b> Currently, eBay Plus is available only to buyers on Germany and Australia marketplaces.  In Australia, the seller has no control/responsibility over setting the eBay Plus feature for a listing. Instead, eBay will evaluate/determine whether a listing is eligible for eBay Plus.
/// 			</span>
/// 		
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class MembershipDetailType {

#region 属性
    /// <summary>
    /// GetUserDetailLevel: none,ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					This value indicates the name of the membership program, such as <code>EBAYPLUS</code>. This field will always be returned with each <b>Program</b> container.
    /// 				
    /// </remarks>

	public string ProgramName { get; set; }
    /// <summary>
    /// GetUserDetailLevel: none,ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					This enumeration value indicates the eBay site for which the seller is enrolled in a membership program. This field will always be returned with each <b>Program</b> container.
    /// 				
    /// </remarks>

	public SiteCodeType? Site { get; set; }
    /// <summary>
    /// GetUserDetailLevel: none,ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					This dateTime value is the expiration date of the seller's membership within the program specified in the <b>ProgramName</b> field. This field will always be returned with each <b>Program</b> container.
    /// 				
    /// </remarks>

	public System.DateTime? ExpiryDate { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 			Container for the image file that is to be sent in a message, which lets sellers share photos in messages using the API.
/// 			The photo must be uploaded by the seller or buyer to
/// 			<a href="https://developer.ebay.com/devzone/xml/docs/reference/ebay/uploadsitehostedpictures.html">EPS (eBay Picture Services)</a>
/// 			using a separate API call or the web flow. After the image is on the eBay server, you can
/// 			use <b>AddMemberMessage</b> calls to pass the URL of the image in a message. The
/// 			uploaded images will be available as part of the email as a thumbnail image.
/// 			Clicking on the thumbnail, opens a larger version of the image in a filmstrip.
/// 			The image name will be displayed on the title of the filmstrip component.
/// 			These uploaded images will also be returned as <b>MessageMediaType</b> arrays in the
/// 			<b>GetMemberMessages</b> and <b>GetMyMessages</b> API response. It doesn't matter if an image was uploaded using the web flow or using the API, it can be accessed using either the web flow or the API and web.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class MessageMediaType {

#region 属性
    /// <summary>
    /// 200
    /// AddMemberMessageAAQToPartnerAddMemberMessageRTQConditionally
    /// GetMemberMessagesGetMyMessagesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						URL of an image to be included in a message.
    /// 						The image must be uploaded to
    /// 						<a href="https://developer.ebay.com/devzone/xml/docs/reference/ebay/uploadsitehostedpictures.html">EPS
    /// 						(eBay Picture Services)</a>
    /// 						using a separate API call or the web flow. This URL will be
    /// 						validated and if it doesn't exist, the request will fail.
    /// 					
    /// </remarks>

	public string MediaURL { get; set; }
    /// <summary>
    /// 100
    /// AddMemberMessageAAQToPartnerAddMemberMessageRTQConditionally
    /// GetMemberMessagesGetMyMessagesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					The name of the image. This will be displayed on the flimstrip.
    /// 					
    /// </remarks>

	public string MediaName { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Defines the minimum requirement for compatible applications as part of the parts
/// 				compatibility feature. If the field is present, the corresponding feature applies
/// 				to the site. The field is returned as an empty element (e.g., a boolean value is
/// 				not returned).
/// 				<br><br>
/// 				Parts compatibility listings contain information to determine the assemblies with
/// 				which a part is compatible. For example, an automotive part or accessory listed
/// 				witih parts compatibility can be matched with vehicles (e.g., specific years,
/// 				makes, and models) with which the part or accessory can  be used.
/// 				<br><br>
/// 				There are two ways to enter parts compatibility: by application and by
/// 				specification. 
/// 				<ul>
/// 				<li> Entering parts compatibility by application specifies the assemblies
/// 				(e.g., a specific year, make, and model of car) to which the item applies. This can
/// 				be done automatically by listing with a catalog product that supports parts
/// 				compatibility, or manually, using <b
/// 				class="con">Item.ItemCompatibilityList</b> when listing or revising an
/// 				item. </li>
/// 				<li>Entering parts compatibility by specification involves specifying the
/// 				part's relevant dimensions and characteristics necessary to determine the
/// 				assemblies with which the part is compatible (e.g., Section Width, Aspect Ratio,
/// 				Rim Diammeter, Load Index, and Speed Rating values for a tire) using
/// 				attributes.</li>
/// 				</ul>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class MinItemCompatibilityDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>MinimumFeedbackScore</b> container that is returned in <b>GeteBayDetails</b>. The <b>MinimumFeedbackScore</b> container consists of the values that can be used as the threshold value for a buyer's Minimum Feedback Score in Buyer Requirements. The Feedback Score for a potential buyer must be greater than or equal to the specified value, or that buyer is blocked from buying the item. <br/><br/> For the <b>MinimumFeedbackScore</b> container to appear in the <b>GeteBayDetails</b> response, <b>BuyerRequirementDetails</b> must be one of the values passed into the <b>DetailName</b> field in the <b>GeteBayDetails</b> request (or, no  <b>DetailName</b> filters should be used).
/// 				<br><br>
/// 				<span class="tablenote"><b>Note:</b> Although the <b>MinimumFeedbackScore</b> container is still returned in <b>GeteBayDetails</b>, sellers can no longer set a buyer's Minimum Feedback Score threshold Buyer Requirement at the listing-level in Add/Revise/Relist calls.
/// 				</span>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class MinimumFeedbackScoreDetailsType {

#region 属性
    /// <summary>
    /// 
    /// 1065
    /// NoOp
    /// 1065
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// 						Each value that is returned in this field can be used as an account-level Minimum Feedback Score. Sellers can no longer set a buyer's Minimum Feedback Score threshold Buyer Requirement at the listing-level in Add/Revise/Relist calls. The Feedback Score for a potential buyer must be greater than or equal to the specified value in the seller's account settings, or that buyer is blocked from buying the item. <br/><br/> One or more <b>FeedbackScore</b> fields are always returned with the <b>MinimumFeedbackScore</b> container.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("FeedbackScore")]

	public System.Collections.Generic.List<int> FeedbackScore { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Defines the Minimum Reserve Price feature. If the field is present, the feature applies to the category. The field is returned as an empty element (i.e., a boolean value is not returned).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class MinimumReservePriceDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type used by the <b>ModifyName</b> container in a <b>ReviseFixedPriceItem</b> or <b>RelistFixedPriceItem</b> call to rename a Variation Specific name for a multiple-variation listing. A <b>ModifyName</b> container is needed for each Variation Specific name  that the seller wishes to change the name of in a multiple-variation listing.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ModifyNameType {

#region 属性
    /// <summary>
    /// 40
    /// ReviseFixedPriceItemRelistFixedPriceItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						In this field, the seller identifies the current name (e.g., Material) of a Variation Specific in the active listing that the seller wishes to change. If this field is used, the <b>NewName</b> field must also be specified.
    /// 						<br>
    /// 					
    /// </remarks>

	public string Name { get; set; }
    /// <summary>
    /// 40
    /// RelistFixedPriceItemReviseFixedPriceItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						In this field, the seller states the new name of the Variation Specific (e.g., Fabric).
    /// 						<br>
    /// 						<br>
    /// 						In addition to changing a Variation Specific name through the <b>ModifyName</b> container, the seller must also include the new Variation Specific name (and its available values) in the <b>VariationSpecificsSet</b> container, and omit the original name.
    /// 						<br>
    /// 						<br>
    /// 						Note that variations that were sold while they used the old name will also be changed to use the new name in eBay's system.
    /// 						<br>
    /// 						<br>
    /// 						If you are making other changes to a variation (such as adding new
    /// 						values or pictures), use consistent names to avoid unexpected
    /// 						results. For example, specify the same new name to identify the
    /// 						Variation Specific in the <b>Pictures</b> container and in the  <b>VariationSpecifics</b> containers for each variation within the listing.
    /// 						<br>
    /// 					
    /// </remarks>

	public string NewName { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 			   This type provides information about the shipping service, cost, address, and delivery estimates for the domestic leg of international shipments. This type is only applicable for international shipments using either the Global Shipping Program or eBay International Shipping.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class MultiLegShipmentType {

#region 属性
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Contains information about the shipping service and cost of the domestic leg of a Global Shipping Program shipment.
    /// 					
    /// </remarks>

	public MultiLegShippingServiceType ShippingServiceDetails { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Contains shipping address information for the domestic leg of a Global Shipping Program shipment or an eBay International Shipping shipment. For a Global Shipping Program shipment, this container includes the ReferenceID field, which can be printed on the package to give the international shipping provider a unique identifier for the order. For an eBay International Shipping shipment, the eBay Virtual Tracking Number is returned in the 
    /// Street2
    ///  field.
    /// 					
    /// </remarks>

	public AddressType ShipToAddress { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The integer value returned here indicates the minimum number of business days that the corresponding shipping service (indicated in  <b>ShippingServiceDetails.ShippingService</b> field) will take to be delivered to eBay's domestic shipping partner.
    /// 						<br><br>
    /// 						This minimum shipping time does not include the seller's handling time, and the clock starts on the shipping time only after the seller has delivered the item to the shipping carrier for shipment to eBay's domestic shipping partner. 'Business days' can vary by shipping carrier and by country, but 'business days' are generally Monday through Friday, excluding holidays. This field is returned if defined for that particular shipping service option.
    /// 					
    /// </remarks>

	public int? ShippingTimeMin { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The integer value returned here indicates the maximum number of business days that the corresponding shipping service (indicated in  <b>ShippingServiceDetails.ShippingService</b> field) will take to be delivered to eBay's domestic shipping partner.
    /// 						<br><br>
    /// 						This maximum shipping time does not include the seller's handling time, and the clock starts on the shipping time only after the seller has delivered the item to the shipping carrier for shipment to eBay's domestic shipping partner. 'Business days' can vary by shipping carrier and by country, but 'business days' are generally Monday through Friday, excluding holidays. This field is returned if defined for that particular shipping service option.
    /// 					
    /// </remarks>

	public int? ShippingTimeMax { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type provides information about the domestic leg of a Global Shipping Program shipment or an eBay International Shipping shipment.
/// 				<br/><br/>
/// 				<span class="tablenote">
/// 				<strong>Note:</strong> The <strong>LogisticsProviderShipmentToBuyer</strong> field is reserved for the exclusive use of the international shipping provider.
/// 				</span>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class MultiLegShippingDetailsType {

#region 属性
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Contains information about the domestic leg of a international order being shipped through the Global Shipping Program or eBay International Shipping, including the selected shipping service, the domestic shipping cost, the domestic address of the international shipping provider, and the estimated shipping time range.
    /// 					
    /// </remarks>

	public MultiLegShipmentType SellerShipmentToLogisticsProvider { get; set; }
    /// <remarks>
    /// 
    ///                   Reserved for use by the international shipping provider.
    /// 					
    /// </remarks>

	public MultiLegShipmentType LogisticsProviderShipmentToBuyer { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 			   This type specifies the shipping service and cost of the domestic leg of a Global Shipping Program shipment or an eBay International Shipping shipment.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class MultiLegShippingServiceType {

#region 属性
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The shipping service specified for the domestic leg of a Global Shipping Program shipment or an eBay International Shipping shipment. For the domestic leg, the value of this field can be any available shipping service that ships to the domestic address of the international shipping provider.
    /// 					
    /// </remarks>

	public string ShippingService { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The total shipping cost of the domestic leg of a Global Shipping Program shipment or an eBay International Shipping shipment.
    /// 					
    /// </remarks>

	public AmountType TotalShippingCost { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// NewAlertCount, TotalAlertCount
/// </summary>
/// <remarks>
/// 
/// 				Summary details for a specified My Messages folder.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class MyMessagesFolderSummaryType {

#region 属性
    /// <summary>
    /// GetMyMessagesDetailLevel: ReturnSummaryConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						An ID that uniquely identifies a My Messages
    /// 						folder. Always returned for detail level
    /// 						ReturnSummary.
    /// 					
    /// </remarks>

	public long? FolderID { get; set; }
    /// <summary>
    /// GetMyMessagesDetailLevel: ReturnSummaryConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The name of a specified My Messages folder. For
    /// 						GetMyMessages, Inbox (FolderID = 0) and Sent (FolderID = 1)
    /// 						are not returned.
    /// 					
    /// </remarks>

	public string FolderName { get; set; }
    /// <summary>
    /// GetMyMessagesDetailLevel: ReturnSummaryConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The number of new messages in a given folder.
    /// 						Always returned for detail level ReturnSummary.
    /// 					
    /// </remarks>

	public int? NewMessageCount { get; set; }
    /// <summary>
    /// GetMyMessagesDetailLevel: ReturnSummaryConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The total number of messages in a given
    /// 						folder. Always returned for detail level
    /// 						ReturnSummary.
    /// 					
    /// </remarks>

	public int? TotalMessageCount { get; set; }
    /// <summary>
    /// GetMyMessagesDetailLevel: ReturnSummaryConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The total number of new high priority messages that a given user has.
    /// 					
    /// </remarks>

	public int? NewHighPriorityCount { get; set; }
    /// <summary>
    /// GetMyMessagesDetailLevel: ReturnSummaryConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The total number of high priority messages that a given user has.
    /// 			  	
    /// </remarks>

	public int? TotalHighPriorityCount { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Details relating to a My Messages folder.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class MyMessagesFolderType {

#region 属性
    /// <summary>
    /// GetMyMessagesConditionallyAlertsMessagesDetailLevel: ReturnHeaders, ReturnMessages
    /// </summary>
    /// <remarks>
    /// 
    /// 						An ID that uniquely identifies a My Messages folder.
    /// 					
    /// </remarks>

	public long? FolderID { get; set; }
    /// <remarks>
    /// 
    /// 						The name of a specified My Messages folder.
    /// 					
    /// </remarks>

	public string FolderName { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Container for the message information for each message specified in
/// 				MessageIDs. The amount and type of information returned varies based on
/// 				the requested detail level.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class MyMessagesMessageType {

#region 属性
    /// <summary>
    /// GetMyMessagesDetailLevel: ReturnHeaders, ReturnMessagesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Display name of the eBay user that sent the message.
    /// 					
    /// </remarks>

	public string Sender { get; set; }
    /// <summary>
    /// GetMyMessagesDetailLevel: ReturnHeaders, ReturnMessagesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Displayable user ID of the recipient.
    /// 					
    /// </remarks>

	public string RecipientUserID { get; set; }
    /// <summary>
    /// GetMyMessagesDetailLevel: ReturnHeaders, ReturnMessagesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Displayable name of the user or eBay
    /// 						application to which the message is sent. Only
    /// 						returned for M2M, and if a value exists.
    /// 					
    /// </remarks>

	public string SendToName { get; set; }
    /// <summary>
    /// GetMyMessagesDetailLevel: ReturnHeaders, ReturnMessagesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Subject of the message.
    /// 					
    /// </remarks>

	public string Subject { get; set; }
    /// <summary>
    /// GetMyMessagesDetailLevel: ReturnHeaders, ReturnMessagesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						ID that uniquely identifies a message for a given user.
    /// 						<br/>
    /// 						<br/>
    /// 						This value is not the same as the value used for the
    /// 						GetMemberMessages MessageID. Use the GetMemberMessages value
    /// 						(used as the GetMyMessages ExternalID) instead.
    /// 					
    /// </remarks>

	public string MessageID { get; set; }
    /// <summary>
    /// GetMyMessagesDetailLevel: ReturnHeaders, ReturnMessagesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						ID used by an external application to uniquely identify a
    /// 						message. Returned only when specified by the external
    /// 						application on message creation.
    /// 						<br><br>
    /// 						This value is equivalent to the value used for MessageID in
    /// 						GetMemberMessages.
    /// 					
    /// </remarks>

	public string ExternalMessageID { get; set; }
    /// <summary>
    /// 2 megabytes in sizeGetMyMessagesDetailLevel: ReturnMessagesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Contains the message content, and
    /// 						can contain a threaded message.
    /// 						This field can contain plain text or HTML,
    /// 						depending on the format of the original message.
    /// 						The API does not check the email-format preferences
    /// 						in My Messages on the eBay Web site.
    /// 					
    /// </remarks>

	public string Text { get; set; }
    /// <summary>
    /// GetMyMessagesDetailLevel: ReturnHeaders, ReturnMessagesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates if the message is displayed with a flag in the seller's
    /// 						My Messages mailbox on eBay.
    /// 						It is strongly recommended that the seller act on the message by the
    /// 						specified date (or within 60 days, if not specified).
    /// 					
    /// </remarks>

	public bool? Flagged { get; set; }
    /// <summary>
    /// GetMyMessagesDetailLevel: ReturnHeaders, ReturnMessagesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates if a message has been viewed by a given user. Note that retrieving
    /// 						a message with the API does not mark it as read.
    /// 					
    /// </remarks>

	public bool? Read { get; set; }
    /// <summary>
    /// GetMyMessagesDetailLevel: ReturnHeaders, ReturnMessagesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Date and time that a message was received by My Messages and stored in a
    /// 						database for the recipient.
    /// 					
    /// </remarks>

	public System.DateTime? ReceiveDate { get; set; }
    /// <summary>
    /// GetMyMessagesDetailLevel: ReturnHeaders, ReturnMessagesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Date and time at which a message expires.
    /// 					
    /// </remarks>

	public System.DateTime? ExpirationDate { get; set; }
    /// <summary>
    /// GetMyMessagesDetailLevel: ReturnHeadersConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Unique identifier of an eBay listing. This field is returned if the corresponding message is associated with a specific listing.
    /// 					
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// GetMyMessagesDetailLevel: ReturnHeaders, ReturnMessagesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Details relating to the response to a message.
    /// 					
    /// </remarks>

	public MyMessagesResponseDetailsType ResponseDetails { get; set; }
    /// <summary>
    /// GetMyMessagesDetailLevel: ReturnHeaders, ReturnMessagesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Details relating to a My Messages folder.
    /// 					
    /// </remarks>

	public MyMessagesFolderType Folder { get; set; }
    /// <summary>
    /// GetMyMessagesDetailLevel: ReturnMessagesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Message body in plain text format. The message body is displayed in plain text
    /// 						even if the eBay user's Preferred Email Format preference on My eBay is set to HTML.
    /// 						Graphics and text formatting are dropped if the eBay user's preference is set to
    /// 						HTML.
    /// 					
    /// </remarks>

	public string Content { get; set; }
    /// <summary>
    /// GetMyMessagesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Type of message being retrieved through GetMyMessages. This is available only on
    /// 						the US site.
    /// 					
    /// </remarks>

	public MessageTypeCodeType? MessageType { get; set; }
    /// <summary>
    /// GetMyMessagesConditionallyComingSoon
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies an active or ended listing's status in eBay's processing workflow.
    /// 						If a listing ends with a sale (or sales), eBay needs to update the sale
    /// 						details (e.g., total price and buyer/high bidder) and the transaction fees.
    /// 						This processing can take several minutes. If you retrieve a sold item and no
    /// 						details about the buyer/high bidder are returned or no transaction fees are
    /// 						available, use this listing status information to determine whether eBay has
    /// 						finished processing the listing.
    /// 						<br><br> <span class="tablenote"><b>Note:</b>
    /// 						For GetMyMessages, the listing status reflects the status of the listing at the time
    /// 						the question was created. The listing status for this call must not match the listing
    /// 						status returned by other calls (such as GetItemTransactions). This is returned only if
    /// 						Messages.Message.MessageType is AskSellerQuestion. This tag is no longer returned
    /// 						in the Sandbox environment.
    /// 						</span>
    /// 					
    /// </remarks>

	public ListingStatusCodeType? ListingStatus { get; set; }
    /// <summary>
    /// GetMyMessagesConditionallyComingSoon
    /// </summary>
    /// <remarks>
    /// 
    /// 						Currently available only on the US site. Context of the question (e.g. Shipping, General).
    /// 						Corresponds to the message subject. Applies if Messages.Message.MessageType is AskSellerQuestion.
    /// 					
    /// </remarks>

	public QuestionTypeCodeType? QuestionType { get; set; }
    /// <summary>
    /// GetMyMessagesDetailLevel: ReturnHeaders, ReturnMessagesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates if there has been a reply to the message.
    /// 					
    /// </remarks>

	public bool? Replied { get; set; }
    /// <summary>
    /// GetMyMessagesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates if this message is marked as a high-priority message.
    /// 					
    /// </remarks>

	public bool? HighPriority { get; set; }
    /// <summary>
    /// GetMyMessagesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Date and time for the ended item.
    /// 					
    /// </remarks>

	public System.DateTime? ItemEndTime { get; set; }
    /// <summary>
    /// 55
    /// GetMyMessagesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					Title of the item listing.
    /// 				
    /// </remarks>

	public string ItemTitle { get; set; }
    /// <summary>
    /// GetMyMessagesDetailLevel: ReturnHeaders, ReturnMessagesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					Media details stored as part of the message.
    /// 				
    /// </remarks>
[System.Xml.Serialization.XmlElement("MessageMedia")]

	public System.Collections.Generic.List<MessageMediaType> MessageMedia { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Details relating to the response to a message.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class MyMessagesResponseDetailsType {

#region 属性
    /// <summary>
    /// GetMyMessagesConditionallyAlertsMessagesDetailLevel: ReturnHeaders, ReturnMessages
    /// </summary>
    /// <remarks>
    /// 
    /// 						Whether a message can be responded
    /// 						to. To respond to a message, use the URL
    /// 						in ResponseURL. You may need to log into the eBay
    /// 						Web site to complete the response.
    /// 					
    /// </remarks>

	public bool? ResponseEnabled { get; set; }
    /// <summary>
    /// GetMyMessagesConditionallyAlertsDetailLevel: ReturnMessages
    /// GetMyMessagesConditionallyMessagesDetailLevel: ReturnHeaders, ReturnMessages
    /// </summary>
    /// <remarks>
    /// 
    /// 						A URL that the recipient must visit to respond to a
    /// 						message. Responding may require logging
    /// 						into the eBay Web site.
    /// 					
    /// </remarks>

	public string ResponseURL { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Summary data for a given user's alerts and messages.
/// 				This includes the numbers of new alerts and messages,
/// 				unresolved alerts, flagged messages, and total alerts
/// 				and messages.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class MyMessagesSummaryType {

#region 属性
    /// <summary>
    /// GetMyMessagesDetailLevel: ReturnSummaryConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Folder summary for each folder. Always
    /// 						returned for detail level ReturnSummary.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("FolderSummary")]

	public System.Collections.Generic.List<MyMessagesFolderSummaryType> FolderSummary { get; set; }
    /// <summary>
    /// GetMyMessagesDetailLevel: ReturnSummaryConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The number of new messages that a given user has. Always returned for detail level ReturnSummary.
    /// 					
    /// </remarks>

	public int? NewMessageCount { get; set; }
    /// <summary>
    /// GetMyMessagesDetailLevel: ReturnSummaryConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The number of messages that have been flagged.
    /// 						Always returned for detail level ReturnSummary.
    /// 					
    /// </remarks>

	public int? FlaggedMessageCount { get; set; }
    /// <summary>
    /// GetMyMessagesDetailLevel: ReturnSummaryConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The total number of messages for a given user.
    /// 						Always returned for detail level ReturnSummary.
    /// 					
    /// </remarks>

	public int? TotalMessageCount { get; set; }
    /// <summary>
    /// GetMyMessagesDetailLevel: ReturnSummaryConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The total number of new high priority messages that a given user has.
    /// 					
    /// </remarks>

	public int? NewHighPriorityCount { get; set; }
    /// <summary>
    /// GetMyMessagesDetailLevel: ReturnSummaryConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The total number of high priority messages that a given user has.
    /// 					
    /// </remarks>

	public int? TotalHighPriorityCount { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				A list of favorite searches a user has saved on the My eBay page.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class MyeBayFavoriteSearchListType {

#region 属性
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The total number of favorite searches saved.
    /// 					
    /// </remarks>

	public int? TotalAvailable { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						A favorite search the user has saved, with a name and a search query.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("FavoriteSearch")]

	public System.Collections.Generic.List<MyeBayFavoriteSearchType> FavoriteSearch { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>FavoriteSearch</b> container returned in
/// 				<b>GetMyeBayBuying</b>. The <b>FavoriteSearch</b> container
/// 				consists of options and filtering used in a buyer's Saved Search on My eBay, and is
/// 				only returned in <b>GetMyeBayBuying</b> if the <b>FavoriteSearches</b>
/// 				container is included the request, and if there is at least one Saved Search for
/// 				the buyer.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class MyeBayFavoriteSearchType {

#region 属性
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The name of the buyer's Saved Search on My eBay. The name defaults to the user's
    /// 						original search string, or the user has the option of modifying the name of the
    /// 						Saved Search.
    /// 					
    /// </remarks>

	public string SearchName { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This is the URL of the buyer's Saved Search on My eBay.
    /// 					
    /// </remarks>

	public string SearchQuery { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This string is the original search string of the buyer's Saved Search on My eBay.
    /// 						This is the string that the user input into the search field.
    /// 					
    /// </remarks>

	public string QueryKeywords { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This is the unique identifier (Category ID) of the category in which the user was
    /// 						searching for the item for the Saved Search. Specifying a category in a query
    /// 						restricts the search to a specific category. If the Saved Search is not restricted
    /// 						to a specific category, the <b>CategoryID</b> field will not appear
    /// 						in the request.
    /// 					
    /// </remarks>

	public string CategoryID { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This enumeration value indicates the "Sort by" value that the user specified in the
    /// 						Saved Search. Some of the ways buyers can sort items include by Best Match
    /// 						(generally, the default), item price, item price + shipping, listing end time, and
    /// 						item distance (relative to the buyer's shipping address). Available sort values
    /// 						may vary for each search, but below is the complete set of values that may be
    /// 						returned in this field.
    /// 					
    /// </remarks>

	public SimpleItemSortCodeType? ItemSort { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The <b>SortOrder</b> value works in conjunction with the
    /// 						<b>ItemSort</b> value, and indicates whether Saved Search results are returned
    /// 						in ascending (low to high values) or descending (high to low values) order.
    /// 					
    /// </remarks>

	public SortOrderCodeType? SortOrder { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The <b>EndTimeFrom</b> and <b>EndTimeFrom</b> values indicates that
    /// 						a date range has been specified in the Saved Search. Only listings ending during
    /// 						the date range defined with the <b>EndTimeFrom</b> and
    /// 						<b>EndTimeFrom</b> values are retrieved in the search results.
    /// 						<br/><br/>
    /// 						The <b>EndTimeFrom</b> value indicates the beginning of the date range.
    /// 					
    /// </remarks>

	public System.DateTime? EndTimeFrom { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The appearance of <b>EndTimeFrom</b> and <b>EndTimeFrom</b>
    /// 						values in the response indicates that a date range has been specified in the Saved
    /// 						Search. Only listings ending during the date range defined with the
    /// 						<b>EndTimeFrom</b> and <b>EndTimeFrom</b> values are
    /// 						retrieved in the search results.
    /// 						<br/><br/>
    /// 						The <b>EndTimeTo</b> value indicates the ending of the date range.
    /// 					
    /// </remarks>

	public System.DateTime? EndTimeTo { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The appearance of a <b>MaxDistance</b> value in the response indicates
    /// 						that a proximity (Items near me) filter has been specified in the Saved Search.
    /// 						<br/><br/>
    /// 						The <b>MaxDistance</b> value is the maximum distance (in miles) away
    /// 						from the buyer's postal code (specified or default) that an item may be
    /// 						located (based on the <b>PostalCode</b> value returned in the
    /// 						<b>FavoriteSearch</b> container). In a Saved Search, a buyer can
    /// 						supply a postal code or can base that postal code on a major city. If neither one
    /// 						of these methods for selecting a postal code is used, the postal code defaults to
    /// 						the buyer's primary shipping address. Only items located within the
    /// 						<b>MaxDistance</b> value are returned in the search results.
    /// 					
    /// </remarks>

	public int? MaxDistance { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The <b>PostalCode</b> value is either the postal code for the buyer's
    /// 						primary shipping address, or it is the postal code specified through the proximity
    /// 						(Items near me) filter of a Saved Search. In a Saved Search, a buyer can supply a
    /// 						postal code or can base that postal code on a major city.
    /// 					
    /// </remarks>

	public string PostalCode { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Enumerated value that provides more information on the type of listing type
    /// 						filtering the buyer used when setting up a Saved Search in My eBay.
    /// 					
    /// </remarks>

	public ItemTypeCodeType? ItemType { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The appearance of a <b>PriceMax</b> value indicates that a maximum price
    /// 						filter has been specified in the Saved Search. Only listings with an item price at
    /// 						or below the <b>PriceMax</b> value are retrieved in the search results.
    /// 						<br/><br/>
    /// 						<b>PriceMax</b> can be used in conjunction with
    /// 						<b>PriceMin</b> in a Saved Search to specify a price range. Only
    /// 						listings with item prices within this price range are retrieved in the search
    /// 						results.
    /// 					
    /// </remarks>

	public AmountType PriceMax { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The appearance of a <b>PriceMin</b> value indicates that a minimum price
    /// 						filter has been specified in the Saved Search. Only listings with an item price at
    /// 						or above the <b>PriceMin</b> value are retrieved in the search results.
    /// 						<br/><br/>
    /// 						<b>PriceMin</b> can be used in conjunction with
    /// 						<b>PriceMax</b> in a Saved Search to specify a price range. Only
    /// 						listings with item prices within this price range are retrieved in the search
    /// 						results.
    /// 					
    /// </remarks>

	public AmountType PriceMin { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The appearance of a <b>Currency</b> value indicates that a currency
    /// 						filter has been specified in the Saved Search. Only listings with the specified
    /// 						<b>Currency</b> value are retrieved in the search results.
    /// 					
    /// </remarks>

	public CurrencyCodeType? Currency { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The BidCountMax value in a My eBay Favorite Search. The BidCountMax limits the search
    /// 						results to items with a maximum number of bids.
    /// 					
    /// </remarks>

	public int? BidCountMax { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The BidCountMin value in a My eBay Favorite Search. The BidCountMin limits the
    /// 						results of a search to items with a maximum number of bids.
    /// 					
    /// </remarks>

	public int? BidCountMin { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The SearchFlag value in a My eBay Favorite Search. The SearchFlag allows you to
    /// 						specify whether you want to include charity listings, free-shipping listings, and
    /// 						listings with other features in your search.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("SearchFlag")]

	public System.Collections.Generic.List<SearchFlagCodeType> SearchFlag { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The PreferredLocation value of a My eBay Favorite Search. The PreferredLocation
    /// 						specifies the criteria for filtering search results by site, where site is determined
    /// 						by the site ID in the request.
    /// 					
    /// </remarks>

	public PreferredLocationCodeType? PreferredLocation { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The SellerID value in a My eBay Favorite Search. The SellerID is the eBay ID of a
    /// 						specific seller.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("SellerID")]

	public System.Collections.Generic.List<string> SellerID { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The SellerIDExclude value in a My eBay Favorite Search. The SellerIDExclude limits
    /// 						the search results to exclude items sold by a specific seller or by specific sellers.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("SellerIDExclude")]

	public System.Collections.Generic.List<string> SellerIDExclude { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The ItemsAvailableTo value in a My eBay Favorite Search. ItemsAvailableTo limits the
    /// 						result set to just those items available to the specified country.
    /// 					
    /// </remarks>

	public CountryCodeType? ItemsAvailableTo { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The ItemsLocatedIn value in a My eBay Favorite Search. ItemsLocatedIn limits the
    /// 						result set to just those items located in the specified country.
    /// 					
    /// </remarks>

	public CountryCodeType? ItemsLocatedIn { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The SellerBusinessType value in a My eBay Favorite Search. The SellerBusinessType
    /// 						limits the search results to those of a particular seller business type such as
    /// 						commercial or private. SellerBusinessType is only available for sites that have
    /// 						business seller features enabled.
    /// 					
    /// </remarks>

	public SellerBusinessCodeType? SellerBusinessType { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The Condition value in a My eBay Favorite Search. Condition limits the results to new
    /// 						or used items, plus items that have no condition specified.
    /// 					
    /// </remarks>

	public ItemConditionCodeType? Condition { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The Quantity value in a My eBay Favorite Search. The Quantity limits the search
    /// 						results to listings that offer a certain number of items matching the query. The
    /// 						Quantity field is used with QuantityOperator to specify that you are seeking listings
    /// 						with quantities greater than, equal to, or less than the value you specify in
    /// 						Quantity.
    /// 					
    /// </remarks>

	public int? Quantity { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The Quantity Operator value in a My eBay Favorite Search. The Quantity Operator
    /// 						limits the results to listings with quantities greater than, equal to, or less than
    /// 						the value you specify in Quantity.
    /// 					
    /// </remarks>

	public QuantityOperatorCodeType? QuantityOperator { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 					A list of favorite sellers the user has saved on the My eBay page.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class MyeBayFavoriteSellerListType {

#region 属性
    /// <summary>
    /// 100
    /// GetMyeBayBuyingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///  							The total number of favorite sellers saved.
    /// 					
    /// </remarks>

	public int? TotalAvailable { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 							A favorite seller the user has saved, with a user ID and store name.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("FavoriteSeller")]

	public System.Collections.Generic.List<MyeBayFavoriteSellerType> FavoriteSeller { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				 Characteristics of the My eBay Favorite Seller.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class MyeBayFavoriteSellerType {

#region 属性
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The favorite seller's eBay user ID.
    /// 					
    /// </remarks>

	public string UserID { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					The name of the store owned by the favorite seller, if applicable.
    /// 					
    /// </remarks>

	public string StoreName { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Specifies how to return the result list for My eBay features such as saved
/// 				searches, favorite sellers, and second chance offers.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class MyeBaySelectionType {

#region 属性
    /// <summary>
    /// GetMyeBayBuyingNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies whether or not to include the container in the response.
    /// 						Set the value to true to return the default set of fields for the
    /// 						container. Not needed if you set a value for at least one other field
    /// 						in the container.
    /// 						<br><br>
    /// 						If you set DetailLevel to ReturnAll, set Include to false to exclude
    /// 						the container from the response.
    /// 					
    /// </remarks>

	public bool? Include { get; set; }
    /// <summary>
    /// GetMyeBayBuyingNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies whether or not to include the item count in the response.
    /// 						Set the value to true to return the default set of fields for the
    /// 						container. Not needed if you set a value for at least one other field
    /// 						in the container.
    /// 						<br><br>
    /// 						If you set DetailLevel to ReturnAll, set Include to false to exclude
    /// 						the container from the response.
    /// 					
    /// </remarks>

	public bool? IncludeItemCount { get; set; }
    /// <remarks>
    /// 
    /// 					This field is not supported.
    /// 					
    /// </remarks>

	public bool? IncludeFavoriteSearcheCount { get; set; }
    /// <summary>
    /// GetMyeBayBuyingNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies whether or not to include FavoriteSellerCount in the response.
    /// 						Set the value to true to return the default set of fields for the
    /// 						container. Not needed if you set a value for at least one other field
    /// 						in the container.
    /// 						<br><br>
    /// 						If you set DetailLevel to ReturnAll, set Include to false to exclude
    /// 						the container from the response.
    /// 					
    /// </remarks>

	public bool? IncludeFavoriteSellerCount { get; set; }
    /// <summary>
    /// GetMyeBayBuyingNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the sort order of the result. Default is Ascending.
    /// 					
    /// </remarks>

	public SortOrderCodeType? Sort { get; set; }
    /// <summary>
    /// GetMyeBayBuyingNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the maximum number of items in the returned list.
    /// 						If not specified, returns all items in the list.
    /// 					
    /// </remarks>

	public int? MaxResults { get; set; }
    /// <summary>
    /// GetMyeBayBuyingFavoriteSearchesFavoriteSellersSecondChanceOfferNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies that only the user defined list whose name matches 
    /// 						the given name should be in the returned list.  If the user does 
    /// 						not have a matching record, no data is returned.  If this 
    /// 						element is omitted, the information for all records is returned.
    /// 						For use only within the UserDefinedLists element.
    /// 					
    /// </remarks>

	public string UserDefinedListName { get; set; }
    /// <summary>
    /// GetMyeBayBuyingFavoriteSearchesFavoriteSellersSecondChanceOfferNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specify true to return the full user defined list contents in 
    /// 						the response's UserDefinedList containers.  A value of 
    /// 						false means only a summary of the user defined list will be 
    /// 						returned.  The default value is false.
    /// 					
    /// </remarks>

	public bool? IncludeListContents { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Contains summary information about the items the seller is selling.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class MyeBaySellingSummaryType {

#region 属性
    /// <summary>
    /// GetMyeBaySellingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The number of currently active auctions that will sell. That
    /// 						is, there is at least one bidder, and any reserve price has
    /// 						been met. Equivalent to the "Will Sell" value in My eBay.					
    /// 					
    /// </remarks>

	public int? ActiveAuctionCount { get; set; }
    /// <summary>
    /// GetMyeBaySellingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The total number of currently active auctions for a given
    /// 						seller. Note that this does not include listings that are
    /// 						FixedPriceItem or StoresFixedPrice. Equivalent to the
    /// 						"Auction Quantity" value in My eBay.
    /// 					
    /// </remarks>

	public int? AuctionSellingCount { get; set; }
    /// <summary>
    /// GetMyeBaySellingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						For all items that the seller has for sale, the total
    /// 						selling values of those items having bids and where the
    /// 						Reserve price is met (if a Reserve price is specified).
    /// 					
    /// </remarks>

	public AmountType TotalAuctionSellingValue { get; set; }
    /// <summary>
    /// GetMyeBaySellingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The total number of items that the seller has sold in the
    /// 						past 31 days.
    /// 					
    /// </remarks>

	public int? TotalSoldCount { get; set; }
    /// <summary>
    /// GetMyeBaySellingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The total monetary value of the items the seller has sold.
    /// 					
    /// </remarks>

	public AmountType TotalSoldValue { get; set; }
    /// <summary>
    /// GetMyeBaySellingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The average duration, in days, of all items sold.
    /// 					
    /// </remarks>

	public int? SoldDurationInDays { get; set; }
    /// <summary>
    /// GetMyeBaySellingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The total number of Classified Ad listings listed by the
    /// 						seller.
    /// 					
    /// </remarks>

	public int? ClassifiedAdCount { get; set; }
    /// <summary>
    /// GetMyeBaySellingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The total number of Classified Ad listings that have an
    /// 						associated lead.
    /// 					
    /// </remarks>

	public int? TotalListingsWithLeads { get; set; }
    /// <summary>
    /// GetMyeBaySellingDetailLevel: none, ReturnAllConditionally
    /// Seller Limitshttps://developer.ebay.com/api-docs/user-guides/static/make-a-call/fg-replaced.html
    /// </summary>
    /// <remarks>
    /// 
    /// 						The quantity of items that this seller can list. This number refers to the total quantity of items in all listings.
    /// 						For example, if the seller's limit was a quantity of 100, this could be 100 listings of one item each, or one listing with a quantity of 100 items.
    /// 						The seller will be unable to list additional items or quantities of items for sale in excess of this number for the
    /// 						current month unless the seller requests an increase from eBay using the "Request higher selling limits" link in the All Selling section
    /// 						of My eBay. (Under "Selling Limits".) Notice that the amount limit (see AmountLimitRemaining) may be reached
    /// 						before the quantity limit is reached.
    /// 					
    /// </remarks>

	public long? QuantityLimitRemaining { get; set; }
    /// <summary>
    /// GetMyeBaySellingDetailLevel: none, ReturnAllConditionally
    /// Seller Limitshttps://developer.ebay.com/api-docs/user-guides/static/make-a-call/fg-replaced.html
    /// </summary>
    /// <remarks>
    /// 
    /// 						The total value of the items listed price that this seller can list. This amount is the total of the prices
    /// 						specified upon listing. For example, for fixed price listings, this is the total of the fixed price amounts.
    /// 						For auction listings, this is the total of the starting prices.
    /// 						The seller will be unable to list an item if the amount of the item's fixed price or starting price (for auctions)
    /// 						exceeds the amount limit.
    /// 						This is part of the seller limit, which can be increased by requesting an increase from eBay using the
    /// 						"Request higher selling limits" link in the All Selling section
    /// 						of My eBay. (Under "Selling Limits".) Notice that the quantity limit (see QuantityLimitRemaining) may be reached
    /// 						before the amount limit is reached.
    /// 					
    /// </remarks>

	public AmountType AmountLimitRemaining { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is used to set or identify either an Item Specific name/value pair for a category/item/variation, or to identify a Parts Compatibility name/value pair.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class NameValueListType {

#region 属性
    /// <summary>
    /// 65
    /// AddItemAddItemsRelistItemReviseItemVerifyAddItemVerifyRelistItemNo
    /// AddFixedPriceItemReviseFixedPriceItemRelistFixedPriceItemVerifyAddFixedPriceItemConditionally
    /// AddToWatchListRemoveFromWatchListConditionally
    /// GetItemNo
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// GetSellerEventsDetailLevel: none, ReturnAllConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// GetMyeBayBuyingLostListWatchListWonListDeletedFromWonListDeletedFromLostListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingActiveListScheduledListSoldListUnsoldListDetailLevel: none, ReturnAllConditionally
    /// GetOrdersDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// OrderReportConditionally
    /// PlaceOfferConditionally
    /// SetUserNotesNo
    /// ActiveInventoryReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Depending on the call and context, this value is either a name of an Item/Variation Specific, or a Parts Compatibility name.
    /// 						<br>
    /// 						<br>
    /// 						<b>For the AddItem and AddFixedPriceItem families of calls:</b> In the <b>Item.ItemSpecifics</b> context, the value in this field will either be the name of a required/recommended/optional item specific name for the category, or it may be a seller's customized item specific name.
    /// 						<br>
    /// 						<br>
    /// 						<b>For the <b>AddFixedPriceItem</b> family of calls:</b>
    /// 						In the <b>Compatibility.NameValueList</b> context, this value is a motor vehicle aspect such as <em>Year</em>, <em>Make</em>, and <em>Model</em>. A <b>Compatibility.NameValueList</b> container is applicable for motor vehicle parts and accessories listings.
    /// 						<br>
    /// 						<br>
    /// 						<b>For PlaceOffer:</b> Required if the line item being
    /// 						purchased is an item variation within a multiple-variation listing.
    /// 						<br>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note:</b> For required and recommended item specifics that are returned in the <a href="/api-docs/commerce/taxonomy/resources/category_tree/methods/getItemAspectsForCategory" target="_blank">getItemAspectsForCategory</a> method of the Taxonomy API, the seller should pass in the name of these item specifics just as they are shown in the <b>getItemAspectsForCategory</b> response. Similarly, for catalog-enabled categories, the seller should pass in the name of instance aspects just as they are shown in the <b>getItemAspectsForCategory</b> response. Instance aspects are additional details unique to a specific item or listing that a seller can include along with the product aspects that are already defined in the eBay catalog product associated with the listing. Instance aspects common to many catalog-enabled categories include 'Bundle Description' and 'Modification Description'. eBay US sellers who ship to California are required to pass in a 'California Prop 65 Warning' item specific if the item in the listing contains one or more chemicals known to be harmful to human health. This item specific is passed at the listing level for both single-variation and multiple-variation listings. The 'California Prop 65 Warning' is considered an instance specific because it will be retained on the listing even when the seller lists using an eBay catalog product. The 'California Prop 65 Warning' may be applicable in most eBay US categories, including eBay Motors, Motors Parts & Accessories, and catalog-enabled categories.
    /// 						</span>
    /// 
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						If Brand and MPN (Manufacturer Part Number) are being used to identify product variations in a multiple-variation listing, the Brand must be specified at the item level (<b>ItemSpecifics</b> container) and the MPN for each product variation must be specified at the variation level (<b>VariationSpecifics</b> container). The Brand name must be the same for all variations within a single listing.
    /// 						</span>
    /// 					
    /// </remarks>

	public string Name { get; set; }
    /// <summary>
    /// 65 (but longer for some instance aspects, including 800 for 'California Prop 65 Warning')
    /// AddItemAddItemsRelistItemReviseItemVerifyAddItemVerifyRelistItemNo
    /// AddFixedPriceItemReviseFixedPriceItemRelistFixedPriceItemVerifyAddFixedPriceItemConditionally
    /// AddToWatchListRemoveFromWatchListConditionally50
    /// GetItemNo
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// GetSellerEventsDetailLevel: none, ReturnAllConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetItemTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// GetMyeBayBuyingLostListWatchListWonListDeletedFromWonListDeletedFromLostListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingActiveListScheduledListSoldListUnsoldListDetailLevel: none, ReturnAllConditionally
    /// GetOrdersDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// OrderReportConditionally
    /// PlaceOfferConditionally
    /// SetUserNotesNo
    /// ActiveInventoryReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Depending on the call and context, this value is either the value of an Item/Variation Specific, a Parts Compatibility value, or a product identifier.<br>
    /// 						<br>
    /// 						<b>For the <b>AddItem</b> family of calls:</b>
    /// 						Multiple values can only be specified for an Item Specific if the <a href="/api-docs/commerce/taxonomy/resources/category_tree/methods/getItemAspectsForCategory#response.aspects.aspectConstraint.itemToAspectCardinality" target="_blank">itemToAspectCardinality</a> field of the <b>getItemAspectsForCategory</b> method shows a value of <code>MULTI</code>. If an item specific only supports a single value, only the first item specific value specified in the request will be used.
    /// 						<br>
    /// 						<br>
    /// 						For the <b>Compatibility.NameValueList</b> context, this is the corresponding value of a motor vehicle aspect such as <em>Year</em>, <em>Make</em>, and <em>Model</em>. A <b>Compatibility.NameValueList</b> container is applicable for motor vehicle parts and accessories listings.
    /// 						<br>
    /// 						<br>
    /// 						<b>For PlaceOffer:</b> Required if the line item being
    /// 						purchased is an item variation within a multiple-variation listing.
    /// 						<br>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note:</b> The standard maximum length for the value of an item specific is 65, but the maximum allowed length increases for instance aspects such as 'Bundle Description' and 'Modification Description'. For item specifics with max lengths greater than 65, the actual max length will be returned in  a corresponding <a href="/api-docs/commerce/taxonomy/resources/category_tree/methods/getItemAspectsForCategory#response.aspects.aspectConstraint.aspectMaxLength" target="_blank">aspectMaxLength</a> field. The maximum allowed length for the new 'California Prop 65 Warning' item specific is 800 characters. For more information about the 'California Prop 65 Warning' item specific, see the <b>ItemSpecifics.NameValueList</b> field description.
    /// 						</span>
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("Value")]

	public System.Collections.Generic.List<string> Value { get; set; }
    /// <summary>
    /// GetItemDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAllVariationConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This enumerated value indicates whether the Item Specific was manually input or selected during listing/revision/re-listing time, or if the Item Specific name-value pair came from an eBay catalog product that the listing is associated with.
    /// 					
    /// </remarks>

	public ItemSpecificSourceCodeType? Source { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is used by the <b>NettedTransactionSummary</b> container, which shows the total amount of fees (and credits if applicable) that have already been paid through seller payout deductions.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class NettedTransactionSummaryType {

#region 属性
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The amount in this field is the total amount of all charges/fees that have been deducted from seller payouts, and not invoiced to the seller. This value should equal the total sum of all the 'netted' fees in the <b>AccountEntries</b> array. The corresponding <b>Netted</b> boolean field for each fee in <b>AccountEntries</b> array will show as <code>true</code> if the fee has already been deducted from a seller payout.
    /// 						<br>
    /// 						<br>
    /// 						This field is returned even if <code>0.0</code>.
    /// 					
    /// </remarks>

	public AmountType TotalNettedChargeAmount { get; set; }
    /// <summary>
    /// GetAccountConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The amount in this field is the total amount of all credits for fees that have been deducted from seller payouts, and not invoiced to the seller. This value should equal the total sum of all the 'netted' credit in the <b>AccountEntries</b> array. The corresponding <b>Netted</b> boolean field for each credit in <b>AccountEntries</b> array will show as <code>true</code> if the credit is for a fee that has already been deducted from a seller payout.
    /// 						<br>
    /// 						<br>
    /// 						This field is returned even if <code>0.0</code>.
    /// 					
    /// </remarks>

	public AmountType TotalNettedCreditAmount { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
///  
/// 				This is for FSBO.
/// 				Each of the subscriptions will have following options, which will define
/// 				"National" vs "Local" ad format listing.
/// 				"LocalOptional" : This will allow national and local listing.
/// 				"LocalOnly" : Seller can have Local listings only.
/// 				"NationalOnly" : Seller can not opt into local only exposure. It has to be 
/// 				national listing.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class NonSubscriptionDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Information about a single notification. Notification information includes
/// 				the reference ID, notification type, current status, time delivered, error code,
/// 				and error message for the notification. If notification details are included in
/// 				the response, all of the detail fields are returned.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class NotificationDetailsType {

#region 属性
    /// <summary>
    /// GetNotificationsUsageConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Returns the destination address for the notification. This is the value set
    /// 						using SetNotificationPreferences.
    /// 					
    /// </remarks>

	public string DeliveryURL { get; set; }
    /// <remarks>
    /// 
    /// 						Reference identifier for the notification.
    /// 					
    /// </remarks>

	public string ReferenceID { get; set; }
    /// <summary>
    /// GetNotificationsUsageConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Date and time when this notification will be removed from the
    /// 						eBay system.
    /// 					
    /// </remarks>

	public System.DateTime? ExpirationTime { get; set; }
    /// <summary>
    /// GetNotificationsUsageConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The returned enumeration value indicates the type of platform notification,
    /// 					
    /// </remarks>

	public NotificationEventTypeCodeType? Type { get; set; }
    /// <summary>
    /// GetNotificationsUsageConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Returns the total number of retries for the given notification.
    /// 					
    /// </remarks>

	public int? Retries { get; set; }
    /// <summary>
    /// GetNotificationsUsageConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Returns the notification status. Possible values include Delivered,
    /// 						Failed, Rejected, and MarkedDown.
    /// 					
    /// </remarks>

	public NotificationEventStateCodeType? DeliveryStatus { get; set; }
    /// <summary>
    /// GetNotificationsUsageConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Returns the time when the notification is scheduled for retry.
    /// 						This won't be included if the DeliveryStatus is Delivered.
    /// 					
    /// </remarks>

	public System.DateTime? NextRetryTime { get; set; }
    /// <summary>
    /// GetNotificationsUsageConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Returns the time when the notification was delivered.
    /// 					
    /// </remarks>

	public System.DateTime? DeliveryTime { get; set; }
    /// <summary>
    /// GetNotificationsUsageConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Returns the error message.
    /// 					
    /// </remarks>

	public string ErrorMessage { get; set; }
    /// <summary>
    /// GetNotificationsUsageConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Returns the delivery URL name for the notification. This is the value set
    /// 						using SetNotificationPreferences.
    /// 					
    /// </remarks>

	public string DeliveryURLName { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Specifies a notification event and whether the
/// 				notification is enabled or disabled.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class NotificationEnableType {

#region 属性
    /// <summary>
    /// GetNotificationPreferencesFeedbackForSellerConditionally
    /// SetNotificationPreferencesNone, FeedbackForSellerNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						The name of the notification event.
    /// 					
    /// </remarks>

	public NotificationEventTypeCodeType? EventType { get; set; }
    /// <summary>
    /// GetNotificationPreferencesConditionally
    /// SetNotificationPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						Whether the event is enabled or disabled.
    /// 					
    /// </remarks>

	public EnableCodeType? EventEnable { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Defines properties associated with a particular event.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class NotificationEventPropertyType {

#region 属性
    /// <summary>
    /// GetNotificationPreferencesItemsCanceledConditionally
    /// SetNotificationPreferencesItemsCanceledNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						The name of the notification event.
    /// 					
    /// </remarks>

	public NotificationEventTypeCodeType? EventType { get; set; }
    /// <summary>
    /// GetNotificationPreferencesConditionally
    /// SetNotificationPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specify property name associated with an particular event.
    /// 					
    /// </remarks>

	public NotificationEventPropertyNameCodeType? Name { get; set; }
    /// <summary>
    /// GetNotificationPreferencesConditionally
    /// SetNotificationPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the value for the property.
    /// 					
    /// </remarks>

	public string Value { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				A template for an SMS notification message.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class NotificationMessageType : AbstractResponseType{

#region 属性
    /// <summary>
    /// Conditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								The SMS message.
    /// 							
    /// </remarks>

	public string MessageBody { get; set; }
    /// <remarks>
    /// 
    /// 								The EIAS userId.
    /// 							
    /// </remarks>

	public string EIAS { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Summary information about notifications delivered, failed, errors, queued for
/// 				a given application ID and time period.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class NotificationStatisticsType {

#region 属性
    /// <summary>
    /// GetNotificationsUsageAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Returns the number of notifications delivered successfully during the given
    /// 						time period.
    /// 					
    /// </remarks>

	public int? DeliveredCount { get; set; }
    /// <summary>
    /// GetNotificationsUsageAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Returns the number of new notifications that were queued during
    /// 						the given time period.
    /// 					
    /// </remarks>

	public int? QueuedNewCount { get; set; }
    /// <summary>
    /// GetNotificationsUsageAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Returns the number of pending notifications in the queue during
    /// 						the given time period.
    /// 					
    /// </remarks>

	public int? QueuedPendingCount { get; set; }
    /// <summary>
    /// GetNotificationsUsageAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Returns the number of notifications that permanently failed during
    /// 						the given time period.
    /// 					
    /// </remarks>

	public int? ExpiredCount { get; set; }
    /// <summary>
    /// GetNotificationsUsageAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Returns the number of notifications for which there were delivery errors
    /// 						during the given time period.
    /// 					
    /// </remarks>

	public int? ErrorCount { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				User data related to notifications.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class NotificationUserDataType {

#region 属性
    /// <summary>
    /// SetNotificationPreferencesConditionally
    /// GetNotificationPreferencesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					An application subscribing to notifications can include an XML-compliant
    /// 					string, not to exceed 256 characters, which will be returned in the
    /// 					notification payload. The string can contain user-specific information to
    /// 					identify a particular user. Any sensitive information should be passed with due
    /// 					caution and proper encryption.
    /// 					
    /// </remarks>

	public string ExternalUserData { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// GeteBayDetailsConditionally
/// </summary>
/// <remarks>
/// 
/// 				This type is deprecated, as the maximum number of policy violations for a buyer is no longer a valid Buyer Requirement at the account or listing level.
/// 				
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class NumberOfPolicyViolationsDetailsType {

#region 属性
    /// <summary>
    /// 
    /// 1065
    /// NoOp
    /// 1065
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is deprecated.
    /// 						
    /// </remarks>
[System.Xml.Serialization.XmlElement("Count")]

	public System.Collections.Generic.List<int> Count { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Contains information pertaining to an offer made on an item listing and
/// 				the current bidding or purchase state of the listing.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class OfferType {

#region 属性
    /// <summary>
    /// GetAllBiddersAlwaysAbsentee, Bid, BuyItNow, Cancelled, Counter, Decline, Offer, Purchase, Retraction, Unknown
    /// PlaceOfferBid, Purchase, Accept, Counter, Decline, OfferYes
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates the type of offer being made on the specified listing.
    /// 						If the item is Best Offer-enabled and the buyer
    /// 						makes a Best Offer (or a counter offer), then after
    /// 						the <b>PlaceOffer</b> call,
    /// 						the buyer can get the status of the Best Offer
    /// 						(and a seller-counter-offer, etc.)
    /// 						using the <b>GetBestOffers</b> call. See 
    /// 						<a href="https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/best-offers.html" target="_blank">Best Offer</a>
    /// 						for information about Best Offer-enabled listings and about <b>GetBestOffers</b>.
    /// 					
    /// </remarks>

	public BidActionCodeType? Action { get; set; }
    /// <summary>
    /// GetAllBiddersAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Three-digit currency code for the currency used for the auction. Valid values can
    /// 						be viewed in the <b>CurrencyCodeType</b> code list.
    /// 					
    /// </remarks>

	public CurrencyCodeType? Currency { get; set; }
    /// <summary>
    /// 
    /// 533
    /// 629
    /// NoOp
    /// PlaceOfferRequest.ItemID,ItemBidDetails.ItemID
    /// </summary>
    /// <remarks>
    /// 
    /// 						The unique identifier of an eBay listing item listed on the eBay site.
    /// 						Returned by eBay when the item is created.
    /// 					
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// GetAllBiddersAlways
    /// PlaceOfferYes
    /// </summary>
    /// <remarks>
    /// 
    /// 						Amount of the offer placed. For auction listings, the amount
    /// 						bid on the item (subject to outbid by other buyers). For fixed-price
    /// 						listings, the fixed sale price at which the item is purchased. For
    /// 						auction listings with an active Buy It Now option, this amount
    /// 						will be either the Buy It Now price for purchase or the amount of a bid,
    /// 						depending on the offer type (as specified in <b>Action</b>). For <b>PlaceOffer</b>,
    /// 						the <b>CurrencyID</b> attribute is ignored if provided. Regarding Value-Added Tax (VAT):
    /// 						Even if VAT applies, you do not need to add VAT to the <b>MaxBid</b> value.
    /// 						If VAT applies to the listing, the seller can specify a VAT percent value
    /// 						when they list the item.
    /// 					
    /// </remarks>

	public AmountType MaxBid { get; set; }
    /// <summary>
    /// GetAllBiddersAlways
    /// PlaceOfferYes
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the quantity of items from the specified listing that the user tendering the offer intends to purchase, bid on, or make a Best Offer on. For auctions, the value is always <b>1 </b>. For multiple-quantity listings, this value must be greater than zero but not exceeding the quantity available for sale in the listing.
    /// 					
    /// </remarks>

	public int? Quantity { get; set; }
    /// <summary>
    /// GetAllBiddersAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates the user's preference to accept second chance offers. If <code>true</code>,
    /// 						the user is willing to be the recipient of second chance offers.
    /// 					
    /// </remarks>

	public bool? SecondChanceEnabled { get; set; }
    /// <summary>
    /// GetAllBiddersAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Unique ID identifying the currency in which the localized offer amounts are
    /// 						expressed.
    /// 					
    /// </remarks>

	public CurrencyCodeType? SiteCurrency { get; set; }
    /// <summary>
    /// GetAllBiddersAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Timestamp indicating the date and time that the bid was placed.
    /// 					
    /// </remarks>

	public System.DateTime? TimeBid { get; set; }
    /// <summary>
    /// GetAllBiddersAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						This amount indicates the highest bid that the corresponding bidder has made on the auction item. If that specific bidder has only made one bid on the auction listing, this value will be the same value as in the <b>MaxBid</b> field, but if the bidder has made multiple bids on the auction item, the <b>HighestBid</b> will show the highest of the bidder's bids, but <b>MaxBid</b> will show the value of the corresponding bid.
    /// 					
    /// </remarks>

	public AmountType HighestBid { get; set; }
    /// <summary>
    /// GetAllBiddersAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Dollar amount of the bid in the user's currency. This field is always returned but its amount will be the same as the value in the <b>MaxBid</b> field, unless currency conversion was actually performed.
    /// 					
    /// </remarks>

	public AmountType ConvertedPrice { get; set; }
    /// <remarks>
    /// 
    /// 						The unique identifier of the order line item (transaction). An order line item
    /// 						is created when a winning bidder commits to purchasing an
    /// 						item.
    /// 						<br>
    /// 						<br>
    /// 						The <b>TransactionID</b> value for auction listings is always <code>0</code> since there can be only one winning bidder/one sale for an auction listing.
    /// 						<br/><br/>
    /// 						<span class="tablenote"><b>Note: </b> Beginning in July 2024, non-zero transaction IDs will start being returned for auction listings. If necessary, update code to handle non-zero transaction IDs for auction transactions before this time. 
    /// 						</span>
    /// 					
    /// </remarks>

	public string TransactionID { get; set; }
    /// <summary>
    /// GetAllBiddersAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container consists of detailed information on the user that made the bid. Some information in this container will be masked unless the call is made by the owner of the listing.
    /// 					
    /// </remarks>

	public UserType User { get; set; }
    /// <summary>
    /// PlaceOfferNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						If <code>true</code>, confirms that the bidder read and agrees to eBay's
    /// 						privacy policy. Applies if the subject item is in a category
    /// 						that requires user consent. If user consent, which is
    /// 						confirmation that a bidder read and agrees to eBay's privacy
    /// 						policy, is required for a category that the subject item is in,
    /// 						this value must be <code>true</code> for a bid to occur.
    /// 					
    /// </remarks>

	public bool? UserConsent { get; set; }
    /// <remarks>
    /// 
    /// 						This field is deprecated.
    /// 					
    /// </remarks>

	public int? BidCount { get; set; }
    /// <summary>
    /// PlaceOfferNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						A message from the buyer to the seller. Applies if the buyer
    /// 						is using <b>PlaceOffer</b> to perform a Best Offer-related
    /// 						action (Best Offer, Counter Offer, etc.).
    /// 					
    /// </remarks>

	public string Message { get; set; }
    /// <summary>
    /// PlaceOfferConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The unique identifier of a Best Offer on an item. This value must be specified as input to <b>PlaceOffer</b> if a
    /// 						buyer is performing any action against a Best Offer or Counter Offer.
    /// 					
    /// </remarks>

	public string BestOfferID { get; set; }
    /// <summary>
    /// GetAllBiddersConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The maximum bid placed by the user making the call. This field is only returned if the corresponding bid was made by the user making the call.
    /// 					
    /// </remarks>

	public AmountType MyMaxBid { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 			Type used by the <b>OrderArray</b> container that is returned in order management calls. The <b>OrderArray</b> container consists of one or more eBay orders that match the input criteria.
/// 		
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class OrderArrayType {

#region 属性
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllAlways
    /// OrderReportAlways
    /// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/manage-fulfill-combine-invoices.htmlCombined Invoice
    /// </summary>
    /// <remarks>
    /// 
    /// 					Details of an eBay order. One eBay order can have one or more order line items (<b>Transaction</b> objects).
    /// 				
    /// </remarks>
[System.Xml.Serialization.XmlElement("Order")]

	public System.Collections.Generic.List<OrderType> Order { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					This container will be returned if there are one or more errors or warnings with the corresponding order. This container consists of detailed information on the warning or error, including the actual error message and information on any input parameters that actually triggered the warning or error.
    /// 				
    /// </remarks>
[System.Xml.Serialization.XmlElement("Errors")]

	public System.Collections.Generic.List<ErrorType> Errors { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 			Contains an order or a transaction. A transaction is the sale of one or
/// 			more items from a seller's listing to a buyer. An order combines two or more transactions
/// 			into a single payment.
/// 		
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class OrderTransactionType {

#region 属性
    /// <summary>
    /// GetMyeBayBuyingConditionallyWonListDeletedFromWonListDetailLevel: none, ReturnAll
    /// GetMyeBaySellingSoldListDeletedFromSoldListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					Contains the information describing an order.
    /// 				
    /// </remarks>

	public OrderType Order { get; set; }
    /// <summary>
    /// GetMyeBayBuyingWonListDeletedFromWonListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingSoldListDeletedFromSoldListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					Contains the information describing a transaction.
    /// 				
    /// </remarks>

	public TransactionType Transaction { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
///         This type is used to express the details of an order. An order may contain one or more line items (purchases) from the same buyer. Regardless of how many line items an order has, only one payment is made for the order.
///         <br><br>
///         The <b>GetOrders</b> call returns many of the fields of this type.
///         <br><br>
///         The <b>GetItemTransactions</b> and <b>GetSellerTransactions</b> calls will only return order-level details if the <b>IncludeContainingOrder</b> boolean field is included in the call request and set to <code>true</code>.
///         <br><br>
///         The <b>AddOrder</b> call is used to combine two or more unpaid order line items (between the same seller and buyer) into a 'Combined Invoice' order. While combining these order line items into one 'Combined Invoice' order, the seller can make adjustments to accepted payment methods, shipping details (including costs), and the total cost of the order. Sometimes, sellers will reduce the cost of shipping if one or more order line items can be shipped together in the same package.
///         <br><br>
///         The <b>GetMyeBaySelling</b> call returns order details if the seller wishes to view listings that have sold, and the <b>GetMyeBayBuying</b> call returns order details if the buyer wishes to view items they have won or purchased.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class OrderType {

#region 属性
    /// <summary>
    /// 40
    /// GetMyeBayBuyingWonListDeletedFromWonListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingSoldListDeletedFromSoldListDetailLevel: none, ReturnAllConditionally
    /// GetOrdersDetailLevel: none, ReturnAllAlways
    /// OrderReportAlways
    /// GetItemTransactionsGetSellerTransactionsContainingOrderDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						A unique identifier for an eBay order. This identifier is globally unique across all eBay marketplaces, and consistent for both single line item and multiple line item orders. Note that the order ID will change for a 'non-immediate payment' order as it goes from an unpaid order to a paid order.
    /// 						<br><br>
    /// 						<span class="tablenote"><b>Note: </b>
    /// 							The value in the <b>OrderID</b> and <b>ExtendedOrderID</b> fields should always be the same. The <b>ExtendedOrderID</b> field was added back in 2019 during a transition period where the Trading API was supporting both old and new order ID formats, and which order ID format that was returned was dependent on the compatibility level version used.
    /// 						</span>
    /// 					
    /// </remarks>

	public string OrderID { get; set; }
    /// <summary>
    /// GetOrdersAll, Authenticated, Default, Inactive, Invalid, ShippedDetailLevel: none, ReturnAllAlways
    /// OrderReportAll, Authenticated, Default, Inactive, Invalid, ShippedAlways
    /// GetItemTransactionsGetSellerTransactionsAll, Authenticated, Default, Inactive, Invalid, ShippedDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             This enumeration value indicates the current status of the order.
    /// 					
    /// </remarks>

	public OrderStatusCodeType? OrderStatus { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllAlways
    /// OrderReportAlways
    /// </summary>
    /// <remarks>
    /// 
    ///             This value indicates the dollar amount by which the buyer has adjusted the order total. Adjustments to order costs may include shipping and handling, buyer discounts, or added services. A positive amount indicates the amount is an extra charge being paid to the seller by the buyer. A negative value indicates this amount is a credit given to the buyer by the seller.
    /// 					
    /// </remarks>

	public AmountType AdjustmentAmount { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             This value indicates the total amount paid by the buyer for the order. This amount includes the sale price of each line item, shipping and handling charges, additional services, and any sales tax applied towards the order. This value is only returned after the buyer has paid for the order.
    ///             <br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 							<b>For GetOrders only</b>: If using Trading WSDL Version 1307 or above, the amount in this field will include sales tax. If using a Trading WSDL older than Version 1307, the amount in this field will not include sales tax. To incorporate the new logic while using a Trading WSDL that is older than 1307, developers can also use the X-EBAY-API-COMPATIBILITY-LEVEL header and set its value to 1307 or higher.
    /// 						</span>
    /// 					
    /// </remarks>

	public AmountType AmountPaid { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllAlways
    /// OrderReportAlways
    /// </summary>
    /// <remarks>
    /// 
    ///             This value indicates the amount that the buyer saved on the order due to any discounts (item, shipping, promotional) applied to the purchase, or if the seller 'manually' reduced the order total. This field is always returned even when it is '0.0'.
    /// 					
    /// </remarks>

	public AmountType AmountSaved { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllAlways
    /// OrderReportAlways
    /// </summary>
    /// <remarks>
    /// 
    ///             This container indicates the current status of the order, including a timestamp that indicates the last time that the status of the order changed.  For orders that have been paid for, the <b>Status</b> value will show as <code>Complete</code>.
    /// 					
    /// </remarks>

	public CheckoutStatusType CheckoutStatus { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllAlways
    /// OrderReportAlways
    /// AddOrderNo
    /// GetMyeBayBuyingWonListDeletedFromWonListDetailLevel: none, ReturnAllConditionallyShippingServiceOptions, ShippingType
    /// </summary>
    /// <remarks>
    /// 
    ///             Container consisting of order-level shipping details. More shipping-related details can be found at the line item level for each line item in the order.
    ///             <br><br>
    ///             In an <b>AddOrder</b> call, the seller can use the <b>ShippingDetails</b> container to make adjustments to shipping details, including the available shipping service options and shipping cost. Sometimes, sellers will reduce the cost of shipping if one or more order line items can be shipped together in the same package.
    /// 					
    /// </remarks>

	public ShippingDetailsType ShippingDetails { get; set; }
    /// <summary>
    /// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/manage-fulfill-combine-invoices.htmlCombined Invoice
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// AddOrderYes
    /// </summary>
    /// <remarks>
    /// 
    ///             This value indicates whether a 'Combined Invoice' order was initiated/created by the buyer or by the seller. This field is only returned for Combined Invoice orders.
    ///             <br><br>
    ///             An <b>AddOrder</b> call can be used by a seller or buyer to combine two or more unpaid order line items into a 'Combined Invoice' order. Once two or more line items are successfully combined into one order, the buyer only needs to make one payment (instead of multiple payments - one for each order line item). The <b>CreatingUserRole</b> field is required in the <b>AddOrder</b> call request.
    ///             <br><br>
    /// 							<span class="tablenote"><b>Note: </b> Except for listings that required immediate payment, buyers also may have the opportunity to combine multiple line items (from the same seller) into a 'Combined Invoice' order through the buy/checkout flow. This may include accepted Best Offers or auctions that the buyer wins.
    /// 						</span>
    ///           
    /// </remarks>

	public TradingRoleCodeType? CreatingUserRole { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllAlways
    /// OrderReportAlways
    /// </summary>
    /// <remarks>
    /// 
    ///             Timestamp that indicates the date and time that the order was created.
    ///             <br><br>
    /// 						<span class="tablenote"><b>Note: </b> For
    ///             single line item orders, this timestamp value is often the same as the <b>CreatedDate</b> field in the corresponding
    ///             <b>Transaction</b> container.
    /// 						</span>
    /// 					
    /// </remarks>

	public System.DateTime? CreatedTime { get; set; }
    /// <summary>
    /// AddOrderConditionallyCreditCard, DirectDebit
    /// GetOrdersDetailLevel: none, ReturnAllAlways
    /// OrderReportAlways
    /// </summary>
    /// <remarks>
    /// 
    ///             In <b>GetOrders</b> and <b>OrderReport</b>, a <b>PaymentMethods</b> field will appear for each payment method available to the buyer for the order's purchase. However, once the buyer pays for the order, any and all of these <b>PaymentMethods</b> fields will stop being returned, and instead, the actual payment method used will be returned in the <b>PaymentMethod</b> field of the <b>CheckoutStatus</b> container.
    ///             <br>
    /// 						<br>
    ///             In an <b>AddOrder</b> call, the seller can use one or more <b>PaymentMethods</b> fields to override whatever available payment methods were already defined for each individual line item.
    /// 						<br>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note:</b> For <b>AddOrder</b>, the seller can only specify offline payment methods (if offline payment is supported for the listing), as eBay now controls all electronic payment methods avaialable to buyers, and sellers have no control over these payment methods. 
    /// 						</span>
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("PaymentMethods")]

	public System.Collections.Generic.List<BuyerPaymentMethodCodeType> PaymentMethods { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// AddOrderNo
    /// </summary>
    /// <remarks>
    /// 
    ///             The email address of the seller involved in the order. The email address of the seller is only returned if it is the same seller making the call.<br> <br>
    /// 			<span class="tablenote"><b>Note:</b>
    /// 				For the <strong>GetOrders</strong> calls, this field is only returned to the seller of the order; this field is not returned to the buyer or to a third party.
    /// 			</span>
    /// 					
    /// </remarks>

	public string SellerEmail { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllAlways
    /// OrderReportAlways
    /// </summary>
    /// <remarks>
    /// 
    ///             This container shows the shipping address for the order.
    ///             <br>
    /// 			<br>
    /// 			<p><span class="tablenote">
    /// 			<strong>Note:</strong> For an Authenticity Guarantee program shipment, this is the address of the authenticator's warehouse. The authenticator is responsible for delivery to the buyer's shipping address.
    /// 			</span></p>
    /// 			<p><span class="tablenote">
    /// 			<strong>Note:</strong> For transactions completed offline, the shipping address detail may be empty.
    /// 			</span></p>
    /// 			<p><span class="tablenote">
    /// 			<strong>Note:</strong> For In-Store Pickup and Click and Collect orders, this is the address of the merchant's store where the buyer will pick up the order.</span></p>
    /// 			<p><span class="tablenote"><b>Note:</b>
    /// 			For eBay Vault scenarios: <strong>GetOrders</strong> and  <strong>GetItemTransactions</strong> calls, mock address details are returned for: <br><br>-<em> Vault to vault orders</em>: Buyer and Seller View<br><br>-<em> Ship to vault orders</em>: Mock addresses are returned for the Buyer View (only); the address returned for the Seller View will be the authenticator's address.<br><br>-<em> Vault in-hand submission orders</em>: the address returned for the Buyer View will be the authenticator's address.<br><br>
    /// 			The following address details are returned for mock addresses:
    /// 			<pre>
    /// 			&lt;ShippingAddress&gt;
    /// 			<br/>
    /// 				<code> &nbsp;&lt;Name&gt;eBay Vault&lt;/Name&gt;</code>
    /// 				<br/>
    /// 				<code> &nbsp;&lt;AddressID&gt;Invalid Request&lt;/AddressID&gt;</code>
    /// 				<br/>
    /// 				<code> &nbsp;&lt;AddressOwner&gt;eBay&lt;/AddressOwner&gt;</code>
    /// 				<br/>
    /// 				<code> &nbsp;&lt;AddressUsage&gt;Invalid&lt;/AddressUsage&gt;</code>
    /// 				<br/>
    /// 				<code> &nbsp;&lt;CityName&gt;Invalid Request&lt;/CityName&gt;</code>
    /// 				<br/>
    /// 				<code> &nbsp;&lt;Country&gt;US&lt;/Country&gt;</code>
    /// 				<br/>
    /// 				<code> &nbsp;&lt;CountryName&gt;Invalid Request&lt;/CountryName&gt;</code>
    /// 				<br/>
    /// 				<code> &nbsp;&lt;ExternalAddressID&gt;Invalid Request&lt;/ExternalAddressID&gt;</code>
    /// 				<br/>
    /// 				<code> &nbsp;&lt;Phone&gt;Invalid Request&lt;/Phone&gt;</code>
    /// 				<br/>
    /// 				<code> &nbsp;&lt;PostalCode&gt;Invalid Request&lt;/PostalCode&gt;</code>
    /// 				<br/>
    /// 				<code> &nbsp;&lt;StateOrProvince&gt;Invalid Request&lt;/StateOrProvince&gt;</code>
    /// 				<br/>
    /// 				<code> &nbsp;&lt;Street1&gt;Invalid Request&lt;/Street1&gt;</code>
    /// 				<br/>
    /// 				<code> &nbsp;&lt;Street2&gt;&lt;/Street2&gt;</code>
    /// 				<br/>
    /// 			&lt;/ShippingAddress&gt;
    /// 			</pre>
    /// 			<br/></span></p>
    /// 					
    /// </remarks>

	public AddressType ShippingAddress { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllAlways
    /// OrderReportAlways
    /// </summary>
    /// <remarks>
    /// 
    ///             Container consisting of details about the domestic or international shipping
    ///             service selected by the buyer for delivery of the order. Note that more shipping service information may be returned at the order line item level in the <strong>Transaction.ShippingServiceSelected</strong> container.
    /// 					
    /// </remarks>

	public ShippingServiceOptionsType ShippingServiceSelected { get; set; }
    /// <summary>
    /// GetMyeBayBuyingWonListDeletedFromWonListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingSoldListDeletedFromSoldListDetailLevel: none, ReturnAllConditionally
    /// GetOrdersDetailLevel: none, ReturnAllAlways
    /// OrderReportAlways
    /// </summary>
    /// <remarks>
    /// 
    ///             The cumulative item cost for all line items in the order. This value does not take into account any shipping/handling costs, sales tax costs, or any discounts. For a single line item order, the amount in this field should be the same as the amount in the <strong>Transaction.TransactionPrice</strong> field. For a multiple line item order, the amount in this field should equal the cumulative amount of each <strong>Transaction.TransactionPrice</strong> fields for each order line item.
    /// 					
    /// </remarks>

	public AmountType Subtotal { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllAlways
    /// OrderReportAlways
    /// AddOrderYes
    /// </summary>
    /// <remarks>
    /// 
    ///             The <b>Total</b> amount shows the total cost for the order, including total item cost (shown in <b>Subtotal</b> field), shipping charges  (shown in <b>ShippingServiceSelected.ShippingServiceCost</b> field), and sales tax (shown in <b>SalesTax.SalesTaxAmount</b> field).
    ///             <br>
    ///             <span class="tablenote"><b>Note:</b>
    /// 							<b>For GetOrders only</b>: If using Trading WSDL Version 1307 or above, the amount in this field will include sales tax. If using a Trading WSDL older than Version 1307, the amount in this field will not include sales tax. To incorporate the new logic while using a Trading WSDL that is older than 1307, developers can also use the X-EBAY-API-COMPATIBILITY-LEVEL header and set its value to 1307 or higher.
    /// 						</span>
    ///             <br>
    ///             In an <b>AddOrder</b> call, the seller can pass in the <b>Total</b> amount for the 'Combined Invoice' order, and this is what the buyer will be expected to pay for the order.
    /// 					
    /// </remarks>

	public AmountType Total { get; set; }
    /// <summary>
    /// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/manage-fulfill-combine-invoices.htmlCombined Invoice
    /// GetOrdersDetailLevel: none, ReturnAllAlways
    /// OrderReportAlways
    /// GetMyeBayBuyingWonListDeletedFromWonListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingSoldListDeletedFromSoldListDetailLevel: none, ReturnAllConditionally
    /// AddOrderYes
    /// </summary>
    /// <remarks>
    /// 
    ///             Container consisting of one or more line items that comprise an order. The data for each order line item in the order is stored in a separate <b>Transaction</b> container.
    ///             <br><br>
    ///             Under the <b>TransactionArray</b> container in an  <b>AddOrder</b> call, a seller or buyer specifies two or more (up to 40) order line items into a 'Combined Invoice' order.
    ///           
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("Transaction", IsNullable = false)]

	public System.Collections.Generic.List<TransactionType> TransactionArray { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllAlways
    /// OrderReportAlways
    /// </summary>
    /// <remarks>
    /// 
    ///             The eBay user ID of the order's buyer.
    /// 					
    /// </remarks>

	public string BuyerUserID { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             Timestamp indicating the date and time of order payment. This field is not
    ///             returned until payment has been made by the buyer.
    ///             <br><br>
    ///             This time is specified in GMT (not Pacific time).
    ///             See <a href="https://developer.ebay.com/api-docs/user-guides/static/make-a-call/tapi-data-types.html#utc-local"> API data types</a> section of the Making a Trading API call guide for information about converting between GMT and other time zones.
    ///           
    /// </remarks>

	public System.DateTime? PaidTime { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             Timestamp indicating the date and time of order shipment. This field is not returned until shipment tracking is provided for all line items in the order, or if the order has been marked as 'shipped' by the seller.
    ///             <br><br>
    ///             This time is specified in GMT (not Pacific time).
    ///             See <a href="https://developer.ebay.com/api-docs/user-guides/static/make-a-call/tapi-data-types.html"> API data types</a> section of the Making a Trading API call guide for information about converting between GMT and other time zones.
    ///           
    /// </remarks>

	public System.DateTime? ShippedTime { get; set; }
    /// <remarks>
    /// 
    ///             Reserved for future use.
    /// 					
    /// </remarks>

	public bool? BundlePurchase { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             This field is returned if the buyer left a message for the seller during
    ///             checkout.
    /// 					
    /// </remarks>

	public string BuyerCheckoutMessage { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             Unique identifier for the user that does not change when the eBay user name
    ///             is changed. Use when an application needs to associate a new eBay user name
    ///             with the corresponding eBay user.
    ///             <br><br>
    ///             Since a bidder's user info is anonymous, this tag will be returned only to that bidder, and to the seller of an item that the user is bidding on.
    /// 					
    /// </remarks>

	public string EIASToken { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: noneAlways
    /// OrderReportAlways
    /// </summary>
    /// <remarks>
    /// 
    ///             This field indicates the type and/or status of a payment hold on the item. It is always returned for <b>GetOrders</b>, even if there are no payment holds (in which case, an enumeration value of <code>None</code> is shown).
    /// 						<br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 							For the <strong>GetItemTransactions</strong> and <strong>GetOrders</strong> calls, this field is only returned to the seller of the order; this field is not returned for the buyer or third party.
    /// 						</span>
    /// 						<span class="tablenote"><b>Note: </b> This field will stop being returned by <b>GetItemTransactions</b> and <b>GetSellerTransactions</b> on January 31, 2024. 
    /// 						</span>
    /// 					
    /// </remarks>

	public PaymentHoldStatusCodeType? PaymentHoldStatus { get; set; }
    /// <summary>
    /// GetMyeBaySellingSoldListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             The amount of the refund due to, or already issued to the buyer for the order. This field is only returned in <b>GetMyeBaySelling</b> if a buyer refund is due, or was issued for the order.
    /// 					
    /// </remarks>

	public AmountType RefundAmount { get; set; }
    /// <summary>
    /// GetMyeBaySellingSoldListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             This string value indicates the result of a seller's refund to the buyer. Its value are 'Success', 'Failure' or 'Pending'. This field is only returned in <b>GetMyeBaySelling</b> if the buyer has received a refund from the seller, or is due to receive a refund.
    /// 					
    /// </remarks>

	public string RefundStatus { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             <br>
    ///             If <strong>IsMultilegShipping</strong> is <code>true</code>, at least one order line item in the order will not be shipped directly to the buyer. Orders requiring multiple shipping legs include international orders being shipped through the Global Shipping Program or through eBay International Shipping, as well as orders subject to/eligible for the Authenticity Guarantee program. For both international shipping options, the address of the shipping logistics provider is shown in the <strong>MultiLegShippingDetails.SellerShipmentToLogisticsProvider.ShipToAddress</strong> container. Similarly, for Authenticity Guarantee orders, the authentication partner's shipping address is shown in the same container.
    ///             <br><br>
    ///             If an order line item is subject to the Authenticity Guarantee service, the &lt;b&gt;Transaction.Program&lt;/b&gt; container will be returned.
    ///             <br>
    /// 							<span class="tablenote"><b>Note: </b> The <b>ContainingOrder.IsMultiLegShipping</b> field will stop being returned by <b>GetItemTransactions</b> and <b>GetSellerTransactions</b> on January 31, 2024. 
    /// 						</span>
    /// 					
    /// </remarks>

	public bool? IsMultiLegShipping { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             <br>
    ///             This container consists of details related to the first leg of an order requiring multiple shipping legs. Types of orders that require multiple shipping legs include international orders going through Global Shipping Program or eBay International Shipping, as well as orders subject to/eligible for the Authenticity Guarantee program. </br/></br/>If the item is subject to the Authenticity Guarantee service program, the seller ships the item to the authentication partner, and if the item passes an authentication inspection, the authentication partner ships it directly to the buyer.
    ///             <br/><br/>
    ///             This container is only returned if the order has one or more order line items requiring multiple shipping legs.
    ///              <br>
    /// 							<span class="tablenote"><b>Note: </b> The <b>ContainingOrder.MultiLegShippingDetails</b> container will stop being returned by <b>GetItemTransactions</b> and <b>GetSellerTransactions</b> on January 31, 2024. 
    /// 						</span>
    /// 					
    /// </remarks>

	public MultiLegShippingDetailsType MultiLegShippingDetails { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel:ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             <br>
    ///             Contains information about each monetary transaction that occurs for the order, including order payment, any refund, a credit, etc. Both the payer and payee are shown in this container.
    ///              <br>
    /// 							<span class="tablenote"><b>Note: </b> The <b>ContainingOrder.MonetaryDetails</b> container will stop being returned by <b>GetItemTransactions</b> and <b>GetSellerTransactions</b> on January 31, 2024. 
    /// 						</span>
    /// 					
    /// </remarks>

	public PaymentsInformationType MonetaryDetails { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetMyeBayBuyingWonListDeletedFromWonListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             Container consisting of an array of <strong>PickupOptions</strong> containers. Each <strong>PickupOptions</strong> container consists of the pickup method and its priority. The priority of each pickup method controls the order (relative to other pickup methods) in which the corresponding pickup method will appear in the View Item and Checkout page.
    ///             <br/><br/>
    ///             For <strong>GetOrders</strong>, this container is always returned prior to order payment if the seller created/revised/relisted the item with the <strong>EligibleForPickupInStore</strong> and/or <strong>EligibleForPickupDropOff</strong> flag in the call request set to 'true'. If and when the In-Store pickup method (US only) or 'Click and Collect' pickup method (UK and Australia only) is selected by the buyer and payment for the order is made, this container will no longer be returned in the response, and will essentially be replaced by the <strong>PickupMethodSelected</strong> container.
    ///             <br/><br/>
    ///             <span class="tablenote">
    ///             <strong>Note:</strong> A seller must be eligible for the In-Store Pickup feature or Click and Collect feature to list an item that is eligible for In-Store Pickup or Click and Collect. At this time, the In-Store Pickup and Click and Collect features are generally only available to large retail merchants, and can only be applied to multiple-quantity, fixed-price listings.
    ///             </span>
    /// 					
    /// </remarks>

	public PickupDetailsType PickupDetails { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetMyeBayBuyingWonListDeletedFromWonListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             Container consisting of details related to the selected pickup method,  including the pickup method type, the merchant's store ID, the status of the pickup, and the pickup reference code (if provided by merchant).
    ///             <br/><br/>
    ///             This container is only returned when the buyer has selected the In-Store Pickup or Click and Collect option and has paid for the order. All fields in the <strong>PickupMethodSelected</strong> container are static, except for the <strong>PickupStatus</strong> field, which can change states based on the notifications that a merchant sends to eBay through the Inbound Notifications API.
    ///             <br/><br/>
    ///             <span class="tablenote">
    ///             <strong>Note:</strong> A seller must be eligible for the In-Store Pickup or Click and Collect feature to list an item that is eligible for these features. At this time, the In-Store Pickup and Click and Collect features are generally only available to large retail merchants, and can only be applied to multiple-quantity, fixed-price listings.
    ///             </span>
    /// 					
    /// </remarks>

	public PickupMethodSelectedType PickupMethodSelected { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             This is the eBay user ID of the order's seller.
    /// 					
    /// </remarks>

	public string SellerUserID { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             This is a unique identifier for the seller that does not change when the eBay user name is changed. This is useful when an application needs to associate a new eBay user name with the corresponding eBay user.
    /// 			<br> <br>
    /// 			<span class="tablenote"><b>Note:</b>
    /// 				For the <strong>GetOrders</strong> call, this field is only returned to the seller of the order; this field is not returned for the buyer or third party.
    /// 			</span>
    /// 					
    /// </remarks>

	public string SellerEIASToken { get; set; }
    /// <summary>
    /// CancelReasonCodeType
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             This value indicates the reason why the order cancellation was initiated. This field is only returned if an order cancellation has been initiated by the buyer or seller. Typical buyer-initiated cancellation reasons include 'OrderPlacedByMistake', 'WontArriveInTime', or 'FoundCheaperPrice'. Sellers may initiate an order cancellation on behalf of the buyer. In this scenario, the seller should state the cancellation reason as 'BuyerCancelOrder'. If the seller is cancelling an order because he/she is out of stock on an item, the seller should state the cancellation reason as 'OutOfStock'. Unfortunately, in this scenario, the seller will receive a seller defect for this cancellation reason. See <a href="types/CancelReasonCodeType.html">CancelReasonCodeType</a> for the complete list of enumeration values that can be returned in this field.
    /// 					
    /// </remarks>

	public string CancelReason { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             The current status for the order cancellation request (if it exists for the order). This field is only returned if a cancellation request has been made on the order, or if the order is currently going through the cancellation process, or if the order has already been cancelled.
    /// 					
    /// </remarks>

	public CancelStatusCodeType? CancelStatus { get; set; }
    /// <summary>
    /// LogisticsPlanCodeType
    /// GetOrdersDetailLevel:none,ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///               <br/>
    ///               This field will be returned at the order level only if the buyer purchased a digital gift card, which is delivered by email, or if the buyer purchased an item that is enabled with the 'Click and Collect' feature.
    ///               <br/><br/>
    ///               Currently, <strong>LogisticsPlanType</strong> has two applicable values: <code>PickUpDropOff</code>, which indicates that the buyer selected the 'Click and Collect' option. With Click and Collect, buyers are able to purchase from thousands of sellers on the eBay UK and Australia sites, and then pick up their order from the nearest 'eBay Collection Point', including over 750 Argos stores in the UK. The Click and Collect feature is only available on the eBay UK and Australia sites; or, <code>DigitalDelivery</code>, which indicates that the order is a digital gift card that will be delivered to the buyer or recipient of the gift card by email.
    ///               <br>
    /// 								<span class="tablenote"><b>Note: </b> The <b>ContainingOrder.LogisticsPlanType</b> field will stop being returned by <b>GetItemTransactions</b> and <b>GetSellerTransactions</b> on January 31, 2024. 
    /// 							</span>
    /// 					
    /// </remarks>

	public string LogisticsPlanType { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel:none,ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             <br>
    ///             This container will either consist of VAT or Codice Fiscale taxpayer identification information for the buyer.
    ///             <br/><br/>
    ///             It is required that buyers registered on the Italy site provide their Codice Fiscale ID (similar to the Social Security Number for US citizens) before buying an item on the Italy site.
    ///             <br/><br/>
    ///             On the Spain site, a Spanish seller has the option to require that Spanish buyers (registered on Spain site) provide a tax ID before checkout. This option is set by the seller at the account level. Once a Spanish buyer provides a tax ID, this tax ID is associated with his/her account, and once a tax ID is associated with the account, Spanish buyer will be asked to provide the tax ID during checkout on all eBay sites. Buyers with a registered address outside of Spain will not be asked to provide a tax ID during checkout.
    ///             <br/><br/>
    ///             This container is only returned for Spanish or Italian sellers when the buyer was asked to provide tax identifier information during checkout. A <strong>BuyerTaxIdentifier</strong> container will be returned for each tax ID that is associated with the buyer's account.
    ///             <br>
    /// 							<span class="tablenote"><b>Note: </b> The <b>ContainingOrder.BuyerTaxIdentifier</b> container will stop being returned by <b>GetItemTransactions</b> and <b>GetSellerTransactions</b> on January 31, 2024. 
    /// 						</span>
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("BuyerTaxIdentifier")]

	public System.Collections.Generic.List<TaxIdentifierType> BuyerTaxIdentifier { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel:none,ReturnAllConditionally
    /// OrderReportConditionally
    /// GetMyeBayBuyingWonListDeletedFromWonListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             <br>
    ///             This container is returned in <b>GetOrders</b> (and other order management calls) if the 'Pay Upon Invoice' option is being offered to the buyer, and the seller is including payment instructions in the shipping package(s) for the order. The 'Pay Upon Invoice' option is only available on the Germany site.
    ///              <br>
    /// 							<span class="tablenote"><b>Note: </b> The <b>ContainingOrder.BuyerPackageEnclosures</b> container will stop being returned by <b>GetItemTransactions</b> and <b>GetSellerTransactions</b> on January 31, 2024. 
    /// 						</span>
    /// 					
    /// </remarks>

	public BuyerPackageEnclosuresType BuyerPackageEnclosures { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						A unique identifier for an eBay order. This identifier is globally unique across all eBay marketplaces, and consistent for both single line item and multiple line item orders. Note that the order ID will change for a 'non-immediate payment' order as it goes from an unpaid order to a paid order.
    /// 						<br><br>
    /// 						<span class="tablenote"><b>Note: </b>
    /// 							The value in the <b>OrderID</b> and <b>ExtendedOrderID</b> fields should always be the same. The <b>ExtendedOrderID</b> field was added back in 2019 during a transition period where the Trading API was supporting both old and new order ID formats, and which order ID format that was returned was dependent on the compatibility level version used.
    /// 						</span>						
    /// 					
    /// </remarks>

	public string ExtendedOrderID { get; set; }
    /// <summary>
    /// more detailseBay Plushttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/ebay-plus.html
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             If <code>true</code>, the order contains a transaction for an item that was purchased under the eBay Plus program. eBay Plus is a premium account option for buyers, which provides benefits such as fast free domestic shipping and free returns on selected items. Top-Rated eBay sellers must opt in to eBay Plus to be able offer the program on qualifying listings. Sellers must commit to next-day delivery of those items.
    ///             <br/><br/>
    ///             <span class="tablenote"><b>Note:</b> Currently, eBay Plus is available only to buyers in Germany and Australia.
    ///             </span>
    ///           
    /// </remarks>

	public bool? ContainseBayPlusTransaction { get; set; }
    /// <summary>
    /// GetOrdersAlways
    /// OrderReportAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						<br/>
    /// 						This boolean field is returned as <code>true</code> if one or more line items in the order are subject to a tax (US sales tax or Australian Goods and Services tax) that eBay will collect and remit to the proper taxing authority on the buyer's behalf. This field is also returned if <code>false</code> (not subject to eBay Collect and Remit).  A <b>Transaction.eBayCollectAndRemitTaxes</b> container is returned for any order line items subject to such a tax, and the type and amount of this tax is displayed in the <b>Transaction.eBayCollectAndRemitTaxes.TaxDetails</b> container.
    /// 						<br/><br/>
    /// 						Australian 'Goods and Services' tax (GST) is automatically charged to buyers outside of Australia when they purchase items on the eBay Australia site. Sellers on the Australia site do not have to take any extra steps to enable the collection of GST, as this tax is collected by eBay and remitted to the Australian government. For more information about Australian GST, see the <a href="https://www.ebay.com.au/help/selling/fees-credits-invoices/taxes-import-charges?id=4121">Taxes and import charges</a> help topic.
    /// 						<br/><br/>
    /// 						As of January 2023, buyers in all US states will automatically be charged sales tax for purchases, and the seller does not set this rate. eBay will collect and remit this sales tax to the proper taxing authority on the buyer's behalf. For more US state-level information on sales tax, see the <a href="https://www.ebay.com/help/selling/fees-credits-invoices/taxes-import-charges?id=4121#section3">eBay sales tax collection</a> help topic.
    /// 						<br>
    /// 							<span class="tablenote"><b>Note: </b> The <b>ContainingOrder.eBayCollectAndRemitTax</b> field will stop being returned by <b>GetItemTransactions</b> and <b>GetSellerTransactions</b> on January 31, 2024. 
    /// 						</span>
    /// 					
    /// </remarks>

	public bool? eBayCollectAndRemitTax { get; set; }
    /// <summary>
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						<br/>
    /// 						This field indicates the total number of line items in the order. This field is returned under the <b>ContainingOrder</b> container of a <b>GetItemTransactions</b> or <b>GetSellerTransactions</b> call. In order for the <b>ContainingOrder</b> container to be returned, a user must include the <b>IncludeContainingOrder</b> field in the call request and set its value to <b>true</b>.
    /// 						<br/><br/>
    /// 						<span class="tablenote"><b>Note:</b> This field is automatically returned if the user is using Version 1113 of the Trading WSDL (or newer), or if the user includes the <b>X-EBAY-API-COMPATIBILITY-LEVEL</b> HTTP header and sets its value to <code>1113</code> (or newer). If a user is using a Trading WSDL older than 1113 (or is not setting the <b>X-EBAY-API-COMPATIBILITY-LEVEL</b> HTTP header value to 1113 or newer), this field will not be returned.
    /// 					
    /// </remarks>

	public long? OrderLineItemCount { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Contains a paginated list of items.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class PaginatedItemArrayType {

#region 属性
    /// <summary>
    /// GetMyeBayBuyingBidListBestOfferListLostListWatchListDeletedFromLostListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingActiveListScheduledListUnsoldListBidListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						An array of one or more items returned under one or more containers in a <b>GetMyeBayBuying</b> or <b>GetMyeBaySelling</b> call response.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("Item", IsNullable = false)]

	public System.Collections.Generic.List<ItemType> ItemArray { get; set; }
    /// <summary>
    /// GetMyeBayBuyingBidListLostListWatchListWonListBestOfferListDeletedFromLostListDeletedFromWonListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingActiveListScheduledListSoldListUnsoldListBidListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container shows the total numer of items that matched the input criteria and the total number of the results set. Users can use the <b>Pagination.PageNumber</b> field in the request to toggle through different pages in the results set.
    /// 					
    /// </remarks>

	public PaginationResultType PaginationResult { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 			Contains a paginated list of orders.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class PaginatedOrderTransactionArrayType {

#region 属性
    /// <summary>
    /// GetMyeBayBuyingWonListDeletedFromWonListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingSoldListDeletedFromSoldListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					Contains the list of orders.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("OrderTransaction", IsNullable = false)]

	public System.Collections.Generic.List<OrderTransactionType> OrderTransactionArray { get; set; }
    /// <summary>
    /// GetMyeBayBuyingWonListDeletedFromWonListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingSoldListDeletedFromSoldListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies information about the list, including number of pages and
    /// 						number of entries.
    /// 					
    /// </remarks>

	public PaginationResultType PaginationResult { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Contains a paginated list of order line items.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class PaginatedTransactionArrayType {

#region 属性
    /// <summary>
    /// GetItemsAwaitingFeedbackAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Contains a list of Transaction objects. Returned as an
    /// 						empty tag if no applicable order line items exist.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("Transaction", IsNullable = false)]

	public System.Collections.Generic.List<TransactionType> TransactionArray { get; set; }
    /// <summary>
    /// GetItemsAwaitingFeedbackAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Provides information about the list of order line items,
    /// 						including number of pages and number of entries.
    /// 					
    /// </remarks>

	public PaginationResultType PaginationResult { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Shows the pagination of data returned by call requests.
/// 				Pagination of returned data is not needed nor
/// 				supported for every Trading API call. See the documentation for
/// 				individual calls to determine whether pagination is
/// 				supported, required, or desirable.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class PaginationResultType {

#region 属性
    /// <summary>
    /// GetAccountGetItemsAwaitingFeedbackGetMemberMessagesAlways
    /// GetFeedbackAlwaysDetailLevel: none, ReturnAll
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllAlways
    /// GetVeROReportStatusConditionally
    /// GetMyeBayBuyingBidListBestOfferListLostListWatchListWonListDeletedFromWonListDeletedFromLostListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingActiveListBidListScheduledListSoldListUnsoldListDetailLevel: none, ReturnAllConditionally
    /// GetOrdersDetailLevel: none, ReturnAllAlways
    /// GetSellerListDetailLevel: none, ItemReturnDescription, ReturnAllAlways
    /// GetBestOffersDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates the total number of pages of data that could be returned by repeated
    /// 						requests. Returned with a value of 0 if no pages are available.
    /// 					
    /// </remarks>

	public int? TotalNumberOfPages { get; set; }
    /// <summary>
    /// GetItemsAwaitingFeedbackGetMemberMessagesAlways
    /// GetFeedbackAlwaysDetailLevel: none, ReturnAll
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllAlways
    /// GetAccountAlways
    /// GetVeROReportStatusConditionally
    /// GetMyeBayBuyingBidListBestOfferListLostListWatchListWonListDeletedFromWonListDeletedFromLostListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingActiveListBidListScheduledListSoldListUnsoldListDetailLevel: none, ReturnAllConditionally
    /// GetOrdersDetailLevel: none, ReturnAllAlways
    /// GetSellerListDetailLevel: none, ItemReturnDescription, ReturnAllAlways
    /// GetBestOffersDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates the total number of entries that could be returned by repeated
    /// 						call requests. Returned with a value of 0 if no entries are available.
    /// 					
    /// </remarks>

	public int? TotalNumberOfEntries { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is no longer applicable/used, as the the Paisa Pay Escrow payment feature was only applicable to the eBay India site, and this site is no longer a functional eBay marketplace for sellers.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class PaisaPayFullEscrowEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is deprecated.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class PayPalRequiredDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is deprecated.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class PayPalRequiredForStoreOwnerDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 			Type defining the <b>PaymentDetails</b> container, which is used by the seller to
/// 			specify the amount of the initial deposit, and the due dates for the deposit and the full payment for a motor vehicle listing. 
/// 			<br/>
/// 			<br/>
/// 			<span class="tablenote"><b>Note:</b>
/// 			The seller may not use the <b>PaymentDetails</b> container if selling a motor vehicle through a Classified Ad listing. If it is used in a Trading call, it will be dropped and the seller will get a warning that it was dropped. For a Classified Ad listing, the buyer and seller directly discuss amongst themselves any details on a deposit, or due dates for a deposit and full balance. eBay will not be involved in this process for a Classified Ad listing.</span>
/// 		
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class PaymentDetailsType {

#region 属性
    /// <summary>
    /// 24 (hours)
    /// 72 (hours)
    /// 48 (hours)
    /// AddItemAddItemsRelistItemReviseItemVerifyAddItemVerifyRelistItemNo
    /// GetBidderListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is used to set the due date (in hours) for the motor vehicle deposit. The deposit amount is specified in the <b>DepositAmount</b> field. The "clock starts" on the deposit due date as soon as the buyer commits to buying the vehicle by clicking the <b>Buy It Now</b> button, by winning the auction, or by the seller accepting that buyer's Best Offer/counteroffer.  The three supported values here are <code>24</code>, <code>48</code> (default), and <code>72</code> hours.  
    /// 						<br/><br/>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						If the immediate payment requirement is set for the listing (see <b>Item.AutoPay</b> description), and the listing qualifies for immediate payment (e.g. the <b>Buy It Now</b> button is used), the <b>HoursToDeposit</b> field will not be applicable, since the buyer will be required to pay any deposit amount immediately (and not within 1, 2 or 3 days).</span>
    /// 						<br>
    /// 					
    /// </remarks>

	public int? HoursToDeposit { get; set; }
    /// <summary>
    /// 3
    /// 14
    /// 7
    /// AddItemAddItemsRelistItemReviseItemVerifyAddItemVerifyRelistItemNo
    /// GetBidderListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is used to set the due date (in days) for the buyer to pay off the full balance of the motor vehicle. The "clock starts" on the full payment due date as soon as the buyer commits to buying the vehicle by clicking the <b>Buy It Now</b> button, by winning the auction, or by the seller accepting that buyer's Best Offer/counteroffer.  The three supported values here are <code>3</code>, <code>7</code> (default), <code>10</code>, and <code>14</code> days.  
    /// 						<br/><br/>
    /// 						The seller must specify one or more of the following offline payment methods in the listing. The buyer will be expected to use one of these payment method options to pay the full balance of the motor vehicle. 
    /// 						<ul>
    /// 						<li>CashOnPickup</li>
    /// 						<li>MOCC (money order or cashier's check)</li>
    /// 						<li>PersonalCheck</li>
    /// 						</ul>
    /// 					
    /// </remarks>

	public int? DaysToFullPayment { get; set; }
    /// <summary>
    /// 500.0 (if immediate payment required); 2000.0 (if immediate payment not required)
    /// AddItemAddItemsRelistItemReviseItemVerifyAddItemVerifyRelistItemConditionally
    /// GetBidderListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					This dollar value indicates the amount of the initial deposit on the vehicle required from the buyer. 
    /// 					<br/><br/>
    /// 					If the immediate payment requirement is set for the listing (see <b>Item.AutoPay</b> description), and the listing qualifies for immediate payment (e.g. the <b>Buy It Now</b> button is used), the deposit will be required immediately, and the <b>HoursToDeposit</b> field (if set) will not be applicable. If immediate payment is required for a motor vehicle deposit, the value input into this field cannot exceed '500.0', or an error will occur. 
    /// 					<br/><br/>
    /// 					If there is no immediate payment requirement set for the listing the deposit will be required in 24, 48, or 72 hours after commitment to purchase (see the <b>HoursToDeposit</b> field). If immediate payment is not required for a motor vehicle deposit, the value input into this field cannot exceed '2000.0', or an error will occur. 
    /// 					<br/><br/>
    /// 					If this field is not included in an Add/Revise call, its value defaults to '0.0', which would technically mean that a deposit is not required, even if the <b>DepositType</b> and <b>HoursToDeposit</b> fields were included. 
    /// 					<br>
    /// 					<br>
    /// 					Motor vehicle deposit details will be shown to prospective buyers in the listing. The available payment methods for the deposit will be shown on the checkout page once the buyer clicks the the <b>Buy It Now</b> button. <br>
    /// 					<br>
    /// 					<b>For ReviseItem and related calls</b>: If the listing
    /// 					has no bids, the seller can add or lower a deposit; and they can
    /// 					increase the deposit if the listing doesn't require immediate payment.
    /// 					The seller can also remove the immediate payment option (if any).
    /// 					If the listing has bids, the seller can only lower an existing
    /// 					deposit; but not add or increase a deposit. The seller can't remove
    /// 					immediate payment when a listing with a deposit has bids.
    /// 					<br>
    /// 					
    /// </remarks>

	public AmountType DepositAmount { get; set; }
    /// <summary>
    /// None
    /// AddItemAddItemsRelistItemReviseItemVerifyAddItemVerifyRelistItemConditionally
    /// GetBidderListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					In order for a seller to require a motor vehicle deposit from a buyer, this field must be included and set to <code>OtherMethod</code>. Otherwise, the field will default to <code>None</code> and a deposit will not be required.
    /// 					
    /// </remarks>

	public DepositTypeCodeType? DepositType { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type contains information about one or more payments made by the buyer to pay for an order.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class PaymentInformationType {

#region 属性
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container consists of detailed information about each payment made by the buyer to pay for an order. In many cases, there may be only one payment - the payment made from the buyer to the seller, but in the case of an order going through the Global Shipping Program, one payment goes to the seller for the price of the order, and then an import charge and a portion of the shipping charges may go to eBay Global Shipping Program partner. In the case of an order that is subject to Australia import tax, one payment goes to the seller for the total price of the order, and the import tax goes to eBay for remittance to the Australian government.
    /// 						<br><br>
    /// 						<span class="tablenote"><b>Note: </b> Australia import tax is only applicable to the Australia site.
    /// 						</span>
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("Payment")]

	public System.Collections.Generic.List<PaymentTransactionType> Payment { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Defines the Payment Method feature. If the field is
/// 				present, the corresponding feature applies to the category. The field is returned
/// 				as an empty element (i.e., a boolean value is not returned).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class PaymentMethodDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is used by the <b>PaymentOptionDetails</b> containers that are returned in <b>GeteBayDetails</b> if the <code>PaymentOptionDetails</code> value is used in a <b>DetailName</b> field in the call request.
/// 				<br><br>
/// 				<span class="tablenote"><b>Note: </b> Although site-level payment options are still returned in <b>GeteBayDetails</b>, it may be better to use the <b>GetCategoryFeatures</b> call instead, as this call returns the specific payment options that are accepted in specific categories.
/// 				</span>
/// 				<br>
/// 				<span class="tablenote"><b>Note: </b> Sellers no longer have to specify any electronic payment methods for listings, so one or more <b>PaymentMethods</b> fields will only be needed for listings that require/support payments off of eBay's platform. If an electronic payment is supplied in a <b>PaymentMethods</b> field, a warning will be triggered and the payment method will be dropped.
/// 				</span>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class PaymentOptionDetailsType {

#region 属性
    /// <summary>
    /// 613
    /// 613
    /// Avoid
    /// Category.PaymentMethod
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					   This enumeration value is the enumeration that the seller would pass in to one of the <b>PaymentMethods</b> fields in an Add/Revise/Relist call (or in to a Payment busines policy).
    /// 					
    /// </remarks>

	public BuyerPaymentMethodCodeType? PaymentOption { get; set; }
    /// <summary>
    /// 613
    /// 613
    /// Avoid
    /// Category.PaymentMethod
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					   This field is a text-based/user-friendly description of the payment option.
    /// 					
    /// </remarks>

	public string Description { get; set; }
    /// <summary>
    /// 613
    /// 613
    /// Avoid
    /// Category.PaymentMethod
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					   This string value indicates the version number of the update made to any payment options returned in <b>GeteBayDetails</b>.
    /// 					
    /// </remarks>

	public string DetailVersion { get; set; }
    /// <summary>
    /// 613
    /// 613
    /// Avoid
    /// Category.PaymentMethod
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					   This timestamp indicates the date and time of the last update made to any payment options returned in <b>GeteBayDetails</b>.
    /// 					
    /// </remarks>

	public System.DateTime? UpdateTime { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type contains details about the allocation of funds to one payee from a buyer payment for a specified order.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class PaymentTransactionType {

#region 属性
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field indicates the eBay user or eBay partner who submitted the payment.
    /// 						<br><br>
    /// 						<b>For GetOrders and GetItemTransactions only:</b> If using Trading WSDL Version 1019 or above, this field will only be returned to the buyer or seller, and no longer returned at all to third parties. If using a Trading WSDL older than Version 1019, the correct payer is returned to the buyer or seller, but the identity of the payer will be masked to all third parties.
    /// 					
    /// </remarks>

	public UserIdentityType Payer { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The person or organization who is to receive the payment allocation.
    /// 					
    /// </remarks>

	public UserIdentityType Payee { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The date and time when the payment is received by the payee.
    /// 					
    /// </remarks>

	public System.DateTime? PaymentTime { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The amount of the payment that is allocated to the payee.
    /// 					
    /// </remarks>

	public AmountType PaymentAmount { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						A unique transaction ID for the payment.
    /// 						<br/><br/>
    /// 						This field is not returned if the <strong>Payee</strong> field's <strong>type</strong> attribute is <code>eBayPartner</code>.
    /// 						<br><br>
    /// 						<b>For GetOrders and GetItemTransactions only:</b> If using Trading WSDL Version 1019 or above, this field will only be returned to the buyer or seller, and no longer returned at all to third parties. If using a Trading WSDL older than Version 1019, the correct payment identifier is returned to the buyer or seller, but the payment identifier will be masked to all third parties.
    /// 					
    /// </remarks>

	public TransactionReferenceType ReferenceID { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Fee Amount is a positive value and Credit Amount is a negative value.
    /// 						<br/><br/>
    /// 						This field is not returned if the <strong>Payee</strong> field's <strong>type</strong> attribute is <code>eBayPartner</code>.
    /// 					
    /// </remarks>

	public AmountType FeeOrCreditAmount { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The payment transaction ID.
    /// 						<br/><br/>
    /// 						<b>For GetOrders and GetItemTransactions only:</b> If using Trading WSDL Version 1019 or above, this field will only be returned to the buyer or seller, and no longer returned at all to third parties. If using a Trading WSDL older than Version 1019, the correct payment identifier is returned to the buyer or seller, but the payment identifier will be masked to all third parties.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("PaymentReferenceID")]

	public System.Collections.Generic.List<TransactionReferenceType> PaymentReferenceID { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type defines the <strong>MonetaryDetails</strong> container, which consists of detailed information about one or more exchanges of funds that occur between the buyer, seller, eBay, and eBay partners during the lifecycle of an order, as well as detailed information about a seller's refund (or store credit) to a buyer who has returned an item. 
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class PaymentsInformationType {

#region 属性
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Contains information about how different portions of the funds exchanged for a specified order are allocated among payees. Each allocated portion is represented by a <strong>Payment</strong> container.
    /// 					
    /// </remarks>

	public PaymentInformationType Payments { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container consists of an array of one or more <strong>Refund</strong> containers, and each <strong>Refund</strong> container consists of detailed information about a seller's refund (or store credit) to a buyer who has returned an item. 
    /// 						<br/><br/>
    /// 						This container is also returned if the buyer has returned an In-Store Pickup item to the merchant at a physical store, and the merchant has notified eBay through the <strong>ORDER.RETURNED</strong> notification of the Inbound Notifications API.
    /// 						<br/><br/>
    /// 						<span class="tablenote">
    /// 						<strong>Note:</strong> At this time, the In-Store Pickup feature is generally only available to large retail merchants, and can only be applied to multi-quantity, fixed-price listings. 
    /// 						</span>
    /// 					
    /// </remarks>

	public RefundInformationType Refunds { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
///               This type defines the <strong>PickupDetails</strong> container, which contains an array of <strong>PickupOptions</strong> containers. Each <strong>PickupOptions</strong> container consists of the pickup method and its priority.
///               <br/><br/>
/// 							<span class="tablenote">
/// 							<strong>Note:</strong> At this time, the In-Store Pickup and Click and Collect features are generally only available to large retail merchants, and can only be applied to multi-quantity, fixed-price listings. In-Store Pickup is only applicable to the US site, and Click and Collect is only applicable to the UK, Germany, and Australia sites.
/// 							</span>
///             
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class PickupDetailsType {

#region 属性
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// GetMyeBayBuyingWonListDeletedFromWonListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 										Container consisting of a pickup method and the priority of the pickup method. The priority of each pickup method controls the order (relative to other pickup methods) in which the corresponding pickup method will appear in the View Item and Checkout page.
    /// 										<br/><br/>
    /// 										This container is always returned prior to order payment if the seller created/revised/relisted the item with the <strong>EligibleForPickupInStore</strong> and/or <strong>EligibleForPickupDropOff</strong> flag in the call request set to 'true'. If and when the In-Store pickup method (US only) or 'Click and Collect' pickup method (UK and Australia only) is selected by the buyer and payment for the order is made, this container will no longer be returned in the response, and will essentially be replaced by the <strong>PickupMethodSelected</strong> container.
    /// 										<br/><br/>
    /// 										<span class="tablenote">
    /// 										<strong>Note:</strong> At this time, the In-Store Pickup and Click and Collect features are generally only available to large retail merchants, and can only be applied to multi-quantity, fixed-price listings. In-Store Pickup is only applicable to the US site, and Click and Collect is only applicable to the UK, Germany, and Australia sites.
    /// 										</span>
    /// 									
    /// </remarks>
[System.Xml.Serialization.XmlElement("PickupOptions")]

	public System.Collections.Generic.List<PickupOptionsType> PickupOptions { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				The <b>PickupDropOffEnabled</b>  field is returned as an empty element (a boolean value is not returned) if one or more eBay API-enabled sites support the "Click and Collect" feature. This field will be returned as long as 'PickupDropOffEnabled' is included as a <b>FeatureID</b> value in the call request or no <b>FeatureID</b> values are passed into the call request.
/// 				<br/><br/>
/// 				The 'Click and Collect' feature is only available to large merchants on the eBay UK (site ID - 3), eBay Australia (Site ID - 15), and eBay Germany (Site ID - 77) sites.
/// 				<br/><br/>
/// 				To verify if a specific category supports the the "Click and Collect" feature, pass in a <b>CategoryID</b> value in the request, and then look for a 'true' value in the <b>PickupDropOffEnabled</b> field of the corresponding Category node (match up the <b>CategoryID</b> values if more than one Category IDs were passed in the request).
/// 				<br>
/// 				<br>
/// 				<span class="tablenote"><b>Note:</b> For Click and Collect eligible sellers, the Click and Collect feature can only be enabled at the account level, and then each of the seller's listings within an Click and Collect enabled category will be automatically evaluated for Click and Collect eligibility.
/// 				</span>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class PickupDropOffEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Complex type defining the <b>PickupInStoreDetails</b> container, that is used in Add/Revise/Relist calls to enable the listing for In-Store Pickup or Click and Collect.
/// 				<br/><br/>
/// 				<span class="tablenote">
/// 				<strong>Note:</strong> At this time, In-Store Pickup as a fulfillment method is only available to a limited number of large retail merchants in the US, Canada, UK, Germany, and Australia marketplaces, and can only be applied to multiple-quantity, fixed-price listings. The Click and Collect feature is only available to large merchants on the UK, Australia, and Germany marketplaces.
/// 				</span>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class PickupInStoreDetailsType {

#region 属性
    /// <summary>
    /// falseAddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemConditionally
    /// GetSellerListGetItemShippingGetItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						 <b>For Add/Revise/Relist/Verify calls</b>: this field is included to enable the listing for In-Store Pickup. To enable the listing for In-Store Pickup, the seller includes this boolean field and sets its value to <code>true</code>. In-Store Pickup as a fulfillment method is only available to a limited number of large retail merchants in the US, Canada, UK, Germany, and Australia marketplaces. The In-Store Pickup feature can only be applied to multiple-quantity, fixed-price listings.
    /// 						<br/><br/>
    /// 						In addition to setting the <b>EligibleForPickupInStore</b> boolean field to <code>true</code>, the merchant must also perform the following actions in an <b>Add/Revise/Relist/Verify</b> call to enable the In-Store Pickup option on a multiple-quantity, fixed-price listing:
    /// 						<ul>
    /// 						<li>Have inventory for the product at one or more physical stores tied to the seller's account. By using the REST-based <b>Inventory API</b>, sellers can associate physical stores to their account by using the <b>Create Inventory Location</b> call, and then, using the <b>Create Inventory Item</b> call, they can add inventory to specific stores;</li>
    /// 						<li>Include the seller-defined SKU value of the product(s) in the call request. For a single-variation listing, the SKU value would be specified in the <b>Item.SKU</b> field, and for a multiple-variation listing, the SKU value(s) would be specified in the <b>Item.Variations.Variation.SKU</b> field(s);</li>
    /// 						<li>Set an immediate payment requirement on the item.
    /// 						</li>
    /// 						</ul>
    /// 						When a seller is successful at listing an item with the In-Store Pickup feature enabled, prospective buyers within a reasonable distance (25 miles or so) from one of the seller's stores (that has stock available) will see the "Available for In-Store Pickup" option on the listing, along with information on the closest store that has the item.
    /// 						<br/><br/>
    /// 						This field is returned in the 'Get' calls if the listing is enabled with the In-Store Pickup feature.
    /// 						<br/>
    /// 					
    /// </remarks>

	public bool? EligibleForPickupInStore { get; set; }
    /// <summary>
    /// GetSellerListGetItemShippingGetItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						For sellers opted in to Click and Collect, this field was once used to set Click and Collect eligibility at the listing level. However, now the seller can only opt in to Click and Collect at the account level, and then each of their listings will be automatically evaluated by eBay for Click and Collect eligibility.
    /// 						<br/><br/>
    /// 						<span class="tablenote"><b>Note:</b> Until this field is fully deprecated in the Trading WSDL (and in Add/Revise/Relist/Verify calls), it can still be used, but it will have no functional affect. However, if set in an Add/Revise/Relist/Verify call, it will get returned in <b>GetItem</b>, but it won't be a true indicator if the item is actually available for the Click and Collect fulfillment method. Instead, the <b>Item.AvailableForPickupDropOff</b> field should be referenced to see if the listing actually has inventory that is available for pickup via the Click and Collect fulfillment method.
    /// 						</span>
    /// 					
    /// </remarks>

	public bool? EligibleForPickupDropOff { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <strong>PickupMethodSelected</strong> container, which consists of details related to the selected local pickup method (In-Store Pickup or "Click and Collect"), including the pickup method, the merchant's store ID, the status of the pickup, and the pickup reference code (if provided by merchant).
/// 				<br/><br/>
/// 				<span class="tablenote">
/// 				<strong>Note:</strong> At this time, the In-Store Pickup feature is generally only available to large retail merchants in US, and can only be applied to multi-quantity, fixed-price listings. The "Click and Collect" feature is only available to large merchants on the eBay UK (site ID - 3), eBay Australia (Site ID - 15), and eBay Germany (Site ID - 77) sites.
/// 				</span>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class PickupMethodSelectedType {

#region 属性
    /// <summary>
    /// PickupMethodCodeType
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// GetMyeBayBuyingWonListDeletedFromWonListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This value indicates the local pickup method that was selected by the buyer at checkout. This field is always returned with the <strong>PickupMethodSelected</strong> container.
    /// 						<br/><br/>
    /// 						<span class="tablenote">
    /// 						<strong>Note:</strong> Merchants must be eligible for the In-Store Pickup or "Click and Collect" feature to list items that are eligible for these local pickup methods.
    /// 						</span>
    /// 					
    /// </remarks>

	public string PickupMethod { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// GetMyeBayBuyingWonListDeletedFromWonListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The unique identifier of the merchant's store where the item will be picked up. The <strong>PickupStoreID</strong> is picked up by eBay based on the <strong>LocationID</strong> value that is set by the merchant in the <strong>Inventory Management API</strong>. This field is always returned with the <strong>PickupMethodSelected</strong> container.
    /// 						<br/><br/>
    /// 						<span class="tablenote">
    /// 						<strong>Note:</strong> A seller must be eligible for the In-Store Pickup feature to list an item that is eligible for In-Store Pickup. At this time, the In-Store Pickup feature is generally only available to large retail merchants in US, and can only be applied to multi-quantity, fixed-price listings. Merchants/developers can test In-Store Pickup functionality in the Sandbox environment, including listing items enabled with the In-Store Pickup feature,  creating store locations and adding inventory to these stores using the Inventory Management API, and informing eBay of In-Store Pickup status changes using the Inbound Notifications API.
    /// 						</span>
    /// 					
    /// </remarks>

	public string PickupStoreID { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// GetMyeBayBuyingWonListDeletedFromWonListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field indicates the current status of the local pickup order. The value of the  <strong>PickupStatus</strong> field can change during the lifecycle of the order based on the notifications that a merchant sends to eBay through the <strong>Inbound Notifications API</strong>. This field is always returned with the <strong>PickupMethodSelected</strong> container.
    /// 						<br/><br/>
    /// 						<span class="tablenote">
    /// 						<strong>Note:</strong> A seller must be eligible for the In-Store Pickup or Click and Collect features to list an item that is eligible for these features. At this time, these features are generally only available to large retail merchants in US, and can only be applied to multi-quantity, fixed-price listings. Merchants/developers can test In-Store Pickup functionality in the Sandbox environment, including listing items enabled with the In-Store Pickup feature,  creating store locations and adding inventory to these stores using the Inventory Management API, and informing eBay of In-Store Pickup status changes using the Inbound Notifications API.
    /// 						</span>
    /// 					
    /// </remarks>

	public PickupStatusCodeType? PickupStatus { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// GetMyeBayBuyingWonListDeletedFromWonListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The unique reference number defined by the merchant to track In-Store Pickup orders. The <strong>MerchantPickupCode</strong> is picked up by eBay if it is set by the merchant through the payload of a notification sent to eBay through the <strong>Inbound Notifications API</strong>. This field is only returned with the <strong>PickupMethodSelected</strong> container if it set by the merchant.
    /// 						<br><br>
    /// 						<b>For GetOrders and GetItemTransactions only:</b> If using Trading WSDL Version 1019 or above, this field will only be returned to the buyer or seller, and no longer returned at all to third parties. If using a Trading WSDL older than Version 1019, the real reference number is only returned to the buyer or seller, and a string value of <code>Unavailable</code> will be returned to all third parties.
    /// 						<br/><br/>
    /// 						<span class="tablenote">
    /// 						<strong>Note:</strong> A seller must be eligible for the In-Store Pickup feature to list an item that is eligible for In-Store Pickup. At this time, the In-Store Pickup feature is generally only available to large retail merchants in US, and can only be applied to multi-quantity, fixed-price listings. Merchants/developers can test In-Store Pickup functionality in the Sandbox environment, including listing items enabled with the In-Store Pickup feature,  creating store locations and adding inventory to these stores using the Inventory Management API, and informing eBay of In-Store Pickup status changes using the Inbound Notifications API.
    /// 						</span>
    /// 					
    /// </remarks>

	public string MerchantPickupCode { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 									Timestamp indicating the date/time when the order is expected to be fulfilled by the merchant and available for pick up by the buyer.
    /// 								
    /// </remarks>

	public System.DateTime? PickupFulfillmentTime { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// GetMyeBayBuyingWonListDeletedFromWonListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The unique identifier of the merchant's store where the "Click and Collect" item will be picked up. This field will only be returned if supplied by the merchant.
    /// 					
    /// </remarks>

	public string PickupLocationUUID { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <strong>PickupOptions</strong> container, which consists of a pickup method and the priority of the pickup method.
/// 				<br/><br/>
/// 				<span class="tablenote">
/// 				<strong>Note:</strong> At this time, the In-Store Pickup and Click and Collect features are generally only available to large retail merchants in US, and can only be applied to multi-quantity, fixed-price listings.
/// 				</span>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class PickupOptionsType {

#region 属性
    /// <summary>
    /// PickupMethodCodeType
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// GetMyeBayBuyingWonListDeletedFromWonListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This value indicates an available pickup method. This field is always returned with the <strong>PickupOptions</strong> container.
    /// 						<br/><br/>
    /// 						<span class="tablenote">
    /// 						<strong>Note:</strong> At this time, 'InStorePickup' and 'PickUpDropOff' are the only available pickup methods; however, additional pickup methods may be added to the list in future releases.
    /// 						</span>
    /// 						<br/>
    /// 						<span class="tablenote">
    /// 						<strong>Note:</strong> A seller must be eligible for the In-Store Pickup or Click and Collect feature to list an item that is eligible for In-Store Pickup or Click and Collect. At this time, In-Store Pickup is generally only available to large retail merchants in US, and the 'Click and Collect' feature is only available to large merchants on the eBay UK (site ID - 3), eBay Australia (Site ID - 15), and eBay Germany (Site ID - 77) sites.
    /// 						</span>
    /// 					
    /// </remarks>

	public string PickupMethod { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// GetMyeBayBuyingWonListDeletedFromWonListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This integer value indicates the priority of the pickup method. The priority of each pickup method controls the order (relative to other pickup methods) in which the corresponding pickup method will appear in the View Item and Checkout page. This field is always returned with the <strong>PickupOptions</strong> container.
    /// 						<br/><br/>
    /// 						<span class="tablenote">
    /// 						<strong>Note:</strong> A seller must be eligible for the In-Store Pickup or Click and Collect features to list an item that is eligible for In-Store Pickup or Click and Collect. At this time, In-Store Pickup is generally only available to large retail merchants in US, and the 'Click and Collect' feature is only available to large merchants on the eBay UK (site ID - 3), eBay Australia (Site ID - 15), and eBay Germany (Site ID - 77) sites.
    /// 						</span>
    /// 					
    /// </remarks>

	public int? PickupPriority { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 			Type defining the <b>Pictogram</b> container used at the listing level to provide pictograms for the listing.
/// 		 
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class PictogramsType {

#region 属性
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemConditionally
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///                   This field sets the pictogram code(s) for Hazard and product safety Pictogram(s) for the listing. If your product contains hazardous substances or mixtures, please select the values corresponding to the hazard pictograms that are stated on your product's Safety Data Sheet. The selected hazard information will be displayed on your listing. If your product shows universal product safety or compliance symbols, please select the values corresponding to the product safety pictograms for display in the product safety section of the listing. The seller specifies the identifier of each pictogram in this field. A separate Pictogram field is required for each Hazard or product safety pictogram. 
    /// 				  <span class="tablenote"><strong>Note:</strong>  For Hazard pictograms, use the <a href="https://developer.ebay.com/api-docs/sell/metadata/resources/marketplace/methods/getHazardousMaterialsLabels">getHazardousMaterialsLabels</a> method in the <a href="https://developer.ebay.com/api-docs/sell/metadata/resources/methods">Metadata API</a> to find supported values for a specific marketplace/site. For sample values, see <a href="https://developer.ebay.com/api-docs/sell/static/metadata/feature-regulatorhazmatcontainer.html#Pictogra" target="_blank">Pictogram sample values</a>.	
    ///                   <br>    <br>
    /// 				  For product safety pictograms, use the <a href = "/api-docs/sell/metadata/resources/marketplace/methods/getProductSafetyLabels" target="_blank">getProductSafetyLabels</a> method in the <a href="https://developer.ebay.com/api-docs/sell/metadata/resources/methods">Metadata API</a> to find supported values for a specific marketplace/site.</span>	
    ///                
    /// </remarks>
[System.Xml.Serialization.XmlElement("Pictogram")]

	public System.Collections.Generic.List<string> Pictogram { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Contains the data for the pictures associated with an item.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class PictureDetailsType {

#region 属性
    /// <summary>
    /// GalleryAddItemAddItemsRelistItemReviseItemVerifyAddItemVerifyRelistItemConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetSellerListDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// GalleryAddFixedPriceItemRelistFixedPriceItemReviseFixedPriceItemVerifyAddFixedPriceItemNo
    /// </summary>
    /// <remarks>
    /// 
    /// 					<a name="galleryTypeField"></a>
    /// 						This field is used to specify the type of picture gallery to use for the listing. If this field is omitted, a standard picture gallery is used for the listing. There is no listing fee for a standard picture gallery.
    /// 						<br/><br/>
    /// 						To use the Gallery Plus feature, you must include this field and set its value to <code>Plus</code>.
    /// 						<br/><br/>
    /// 						The Gallery image will be the first URL passed
    /// 						into the first <b>PictureURL</b> field, so if you want a specific picture to be the Gallery image, you should make sure you pass the URL for this picture in the first <b>PictureURL</b> field.
    /// 						<br/><br/>
    /// 						When revising a listing, if you disable the Gallery Plus feature by including the <b>GalleryType</b> field and setting its value to <code>Gallery</code>, the original feature fee for this feature will not be credited to the seller.
    /// 						<br/>
    /// 					
    /// </remarks>

	public GalleryTypeCodeType? GalleryType { get; set; }
    /// <summary>
    /// 1024
    /// GetMyeBayBuyingBestOfferListBidListSecondChanceOfferWatchListLostListWonListDeletedFromWonListDeletedFromLostListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingActiveListBidListScheduledListSoldListUnsoldListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field shows the URL for the gallery image of an item returned in <b>GetMyeBayBuying</b><br/> and <b>GetMyeBaySelling</b>.<br/>
    /// 					
    /// </remarks>

	public string GalleryURL { get; set; }
    /// <summary>
    /// 500
    /// AddItemAddItemsRelistItemReviseItemVerifyAddItemVerifyRelistItemConditionally
    /// GetBidderListConditionally
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ReturnAll24
    /// AddFixedPriceItemRelistFixedPriceItemReviseFixedPriceItemVerifyAddFixedPriceItemConditionally
    /// Add pictureshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/pictures.html
    /// </summary>
    /// <remarks>
    /// 
    /// 						Contains the URL for a picture of the item.
    /// 						The URL can be from the eBay Picture Services (images previously uploaded) or from a server outside of eBay (self-hosted).
    /// 						You can pass in up to 24 picture URLs for each listing, but you cannot mix self-hosted and EPS-hosted URLs in the same listing. The <b>UploadSiteHostedPictures</b> call can be used to upload pictures to EPS. Note that if pictures are externally-hosted, they must be hosted on a site that is using the 'https' protocol. URLs using the 'http' protocol will not be allowed.
    /// 						<br/><br/>
    /// 						Sellers can have up to 24 pictures in almost any category at no cost. Motor vehicle listings are an exception. The number of included pictures in motor vehicle listings depend on the selected vehicle package (see <a href="https://www.ebay.com/help/selling/fees-credits-invoices/motors-fees?id=4127">Fees for selling vehicles on eBay Motors</a>). 
    /// 						<br/><br/>
    /// 						<span class="tablenote"><b>Note: </b>
    /// 							If a URL contains spaces, those spaces can be replaced with <code>%20</code>. For example, <code>https://example.com/my image.jpg</code> must be submitted as <code>https://example.com/my%20image.jpg</code> to replace the space in the image file name. However, a semicolon character (;) cannot be replaced with <code>%20</code>, so a semicolon cannot be a part of the URL, as an error will occur.
    /// 						</span>
    /// 						The Gallery image will be the first <b>PictureURL</b>
    /// 						in the array of <b>PictureURL</b> fields.
    /// 
    /// 						<br/><br/>
    /// 						<span class="tablenote"><b>Note: </b>
    /// 						All images, whether they are hosted by EPS or self-hosted, must comply with eBay picture requirements, including the requirement that all images must be at least 500 pixels on its longest side. If the image does not satisfy the 500 pixels requirement, the listing may be blocked. For more information about other requirements and tips for adding pictures to listings, see the  <a href="https://www.ebay.com/help/selling/listings/adding-pictures-listings?id=4148">Adding pictures to your listings</a> help page.
    /// 						</span>
    /// 						To specify multiple pictures, send each URL in a separate, <b>PictureDetails.PictureURL</b> element. The first URL passed in defaults to be the 'gallery image', and will be the first picture that is shown when a user lands on the View Item page.
    /// 
    /// 						<br><br>
    /// 						If a listing uses a single, self-hosted picture (except in the case of a multiple-variation listing), the picture will be copied to eBay Picture Services (EPS) and the <b>PictureDetails.PictureURL</b> value returned by <b>GetItem</b> will be an EPS URL.
    /// 
    /// 						<br/><br/>
    /// 						<b>For VerifyAddItem only:</b> You must include a picture even when using <b>VerifyAddItem</b>. If you don't have a image file, you can use the following
    /// 						fake eBay Picture Services URL (https://i2.ebayimg.com/abc/M28/dummy.jpg) with this call.
    /// 
    /// 						<br><br>
    /// 						<b>For ReviseItem and RelistItem only:</b> To remove a picture when
    /// 						revising or relisting an item, specify <b>PictureDetails</b> with all the pictures that you want the listing to include. That is, you need to completely replace the original set
    /// 						of URLs with the revised set. You cannot remove all the <b>PictureURL</b> fields from a listing because each listing requires at least one picture.
    /// 						<br/><br/>
    /// 						<b>Remember</b>: The 'gallery image' will be the first <b>PictureURL</b> in the array of <b>PictureURL</b> fields. So, if the first image passed in when relisting/revising is different from when the listing was created, the 'gallery image' will be changed.
    /// 
    /// 						<br/><br/>
    /// 						<span class="tablenote">
    /// 						<strong>Note:</strong> For some large merchants, there are no limitations on when pictures can be added or removed from a fixed-price listing, even when the listing has had transactions or is set to end within 12 hours.
    /// 						</span>
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("PictureURL")]

	public System.Collections.Generic.List<string> PictureURL { get; set; }
    /// <summary>
    /// GetItemDetailLevel: ItemReturnAttributes, ReturnAllConditionally
    /// EPSAddFixedPriceItemRelistFixedPriceItemReviseFixedPriceItemVerifyAddFixedPriceItemNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						The value in this field indicates if the listing contains image files uploaded to the eBay Picture Server (EPS), or externally-hosted images for which eBay created EPS equivalents.<br><br>This value defaults to <code>EPS</code>, so if a seller is going to upload externally-hosted image URLs, this field must be included and set to <code>Vendor</code>.
    /// 						<br/><br/>
    /// 						<span class="tablenote">
    /// 						<strong>Note:</strong>  Original EPS and externally-hosted images cannot be mixed, so this value cannot be changed if a listing already has one or more images.
    /// 						</span>
    /// 					
    /// </remarks>

	public PictureSourceCodeType? PictureSource { get; set; }
    /// <summary>
    /// GetItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates if the gallery image upload failed and gives a reason
    /// 						for the failure, such as 'InvalidUrl' or 'ServerDown'. It is not
    /// 						returned if the gallery image is uploaded successfully.
    /// 					
    /// </remarks>

	public GalleryStatusCodeType? GalleryStatus { get; set; }
    /// <summary>
    /// 1024
    /// GetItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates the reason the
    /// 						gallery generation failed, such as, URL for the image is not valid.
    /// 						This field is returned when <b>GalleryStatus</b> field is returned
    /// 						and does not appear when the gallery generation is successful.
    /// 						<br/>
    /// 					
    /// </remarks>

	public string GalleryErrorInfo { get; set; }
    /// <summary>
    /// 500
    /// 1
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription, ReturnAll
    /// Picture hostinghttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/picture-hosting.html
    /// </summary>
    /// <remarks>
    /// 
    /// 						When returned this contains the original URL of a self-hosted pictures, associated with the item when	the item was listed.
    /// 						<br/>
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("ExternalPictureURL")]

	public System.Collections.Generic.List<string> ExternalPictureURL { get; set; }
    /// <summary>
    /// 1375
    /// NotReturned
    /// PictureDetails.ExternalPictureURL
    /// GetItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The <b>ExtendedPictureDetails</b> container and its child fields are no longer returned under any circumstances, including when self-hosted pictures are used for the item. When self-hosted pictures are used by the seller, only the external URL of the gallery image is shown in the PictureDetails.ExternalPictureURL field, and only the equivalent eBay Picture Server (EPS) URLs are shown for the rest of the item's images in separate <b>PictureDetails.PictureURL</b> fields.
    /// 					
    /// </remarks>

	public ExtendedPictureDetailsType ExtendedPictureDetails { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				URL and size information for each generated and stored picture.
/// 				This data is provided for use in application previews of pictures.
/// 				This data is used for display control for specific pictures in the generated imageset.
/// 				This container is supplied for all generated pictures.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class PictureSetMemberType {

#region 属性
    /// <summary>
    /// UploadSiteHostedPicturesAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						URL for the picture.
    /// 					
    /// </remarks>

	public string MemberURL { get; set; }
    /// <summary>
    /// UploadSiteHostedPicturesAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Height of the picture in pixels.
    /// 					
    /// </remarks>

	public int? PictureHeight { get; set; }
    /// <summary>
    /// UploadSiteHostedPicturesAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Width of the picture in pixels.
    /// 					
    /// </remarks>

	public int? PictureWidth { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This container returns the URLs of the seller's self-hosted (hosted outside of eBay) pictures and the URL for the corresponding eBay Picture Services (EPS), that was generated when the picture was uploaded.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class PictureURLsType {

#region 属性
    /// <summary>
    /// 150
    /// 24
    /// GetItemConditionallyDetailLevel: none,ItemReturnDescription,ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						The <b>ExtendedPictureDetails</b> container and its child fields are no longer returned under any circumstances, including when self-hosted pictures are used for the item. When self-hosted pictures are used by the seller, only the external URL of the gallery image is shown in the <b>PictureDetails.ExternalPictureURL</b> field, and only the equivalent eBay Picture Server (EPS) URLs are shown for the rest of the item's images in separate <b>PictureDetails.PictureURL</b> fields.
    /// 					
    /// </remarks>

	public string eBayPictureURL { get; set; }
    /// <summary>
    /// 150
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						The <b>ExtendedPictureDetails</b> container and its child fields are no longer returned under any circumstances, including when self-hosted pictures are used for the item. When self-hosted pictures are used by the seller, only the external URL of the gallery image is shown in the <b>PictureDetails.ExternalPictureURL</b> field, and only the equivalent eBay Picture Server (EPS) URLs are shown for the rest of the item's images in separate <b>PictureDetails.PictureURL</b> fields.
    /// 					
    /// </remarks>

	public string ExternalPictureURL { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 			Defines variation-specific pictures associated with one
/// 			<b>VariationSpecificName</b> (e.g., Color) whose values differ across variations.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class PicturesType {

#region 属性
    /// <summary>
    /// 40
    /// AddFixedPriceItemReviseFixedPriceItemRelistFixedPriceItemVerifyAddFixedPriceItemConditionally
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						One aspect of the variations that will be illustrated in the
    /// 						pictures for all variations. For example, if each variation
    /// 						is visually distinguished by color and the pictures show
    /// 						the different colors available, then specify "Color" as the name.
    /// 						The name must match one of the names specified in the
    /// 						<b>VariationSpecifics</b> container.
    /// 						<br><br>
    /// 						This field is required in each <b>Item.Variations.Pictures</b> container that is used.
    /// 						<br>
    /// 					
    /// </remarks>

	public string VariationSpecificName { get; set; }
    /// <summary>
    /// AddFixedPriceItemVerifyAddFixedPriceItemRelistFixedPriceItemReviseFixedPriceItemConditionally
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						A container consisting of one or more picture URLs associated with a variation
    /// 						specific value (e.g., color=blue). For example, suppose a listing contains blue
    /// 						and black color variations, and <b>VariationSpecificName=Color</b>.
    /// 						In this case, one picture set could contain pictures of the blue shirts (e.g.,
    /// 						front view, back view, and close-up of a trim detail), and another picture set
    /// 						could contain pictures of the black shirts.
    /// 						<br><br>
    /// 						A variation specific picture set can consist of up to 12 images hosted by eBay
    /// 						Picture Services (EPS) or self-hosted (hosted outside of eBay) pictures.
    /// 						The eBay Picture Services and self-hosted images can never
    /// 						be combined into the same variation specific picture set.
    /// 						<br><br>
    /// 						At least one picture set is required if the <b>Pictures</b> node
    /// 						is present in the request. You are not required to provide pictures
    /// 						for all values that correspond to the variation specific name.
    /// 						For example, a listing could have pictures depicting the blue and
    /// 						black color variations, but not the pink variations.
    /// 						<br/><br/>
    /// 						<span class="tablenote"><b>Note: </b>
    /// 						All images must comply with the <a href="https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/pictures.html">Picture Requirements</a>.
    /// 						</span>
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("VariationSpecificPictureSet")]

	public System.Collections.Generic.List<VariationSpecificPictureSetType> VariationSpecificPictureSet { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// GeteBayDetailsConditionally
/// </summary>
/// <remarks>
/// 
/// 				This type is deprecated, as the maximum number of policy violations for a buyer is no longer a valid Buyer Requirement at the account or listing level.
/// 
/// 				
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class PolicyViolationDurationDetailsType {

#region 属性
    /// <summary>
    /// 
    /// 1065
    /// NoOp
    /// 1065
    /// 
    /// </summary>

	public PeriodCodeType? Period { get; set; }
    /// <summary>
    /// 
    /// 1065
    /// NoOp
    /// 1065
    /// 
    /// </summary>

	public string Description { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
///  
/// 				Indicates category support for listing of Local Market items by sellers
/// 				subscribed to Local Market for Premium Vehicles.
/// 				Each of the subscriptions will have following options, which will define
/// 				"National" vs "Local" ad format listing.
/// 				"LocalOptional" : This will allow national and local listing.
/// 				"LocalOnly" : Seller can have Local listings only.
/// 				"NationalOnly" : Seller can not opt into local only exposure. It has to be 
/// 				national listing.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class PremiumSubscriptionDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
///  
/// 				Defines the ProPack feature (a feature pack). If the field is present, the corresponding feature applies to the category. The field is returned as an empty element (i.e., a boolean value is not returned).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ProPackEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
///  
/// 				Defines the ProPackPlus feature (a feature pack). If the field is present, the corresponding feature applies to the category. The field is returned as an empty element (i.e., a boolean value is not returned).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ProPackPlusEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Defines the product creation enable feature. If a field of this type is present, the corresponding feature applies to the site. The field is returned as an empty element (e.g., a boolean value is not returned).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ProductCreationEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type defines the <b>ProductDetails</b> container that is returned in the <b>GeteBayDetails</b> response if the <code>ProductDetails</code> value is used in a <b>DetailName</b> field (or no <b>DetailName</b> fields are used).
/// 				<br><br>
/// 				The <b>ProductDetails</b> container shows the substitute text that can be used in place of an actual product identifier (e.g. EAN, ISBNs, UPC, or MPN) in case the product does not have a product identifier and/or the product identifier is not known by the seller.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ProductDetailsType {

#region 属性
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field contains the actual text that should be passed into the relevant product identifier fields (e.g. <b>ProductListingDetails.UPC</b> in an <b>AddItem</b> call) when creating a listing. Some eBay categories require one or more Global Trade Item Numbers (GTINs), so either the actual GTIN or this substitute text must be passed into the relevant fields.
    /// 					
    /// </remarks>

	public string ProductIdentifierUnavailableText { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type used by the <b>ProductListingDetails</b> container, which is used by a seller in an add/revise/relist call to identify a product through a Global Trade Item Number (EAN, ISBN, or UPC) or an eBay Product ID (e.g. 'ePID'). If a specified product identifier is matched to a product in the eBay catalog, some of the details for the product listing, such as listing category, product title, product description, product aspects, and stock photo are prefilled for the listing.
/// 				<br>
/// 				<br>
/// 				<span class="tablenote"><b>Note:</b>
/// 				If a Brand/MPN pair is required for the product, these values must still be input through the <b>BrandMPN</b> container.
/// 				</span>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ProductListingDetailsType {

#region 属性
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemNotrue
    /// GetBidderListConditionally
    /// GetItemDetailLevel: ItemReturnAttributes, ReturnAllConditionally
    /// Using eBay stock photoshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/stock-photos.html
    /// </summary>
    /// <remarks>
    /// 
    /// 						If this value is <code>true</code>, the listing will use the eBay catalog product's stock photo. In an Add/Revise/Relist call, this field is set to <code>true</code> by default. If you will be using an eBay catalog product to list your item, it is always advised to include the stock photo. Sellers can also add their own pictures using one or more <b>Item.PictureDetails.PictureURL</b> fields. Seller photos are particularly recommended for used and modified products to give prospective buyers a clear sense of exactly what they are purchasing.
    /// 						In <b>GetItem</b> and other 'Get' calls, the URL of the stock photo will be returned in the <b>StockPhotoURL</b> field.
    /// 						<br/>
    /// 					
    /// </remarks>

	public bool? IncludeStockPhotoURL { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemNotrue
    /// GetBidderListConditionally
    /// GetItemDetailLevel: ItemReturnAttributes, ReturnAllConditionally
    /// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/stock-photos.html#galleryStock photo as gallery image
    /// </summary>
    /// <remarks>
    /// 
    /// 						If this value is <code>true</code>, the listing will use the eBay catalog product's stock photo as the Gallery thumbnail photo. In an Add/Revise/Relist call, this field is set to <code>true</code> by default. If this field is set to <code>true</code>, the <b>IncludeStockPhotoURL</b> field must also be set to <code>true</code> or this field will have no effect. Sellers can also add their own pictures using one or more <b>Item.PictureDetails.PictureURL</b> fields, but none of these photos will be the Gallery thumbnail photo.
    /// 						<br>
    /// 					
    /// </remarks>

	public bool? UseStockPhotoURLAsGallery { get; set; }
    /// <summary>
    /// GetBidderListConditionally
    /// GetItemDetailLevel: ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The full URL for the eBay catalog product's stock photo. This field is only returned if the seller used an eBay catalog product to list the item, and the
    /// 						<b>IncludeStockPhotoURL</b> field was set to <code>true</code>.
    /// 					
    /// </remarks>

	public string StockPhotoURL { get; set; }
    /// <summary>
    /// GetBidderListConditionally
    /// GetItemDetailLevel: ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Copyright statement indicating the source of the product information. This information will be
    /// 						included in the listing if the seller used an eBay catalog product to list the item.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("Copyright")]

	public System.Collections.Generic.List<string> Copyright { get; set; }
    /// <summary>
    /// 38 (42 with "EPID")
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						In an Add/Revise/Relist call, this field is used to pass in the eBay Product ID (e.g. ePID), which is the unique identifier of an eBay catalog product. Although an eBay catalog product match can be found using one or more GTIN values, passing in an ePID value is the best way to try and discover the appropriate eBay catalog product.
    /// 						<br>
    /// 						<br>
    /// 						This field is also returned in <b>GetItem</b> if the listing is associated with a eBay catalog product.
    /// 						<br>
    /// 					
    /// </remarks>

	public string ProductReferenceID { get; set; }
    /// <remarks>
    /// 
    /// 						This field is no longer applicable and should not be used.
    /// 					
    /// </remarks>

	public string DetailsURL { get; set; }
    /// <remarks>
    /// 
    /// 						This field is no longer applicable and should not be used.
    /// 					
    /// </remarks>

	public string ProductDetailsURL { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemNofalse
    /// </summary>
    /// <remarks>
    /// 
    /// 						If the seller attempts to use <b>ProductListingDetails</b> in an Add/Revise/Relist call to find an eBay catalog product match, and multiple matches are found, the call will actually fail. This field can be included and set to <code>true</code> if the seller wants to see the eBay catalog products that were found through error messages in the call response. This flag will not have an effect if only one catalog product matchi is found, or if the <b>UseFirstProduct</b> field is used and set to  <code>true</code> and a catalog product is found to create/revise the listing. <br>
    /// 						<br>
    /// 						If this field is omitted or set to <code>false</code>, and multiple catalog products are found, the call will fail and no information about the matching catalog products will be returned.
    /// 						<br>
    /// 					
    /// </remarks>

	public bool? ReturnSearchResultOnDuplicates { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetItemDetailLevel: ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is used if the seller wants to, or is required to identify a product using an ISBN (International Standard Book Number) value. An ISBN is a unique identifer for books. Both 10 and 13-character ISBNs are supported. When specifying a 13-character ISBN, the value must begin with either '978' or '979'. The seller can use the <b>GetCategoryFeatures</b> call to see if an ISBN is supported/required for a category.
    /// 						<br/><br/>
    /// 						If the <b>IncludeeBayProductDetails</b> field is omitted or included and set to <code>true</code>, eBay will use the ISBN value passed into this field to try and find a matching eBay catalog product. If a match is found, the listing will pick up the product details of the catalog product, including the product title, product description, item specifics, and stock photo. If the seller is passing in an ePID through the <b>ProductReferenceID</b> field, this field is not needed, as all product identifiers will get picked up automatically by the listing if a matching catalog product is found.
    /// 						<br/><br/>
    /// 						This field is only applicable for single-variation listings. For multiple-variation listings, if the category/product requires an ISBN value, this value should be passed into the <b>Variation.VariationProductListingDetails.ISBN</b> field instead.
    /// 						<br/><br/>
    /// 						<span class="tablenote"><b>Note: </b>
    /// 						If the listing is being posted to a category that expects an ISBN value, but one doesn't exist for the product, the seller must pass in the text that can be found in the <b>ProductDetails.ProductIdentifierUnavailableText</b> field of the <b>GeteBayDetails</b> response. To get the <b>ProductDetails</b> container to return in the <b>GeteBayDetails</b> response, <code>ProductDetails</code> should be included as a <b>DetailName</b> value in the call request.
    /// 						</span>
    /// 					
    /// </remarks>

	public string ISBN { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetItemDetailLevel: ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is used if the seller wants to, or is required to identify a product using a UPC (Universal Product Code) value. A UPC is a commonly used identifer for many different products. The seller can use the <b>GetCategoryFeatures</b> call to see if a UPC is supported/required for a category.
    /// 						<br/><br/>
    /// 						<span class="tablenote"><b>Note: </b>
    /// 						The <b>UPC</b> (and UPC values) are typically only applicable to US products listed on US eBay marketplace. If a European seller is selling a European-based product (with an EAN value) on the US site, instead of using the <b>EAN</b> field, the seller will use the <b>UPC</b> field to pass in the EAN value.
    /// 						</span>
    /// 						<br/>
    /// 						If the <b>IncludeeBayProductDetails</b> field is omitted or included and set to <code>true</code>, eBay will use the UPC value passed into this field to try and find a matching eBay catalog product. If a match is found, the listing will pick up the product details of the catalog product, including the product title, product description, item specifics, and stock photo. If the seller is passing in an ePID through the <b>ProductReferenceID</b> field, this field is not needed, as all product identifiers will get picked up automatically by the listing if a matching catalog product is found.
    /// 						<br/><br/>
    /// 						This field is only applicable for single-variation listings. For multiple-variation listings, if the category/product requires a UPC value, this value should be passed into the <b>Variation.VariationProductListingDetails.UPC</b> field instead.
    /// 						<br/><br/>
    /// 						<span class="tablenote"><b>Note: </b>
    /// 						If the listing is being posted to a category that expects a UPC value, but one doesn't exist for the product, the seller must pass in the text that can be found in the <b>ProductDetails.ProductIdentifierUnavailableText</b> field of the <b>GeteBayDetails</b> response. To get the <b>ProductDetails</b> container to return in the <b>GeteBayDetails</b> response, <code>ProductDetails</code> should be included as a <b>DetailName</b> value in the call request.
    /// 						</span>
    /// 					
    /// </remarks>

	public string UPC { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetItemDetailLevel: ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is used if the seller wants to, or is required to identify a product using an EAN (European Article Number) value. An  EAN is a unique 8 or 13-digit identifier that many industries (such as book publishers) use to identify products. The seller can use the <b>GetCategoryFeatures</b> call to see if an EAN is supported/required for a category.
    /// 						<br/><br/>
    /// 						<span class="tablenote"><b>Note: </b>
    /// 						The <b>EAN</b> (and EAN values) are typically only applicable to European products listed on European eBay marketplaces. If a US seller is selling a US-based product (with a UPC value) on a European site (such as eBay UK), instead of using the <b>UPC</b> field, the seller will use the <b>EAN</b> field to pass in the UPC value.
    /// 						</span>
    /// 						<br/>
    /// 						If the <b>IncludeeBayProductDetails</b> field is omitted or included and set to <code>true</code>, eBay will use the EAN value passed into this field to try and find a matching eBay catalog product. If a match is found, the listing will pick up the product details of the catalog product, including the product title, product description, item specifics, and stock photo. If the seller is passing in an ePID through the <b>ProductReferenceID</b> field, this field is not needed, as all product identifiers will get picked up automatically by the listing if a matching catalog product is found.
    /// 						<br/><br/>
    /// 						This field is only applicable for single-variation listings. For multiple-variation listings, if the category/product requires an EAN value, this value should be passed into the <b>Variation.VariationProductListingDetails.EAN</b> field instead.
    /// 						<br/><br/>
    /// 						<span class="tablenote"><b>Note: </b>
    /// 						If the listing is being posted to a category that expects an EAN value, but one doesn't exist for the product, the seller must pass in the text that can be found in the <b>ProductDetails.ProductIdentifierUnavailableText</b> field of the <b>GeteBayDetails</b> response. To get the <b>ProductDetails</b> container to return in the <b>GeteBayDetails</b> response, <code>ProductDetails</code> should be included as a <b>DetailName</b> value in the call request.
    /// 						</span>
    /// 					
    /// </remarks>

	public string EAN { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetItemDetailLevel: ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container is used if the seller wants to, or is required to identify a product using an Brand/Manufacturer Part Number (MPN) pair. The seller can use the <b>GetCategoryFeatures</b> call to see if a Brand/MPN pair is supported/required for a category. Both the <b>Brand</b> and <b>MPN</b> fields are required if the category/product requires an MPN value.
    /// 						<br/><br/>
    /// 						If the <b>IncludeeBayProductDetails</b> field is omitted or included and set to <code>true</code>, eBay will use the Brand/MPN pair to try and find a matching eBay catalog product. If a match is found, the listing will pick up the product details of the catalog product, including the product title, product description, item specifics, and stock photo. If the seller is passing in an ePID through the <b>ProductReferenceID</b> field, this field is not needed, as all product identifiers associated with the catalog product will get picked up automatically by the listing if a matching catalog product is found.
    /// 						<br/><br/>
    /// 						This container is only applicable for single-variation listings. For multiple-variation listings, if the category requires Brand/MPN pairs, the product brand (shared by all variations in this listing) is passed in through the item-level item specifics (<b>Item.ItemSpecifics.NameValueList</b>), and the MPN value for each variation in the listing is passed in through the variation-level item specifics (<b>Variation.VariationSpecifics.NameValueList</b>).
    /// 						<br/><br/>
    /// 						<span class="tablenote"><b>Note: </b>
    /// 						If the listing is being posted to a category that requires or recommends a Brand and MPN value, the Brand and MPN values for the product should always be passed in through separate <b>ItemSpecifics.NameValueList</b> containers since the Brand and MPN values passed in through the <b>ProductListingDetails.BrandMPN</b> will not get picked up by the generated/revised listing unless the the Brand/MPN pair is successfully matched to an eBay catalog product. If an MPN doesn't exist for a product, or the seller does not have it available, the seller must pass in the text that can be found in the <b>ProductDetails.ProductIdentifierUnavailableText</b> field of the <b>GeteBayDetails</b> response. To get the <b>ProductDetails</b> container to return in the <b>GeteBayDetails</b> response, <code>ProductDetails</code> should be included as a <b>DetailName</b> value in the call request.
    /// 						</span>
    /// 						<br>
    /// 					
    /// </remarks>

	public BrandMPNType BrandMPN { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemNofalse
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field can be included and set to <code>true</code> if the seller wants to use the first eBay catalog product that is found to create/revise the listing. eBay will search for an eBay catalog product match if the seller provides an ePID or one or more GTIN values. If this field is omitted, or included and set to <code>false</code>, the call will fail if more than one eBay catalog product is found.
    /// 						<br>
    /// 					
    /// </remarks>

	public bool? UseFirstProduct { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemNotrue
    /// GetBidderListConditionally
    /// GetItemDetailLevel: ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This boolean field controls whether or not an eBay catalog product is used to create or revise a listing. If an ePID or GTIN value is provided through the <b>ProductListingDetails</b> container when adding, revising, or relisting an item, the default behavior is for eBay to try and find a match for the product in the eBay catalog, and then automatically create/revise the listing using the product title, product description, item specifics, and stock photo defined for the catalog product.
    /// 						<br><br>
    /// 						If the seller wants to use an eBay catalog product to create/revise a listing, the seller can include this field and set its value to <code>true</code>, or just omit this field, as its default value is <code>true</code>. If a seller doesn't want use an eBay catalog product to create/revise their listing, this field should be included and set to <code>false</code>. If the seller declines to use an eBay catalog product, they will be required to pass in their own listing title, listing description, item specifics, a listing category, and at least one picture.
    /// 						<br>
    /// 					
    /// </remarks>

	public bool? IncludeeBayProductDetails { get; set; }
    /// <remarks>
    /// 
    /// 						This container is for future use. If it used, it will be ignored.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("NameValueList")]

	public System.Collections.Generic.List<NameValueListType> NameValueList { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>ProductRequiredEnabled</b> field that is returned under the <b>FeatureDefinitions</b> container of the <b>GetCategoryFeatures</b> response (as long as <b>ProductRequiredEnabled</b> is included as a <a href="types/FeatureIDCodeType.html">FeatureID</a> value in the call request or no <b>FeatureID</b> values are passed into the call request). The <b>ProductRequiredEnabled</b> field is returned as an empty element (a boolean value is not returned) if one or more eBay API-enabled sites support the Product-Based Shopping Experience.
/// 				<br>
/// 				<br>
/// 				<span class="tablenote"><b>Note:</b>
/// 				Due to the rollback of the Product-Based Shopping Experience mandate for all eBay categories, the <b>FeatureDefinitions.ProductRequiredEnabled</b> field no longer has any practical use. Due to this fact, the <b>ProductRequiredEnabledDefinitionType</b> is currently not applicable.
/// 				</span>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ProductRequiredEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
///              Type defining the <b>Pictograms</b> and <b>Statements</b> containers, and the <b>Component</b> field, that provide product safety and compliance related information.
/// 			<br />
/// 			<span class="tablenote"><b>Note: </b> As a part of General Product Safety Regulation (GPSR) requirements effective on December 13th, 2024, sellers sellers operating in, or shipping to, EU-based countries or Northern Ireland are conditionally required to provide product safety and compliance information in their eBay listings. For more information on GPSR, see <a href = "https://www.ebay.com/sellercenter/resources/general-product-safety-regulation" target="_blank">General Product Safety Regulation (GPSR)</a>.</span>			 
/// 			 
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ProductSafetyType {

#region 属性
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemConditionally
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container is used by the seller to provide product safety pictograms for the listing. This field is conditionally required if product safety information is supplied.
    /// 						<br />
    /// 						<span class="tablenote"><b>Note:</b> When supplying product safety information, one of the following elements is required: <b>Pictograms</b> or <b>Statements</b>. Both elements can be included on a listing, but only one is required.</span>	
    /// 						A maximum of 2 pictograms are allowed for product safety. 
    /// 					
    /// </remarks>

	public PictogramsType Pictograms { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemConditionally
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container is used by the seller to provide product safety statements for the listing. This field is conditionally required if product safety information is supplied. 
    /// 						<br />
    /// 						<span class="tablenote"><b>Note:</b> When supplying product safety information, one of the following elements is required: <b>Pictograms</b> or <b>Statements</b>. Both elements can be included on a listing, but only one is required.</span>	
    /// 						A maximum of 8 statements are allowed for product safety. 
    /// 					
    /// </remarks>

	public StatementsType Statements { get; set; }
    /// <summary>
    /// 50 characters for this field
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemNo
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is used by the seller to provide product safety component information for the listing. For example, component information can include specific warnings related to product safety, such as 'Tipping hazard'. This field is optional for Product Safety. 
    /// 						<br />
    /// 		                <span class="tablenote"><b>Note: </b> Component information can only be specified if used with the <b>Pictograms</b> and/or <b>Statements</b> field; if the component is provided without one or both of these fields, an error will occur. </span>	
    /// 					
    /// </remarks>

	public string Component { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Identifies an individual product suggestion. The product details include the EPID, Title, Stock photo url and if it is 
/// 				an exact match.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ProductSuggestionType {

#region 属性
    /// <summary>
    /// 80
    /// AddFixedPriceItemAddItemRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyRelistItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The title of the product from the eBay catalog.
    /// 					
    /// </remarks>

	public string Title { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyRelistItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The product reference Id of the product
    /// 						The eBay Product ID, a global reference ID for an eBay catalog product. The
    /// 						ePID is a fixed reference to a product (regardless of version).
    /// 					
    /// </remarks>

	public string EPID { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyRelistItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Fully qualified URL for a stock image (if any) that is associated with the
    /// 						eBay catalog product. The URL is for the image eBay usually displays in
    /// 						product search results (usually 70px tall). It may be helpful to calculate the
    /// 						dimensions of the photo programmatically before displaying it.
    /// 					
    /// </remarks>

	public string StockPhoto { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyRelistItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						If true, indicates that the product is an exact match, suitable for listing 
    /// 						the item.
    /// 					
    /// </remarks>

	public bool? Recommended { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Provides a list of products recommended by eBay, which match the item information
/// 				provided by the seller.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ProductSuggestionsType {

#region 属性
    /// <summary>
    /// AddFixedPriceItemAddItemRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyRelistItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Contains details for one or more individual product suggestions. The product
    /// 						details include the EPID, Title, Stock photo url and whether or not the product
    /// 						is an exact match for the submitted item. This product information can be used
    /// 						to list subsequent items.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("ProductSuggestion")]

	public System.Collections.Generic.List<ProductSuggestionType> ProductSuggestion { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>PaymentProfileCategoryGroup</b>, <b> ReturnPolicyProfileCategoryGroup</b>, and <b>ShippingProfileCategoryGroup</b> fields, which are all returned in the <b>GetCategoryFeature</b> response if these Business Policies profile types apply to the category. Each of these fields is returned as an empty element.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ProfileCategoryGroupDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				If a seller has reduced the price of a listed item with the Promotional Price Display
/// 				feature, this type contains the original price of the discounted item and other
/// 				information.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class PromotionalSaleDetailsType {

#region 属性
    /// <summary>
    /// GetBidderListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetMyeBayBuyingWatchListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingActiveListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Original price of an item whose price a seller has reduced with the Promotional Price
    /// 						Display feature.
    /// 					
    /// </remarks>

	public AmountType OriginalPrice { get; set; }
    /// <summary>
    /// GetBidderListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetMyeBayBuyingWatchListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingActiveListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Start time of a discount for an item whose price a seller has reduced with the
    /// 						Promotional Price Display feature.
    /// 					
    /// </remarks>

	public System.DateTime? StartTime { get; set; }
    /// <summary>
    /// GetBidderListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetMyeBayBuyingWatchListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingActiveListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						End time of a discount for an item whose price a seller has reduced with the
    /// 						Promotional Price Display feature.
    /// 					
    /// </remarks>

	public System.DateTime? EndTime { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Details of a promotional shipping discount.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class PromotionalShippingDiscountDetailsType {

#region 属性
    /// <summary>
    /// GetShippingDiscountProfiles
    /// 								MaximumShippingCostPerOrder, ShippingCostXForAmountY, ShippingCostXForItemCountN
    /// 							Conditionally
    /// SetShippingDiscountProfiles
    /// 								MaximumShippingCostPerOrder, ShippingCostXForAmountY, ShippingCostXForItemCountN
    /// 							Conditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// 								MaximumShippingCostPerOrder, ShippingCostXForAmountY, ShippingCostXForItemCountN
    /// 							Conditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The type of promotional shipping discount that is detailed in the profile. If the discount type is <code>MaximumShippingCostPerOrder</code>, see <b>ShippingCost</b>. If the discount type is <code>ShippingCostXForAmountY</code>, see <b>ShippingCost</b> and <b>OrderAmount</b>. If the discount type is <code>ShippingCostXForItemCountN</code>, see <b>ShippingCost</b> and <b>ItemCount</b>.
    /// 					
    /// </remarks>

	public DiscountNameCodeType? DiscountName { get; set; }
    /// <summary>
    /// GetShippingDiscountProfilesConditionally
    /// SetShippingDiscountProfilesConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This is shipping cost X when <b>DiscountName</b> is either <code>ShippingCostXForAmountY</code> or
    /// 						<code>ShippingCostXForItemCountN</code>, and is the maximum cost when <b>DiscountName</b> is
    /// 						<code>MaximumShippingCostPerOrder</code>.
    /// 					
    /// </remarks>

	public AmountType ShippingCost { get; set; }
    /// <summary>
    /// GetShippingDiscountProfilesConditionally
    /// SetShippingDiscountProfilesConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This is the cost Y of the order (not including shipping cost)
    /// 						when <b>DiscountName</b> is set to <code>ShippingCostXForAmountY</code>.
    /// 					
    /// </remarks>

	public AmountType OrderAmount { get; set; }
    /// <summary>
    /// GetShippingDiscountProfilesConditionally
    /// SetShippingDiscountProfilesConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This is the number of items when <b>DiscountName</b> is set to <code>ShippingCostXForItemsY</code>.
    /// 					
    /// </remarks>

	public int? ItemCount { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 			  Contains a seller's preference for sending a "Payment Reminder Email" to buyers.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class PurchaseReminderEmailPreferencesType {

#region 属性
    /// <summary>
    /// GetUserPreferencesConditionally
    /// SetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 					  If true, a payment reminder Email is sent to buyers.
    /// 				  
    /// </remarks>

	public bool? PurchaseReminderEmailPreferences { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type defines the <b>QuantityRestrictionPerBuyer</b> container, which is
/// 				used by the seller to restrict the quantity of items that may be purchased by one buyer
/// 				during the duration of a fixed-price listing (single or multi-variation).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class QuantityRestrictionPerBuyerInfoType {

#region 属性
    /// <summary>
    /// 1
    /// AddFixedPriceItemAddItemAddItemsVerifyAddItemVerifyAddFixedPriceItemConditionally
    /// RelistFixedPriceItemRelistItemVerifyRelistItemReviseFixedPriceItemReviseItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This integer value indicates the maximum quantity of items that a single buyer may
    /// 						purchase during the duration of a fixed-price listing (single or multi-variation).
    /// 						The buyer is blocked from the purchase if that buyer is attempting to purchase a
    /// 						quantity of items that will exceed this value. Previous purchases made by the buyer
    /// 						are taken into account. For example, if <b>MaximumQuantity</b> is set to
    /// 						'5' for an item listing, and <em>Buyer1</em> purchases a quantity of
    /// 						three, <em>Buyer1</em> is only allowed to purchase an additional
    /// 						quantity of two in subsequent orders on the same item listing.
    /// 						<br/><br/>
    /// 						This field is required if the <b>QuantityRestrictionPerBuyer</b>
    /// 						container is used.
    /// 						<br>
    /// 					
    /// </remarks>

	public int? MaximumQuantity { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 			   This type is used to reference a seller's specific domestic and/or international shipping rate tables. Shipping rate tables allow sellers to configure specific shipping costs based on the shipping destinations and level of service (e.g. economy, standard, expedite, and one-day). Generally speaking, sellers want to use these shipping rate tables so they can charge a higher shipping cost to the buyer whenever shipping costs are higher for them as well. For example, shipping to Alaska or Hawaii is generally more expensive than shipping to any other of the 48 US states, or in regards to international shipping, shipping to some regions and countries are more expensive than others.
///    			 <br><br>
/// 				 Sellers configure domestic, international, and regional shipping rate tables in My eBay Shipping Preferences. To apply shipping rate tables, the shipping cost type must be flat-rate.
/// 				 <br><br>
/// 				 For domestic shipping rate tables, the three supported domestic regions are Alaska & Hawaii, US Protectorates (e.g. Puerto Rico and Guam), and APO/FPO destinations, which are US military bases/locations outside of the continental US. In addition to setting one flat rate based on the destination and service level, the seller also has the option of adding an extra charge based on the weight of the shipping package, or they can add a surcharge instead.
/// 				 <br><br>
/// 				 For international shipping rate tables, specific rates may be set up for any and all geographical regions and individual countries within those regions. Similar to domestic shipping rate tables, the seller has the option of adding an extra charge based on the weight of the shipping package. Sellers cannot add a surcharge for international shipping.
/// 				 <br/><br/>
/// 				 <span class="tablenote"><b>Note: </b> The capability to create and use multiple domestic and international shipping rate tables (up to 40 per seller account) has rolled out to the US, Australia, Canada (English and French), Italy, UK, and Germany sites. For other sites, only one domestic and one international shipping rate table may be set up per seller. Until the seller's account is updated with the new shipping rate tables in My eBay, the seller will continue to use the <b>DomesticRateTable</b> and <b>InternationalRateTable</b> tags and pass in <code>Default</code> as the value. Once the seller's account is updated with the new shipping rate tables in My eBay, the seller will be required to use the new <b>DomesticRateTableId</b> and <b>InternationalRateTableId</b> tags, and the <b>DomesticRateTable</b> and <b>InternationalRateTable</b> tags will not work.  Note that shipping rate tables can also be applied to Shipping business policies that are applied against a listing. The new shipping rate tables have all of the functionality of the old shipping rate tables, plus the seller has access to all domestic regions and not just the special regions (such as Alaska & Hawaii, US Protectorates, and APO/FPO locations in US).</span>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class RateTableDetailsType {

#region 属性
    /// <summary>
    /// 50
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetItemDetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAllConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// Shipping rate tableshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/shipping-rate-tables.htmlmore information on using shipping rate tables.
    /// </summary>
    /// <remarks>
    /// 
    ///    					This field is used in an Add/Revise/Relist/Verify call to apply the domestic shipping rate table to the listing.
    /// 						<br><br>
    /// 						In all cases, sellers pass in a string value of <code>Default</code> to apply the domestic shipping rate table. The shipping rates and/or surcharges set up in the domestic shipping rate table will only be applicable based on the location of the buyer, and if that shipping service level is covered in one of the specified shipping service options in the listing. Basically, domestic shipping costs and surcharges are set in one or more <b>ShippingServiceOptions</b> containers in the listing, and based on the settings and costs in the domestic shipping rate table, these shipping costs and/or surcharges may be overridden based on the buyer's location. For example, if the buyer lives in Alaska, and the domestic shipping rate table has one or more shipping rates set up for the <em>Alaska & Hawaii</em> domestic region, the buyer will see these rates in the View Item page and not the rates/costs that are defined in the <b>ShippingServiceOptions</b> containers.
    /// 						<br><br>
    ///    					If a seller is revising or relisting an item, the domestic shipping rate table can be unassociated from the listing by using the empty tag: <code>&lt;DomesticRateTable /&gt;</code>
    ///    					<br><br>
    /// 						This field is returned in the 'Get' calls if a domestic rate table is being applied to the listing, and it is only returned for the seller who listed the item.
    /// 						<br/><br/>
    /// 				 		<span class="tablenote"><b>Note: </b> The capability to create and use multiple domestic and international shipping rate tables (up to 40 per seller account) has rolled out to the US, Australia, Canada (English and French), Italy, UK, and Germany sites. Currently, for sites other than the ones stated, only one domestic and one international shipping rate table may be set up per seller. Until the seller's account is updated with the new shipping rate tables in My eBay, the seller will continue to use the <b>DomesticRateTable</b> and <b>InternationalRateTable</b> tags and pass in <code>Default</code> as the value. Once the seller's account is updated with the new shipping rate tables in My eBay, the seller will be required to use the new <b>DomesticRateTableId</b> and <b>InternationalRateTableId</b> tags, and the <b>DomesticRateTable</b> and <b>InternationalRateTable</b> tags will not work.  Note that shipping rate tables can also be applied to Shipping business policies that are applied against a listing. The new shipping rate tables have all of the functionality of the old shipping rate tables, plus the seller has access to all domestic regions and not just the special regions (such as Alaska & Hawaii, US Protectorates, and APO/FPO locations in US).</span>
    ///    				
    /// </remarks>

	public string DomesticRateTable { get; set; }
    /// <summary>
    /// 50
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetItemDetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAllConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// Shipping rate tableshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/shipping-rate-tables.htmlmore information on using shipping rate tables.
    /// </summary>
    /// <remarks>
    /// 
    ///    					This field is used in an Add/Revise/Relist/Verify call to apply the international shipping rate table to the listing. International shipping rate tables can be used only for items listed on the eBay US, UK, and DE sites.
    /// 						<br><br>
    /// 						In all cases, sellers pass in a string value of <code>Default</code> to apply the international shipping rate table. The shipping rates set up in the international shipping rate table will only be applicable based on the location of the buyer, and if that shipping service level is covered in one of the specified international shipping service options in the listing. Basically, international shipping costs are set in one or more <b>InternationalShippingServiceOption</b> containers in the listing, and based on the settings and costs in the international shipping rate table, these shipping costs may be overridden based on the buyer's location. For example, if the buyer lives in Argentina, and the international shipping rate table has one or more shipping rates set up for the country of <em>Argentina</em>, the buyer will see these rates in the View Item page and not the rates/costs that are defined in the <b>InternationalShippingServiceOption</b> containers.
    /// 						<br><br>
    /// 						If a seller is revising or relisting an item, the international shipping rate table can be unassociated from the listing by using the empty tag: <code>&lt;InternationalRateTable /&gt;</code>
    /// 						<br><br>
    /// 						This field is returned in the 'Get' calls if an international rate table is being applied to the listing, and it is only returned for the seller who listed the item.
    /// 						<br><br>
    /// 				 		<span class="tablenote"><b>Note: </b> The capability to create and use multiple domestic and international shipping rate tables (up to 40 per seller account) has rolled out to the US, Australia, Canada (English and French), Italy, UK, and Germany sites. Currently, for sites other than the ones stated, only one domestic and one international shipping rate table may be set up per seller. Until the seller's account is updated with the new shipping rate tables in My eBay, the seller will continue to use the <b>DomesticRateTable</b> and <b>InternationalRateTable</b> tags and pass in <code>Default</code> as the value. Once the seller's account is updated with the new shipping rate tables in My eBay, the seller will be required to use the new <b>DomesticRateTableId</b> and <b>InternationalRateTableId</b> tags, and the <b>DomesticRateTable</b> and <b>InternationalRateTable</b> tags will not work.  Note that shipping rate tables can also be applied to Shipping business policies that are applied against a listing. The new shipping rate tables have all of the functionality of the old shipping rate tables, plus the seller has access to all domestic regions and not just the special regions (such as Alaska & Hawaii, US Protectorates, and APO/FPO locations in US).</span>
    /// 					
    /// </remarks>

	public string InternationalRateTable { get; set; }
    /// <summary>
    /// 50
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetItemDetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAllConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						<span class="tablenote"><b>Note: </b>This field is only available for sellers on the US, Australia, Canada (English and French), Italy, UK, and Germany sites. The unique shipping rate identifiers that will be passed into this field can be retrieved using the <b>getRateTables</b> call of the <b>Account API</b>, or these identifiers can be viewed in the displayed URL when the seller selects a specific shipping rate table in the Shipping rate tables UI in My eBay.
    /// 						</span>
    /// 						<br>
    /// 						This field is included in an Add/Revise/Relist/Verify call if the seller wants to apply a customized domestic shipping rate table to the listing. The string value that is supplied in this field is the unique identifier of the shipping rate table. If the <b>DomesticRateTableId</b>  field is used, the seller must make sure that the <b>DomesticRateTable</b> and <b>InternationalRateTable</b> fields are not used, as the old and new rate tables cannot be used together or an error will occur.
    /// 						<br><br>
    /// 						In domestic shipping rate tables, sellers customize the flat-rate cost of shipping based on shipping destination (region/state/province) and shipping service level (one-day, expedited, standard, economy in US). In addition to setting one flat rate based on the destination and service level, the seller also has the option of adding an extra charge based on the weight of the shipping package, or they can add a surcharge instead.
    /// 						<br><br>
    /// 						If the seller is using the Revise or Relist call, they must include the <b>DomesticRateTableId</b> field or the domestic shipping rate table currently being applied to the listing will be unassociated from the listing. If they want to continue using the same domestic shipping rate table, the seller will pass in this identifier. The seller can also change the domestic shipping rate table by passing in the identifier for a different domestic shipping rate table.
    /// 						<br><br>
    /// 						If a seller is revising or relisting an item, the domestic shipping rate table can be unassociated from the listing by using the empty tag: <code>&lt;DomesticRateTableId /&gt;</code>
    /// 						<br><br>
    /// 						This field is returned in the 'Get' calls if a customized domestic rate table is being applied to the listing, and it is only returned for the seller who listed the item.
    /// 						<br><br>
    /// 				 		<span class="tablenote"><b>Note: </b> The capability to create and use multiple domestic and international shipping rate tables (up to 40 per seller account) has rolled out to the US, Australia, Canada (English and French), Italy, UK, and Germany sites. For other sites, only one domestic and one international shipping rate table may be set up per seller. Until the seller's account is updated with the new shipping rate tables in My eBay, the seller will continue to use the <b>DomesticRateTable</b> and <b>InternationalRateTable</b> tags and pass in <code>Default</code> as the value. Once the seller's account is updated with the new shipping rate tables in My eBay, the seller will be required to use the new <b>DomesticRateTableId</b> and <b>InternationalRateTableId</b> tags, and the <b>DomesticRateTable</b> and <b>InternationalRateTable</b> tags will not work.  Note that shipping rate tables can also be applied to Shipping business policies that are applied against a listing. The new shipping rate tables have all of the functionality of the old shipping rate tables, plus the seller has access to all domestic regions and not just the special regions (such as Alaska & Hawaii, US Protectorates, and APO/FPO locations in US).</span>
    /// 					
    /// </remarks>

	public string DomesticRateTableId { get; set; }
    /// <summary>
    /// 50
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetItemDetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAllConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 							<span class="tablenote"><b>Note: </b>This field is only available to sellers on the US, Australia, Canada (English and French), Italy, UK, and Germany sites. The unique shipping rate identifiers that will be passed into this field can be retrieved using the <b>getRateTables</b> call of the <b>Account API</b>, or these identifiers can be viewed in the displayed URL when the seller selects a specific shipping rate table in the Shipping rate tables UI in My eBay.
    /// 							</span>
    /// 							<br>
    /// 							This field is included in an Add/Revise/Relist/Verify call if the seller wants to apply a customized international shipping rate table to the listing. The string value that is supplied in this field is the unique identifier of the shipping rate table. If the <b>InternationalRateTableId</b> field is used, the seller must make sure that the <b>DomesticRateTable</b> and <b>InternationalRateTable</b> fields are not used, as the old and new rate tables cannot be used together or an error will occur.
    /// 							<br><br>
    /// 							In international shipping rate tables, sellers customize the flat-rate cost of shipping based on shipping destination (continent/region/country) and shipping service level (expedited, standard, economy in US). In addition to setting one flat rate based on the destination and service level, the seller also has the option of adding an extra charge based on the weight of the shipping package. Unlike domestic shipping, sellers cannot add a surcharge for international shipping.
    /// 							<br><br>
    /// 							If the seller is using the Revise or Relist call, they must include the <b>InternationalRateTableId</b> field or the international shipping rate table currently being applied to the listing will be unassociated from the listing. If they want to continue using the same international shipping rate table, the seller will pass in this identifier. The seller can also change the international shipping rate table by passing in the identifier for a different international shipping rate table.
    /// 							<br><br>
    /// 							If a seller is revising or relisting an item, the domestic shipping rate table can be unassociated from the listing by using the empty tag: <code>&lt;InternationalRateTableId /&gt;</code>
    /// 							<br><br>
    /// 							This field is returned in the 'Get' calls if a customized international rate table is being applied to the listing, and it is only returned for the seller who listed the item.
    /// 							<br/><br/>
    /// 				 			<span class="tablenote"><b>Note: </b> The capability to create and use multiple domestic and international shipping rate tables (up to 40 per seller account) has rolled out to the US, Australia, Canada (English and French), Italy, UK, and Germany sites. For other sites, only one domestic and one international shipping rate table may be set up per seller. Until the seller's account is updated with the new shipping rate tables in My eBay, the seller will continue to use the <b>DomesticRateTable</b> and <b>InternationalRateTable</b> tags and pass in <code>Default</code> as the value. Once the seller's account is updated with the new shipping rate tables in My eBay, the seller will be required to use the new <b>DomesticRateTableId</b> and <b>InternationalRateTableId</b> tags, and the <b>DomesticRateTable</b> and <b>InternationalRateTable</b> tags will not work.  Note that shipping rate tables can also be applied to Shipping business policies that are applied against a listing. The new shipping rate tables have all of the functionality of the old shipping rate tables, plus the seller has access to all domestic regions and not just the special regions (such as Alaska & Hawaii, US Protectorates, and APO/FPO locations in US).</span>
    /// 						
    /// </remarks>

	public string InternationalRateTableId { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				A container for VeRO reason code details.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ReasonCodeDetailType {

#region 属性
    /// <summary>
    /// GetVeROReasonCodeDetailsAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						The short description of the infringement associated with the reason code ID.
    /// 					
    /// </remarks>

	public string BriefText { get; set; }
    /// <summary>
    /// GetVeROReasonCodeDetailsAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						The long description of the infringement associated with the reason code ID.
    /// 					
    /// </remarks>

	public string DetailedText { get; set; }
    /// <summary>
    /// 
    /// 
    /// 
    /// GetVeROReasonCodeDetailsAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						A unique identifier assigned to a reason code. 
    /// 					
    /// </remarks>

	public long? codeID { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
///            Type used by the <strong>RecoupmentPolicyConsent</strong> container that is returned in the <strong>GetItem</strong> call response to indicate which sites the user (specified in <strong>UserID</strong> field of call request) has signed a cross-border trade Recoupment Policy Agreement.
///         
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class RecoupmentPolicyConsentType {

#region 属性
    /// <summary>
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///                   A unique identifier for an eBay site. Each site where the user (specified in <strong>UserID</strong> field of call request) has signed a cross-border trade Recoupment Policy Agreement is returned. The enumeration values that represent these eBay sites can be found in <strong>SiteCodeType</strong>.
    ///                 
    /// </remarks>
[System.Xml.Serialization.XmlElement("Site")]

	public System.Collections.Generic.List<SiteCodeType> Site { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>ReturnPolicyDetails.Refund</b> container that is returned in <b>GeteBayDetails</b>. All of the values (along with descriptions for each value) that can be used as a Refund Option when listing an item is returned under the <b>ReturnPolicyDetails.Refund</b> container.
/// 				<br><br>
/// 				<span class="tablenote"><b>Note:</b> The <b>GeteBayDetails</b> call returns site-default Return Policy settings. For most categories within a given eBay site, the supported Return Policy options/values are the same, but there a few exceptions. To discover what refund options that a particular category supports, call <b>GetCategoryFeatures</b> and include <code>DomesticRefundMethodValues</code> and/or <code>InternationalRefundMethodValues</code> as <b>FeatureID</b> values to see the refund options available for domestic and international returns, respectively.
/// 				</span>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class RefundDetailsType {

#region 属性
    /// <summary>
    /// RefundOptionsCodeType
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates how the seller will compensate the buyer for a returned item. This value can be passed in the Add/Revise/Relist/VerifyAdd API calls.
    /// 						<br/><br/>
    /// 						Currently, on the US site (and many other sites), the seller must offer either a <b>MoneyBack</b> or a <b>MoneyBackOrExchange</b> refund option. Consider using the <b>MoneyBackOrExchange</b> option when you have the depth of inventory to support replacement of the original item. Otherwise, use the <b>MoneyBack</b> option if you have limited inventory.
    /// 					
    /// </remarks>

	public string RefundOption { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Display string that applications can use to present <b>RefundOption</b> in
    /// 						a more user-friendly format (such as in a drop-down list).
    /// 						Not applicable as input to the AddItem family of calls. (Use <b>RefundOption</b> instead.)
    /// 					
    /// </remarks>

	public string Description { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <strong>Refunds</strong> container, which contains an array of <strong>Refund</strong> containers. A <strong>Refund</strong> container consists of detailed information on an In-Store Pickup item refund.
/// 				<br/><br/>
/// 				<span class="tablenote">
/// 				<strong>Note:</strong> At this time, the In-Store Pickup feature is generally only available to large retail merchants on the US site, and can only be applied to multi-quantity, fixed-price listings.
/// 				</span>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class RefundInformationType {

#region 属性
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						 This container consists of detailed information on an In-Store Pickup item refund. This container is only returned if the merchant is refunding (or providing a store credit) the buyer for an In-Store Pickup item. A separate <strong>Refund</strong> container will be returned for each <strong>ORDER.RETURNED</strong> notification that the merchant sends to eBay through the <strong>Inbound Notifications API</strong>.
    /// 						 <br/><br/>
    /// 							<span class="tablenote">
    /// 							<strong>Note:</strong> A seller must be eligible for the In-Store Pickup feature to list an item that is eligible for In-Store Pickup. At this time, the In-Store Pickup feature is generally only available to large retail merchants on the US site, and can only be applied to multi-quantity, fixed-price listings. Eligible Merchants/developers can test In-Store Pickup functionality in the Sandbox environment, including listing items enabled with the In-Store Pickup feature, creating store locations and adding inventory to these stores using the Inventory Management API, and informing eBay of In-Store Pickup status changes using the Inbound Notifications API.
    /// 						</span>
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("Refund")]

	public System.Collections.Generic.List<RefundTransactionInfoType> Refund { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <strong>Refund</strong> container, which consists of detailed information on an In-Store Pickup item refund.
/// 				<br/><br/>
/// 				<span class="tablenote">
/// 				<strong>Note:</strong> At this time, the In-Store Pickup feature is generally only available to large retail merchants in US, and can only be applied to multi-quantity, fixed-price listings.
/// 				</span>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class RefundTransactionInfoType {

#region 属性
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This value indicates whether the merchant refunded or provided a store credit to the buyer for the returned In-Store Pickup item. Applicable values are 'REFUND' and 'STORE_CREDIT'. This value is picked up by eBay when the merchant passes in the <strong>REFUND_TYPE</strong> parameter through the payload of an <strong>ORDER.RETURNED</strong> notification sent to eBay.
    /// 						<br/><br/>
    /// 						<span class="tablenote">
    /// 						<strong>Note:</strong> A seller must be eligible for the In-Store Pickup feature to list an item that is eligible for In-Store Pickup. At this time, the In-Store Pickup feature is generally only available to large retail merchants in US, and can only be applied to multi-quantity, fixed-price listings. Merchants/developers can test In-Store Pickup functionality in the Sandbox environment, including listing items enabled with the In-Store Pickup feature,  creating store locations and adding inventory to these stores using the Inventory Management API, and informing eBay of In-Store Pickup status changes using the Inbound Notifications API.
    /// 						</span>
    /// 					
    /// </remarks>

	public RefundSourceTypeCodeType? RefundType { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is the eBay user ID of the buyer who is receiving the refund or store credit from the merchant. This field is always returned with the <strong>Refund</strong> container.
    /// 						<br/><br/>
    /// 						<b>For GetOrders and GetItemTransactions only:</b> If using Trading WSDL Version 1019 or above, this field will only be returned to the buyer or seller, and no longer returned at all to third parties. If using a Trading WSDL older than Version 1019, the correct refund recipient is returned to the buyer or seller, but the refund recipient will be masked to all third parties.
    /// 						<br/><br/>
    /// 						<span class="tablenote">
    /// 						<strong>Note:</strong> A seller must be eligible for the In-Store Pickup feature to list an item that is eligible for In-Store Pickup. At this time, the In-Store Pickup feature is generally only available to large retail merchants in US, and can only be applied to multi-quantity, fixed-price listings. Merchants/developers can test In-Store Pickup functionality in the Sandbox environment, including listing items enabled with the In-Store Pickup feature,  creating store locations and adding inventory to these stores using the Inventory Management API, and informing eBay of In-Store Pickup status changes using the Inbound Notifications API.
    /// 						</span>
    /// 					
    /// </remarks>

	public UserIdentityType RefundTo { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This date/time value is the timestamp for the refund transaction. This field is not returned if the refund was not successful (RefundStatus=FAILED).
    /// 						<br/><br/>
    /// 						<span class="tablenote">
    /// 						<strong>Note:</strong> A seller must be eligible for the In-Store Pickup feature to list an item that is eligible for In-Store Pickup. At this time, the In-Store Pickup feature is generally only available to large retail merchants in US, and can only be applied to multi-quantity, fixed-price listings. Merchants/developers can test In-Store Pickup functionality in the Sandbox environment, including listing items enabled with the In-Store Pickup feature,  creating store locations and adding inventory to these stores using the Inventory Management API, and informing eBay of In-Store Pickup status changes using the Inbound Notifications API.
    /// 						</span>
    /// 					
    /// </remarks>

	public System.DateTime? RefundTime { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This dollar value is the amount of the refund to the buyer for this specific refund transaction. This field is not returned for In-Store Pick or Click and Collect orders where the merchant issued the buyer a store credit instead of a refund (RefundType=STORE_CREDIT).
    /// 						<br/>
    /// 						<span class="tablenote">
    /// 						<strong>Note:</strong> For <strong>GetItemTransactions</strong> and <strong>GetSellerTransactions</strong>, the final value fee amount deducted from the seller's payout funds for the sale is not included in this field, which means that the amount in this field may not reflect the buyer's actual refund amount. 
    /// 						<br/><br/>
    /// 						The logic will remain the same for <strong>GetItemTransactions</strong> and <strong>GetSellerTransactions</strong>, but the <strong>GetOrders</strong> call will be updated to include the the seller's final value fee amount in this field, so the amount in this field should match the buyer's actual refund amount. To pick up this new logic in <strong>GetOrders</strong> responses, a Trading WSDL version of 1311 or above must be used, or the user can use an older Trading WSDL version but include and set the <strong>X-EBAY-API-COMPATIBILITY-LEVEL</strong> header value to 1311 or above.
    /// 						</span>
    /// 					
    /// </remarks>

	public AmountType RefundAmount { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This value is a merchant-defined identifier used to track In-Store Pickup refunds. This value is picked up by eBay when the merchant passes in the <strong>REFUND_ID</strong> parameter through the payload of an <strong>ORDER.RETURNED</strong> notification sent to eBay. This field is not returned if the merchant does not set this value through <strong>ORDER.RETURNED</strong> notification.
    /// 						<br/><br/>
    /// 						<b>For GetOrders and GetItemTransactions only:</b> If using Trading WSDL Version 1019 or above, this field will only be returned to the buyer or seller, and no longer returned at all to third parties. If using a Trading WSDL older than Version 1019, the correct payment identifier is returned to the buyer or seller, but the payment identifier will be masked to all third parties.
    /// 						<br/><br/>
    /// 						<span class="tablenote">
    /// 						<strong>Note:</strong> A seller must be eligible for the In-Store Pickup feature to list an item that is eligible for In-Store Pickup. At this time, the In-Store Pickup feature is generally only available to large retail merchants in US, and can only be applied to multi-quantity, fixed-price listings. Merchants/developers can test In-Store Pickup functionality in the Sandbox environment, including listing items enabled with the In-Store Pickup feature,  creating store locations and adding inventory to these stores using the Inventory Management API, and informing eBay of In-Store Pickup status changes using the Inbound Notifications API.
    /// 						</span>
    /// 					
    /// </remarks>

	public TransactionReferenceType ReferenceID { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This dollar value is the total amount of the refund to the buyer for the In-Store Pickup order. Typically, this dollar value will be the same as the <strong>RefundAmount</strong> value, unless the merchant is issuing multiple refund transactions to the buyer, in which case, the <strong>FeeOrCreditAmount</strong> value will be the cumulative amount for multiple refund transactions. This field is not returned if the merchant issued the buyer a store credit instead of a refund (RefundType=STORE_CREDIT).
    /// 						<br/><br/>
    /// 						<span class="tablenote">
    /// 						<strong>Note:</strong> A seller must be eligible for the In-Store Pickup feature to list an item that is eligible for In-Store Pickup. At this time, the In-Store Pickup feature is generally only available to large retail merchants in US, and can only be applied to multi-quantity, fixed-price listings. Merchants/developers can test In-Store Pickup functionality in the Sandbox environment, including listing items enabled with the In-Store Pickup feature,  creating store locations and adding inventory to these stores using the Inventory Management API, and informing eBay of In-Store Pickup status changes using the Inbound Notifications API.
    /// 						</span>
    /// 					
    /// </remarks>

	public AmountType FeeOrCreditAmount { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is no longer used; replaced by <b>ShippingLocationDetails</b>.
/// 				
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class RegionDetailsType {

#region 属性
    /// <remarks>
    /// 
    /// 						This field is deprecated.
    /// 					
    /// </remarks>

	public string RegionID { get; set; }
    /// <remarks>
    /// 
    /// 						This field is deprecated.
    /// 					
    /// </remarks>

	public string Description { get; set; }
    /// <remarks>
    /// 
    /// 						This field is deprecated.
    /// 					
    /// </remarks>

	public string DetailVersion { get; set; }
    /// <remarks>
    /// 
    /// 						This field is deprecated.
    /// 					
    /// </remarks>

	public System.DateTime? UpdateTime { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is no longer used; replaced by <b>ShippingLocationDetails</b>.
/// 				
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class RegionOfOriginDetailsType {

#region 属性
    /// <remarks>
    /// 
    /// 						String identifier for a continent, a geographic region, or a country.
    /// 					
    /// </remarks>

	public string RegionOfOrigin { get; set; }
    /// <remarks>
    /// 
    /// 						Full name of the continent, geographic region, or country; useful for display 
    /// 						purposes.
    /// 					
    /// </remarks>

	public string Description { get; set; }
    /// <remarks>
    /// 
    /// 						Indicates the status of the Region of Origin value. Only Region of Origin values 
    /// 						in the 'Active' state can be used.
    /// 					
    /// </remarks>

	public StatusCodeType? Status { get; set; }
    /// <remarks>
    /// 
    /// 						Returns the latest version number for this field. The version can be
    /// 						used to determine if and when to refresh cached client data.
    /// 					
    /// </remarks>

	public string DetailVersion { get; set; }
    /// <remarks>
    /// 
    /// 						Gives the time in GMT that the feature flags for the details were last
    /// 						updated. This timestamp can be used to determine if and when to refresh
    /// 						cached client data.
    /// 					
    /// </remarks>

	public System.DateTime? UpdateTime { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
///  
/// 				Indicates category support for listing of Local Market items by sellers
/// 				subscribed to Local Market for Regular Vehicles.
/// 				Each of the subscriptions will have following options, which will define
/// 				"National" vs "Local" ad format listing.
/// 				"LocalOptional" : This will allow national and local listing.
/// 				"LocalOnly" : Seller can have Local listings only.
/// 				"NationalOnly" : Seller can not opt into local only exposure. It has to be 
/// 				national listing.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class RegularSubscriptionDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the regulatory containers that are used at the listing level to provide Energy Efficiency Label information, hazardous material related information, product safety related information, manufacturer and responsible person information, and the repair score.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class RegulatoryType {

#region 属性
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemNo
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container provides information about the energy efficiency for certain durable goods.<br />
    /// 						<span class="tablenote"><b>Note: </b> As a part of Digital Services Act (DSA) requirements, all sellers who list products in Germany (DE) must provide Energy Efficiency Label information and Product Information Sheets for listings for certain durable goods.</span>
    /// 						<span class="tablenote"><b>Note: </b> Energy efficiency information is not required for all categories. Use the <a href = "/api-docs/sell/metadata/resources/marketplace/methods/getRegulatoryPolicies" target="_blank">getRegulatoryPolicies</a> method of the <a href="https://developer.ebay.com/api-docs/sell/metadata/resources/methods">Metadata API</a> to return metadata on the eBay categories that recommend or require energy efficiency-related fields. </span>
    /// 					
    /// </remarks>

	public EnergyEfficiencyType EnergyEfficiencyLabel { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemNo
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container is used by the seller to provide hazardous material information for the listing. Three elements are required to complete the Hazmat section of a listing: <b>Pictograms</b>, <b>SignalWord</b>, and <b>Statements</b>. The fourth element, <b>Component</b>, is optional. For more information, see <a href=" /api-docs/sell/static/metadata/feature-regulatorhazmatcontainer.html" target="_blank">Specifying hazardous material related information</a>.
    /// 						<br />
    /// 						<span class="tablenote"><b>Note: </b> Hazmat information is not required for all categories. Use the <a href = "/api-docs/sell/metadata/resources/marketplace/methods/getRegulatoryPolicies" target="_blank">getRegulatoryPolicies</a> method of the <a href="https://developer.ebay.com/api-docs/sell/metadata/resources/methods">Metadata API</a> to return metadata on the eBay categories that recommend or require Hazmat-related fields. </span>
    /// 					
    /// </remarks>

	public HazmatType Hazmat { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemNo
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///                         This container is used to provide product safety information for the listing. One of the following elements is required to complete the product safety section for a listing: <b>Pictograms</b> or <b>Statements</b>. The <b>Component</b> element is optional. 
    /// 						<br />		<br />
    /// 						<b>For Revise and Relist calls:</b> To delete all product safety information when you revise or relist, specify <b>Item.Regulatory.ProductSafety</b> in <b>DeletedField</b>, and don't pass <b>ProductSafety</b> in the request.
    /// 						<br />
    /// 						<span class="tablenote"><b>Note: </b> As a part of General Product Safety Regulation (GPSR) requirements effective on December 13th, 2024, sellers operating in, or shipping to, EU-based countries or Northern Ireland are conditionally required to provide product manufacturer information in their eBay listings. Product safety information is not required for all categories. Use the <a href = "/api-docs/sell/metadata/resources/marketplace/methods/getRegulatoryPolicies" target="_blank">getRegulatoryPolicies</a> method of the <a href="https://developer.ebay.com/api-docs/sell/metadata/resources/methods">Metadata API</a> to return metadata on the eBay categories that recommend or require product safety-related fields. For more information on GPSR, see <a href = "https://www.ebay.com/sellercenter/resources/general-product-safety-regulation" target="_blank">General Product Safety Regulation (GPSR)</a>.</span>
    ///                     
    /// </remarks>

	public ProductSafetyType ProductSafety { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemConditionally
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field represents the repair index for the listing.<br><br>The repair index identifies the manufacturer's repair score for a product (how easy is it to repair the product). This field is a floating point value between 0 and 10 but may only have one digit beyond the decimal point, for example: <code>7.9</code><br><span class="tablenote"><b>Note: </b><code>0</code> should not be used as a default value, as it implies that the product is not repairable.</span> 
    /// 					
    /// </remarks>

	public double? RepairScore { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemNo
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container provides information about the manufacturer of the item. 
    /// 						<br /><br /> 
    /// 						<b>For Revise and Relist calls:</b> To delete all manufacturer information when you revise or relist, specify <b>Item.Regulatory.Manufacturer</b> in <b>DeletedField</b>, and don't pass <b>Manufacturer</b> in the request.						
    /// 						<br />
    /// 				        <span class="tablenote"><b>Note: </b> As a part of General Product Safety Regulation (GPSR) requirements effective on December 13th, 2024, sellers operating in, or shipping to, EU-based countries or Northern Ireland are conditionally required to provide product manufacturer information in their eBay listings. Manufacturer information is not required for all categories. Use the <a href = "/api-docs/sell/metadata/resources/marketplace/methods/getRegulatoryPolicies" target="_blank">getRegulatoryPolicies</a> method of the <a href="https://developer.ebay.com/api-docs/sell/metadata/resources/methods">Metadata API</a> to return metadata on the eBay categories that recommend or require manufacturer-related fields. For more information on GPSR, see <a href = "https://www.ebay.com/sellercenter/resources/general-product-safety-regulation" target="_blank">General Product Safety Regulation (GPSR)</a>.</span>		
    /// 					
    /// </remarks>

	public ManufacturerType Manufacturer { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemNo
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container provides information about the EU-based Responsible Persons or entities associated with the listing.
    /// 						<br /><br /> 
    /// 						<b>For Revise and Relist calls:</b> To delete all Responsible Persons information when you revise or relist, specify <b>Item.Regulatory.ResponsiblePersons</b> in <b>DeletedField</b>, and don't pass <b>ResponsiblePersons</b> in the request.
    /// 						<br />
    /// 						<span class="tablenote"><b>Note: </b> As a part of General Product Safety Regulation (GPSR) requirements effective on December 13th, 2024, sellers operating in, or shipping to, EU-based countries or Northern Ireland are conditionally required to provide Responsible Persons information in their eBay listings if the manufacture is not based in the EU. For more information on GPSR, see <a href = "https://www.ebay.com/sellercenter/resources/general-product-safety-regulation" target="_blank">General Product Safety Regulation (GPSR)</a>.</span>
    /// 					
    /// </remarks>

	public ResponsiblePersonsType ResponsiblePersons { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemNo
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///                         This container provides a collection of regulatory documents associated with the listing.
    /// 						<br /><br /> 
    /// 						<b>For Revise and Relist calls:</b> For information on removing one or more files using a Revise/Relist call, see <a href= "/api-docs/sell/static/inventory/managing-document-media.html#revise" target="_blank">Remove documents from listings.</a> 
    /// 						<br />
    /// 						<span class="tablenote"><b>Note: </b> As a part of General Product Safety Regulation (GPSR) requirements effective on December 13th, 2024, sellers operating in, or shipping to, EU-based countries or Northern Ireland are conditionally required to provide regulatory document information in their eBay listings. For more information on GPSR, see <a href = "https://www.ebay.com/sellercenter/resources/general-product-safety-regulation" target="_blank">General Product Safety Regulation (GPSR)</a>.</span>
    ///                     
    /// </remarks>

	public DocumentsType Documents { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
///                 Container for collection of possible responsible person enumerations.
///             
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ResponsiblePersonCodeTypes {

#region 属性
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemConditionally
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///                         The type of Responsible Person associated with the listing.
    ///                         <br />
    /// 				        <span class="tablenote"><b>Note: </b> Currently, the only supported value is <code>EUResponsiblePerson</code>.</span>									
    ///                     
    /// </remarks>
[System.Xml.Serialization.XmlElement("Type")]

	public System.Collections.Generic.List<ResponsiblePersonCodeType> Type { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
///                 Type that provides information, such as name and contact details, for an EU-based Responsible Person or entity, associated with the product. 
///             
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ResponsiblePersonType {

#region 属性
    /// <summary>
    /// 100 characters for this field
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemConditionally
    /// GetItemGetItemsYes
    /// </summary>
    /// <remarks>
    /// 
    ///                         The name of the the Responsible Person or entity.
    /// 						<br />
    ///                     
    /// </remarks>

	public string CompanyName { get; set; }
    /// <summary>
    /// 180 characters for this field
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemConditionally
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///                         The first line of the responsible Responsible Person's address.
    /// 						<br />
    ///                     
    /// </remarks>

	public string Street1 { get; set; }
    /// <summary>
    /// 180 characters for this field
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemNo
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///                         The second line of the Responsible Person's address. This field is not always used, but can be used for secondary address information such as 'Suite Number' or 'Apt Number'.
    /// 						<br />
    ///                     
    /// </remarks>

	public string Street2 { get; set; }
    /// <summary>
    /// 64 characters for this field
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemConditionally
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///                         The city of the Responsible Person's street address.
    /// 						<br />
    ///                     
    /// </remarks>

	public string CityName { get; set; }
    /// <summary>
    /// 64 characters for this field
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemConditionally
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///                         The state of province of the Responsible Person's street address.
    /// 						<br />
    ///                     
    /// </remarks>

	public string StateOrProvince { get; set; }
    /// <summary>
    /// 9 characters for this field
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemConditionally
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///                         The postal code of the Responsible Person's street address.
    /// 						<br />
    ///                     
    /// </remarks>

	public string PostalCode { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemConditionally
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///                         The two letter <a href="https://www.iso.org/iso-3166-country-codes.html" target="_blank">ISO 3166-1</a> standard abbreviation of the country of the Responsible Person's address.
    ///                     
    /// </remarks>

	public CountryCodeType? Country { get; set; }
    /// <summary>
    /// 64 characters for this field
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemConditionally
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///                     The Responsible Person's business phone number. 
    /// 					<br />
    ///                     
    /// </remarks>

	public string Phone { get; set; }
    /// <summary>
    /// 180 characters for this field
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemConditionally
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///                         The Responsible Person's email address.
    /// 						<br />
    ///                     
    /// </remarks>

	public string Email { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemConditionally
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///                         The type(s) associated with the Responsible Person or entity. 
    ///                     
    /// </remarks>

	public ResponsiblePersonCodeTypes Types { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
///                 Type that provides an array of each EU-based Responsible Person or entity associated with the listing. 
/// 				<br />
/// 				<span class="tablenote"><b>Note: </b> As a part of General Product Safety Regulation (GPSR) requirements effective on December 13th, 2024, sellers operating in, or shipping to, EU-based countries or Northern Ireland are conditionally required to provide Responsible Persons information in their eBay listings if the manufacture is not based in the EU. For more information on GPSR, see <a href = "https://www.ebay.com/sellercenter/resources/general-product-safety-regulation" target="_blank">General Product Safety Regulation (GPSR)</a>.</span>
///             
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ResponsiblePersonsType {

#region 属性
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemConditionally
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///                         This container consists of the detailed contact information for each Responsible Person or entity associated with the listing. 
    /// 						<br /><br />
    /// 						A maximum of 5 EU Responsible Persons are supported.
    ///                     
    /// </remarks>
[System.Xml.Serialization.XmlElement("ResponsiblePerson")]

	public System.Collections.Generic.List<ResponsiblePersonType> ResponsiblePerson { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is deprecated, as sellers are no longer allowed to set a restocking fee through a listings's return policy.
/// 
/// 				
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class RestockingFeeValueDetailsType {

#region 属性
    /// <summary>
    /// 
    /// 1061
    /// NoOp
    /// 1061
    /// 
    /// </summary>

	public string RestockingFeeValueOption { get; set; }
    /// <summary>
    /// 
    /// 1061
    /// NoOp
    /// 1061
    /// 
    /// </summary>

	public string Description { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				In some EU countries, sellers are legally required to describe the return policy they offer. The value returned by this field indicates if sellers can provide such description within the given marketplace and category.  <br><br>The values returned in this field are pertinent only if <b>ReturnPolicyEnabled</b> in GetCategoryFeatures is set to <code>true</code> for the associated category, which indicates that items listed in the category must include a return policy. The values returned in this field are valid in AddItem and its related family of calls, and in the return policies you configure for use with the Account API.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ReturnPolicyDescriptionEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>ReturnPolicyDetails</b> container, which is returned in <b>GeteBayDetails</b>, and provides the seller with the Return Policy features (and applicable values) that are supported by the listing site. This container is only returned if <b>ReturnPolicyDetails</b> is included as a <b>DetailName</b>
/// 				filter in the call request, or if no <b>DetailName</b> filters are used in the request.
/// 				<br/><br/>
/// 				<span class="tablenote"><b>Note: </b>
/// 					The <b>GeteBayDetails</b> call returns site-default Return Policy settings. For most categories within a given eBay site, the supported Return Policy options/values are the same, but there a few exceptions. To discover what Return Policy features/settings that a particular category supports, call <b>GetCategoryFeatures</b> and include any or all of the domestic and or international Return Policy-related <b>FeatureID</b> values to see the Return Policy features/settings available for domestic and international returns, respectively.
/// 				</span>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ReturnPolicyDetailsType {

#region 属性
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container consists of the supported refund/exchange/replacement item options that the seller may make available to the buyer in case the buyer wants to return the original item. Enumeration value(s) returned in <b>RefundOption</b> field(s) can be used in the <b>ReturnPolicy.RefundOption</b> field in an Add/Revise/Relist API call.
    /// 						<br/><br/>
    /// 						<span class="tablenote"><b>Note: </b>
    /// 							To discover what refund options that a particular category supports, call <b>GetCategoryFeatures</b> and include <code>DomesticRefundMethodValues</code> and/or <code>InternationalRefundMethodValues</code> as <b>FeatureID</b> values to see the refund options available for domestic and international returns, respectively.
    /// 						</span>
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("Refund")]

	public System.Collections.Generic.List<RefundDetailsType> Refund { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container consists of the supported time periods within which the buyer can return the item, starting from the day they receive the item. Enumeration value(s) returned in <b>ReturnsWithinOption</b> field(s) can be used in the <b>ReturnPolicy.ReturnsWithinOption</b> field in an Add/Revise/Relist API call.
    /// 						<br/><br/>
    /// 						<span class="tablenote"><b>Note: </b>
    /// 							To discover what return durations that a particular category supports, call <b>GetCategoryFeatures</b> and include <code>DomesticReturnsDurationValues</code> and/or <code>InternationalReturnsDurationValues</code> as <b>FeatureID</b> values to see the return durations available for domestic and international returns, respectively.
    /// 						</span>
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("ReturnsWithin")]

	public System.Collections.Generic.List<ReturnsWithinDetailsType> ReturnsWithin { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container consists of the enumeration values that can be passed into the <b>ReturnPolicy.ReturnsAcceptedOption</b> field when using an Add/Revise/Relist API call. This value will indicate whether or not the seller allows the buyer to return the item.
    /// 						<br/><br/>
    /// 						<span class="tablenote"><b>Note: </b>
    /// 							To discover the enumeration values that a particular category supports, call <b>GetCategoryFeatures</b> and include <code>DomesticReturnsAcceptedValues</code> and/or <code>InternationalReturnsAcceptedValues</code> as <b>FeatureID</b> values to see the <b>ReturnPolicy.ReturnsAcceptedOption</b> and <b>ReturnPolicy.InternationalReturnsAcceptedOption</b> values supported for domestic and international returns, respectively.
    /// 						</span>
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("ReturnsAccepted")]

	public System.Collections.Generic.List<ReturnsAcceptedDetailsType> ReturnsAccepted { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned with a value of <code>true</code> if the site supports a text description of the seller's Return Policy in listings. If the site does support a text description of the seller's Return Policy, it is set through the <b>ReturnPolicy.Description</b> field in an Add/Revise/Relist API call. Currently, the only eBay sites that support Return Policy descriptions are Germany, Austria, France, Italy, and Spain.
    /// 						<br/><br/>
    /// 						<span class="tablenote"><b>Note: </b>
    /// 							To discover if a Return Policy desciption is supported by a particular category, call <b>GetCategoryFeatures</b> and include <code>ReturnPolicyDescriptionEnabled</code> as a <b>FeatureID</b> value to see if the category supports the use of a Return Policy description.
    /// 						</span>
    /// 					
    /// </remarks>

	public bool? Description { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container consists of the enumeration values that can be passed into the <b>ReturnPolicy.ShippingCostPaidByOption</b> or <b>ReturnPolicy.InternationalShippingCostPaidByOption</b> field when using an Add/Revise/Relist API call. This value will indicate whether the buyer or seller is responsible for return shipping cost. The enumeration value(s) returned in <b>ShippingCostPaidByOption</b> field(s) can be used in the <b>ReturnPolicy.ShippingCostPaidByOption</b> field in an
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("ShippingCostPaidBy")]

	public System.Collections.Generic.List<ShippingCostPaidByDetailsType> ShippingCostPaidBy { get; set; }
    /// <summary>
    /// 
    /// 1061
    /// NoOp
    /// 1061
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// 					This type is deprecated, as sellers are no longer allowed to set a restocking fee through a listings's return policy.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("RestockingFeeValue")]

	public System.Collections.Generic.List<RestockingFeeValueDetailsType> RestockingFeeValue { get; set; }
    /// <summary>
    /// GeteBayDetailsDetailLevel: none, ReturnSummary, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Returns the latest version number for the Return Policy Details metadata set. The version can be used to determine if and when to refresh cached client data.
    /// 					
    /// </remarks>

	public string DetailVersion { get; set; }
    /// <summary>
    /// GeteBayDetailsDetailLevel: none, ReturnSummary, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						This timestamp in GMT indicate when the Return Policy Details metadata were last updated. This timestamp can be used to determine if and when to refresh cached client data.
    /// 					
    /// </remarks>

	public System.DateTime? UpdateTime { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Defines the feature that specifies whether a return policy
/// 				could be enabled on the site.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ReturnPolicyEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type used to express the details of the return policy for an item.
/// 				<br><br>
/// 				Historically, the <b>GeteBayDetails</b> call has been used to retrieve site-level return policy metadata. However, the <b>GetCategoryFeatures</b> call is now recommended instead because this call now returns category-level metadata for both domestic and international return policies.
/// 				<br><br>
/// 				<span class="tablenote"><b>Note:</b> If a seller does not add a separate international return policy, the settings in the domestic return policy will be used instead. For more information on setting separate domestic and international return policies, see the
/// 				<a href="https://pages.ebay.com/seller-center/seller-updates/2018-summer/simplified-returns.html#international-returns-policy" target="_blank">International returns policy</a> help topic. </span>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ReturnPolicyType {

#region 属性
    /// <summary>
    /// RefundOptionsCodeType
    /// AddFixedPriceItemAddItemAddItemsReviseFixedPriceItemReviseItemRelistFixedPriceItemRelistItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemNo
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetBidderListGranularityLevel: Medium, FineConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Coarse, Medium, FineConditionally
    /// Domestic Refund Methods (in GetCategoryFeatures)supported domestic refund value for each site and categoryhttps://developer.ebay.com/Devzone/XML/docs/Reference/eBay/GetCategoryFeatures.html#Response.Category.DomesticRefundMethodValues
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field indicates how the seller compensates buyers for returns</a>. <code>MoneyBack</code> is the only supported value for all marketplaces except for the US. On the US marketplace, you can set this value to either <code>MoneyBack</code> or <code>MoneyBackOrReplacement</code>. <code>MoneyBackOrReplacement</code> can be used by sellers that have the depth of inventory to support an exchange for an identical item. However, ultimately, it is up to the buyer on whether they want money back or a replacement item.
    /// 						<br><br>
    /// 						<b>For ReviseItem only:</b> You cannot change the value of this field if the listing has bids or sales, or if the listing ends within 12 hours. For more details, see the <b>ReturnPolicy</b> description.
    /// 						<br><br>
    /// 							<span class="tablenote"><b>Note:</b> If a seller ships internationally, and wants to define and use a separate international returns policy, the international equivalent of this field is the <b>InternationalRefundOption</b> field.</span>
    /// 					
    /// </remarks>

	public string RefundOption { get; set; }
    /// <summary>
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetBidderListGranularityLevel: Medium, FineConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Coarse, Medium, FineConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Display string that buyer applications can use to present <b>RefundOption</b> in a more user-friendly format to buyers. For example, in <b>GetItem</b> and related calls, this value is usually localized and can contain spaces. If necessary, you can predict the choice of values based on the <b>Refund.Description</b> options returned by <b>GeteBayDetails</b>.
    /// 						<br><br>
    /// 						This field is applicable to only the US marketplace and is not applicable as input to the <b>Add</b>/<b>Revise</b>/<b>Relist</b> family of calls. (Use <b>RefundOption</b> instead.)
    /// 					
    /// </remarks>

	public string Refund { get; set; }
    /// <summary>
    /// ReturnsWithinOptionsCodeType
    /// AddFixedPriceItemAddItemAddItemsReviseFixedPriceItemReviseItemRelistFixedPriceItemRelistItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetBidderListGranularityLevel: Medium, FineConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Coarse, Medium, FineConditionally
    /// Domestic Return Durations (in GetCategoryFeatures)supported domestic return durations for each site and categoryhttps://developer.ebay.com/Devzone/XML/docs/Reference/eBay/GetCategoryFeatures.html#Response.Category.DomesticReturnsDurationValues
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the amount of time the buyer has to return an item. The return period begins when the item is marked "delivered" at the buyer's specified ship-to location. Most marketplaces and categories support 30-day and 60-day return periods. eBay sites often set 30-days as the default value for this field and sellers are obligated to honor the values that are set for a listing. This value is required if <b>ReturnsAcceptedOption=ReturnsAccepted</b>.
    /// 						<br><br>
    /// 						<b>Applicable values:</b> Retrieve the values supported by a marketplace and category by calling <b>GetCategoryFeatures</b> with <b>FeatureID</b> set to <code>DomesticReturnsDurationValues</code>, then see the values returned under the <b>Category.DomesticReturnsDurationValues</b> container in the response.
    /// 						<br/><br/>
    /// 						<b>For ReviseItem only:</b>  You cannot change the value of this field if the listing has bids or sales, or if the listing ends within 12 hours. For more details, see the <b>ReturnPolicy</b> description.
    /// 						<br><br>
    /// 							<span class="tablenote"><b>Note:</b> If a seller ships internationally, and wants to define and use a separate international returns policy, the international equivalent of this field is the <b>InternationalReturnsWithinOption</b> field.</span>
    /// 					
    /// </remarks>

	public string ReturnsWithinOption { get; set; }
    /// <summary>
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetBidderListGranularityLevel: Medium, FineConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Coarse, Medium, FineConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Display string that buyer applications can use to present <b>ReturnsWithinOption</b> in a more user-friendly format to buyers. For example, in <b>GetItem</b> and related calls, this value is usually localized and can contain spaces.
    /// 						<br/><br/>
    /// 						If necessary, you can predict the choice of values based on the <b>ReturnsWithin.Description</b> options returned by <b>GeteBayDetails</b>.
    /// 						<br><br>
    /// 						Not applicable as input to the <b>AddItem</b> family of calls. (Use <b>ReturnsWithinOption</b> instead.)
    /// 					
    /// </remarks>

	public string ReturnsWithin { get; set; }
    /// <summary>
    /// ReturnsAcceptedOptionsCodeType
    /// AddFixedPriceItemAddItemAddItemsVerifyAddFixedPriceItemVerifyAddItemConditionally
    /// ReviseFixedPriceItemReviseItemRelistFixedPriceItemRelistItemVerifyRelistItemNo
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetBidderListGranularityLevel: Medium, FineConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Coarse, Medium, FineConditionally
    /// Domestic Returns Accepted Values (in GetCategoryFeatures)supported domestic returns accepted values for each site and categoryhttps://developer.ebay.com/Devzone/XML/docs/Reference/eBay/GetCategoryFeatures.html#Response.Category.DomesticReturnsAcceptedValues
    /// </summary>
    /// <remarks>
    /// 
    /// 						This required field indicates whether or not the seller accepts returns.
    /// 						<br><br>
    /// 						Applicable values are <code>ReturnsAccepted</code> or <code>ReturnsNotAccepted</code>. When set to <code>ReturnsAccepted</code>, this option indicates the seller allows items to be returned. Specify <b>ReturnsNotAccepted</b> for a listing if returns are not accepted.
    /// 						<br><br>
    /// 						On the eBay DE, IE, and UK marketplaces, registered business sellers must accept returns for fixed-price items (including auction items with Buy It Now and any other fixed price formats) when the category requires a return policy. On some European sites, such as eBay Germany (DE), registered business sellers are required to accept returns. Use the Trading call <b>GetUser</b> to determine the status of an eBay business seller in DE, IE, and UK. Review the <b>User.SellerInfo.SellerBusinessType</b> field in the response.
    /// 						<br> <br>
    /// 						<span class="tablenote"><b>Note:</b> In order for Top-Rated sellers to receive a Top-Rated Plus seal for their listings, returns must be accepted for their items (<b>ReturnsAcceptedOption</b> = <code>ReturnsAccepted</code>) and handling time should be set to zero-day (same-day shipping) or one-day shipping. Set the handling time (in days) using the <b>Item.DispatchTimeMax</b> field.</span>
    /// 						<br>
    /// 						<b>For ReviseItem only:</b> You cannot change the value of this field if the listing has bids or sales, or if the listing ends within 12 hours. For more details, see the <b>ReturnPolicy</b> description.
    /// 						<br><br>
    /// 							<span class="tablenote"><b>Note:</b> If a seller ships internationally, and wants to define and use a separate international returns policy, the international equivalent of this field is the <b>InternationalReturnsAcceptedOption</b> field.</span>
    /// 					
    /// </remarks>

	public string ReturnsAcceptedOption { get; set; }
    /// <summary>
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetBidderListGranularityLevel: Medium, FineConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Coarse, Medium, FineConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Display string that buyer applications can use to present <b>ReturnsAcceptedOption</b> in a more user-friendly format to buyers. For example, in <b>GetItem</b> and related calls, this value is usually localized and can contain spaces.
    /// 						<br/><br/>
    /// 						If necessary, you can predict the choice of values based on the <b>ReturnsAccepted.Description</b> options returned by <b>GeteBayDetails</b>.
    /// 						<br><br>
    /// 						Not applicable as input to the <b>AddItem</b> family of calls. (Use <b>ReturnsAcceptedOption</b> instead.)
    /// 					
    /// </remarks>

	public string ReturnsAccepted { get; set; }
    /// <summary>
    /// 8000 (for DE, AT); 5000 (for FR, IT, ES)
    /// AddFixedPriceItemAddItemAddItemsReviseFixedPriceItemReviseItemRelistFixedPriceItemRelistItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemNo
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetBidderListGranularityLevel: Medium, FineConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Coarse, Medium, FineConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field contains the seller's detailed explanation for their return policy and is displayed in the Return Policy section of the View Item page. This field is valid in only the following marketplaces (the field is otherwise ignored):
    /// 						<ul>
    /// 						<li>Germany (DE)</li>
    /// 						<li>Austria (AT)</li>
    /// 						<li>France (FR)</li>
    /// 						<li>Italy (IT)</li>
    /// 						<li>Spain (ES)</li>
    /// 						</ul>
    /// 						Where valid, sellers can use this field to add details about their return policies. eBay uses this text string as-is in the additional details section of the View Item page. Avoid HTML and avoid character entity references (such as &amp;pound; or &amp;#163;). If you include special characters in the return policy description, use the literal UTF-8 or ISO-8559-1 character (e.g. &#163;).
    /// 						<!-- Do NOT attempt to "fix" the above character entity references. They are INTENTIONALLY showing markup this way in the resulting docs. Do NOT change them. [LT] -->
    /// 						<br><br>
    /// 						<b>For AddItem, VerifyAddItem, and RelistItem:</b> If the seller accepts returns (<b>ReturnsAcceptedOption</b> = <code>ReturnsAccepted</code>) but does not specify this field when listing the item, <b>GetItem</b> returns this as an empty node.
    /// 						<br><br>
    /// 						<b>For ReviseItem only:</b> You cannot change the value of this field if the listing has bids or sales, or if the listing ends within 12 hours. For more details, see the <b>ReturnPolicy</b> description.
    /// 						<br>
    /// 					
    /// </remarks>

	public string Description { get; set; }
    /// <summary>
    /// ShippingCostPaidByOptionsCodeType
    /// AddFixedPriceItemAddItemAddItemsReviseFixedPriceItemReviseItemRelistFixedPriceItemRelistItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemNo
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetBidderListGranularityLevel: Medium, FineConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Coarse, Medium, FineConditionally
    /// Return Shipping Cost Payee Values (in GetCategoryFeatures)supported domestic return shipping cost payee values for each site and categoryhttps://developer.ebay.com/Devzone/XML/docs/Reference/eBay/GetCategoryFeatures.html#Response.Category.DomesticReturnsShipmentPayeeValues
    /// </summary>
    /// <remarks>
    /// 
    /// 						This option specifies whether the buyer or the seller pays for return shipping charges. Accepted values are <code>Buyer</code> or <code>Seller</code>. eBay sites often set <code>Seller</code> as the default value for this field, and sellers are obligated to honor the values that are set for a listing. This value is required if <b>ReturnsAcceptedOption=ReturnsAccepted</b>.
    /// 						<br><br>
    /// 						Depending on the seller's return policy and the specifics of a return, either the buyer or the seller can be responsible for the return shipping costs. Note that the seller is always responsible for return shipping costs for SNAD-related issues or for late shipments.
    /// 						<br><br>
    /// 						<b>For ReviseItem only:</b> You cannot change the value of this field if the listing has bids or sales, or if the listing ends within 12 hours. For more details, see the <b>ReturnPolicy</b> description.
    /// 						<br><br>
    /// 							<span class="tablenote"><b>Note:</b> If a seller ships internationally, and wants to define and use a separate international returns policy, the international equivalent of this field is the <b>InternationalShippingCostPaidByOption</b> field.</span>
    /// 					
    /// </remarks>

	public string ShippingCostPaidByOption { get; set; }
    /// <summary>
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetBidderListGranularityLevel: Medium, FineConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Coarse, Medium, FineConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This is a display string that buyer applications can use to present <b>ShippingCostPaidByOption</b> in a more user-friendly format to buyers. For example, in <b>GetItem</b> and related calls, this value is usually localized and can contain spaces.
    /// 						<br/><br/>
    /// 						If necessary, you can predict the choice of values based on the <b>ShippingCostPaidBy.Description</b> options returned by <b>GeteBayDetails</b>.
    /// 						<br><br>
    /// 						Not applicable as input to the <b>AddItem</b> family of calls. (Use <b>ShippingCostPaidByOption</b> instead.)
    /// 					
    /// </remarks>

	public string ShippingCostPaidBy { get; set; }
    /// <summary>
    /// RefundOptionsCodeType
    /// AddFixedPriceItemAddItemAddItemsReviseFixedPriceItemReviseItemRelistFixedPriceItemRelistItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemNo
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetBidderListGranularityLevel: Medium, FineConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Coarse, Medium, FineConditionally
    /// International Refund Methods (in GetCategoryFeatures)supported international refund value for each site and categoryhttps://developer.ebay.com/Devzone/XML/docs/Reference/eBay/GetCategoryFeatures.html#Response.Category.InternationalRefundMethodValues
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field indicates how the seller compensates international buyers for returns</a>. <code>MoneyBack</code> is the only supported value for all marketplaces except for the US. On the US marketplace, you can set this value to either <code>MoneyBack</code> or <code>MoneyBackOrReplacement</code>. <code>MoneyBackOrReplacement</code> can be used by sellers that have the depth of inventory to support an exchange for an identical item. However, ultimately, it is up to the buyer on whether they want money back or a replacement item.
    /// 						<br><br>
    /// 						<b>For ReviseItem only:</b> You cannot change the value of this field if the listing has bids or sales, or if the listing ends within 12 hours. For more details, see the <b>ReturnPolicy</b> description.
    /// 						<br><br>
    /// 						<span class="tablenote"><b>Note:</b> If a seller does not add a separate international return policy, the settings in the domestic return policy will be used instead. So if this field is not used in an add/revise/relist call, the refund option(s) for international returns will default to the value specified in the <b>RefundOption</b> field.</span>
    /// 					
    /// </remarks>

	public string InternationalRefundOption { get; set; }
    /// <summary>
    /// ReturnsAcceptedOptionsCodeType
    /// AddFixedPriceItemAddItemAddItemsVerifyAddFixedPriceItemVerifyAddItemConditionally
    /// ReviseFixedPriceItemReviseItemRelistFixedPriceItemRelistItemVerifyRelistItemNo
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetBidderListGranularityLevel: Medium, FineConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Coarse, Medium, FineConditionally
    /// International Returns Accepted Values (in GetCategoryFeatures)supported international returns accepted values for each site and categoryhttps://developer.ebay.com/Devzone/XML/docs/Reference/eBay/GetCategoryFeatures.html#Response.Category.InternationalReturnsAcceptedValues
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is conditionally required if a seller wants to use a separate return policy for international returns. The value in this field indicates whether or not the seller accepts returns from international buyers.
    /// 						<br><br>
    /// 						Applicable values are <code>ReturnsAccepted</code> or <code>ReturnsNotAccepted</code>. When set to <code>ReturnsAccepted</code>, this option indicates the seller allows international buyers to return items. Specify <b>ReturnsNotAccepted</b> for a listing if returns are not accepted from international buyers.
    /// 						<br><br>
    /// 						On the eBay DE, IE, and UK, registered business sellers must accept returns for fixed-price items (including auction items with Buy It Now and any other fixed price formats) when the category requires a return policy. On some European sites, such as eBay Germany (DE), registered business sellers are required to accept returns. Use the Trading call <b>GetUser</b> to determine the status of an eBay business seller in DE, IE, and UK. Review the <b>User.SellerInfo.SellerBusinessType</b> field in the response.
    /// 						<br><br>
    /// 						<b>For ReviseItem only:</b> You cannot change the value of this field if the listing has bids or sales, or if the listing ends within 12 hours. For more details, see the <b>ReturnPolicy</b> description.
    /// 						<br><br>
    /// 						<span class="tablenote"><b>Note:</b> If a seller does not add a separate international return policy, the settings in the domestic return policy will be used instead. So if this field is not used in an add/revise/relist call, the return accepted value for international returns will default to the value specified in the <b>ReturnsAcceptedOption</b> field.</span>
    /// 					
    /// </remarks>

	public string InternationalReturnsAcceptedOption { get; set; }
    /// <summary>
    /// ReturnsWithinOptionsCodeType
    /// AddFixedPriceItemAddItemAddItemsReviseFixedPriceItemReviseItemRelistFixedPriceItemRelistItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetBidderListGranularityLevel: Medium, FineConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Coarse, Medium, FineConditionally
    /// International Return Durations (in GetCategoryFeatures)supported international return durations for each site and categoryhttps://developer.ebay.com/Devzone/XML/docs/Reference/eBay/GetCategoryFeatures.html#Response.Category.InternationalReturnsDurationValues
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is conditionally required if a seller is using a separate return policy for international returns, and is accepting international returns. The value in this field indicates the number of days that an international buyer has to return an item. The time period begins on the day that the buyer receives the item. Most marketplaces and categories support 30-day and 60-day return periods. eBay sites often set 30-days as the default value for this field and sellers are obligated to honor the values that are set for a listing.
    /// 						<br><br>
    /// 						<b>Applicable values:</b> Retrieve the values supported by a marketplace and category by calling <b>GetCategoryFeatures</b> with <b>FeatureID</b> set to <code>InternationalReturnsDurationValues</code>, then see the values returned under the <b>Category.InternationalReturnsDurationValues</b> container in the response.
    /// 						<br><br>
    /// 						<b>For AddItem, VerifyAddItem, and RelistItem:</b> If the seller accepts international returns (InternationalReturnsAcceptedOption is set to ReturnsAccepted) but does not specify this field for a listing, eBay sets a default value (often Days_30) and the seller is obligated to honor this setting.
    /// 						<br><br>
    /// 						<b>For ReviseItem only:</b> You cannot change the value of this field if the listing has bids or sales, or if the listing ends within 12 hours. For more details, see the <b>ReturnPolicy</b> description.
    /// 						<br><br>
    /// 						<span class="tablenote"><b>Note:</b> If a seller does not add a separate international return policy, the settings in the domestic return policy will be used instead. So if this field is not used in an add/revise/relist call, the return period for international returns will default to the value specified in the <b>ReturnsWithinOption</b> field.</span>
    /// 					
    /// </remarks>

	public string InternationalReturnsWithinOption { get; set; }
    /// <summary>
    /// ShippingCostPaidByOptionsCodeType
    /// AddFixedPriceItemAddItemAddItemsReviseFixedPriceItemReviseItemRelistFixedPriceItemRelistItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemNo
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetBidderListGranularityLevel: Medium, FineConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Coarse, Medium, FineConditionally
    /// Return Shipping Cost Payee Values (in GetCategoryFeatures)supported international return shipping cost payee values for each site and categoryhttps://developer.ebay.com/Devzone/XML/docs/Reference/eBay/GetCategoryFeatures.html#Response.Category.InternationalReturnsShipmentPayeeValues
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is conditionally required if a seller is using a separate return policy for international returns, and is accepting international returns.
    /// 						The value in this field specifies whether the buyer or the seller pays for international return shipping charges. Accepted values are <code>Buyer</code> or <code>Seller</code>. eBay sites often set <code>Seller</code> as the default value for this field, and sellers are obligated to honor the values that are set for a listing.
    /// 						<br><br>
    /// 						Depending on the seller's return policy and the specifics of a return, either the buyer or the seller can be responsible for the return shipping costs. Note that the seller is always responsible for return shipping costs for SNAD-related issues or for late shipments.
    /// 						<br><br>
    /// 						<b>For ReviseItem only:</b> You cannot change the value of this field if the listing has bids or sales, or if the listing ends within 12 hours. For more details, see the <b>ReturnPolicy</b> description.
    /// 						<br><br>
    /// 						<span class="tablenote"><b>Note:</b> If a seller does not add a separate international return policy, the settings in the domestic return policy will be used instead. So if this field is not used in an add/revise/relist call, return shipping cost payee for international returns will default to the value specified in the <b>ShippingCostPaidByOption</b> field.</span>
    /// 					
    /// </remarks>

	public string InternationalShippingCostPaidByOption { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>ReturnPolicyDetails.ReturnsAccepted</b> container that is returned in <b>GeteBayDetails</b>. This container contains the values that may be used in the <b>ReturnPolicy.ReturnsAcceptedOption</b> field of Add/Revise/Relist API calls.
/// 				<br><br>
/// 				<span class="tablenote"><b>Note:</b> The <b>GeteBayDetails</b> call returns site-default Return Policy settings. For most categories within a given eBay site, the supported Return Policy options/values are the same, but there a few exceptions. To discover what returns accepted options that a particular category supports, call <b>GetCategoryFeatures</b> and include <code>DomesticReturnsAcceptedValues</code> and/or <code>InternationalReturnsAcceptedValues</code> as <b>FeatureID</b> values to see the returns accepted options available for domestic and international returns, respectively.
/// 				</span>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ReturnsAcceptedDetailsType {

#region 属性
    /// <summary>
    /// ReturnsAcceptedOptionsCodeType
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Whether the seller allows the buyer to return the item.
    /// 						This value can be passed in the AddItem family of calls.
    /// 					
    /// </remarks>

	public string ReturnsAcceptedOption { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Display string that applications can use to present ReturnsAcceptedOption in
    /// 						a more user-friendly format (such as in a drop-down list).
    /// 						Not applicable as input to the AddItem family of calls. (Use ReturnsAcceptedOption instead.)
    /// 					
    /// </remarks>

	public string Description { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>ReturnPolicyDetails.ReturnsWithin</b> container that is returned in <b>GeteBayDetails</b>. This container contains the values that may be used in the <b>ReturnPolicy.ReturnsWithinOption</b> field of Add/Revise/Relist API calls.
/// 				<br><br>
/// 				<span class="tablenote"><b>Note:</b> The <b>GeteBayDetails</b> call returns site-default Return Policy settings. For most categories within a given eBay site, the supported Return Policy options/values are the same, but there a few exceptions. To discover what return durations that a particular category supports, call <b>GetCategoryFeatures</b> and include <code>DomesticReturnsDurationValues</code> and/or <code>InternationalReturnsDurationValues</code> as <b>FeatureID</b> values to see the return durations available for domestic and international returns, respectively.
/// 				</span>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ReturnsWithinDetailsType {

#region 属性
    /// <summary>
    /// ReturnsWithinOptionsCodeType
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Value indicates the number of days that a buyer has to return an item from the day they receive the item. This value can be passed in the Add/Revise/Relist family of API calls. Supported values can vary by eBay site.
    /// 					
    /// </remarks>

	public string ReturnsWithinOption { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Display string that applications can use to present ReturnsWithinOption in
    /// 						a more user-friendly format (such as in a drop-down list).
    /// 						Not applicable as input to the AddItem family of calls. (Use ReturnsWithinOption instead.)
    /// 					
    /// </remarks>

	public string Description { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				If the field is present, the corresponding feature applies to the category. The
/// 				field is returned as an empty element (i.e., a boolean value is not returned).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class RevisePriceAllowedDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				If the field is present, the corresponding feature applies to the category. The
/// 				field is returned as an empty element (i.e., a boolean value is not returned).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ReviseQuantityAllowedDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Contains data indicating whether an item has been revised since the
/// 				listing became active and, if so, which among a subset of properties
/// 				have been changed by the revision.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ReviseStatusType {

#region 属性
    /// <summary>
    /// GetBidderListAlways
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllAlways
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as <code>true</code> if the original listing has been revised. This field is always returned with the <b>ReviseStatus</b> container.
    /// 					
    /// </remarks>

	public bool? ItemRevised { get; set; }
    /// <summary>
    /// GetBidderListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as <code>true</code> if a Buy It Now price has been added to the auction listing. This field is only returned if the original auction listing did not have a Buy It Now price, but a revision to that original listing included adding a Buy It Now price.
    /// 					
    /// </remarks>

	public bool? BuyItNowAdded { get; set; }
    /// <summary>
    /// GetBidderListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as <code>true</code> if the Buy It Now price on the original auction listing was lowered as part of a revision to the original auction listing. This field is only returned if the Buy It Now price on the original auction listing was lowered as part of a revision to the original auction listing.
    /// 					
    /// </remarks>

	public bool? BuyItNowLowered { get; set; }
    /// <summary>
    /// GetBidderListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as <code>true</code> if the Reserve price on the original auction listing was lowered as part of a revision to the original auction listing. This field is only returned if the Reserve price on the original auction listing was lowered as part of a revision to the original auction listing.
    /// 					
    /// </remarks>

	public bool? ReserveLowered { get; set; }
    /// <summary>
    /// GetBidderListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as <code>true</code> if the Reserve price on the original auction listing was removed as part of a revision to the original auction listing. This field is only returned if the Reserve price on the original auction listing was removed as part of a revision to the original auction listing.
    /// 					
    /// </remarks>

	public bool? ReserveRemoved { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
///  
/// 				For the US, Canada and Australia sites, users are 
/// 				required to offer at least one safe payment method.
/// 				<br><br>
/// 				If a seller has a 'SafePaymentExempt' status, they are exempt from the category 
/// 				requirement to offer at least one safe payment method when listing an item on a 
/// 				site that has the safe payment requirement.
/// 				<br><br>
/// 					<span class="tablenote"><b>Note: </b> Although the <b>SafePaymentRequired</b> field is still being returned for now, sellers never need to set the available electronic payments, so this requirement is no longer applicable.
/// 				</span>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class SafePaymentRequiredDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is used to show sales tax-related details for a tax jurisdiction. The concept of 'sales tax' is only applicable to eBay US and Canada (English and French) sites.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class SalesTaxType {

#region 属性
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsAddOrderRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemSendInvoiceVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemNo
    /// GetBidderListGetItemShippingGetTaxTableConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: FineConditionally
    /// GetItemDetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAllConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This float value is the sales tax percentage rate applicable to the corresponding tax jurisdiction (US state or Canadian province). Sellers are responsible for providing accurate sales tax rates for each jurisdiction. This sales tax rate comes into play when a buyer from that tax jurisdiction makes a purchase from the seller. The value passed in is stored with a precision of 3 digits after the decimal point (##.###).
    /// 						<br><br>
    /// 						This field is only returned in order management calls if sales tax applies to the order line item, and is only in <b>GetItem</b> (and other 'Get' calls) if sales tax is applicable to the listing or order line item, and the seller is the person making the call.
    /// 						<br><br>
    /// 						Although this field will be returned at the order level in order management calls for a single line item order, sales tax is applied at the line item level and not order level. For multiple line item orders, this field will not be returned at all at the order level.
    /// 						<br><br>
    /// 						<span class="tablenote"><b>Note: </b> Buyers in all 50 US states and DC are automatically charged sales tax for eBay purchases, and eBay collects and remits this sales tax to the proper taxing authority on the buyer's behalf. Because of this, if a sales tax percentage rate is applied to a listing by a seller in one of these states, this field will be ignored during the checkout process.
    /// 						<br><br>
    /// 						Currently, sales tax percentage rates can only be specified by sellers in Canada and 5 US territories, including American Samoa (AS), Guam (GU), Northern Mariana Islands (MP), Palau (PW), and Virgin Islands (VI).
    /// 						</span>
    /// 					
    /// </remarks>

	public float? SalesTaxPercent { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsAddOrderRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemSendInvoiceVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemNo
    /// GetBidderListGetItemShippingConditionally
    /// GetItemDetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAllConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This is the unique, two-digit identifier of the tax jurisdiction (such as 'CA' for California). To retrieve all two-digit identifiers for all states/territories/provinces for a site, a seller can either use a <b>GetTaxTable</b> call with <b>DetailLevel</b> set to <code>ReturnAll</code>, or they can use the <b>GeteBayDetails</b> call with <b>DetailLevel</b> name set to <code>TaxJurisdiction</code>. Please note that both <b>GetTaxTable</b> and <b>GeteBayDetails</b> calls use a <b>JurisdictionID</b> field to express these tax jurisdiction identifiers instead of <b>SalesTaxState</b>, but the values used in these fields are the same.
    /// 						<br/><br/>
    /// 						The <b>SalesTaxState</b> field is conditionally required in an Add/Revise/Relist/Verify call if the seller is applying sales tax to a listing for a particular jurisdiction, and is returned with each <b>SalesTax</b> container to identify the tax jurisdiction.
    /// 					
    /// </remarks>

	public string SalesTaxState { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsAddOrderRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemSendInvoiceVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemNoFalse
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: FineConditionally
    /// GetBidderListGetItemShippingConditionally
    /// GetItemDetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAllConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is included in an Add/Revise/Relist/Verify call and set to <code>true</code> if the seller wants sales tax for the jurisdiction to apply to the cumulative amount of item cost and shipping charges. This value defaults to <code>false</code> if not specified.
    /// 						<br><br>
    /// 						This field is always returned with the <b>SalesTax</b> container (whether <code>true</code> or <code>false</code>).
    /// 						<br><br>
    /// 						<span class="tablenote"><b>Note: </b> Buyers in all 50 US states and DC are automatically charged sales tax for eBay purchases, and eBay collects and remits this sales tax to the proper taxing authority on the buyer's behalf. Because of this, if a sales tax percentage rate is applied to a listing by a seller in one of these states, this field will be ignored during the checkout process.
    /// 						<br><br>
    /// 						Currently, sales tax percentage rates can only be specified by sellers in Canada and 5 US territories, including American Samoa (AS), Guam (GU), Northern Mariana Islands (MP), Palau (PW), and Virgin Islands (VI).
    /// 						</span>
    /// 					
    /// </remarks>

	public bool? ShippingIncludedInTax { get; set; }
    /// <summary>
    /// SendInvoiceNo
    /// GetItemShippingConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The amount of sales tax calculated for an order line item based on the sale price and the sales tax rate for the buyer's tax jurisdiction. For a multiple line item order, the <b>SalesTaxAmount</b> returned at the order level will be the cumulative amount for all line items in the order.
    /// 						<br><br>
    /// 						GetItemTransactions can return incorrect sales tax if the name of a state is not
    /// 						abbreviated (e.g. if the value is "Illinois" rather than "IL") in
    /// 						<b>TransactionArray.Transaction.Buyer.BuyerInfo.ShippingAddress.StateOrProvince</b>. 
    /// 					
    /// </remarks>

	public AmountType SalesTaxAmount { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Contains information for scheduling limits for the user.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class SchedulingInfoType {

#region 属性
    /// <summary>
    /// GetUserDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Maximum number of minutes that a listing may be scheduled in advance of its going live.
    /// 					
    /// </remarks>

	public int? MaxScheduledMinutes { get; set; }
    /// <summary>
    /// GetUserDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Minimum number of minutes that a listing may be scheduled in advance of its going live.
    /// 					
    /// </remarks>

	public int? MinScheduledMinutes { get; set; }
    /// <summary>
    /// GetUserDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Maximum number of Items that a user may schedule.
    /// 					
    /// </remarks>

	public int? MaxScheduledItems { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Defines the SellerContactDetailsEnabled feature. If the field is present, the 
/// 				category allows retrieval of seller-level contact information. The field is 
/// 				returned as an empty element (e.g., a boolean value is not returned).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class SellerContactDetailsEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>SellerDiscounts</b> container, which consists of one or
/// 				more <b>SellerDiscount</b> nodes, as well as the original purchase price and
/// 				shipping cost of the order line item.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class SellerDiscountsType {

#region 属性
    /// <summary>
    /// GetItemTransactionsGetOrdersGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The original purchase price of the order line item (before any seller discounts are
    /// 						applied).
    /// 					
    /// </remarks>

	public AmountType OriginalItemPrice { get; set; }
    /// <summary>
    /// GetItemTransactionsGetOrdersGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The original shipping cost for the order line item (before any seller
    /// 						discounts are applied).
    /// 					
    /// </remarks>

	public AmountType OriginalItemShippingCost { get; set; }
    /// <summary>
    /// ShippingServiceCodeType
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The original shipping service offered by the seller to ship an item to a buyer.
    /// 					
    /// </remarks>

	public string OriginalShippingService { get; set; }
    /// <summary>
    /// GetItemTransactionsGetOrdersGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						A container consisting of name and ID of the seller's discount campaign, as well as the discount amount that is being applied to the order line item.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("SellerDiscount")]

	public System.Collections.Generic.List<SellerDiscountType> SellerDiscount { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type that defines the <b>SellerDiscount</b> container, which contains the ID,
/// 				name, and amount of the seller discount.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class SellerDiscountType {

#region 属性
    /// <summary>
    /// GetItemTransactionsGetOrdersGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						 Unique identifier for a seller discount campaign. This ID is automatically
    /// 						 created when the seller creates the discount campaign. This field is always returned
    /// 						 with the <b>SellerDiscount</b> container.
    /// 					
    /// </remarks>

	public long? CampaignID { get; set; }
    /// <summary>
    /// GetItemTransactionsGetOrdersGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						 The name of the seller discount campaign. This field will only be
    /// 						 returned with the <b>SellerDiscount</b> container if defined
    /// 						 for the seller discount campaign.
    /// 					
    /// </remarks>

	public string CampaignDisplayName { get; set; }
    /// <summary>
    /// GetItemTransactionsGetOrdersGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						 The dollar amount of the order line item discount. The original purchase price (denoted
    /// 						 in <b>OriginalItemPrice</b>) will be reduced by this value. The amount of the
    /// 						 item discount will depend on the rules defined in the the seller discount
    /// 						 campaign.
    /// 						 <br/><br/>
    /// 							<span class="tablenote">
    /// 							<strong>Note:</strong> Prior to Version 895, this field worked a little differently. Instead of this field showing the amount of the discount, it was actually showing the final item price after the discount was applied. So, if an item price is 10.0 dollars and the discount is 2.0 dollars, someone using Version 895 (and going forward) will see a value of '2.0' (amount of the discount) in this field, but anyone using Version 893 or lower will see a value of '8.0' (item price after discount) in this field.
    /// 							</span>
    /// 					
    /// </remarks>

	public AmountType ItemDiscountAmount { get; set; }
    /// <summary>
    /// GetItemTransactionsGetOrdersGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The dollar amount of the shipping discount applied to the order line item.
    /// 					
    /// </remarks>

	public AmountType ShippingDiscountAmount { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type used by the <b>SellerExcludeShipToLocationPreferences</b> container which is returned in the <b>GetUserPreferences</b> response to indicate which geographical regions and/or individual countries the seller has added as excluded ship-to locations.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class SellerExcludeShipToLocationPreferencesType {

#region 属性
    /// <summary>
    /// GetUserPreferencesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						One <b>ExcludeShipToLocation</b> field is returned for each geographical region or country excluded
    /// 						as a possible shipping location in the seller's My eBay Shipping Preferences.
    /// 						Sellers can also exclude Alaska/Hawaii and Army Post Office/Fleet Post Office as
    /// 						possible shipping locations. For excluded countries, <a href="http://www.iso.org/iso/country_codes/iso_3166_code_lists/english_country_names_and_code_elements.htm">ISO 3166</a>
    /// 						country codes are returned.
    /// 						<br><br>
    /// 						Domestically, the seller can specify Alaska/Hawaii, US Protectorates (including
    /// 						American Samoa, Guam, Mariana Island, Marshall Islands, Micronesia, Palau,
    /// 						Puerto Rico, and U.S. Virgin Islands) as places he/she will not ship to.
    /// 						Internationally, the sellers can exclude entire regions (including Africa, Asia,
    /// 						Central America and Caribbean, Europe, Middle East, North America, Oceania,
    /// 						Southeast Asia, and South America) or specific countries within those regions.
    /// 						<br><br>
    /// 						If a buyer's primary ship-to location is a location that you have listed as
    /// 						an excluded ship-to location (or if the buyer does not have a primary ship-to
    /// 						location), they will receive an error message if they attempt to buy or place
    /// 						a bid on your item.
    /// 						<br><br>
    /// 						To see the valid exclude ship-to locations for a specified site, call
    /// 						<b>GeteBayDetails</b> with a <b>DetailName</b> field set to <b>ExcludeShippingLocationDetails</b>.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("ExcludeShipToLocation")]

	public System.Collections.Generic.List<string> ExcludeShipToLocation { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Contains the data for the seller favorite item preferences, i.e.  the manual or automatic selection criteria to display items for buyer's favourite seller opt in email marketing.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class SellerFavoriteItemPreferencesType {

#region 属性
    /// <summary>
    /// GetUserPreferencesConditionally
    /// SetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						The keywords in the item title for the automatic item search criteria.
    /// 					
    /// </remarks>

	public string SearchKeywords { get; set; }
    /// <summary>
    /// GetUserPreferencesConditionally
    /// SetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						(For eBay Store owners only) The store custom category for the  automatic item search criteria.
    /// 					
    /// </remarks>

	public long? StoreCategoryID { get; set; }
    /// <summary>
    /// GetUserPreferencesAuction, StoresFixedPrice, LeadGeneration,
    /// 							FixedPriceItemConditionally
    /// SetUserPreferencesAuction, StoresFixedPrice, LeadGeneration,
    /// 							FixedPriceItemNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						The listing format (fixed price, auction, etc) for the automatic item search criteria.
    /// 					
    /// </remarks>

	public ListingTypeCodeType? ListingType { get; set; }
    /// <summary>
    /// GetUserPreferencesConditionally
    /// SetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						The sort order chosen from the standard ebay sorts for the automatic search criteria.
    /// 					
    /// </remarks>

	public StoreItemListSortOrderCodeType? SearchSortOrder { get; set; }
    /// <summary>
    /// GetUserPreferencesConditionally
    /// SetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the lower limit of price range for the automatic search criteria.
    /// 					
    /// </remarks>

	public AmountType MinPrice { get; set; }
    /// <summary>
    /// GetUserPreferencesConditionally
    /// SetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the upper limit of price range for the automatic search criteria.
    /// 					
    /// </remarks>

	public AmountType MaxPrice { get; set; }
    /// <summary>
    /// GetUserPreferencesConditionally
    /// SetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the list of favorite items.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("FavoriteItemID")]

	public System.Collections.Generic.List<string> FavoriteItemID { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 			  Type defining the <b>SellerPaymentPreferences</b> container, which
/// 				consists of the seller's payment preferences. Payment preferences specified in a
/// 				<b>SetUserPreferences</b> call override the current corresponding settings in the seller's account.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class SellerPaymentPreferencesType {

#region 属性
    /// <summary>
    /// GetUserPreferencesConditionally
    /// SetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						Sellers include this field and set it to <code>true</code> if they want buyers to mail payment to the payment address specified in the <b>SellerPaymentPreferences.SellerPaymentAddress</b> field. A payment address only comes into play if the listing's category allows offline payments, and the seller has allowed the buyer to mail a payment. This payment address will only be displayed to winning bidders and buyers.
    /// 					
    /// </remarks>

	public bool? AlwaysUseThisPaymentAddress { get; set; }
    /// <summary>
    /// GetUserPreferencesConditionally
    /// SetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is deprecated. If it is used in a <b>SetUserPreferences</b> call, it is ignored. 
    /// 					
    /// </remarks>

	public DisplayPayNowButtonCodeType? DisplayPayNowButton { get; set; }
    /// <summary>
    /// GetUserPreferencesConditionally
    /// SetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is deprecated. If it is used in a <b>SetUserPreferences</b> call, it is ignored. 
    /// 					
    /// </remarks>

	public bool? PayPalPreferred { get; set; }
    /// <summary>
    /// GetUserPreferencesConditionally
    /// SetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is deprecated. If it is used in a <b>SetUserPreferences</b> call, it is ignored. 
    /// 						</span>
    /// 					
    /// </remarks>

	public string DefaultPayPalEmailAddress { get; set; }
    /// <summary>
    /// GetUserPreferencesConditionally
    /// SetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is deprecated. If it is used in a <b>SetUserPreferences</b> call, it is ignored. 
    /// 					
    /// </remarks>

	public bool? PayPalAlwaysOn { get; set; }
    /// <summary>
    /// GetUserPreferencesConditionally
    /// SetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container consists of the seller's mailing address where the buyer will send payment for an order. A seller's payment address only comes into play if the listing's category allows offline payments, and the seller has allowed the buyer to mail a payment. This payment address will only be displayed to winning bidders and buyers.
    /// 					
    /// </remarks>

	public AddressType SellerPaymentAddress { get; set; }
    /// <summary>
    /// GetUserPreferencesConditionally
    /// SetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						This enumeration value indicates the category/level of UPS shipping rates that are available to the seller.
    /// 					
    /// </remarks>

	public UPSRateOptionCodeType? UPSRateOption { get; set; }
    /// <summary>
    /// GetUserPreferencesConditionally
    /// SetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						This enumeration value indicates the category/level of Federal Express shipping rates that are available to the seller.
    /// 					
    /// </remarks>

	public FedExRateOptionCodeType? FedExRateOption { get; set; }
    /// <summary>
    /// GetUserPreferencesConditionally
    /// SetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						This enumeration value indicates the category/level of US Postal Service shipping rates that are available to the seller.
    /// 					
    /// </remarks>

	public USPSRateOptionCodeType? USPSRateOption { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>SellerPaymentProfile</b> container, which is used in an Add/Revise/Relist/Verify Trading API call to reference and use a payment business policy.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class SellerPaymentProfileType {

#region 属性
    /// <summary>
    /// AddFixedPriceItemReviseFixedPriceItemRelistFixedPriceItemVerifyAddFixedPriceItemConditionally
    /// AddItemAddItemsReviseItemRelistItemVerifyAddItemVerifyRelistItemConditionally
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetSellerEventsGetMyeBaySellingConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The unique identifier of a payment business policy. A <b>PaymentProfileID</b> and/or a <b>PaymentProfileName</b> value is used in the Add/Revise/Relist/Verify call to reference and use the payment settings/values of a payment business policy. If both fields are provided and their values don't match, the <b>PaymentProfileID</b> takes precedence.
    /// 						<br/><br/>
    /// 						Payment profile IDs can be retrieved with the <b>getPaymentPolicies</b> call of the <b>Account API</b> or with the <b>getSellerProfiles</b> call of the <b>Business Policies Management API</b>. Business policy IDs can also be retrieved through the Business policies section of My eBay.
    /// 						<br/><br/>
    /// 						In the 'Get' calls, the <b>PaymentProfileID</b> value will always be returned if business policies are set for the listing, and the person making the API call is the seller of the listing. The <b>PaymentProfileName</b> value will be returned if a name is assigned to the payment business policy.
    /// 					
    /// </remarks>

	public long? PaymentProfileID { get; set; }
    /// <summary>
    /// AddFixedPriceItemReviseFixedPriceItemRelistFixedPriceItemVerifyAddFixedPriceItemConditionally
    /// AddItemAddItemsReviseItemRelistItemVerifyAddItemVerifyRelistItemConditionally
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetSellerEventsGetMyeBaySellingConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The name of a payment business policy. A <b>PaymentProfileID</b> and/or a <b>PaymentProfileName</b> value is used in the Add/Revise/Relist/Verify call to reference and use the payment settings/values of a payment business policy. If both fields are provided and their values don't match, the <b>PaymentProfileID</b> takes precedence.
    /// 						<br/><br/>
    /// 						In the 'Get' calls, the <b>PaymentProfileID</b> value will always be returned if business policies are set for the listing, and the person making the API call is the seller of the listing. The <b>PaymentProfileName</b> value will be returned if a name is assigned to the payment business policy.
    /// 					
    /// </remarks>

	public string PaymentProfileName { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 			  Type defining the <b>SellerProfilePreferences</b> container. This container
/// 				consists of a flag that indicates whether or not the seller has opted into Business
/// 				Policies, as well as a list of Business Policies profiles that have been set up for the 
/// 				seller's account.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class SellerProfilePreferencesType {

#region 属性
    /// <summary>
    /// GetUserPreferencesConditionally
    /// SetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    ///  					 Boolean flag indicating whether or not a seller has opted in to Business
    /// 					 Policies. Sellers must opt in to Business Policies to create and manage payment, 
    /// 					 return policy, and shipping profiles.
    /// 					
    /// </remarks>

	public bool? SellerProfileOptedIn { get; set; }
    /// <summary>
    /// GetUserPreferencesConditionally
    /// SetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						Container consisting of one or more Business Policies profiles active for a
    /// 						seller's account. This container is only returned if <b>SellerProfileOptedIn</b> =  SellerProfilePreferences 
    /// 						and the seller has one or more Business Policies profiles active on the account.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("SupportedSellerProfile", IsNullable = false)]

	public System.Collections.Generic.List<SupportedSellerProfileType> SupportedSellerProfiles { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>SellerProfiles</b> container, which consists of references to a seller's payment, shipping, and return policy profiles.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class SellerProfilesType {

#region 属性
    /// <summary>
    /// AddFixedPriceItemReviseFixedPriceItemRelistFixedPriceItemVerifyAddFixedPriceItemConditionally
    /// AddItemAddItemsReviseItemRelistItemVerifyAddItemVerifyRelistItemConditionally
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetSellerEventsGetMyeBaySellingConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The <b>SellerShippingProfile</b> container is used in an Add/Revise/Relist/Verify Trading API call to reference and use the settings/values of a specific shipping business policy. Shipping business policies contain detailed information on domestic and international shipping, including shipping service options and costs, handling time, shipping discount information, and excluded ship-to locations. Multiple shipping business policies can be created and saved at the account level by sellers.
    /// 						<br/>
    /// 						<span class="tablenote"><b>Note: </b> Any shipping inclusions specified through this container can be overridden by the eBay International Shipping exclusions toggle located under <b>Shipping Preferences</b> in <b>My eBay</b>. For more information on eBay International Shipping, see <a href="https://www.ebay.com/help/selling/shipping-items/setting-shipping-options/ebay-international-shipping-program?id=5348">eBay International Shipping program</a>.
    /// 						</span>
    /// 						This container is only returned in 'Get' calls if Business Policies are set for the listing, and the person making the API call is the seller of the listing.
    /// 					
    /// </remarks>

	public SellerShippingProfileType SellerShippingProfile { get; set; }
    /// <summary>
    /// AddFixedPriceItemReviseFixedPriceItemRelistFixedPriceItemVerifyAddFixedPriceItemConditionally
    /// AddItemAddItemsReviseItemRelistItemVerifyAddItemVerifyRelistItemConditionally
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetSellerEventsGetMyeBaySellingConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The <b>SellerReturnProfile</b> container is used in an Add/Revise/Relist/Verify Trading API call to reference and use the settings/values of a return business policy. Return business policies contain detailed information on the seller's return policy for domestic and international buyers (if the seller ships internationally), including whether or not the seller accepts returns from domestic and international buyers, how many days the buyer has to return the item for a refund, and who pays the return shipping costs. Multiple return policy business policies can be created and saved at the account level by sellers.
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> As a part of Digital Services Act (DSA) requirements, as of April 3, 2023, buyers in the EU must be allowed to return an item within 14 days or more, unless the item is exempt. Where applicable, sellers should update their return policies to reflect this requirement of accepting returns from EU buyers. This update can be made through the <b>ReturnPolicy</b> container or through a return business policy that is referenced through the <b>SellerProfiles.SellerReturnProfile</b> container.</span>						
    /// 						<br/><br/>
    /// 						This container is only returned in 'Get' calls if Business Policies are set for the listing and the person making the API call is the seller of the listing.
    /// 					
    /// </remarks>

	public SellerReturnProfileType SellerReturnProfile { get; set; }
    /// <summary>
    /// AddFixedPriceItemReviseFixedPriceItemRelistFixedPriceItemVerifyAddFixedPriceItemConditionally
    /// AddItemAddItemsReviseItemRelistItemVerifyAddItemVerifyRelistItemConditionally
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetSellerEventsGetMyeBaySellingConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The <b>SellerPaymentProfile</b> container is used in an Add/Revise/Relist/Verify API call to reference and use the settings/values of a payment business policy. Payment business policies contain a setting to control whether immediate payment is required, settings to specify due dates for the deposit and full payment of a motor vehicle listing (Motors policy only), and settings to specify which offline payment methods are avaiable to buyers for sales transactions that happen off of eBay's platform. Multiple payment business policies can be created and saved at the account level by sellers.
    /// 						<br/><br/>
    /// 						This container is only returned in 'Get' calls if Business Policies are set for the listing, and the person making the API call is the seller of the listing.
    /// 						<br>
    /// 							<br>
    /// 							<span class="tablenote"><b>Note:</b> Sellers will never have to specify electronic payment methods, but offline payment methods are required for listings where offline payment is required or supported.
    /// 						</span>
    /// 					
    /// </remarks>

	public SellerPaymentProfileType SellerPaymentProfile { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				If present, the site defines category settings for whether the seller can provide their own title for a US or CA eBay Motors listing.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class SellerProvidedTitleSupportedDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Details the recoupment policy on this site.  There are two sites involved in recoupment - the listing site
/// 				and the user registration site, each of which must agree before eBay enforces recoupment for a seller and listing.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class RecoupmentPolicyDetailsType {

#region 属性
    /// <summary>
    /// GeteBayDetailsAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether recoupment policy is enforced on the site on which the item is listed.
    /// 					
    /// </remarks>

	public bool? EnforcedOnListingSite { get; set; }
    /// <summary>
    /// GeteBayDetailsAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether recoupment policy is enforced on the registration site for which the call is made.
    /// 					
    /// </remarks>

	public bool? EnforcedOnRegistrationSite { get; set; }
    /// <summary>
    /// GeteBayDetailsAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Returns the latest version number for this field. The version can be
    /// 						used to determine if and when to refresh cached client data.
    /// 					
    /// </remarks>

	public string DetailVersion { get; set; }
    /// <summary>
    /// GeteBayDetailsAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Gives the time in GMT that the feature flags for the details were last
    /// 						updated. This timestamp can be used to determine if and when to refresh
    /// 						cached client data.
    /// 					
    /// </remarks>

	public System.DateTime? UpdateTime { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>SellerReturnPreferences</b> container, which consists of the <b>OptedIn</b> flag that indicates whether or not the seller has opted in to eBay Managed Returns.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class SellerReturnPreferencesType {

#region 属性
    /// <summary>
    /// GetUserPreferencesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This flag indicates whether or not an eligible seller has opted in to eBay
    /// 						Managed Returns through the Return Preferences of My eBay.
    /// 					
    /// </remarks>

	public bool? OptedIn { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>SellerReturnProfile</b> container, which is used in an Add/Revise/Relist/Verify Trading API call to reference a return policy business policy. Return policy business policies contain detailed information on the seller's return policy for domestic and international buyers (if the seller ships internationally), including whether or not the seller accepts returns from domestic and international buyers, how many days the buyer has to return the item for a refund, and who pays the return shipping costs.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class SellerReturnProfileType {

#region 属性
    /// <summary>
    /// AddFixedPriceItemReviseFixedPriceItemRelistFixedPriceItemVerifyAddFixedPriceItemConditionally
    /// AddItemAddItemsReviseItemRelistItemVerifyAddItemVerifyRelistItemConditionally
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetSellerEventsGetMyeBaySellingConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The unique identifier of a return policy business policy. A <b>ReturnProfileID</b> and/or a <b>ReturnProfileName</b> value is used in the Add/Revise/Relist/Verify call to reference and use the return policy settings/values of a return policy business policy. If both fields are provided and their values don't match, the <b>ReturnProfileID</b> takes precedence.
    /// 						<br/><br/>
    /// 						Return policy profile IDs can be retrieved with the <b>getReturnPolicies</b> call of the <b>Account API</b> or with the <b>getSellerProfiles</b> call of the <b>Business Policies Management API</b>. Business policy IDs can also be retrieved through the Business policies section of My eBay.
    /// 						<br/><br/>
    /// 						In the 'Get' calls, the <b>ReturnProfileID</b> value will always be returned if business policies are set for the listing, and the person making the API call is the seller of the listing. The <b>ReturnProfileName</b> value will be returned if a name is assigned to the return policy business policy.
    /// 					
    /// </remarks>

	public long? ReturnProfileID { get; set; }
    /// <summary>
    /// AddFixedPriceItemReviseFixedPriceItemRelistFixedPriceItemVerifyAddFixedPriceItemConditionally
    /// AddItemAddItemsReviseItemRelistItemVerifyAddItemVerifyRelistItemConditionally
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetSellerEventsGetMyeBaySellingConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The name of a return policy business policy. A <b>ReturnProfileID</b> and/or a <b>ReturnProfileName</b> value is used in the Add/Revise/Relist/Verify call to reference and use the return policy settings/values of a return policy business policy. If both fields are provided and their values don't match, the <b>ReturnProfileID</b> takes precedence.
    /// 						<br/><br/>
    /// 						In the 'Get' calls, the <b>ReturnProfileID</b> value will always be returned if business policies are set for the listing, and the person making the API call is the seller of the listing. The <b>ReturnProfileName</b> value will be returned if a name is assigned to the return policy business policy.
    /// 					
    /// </remarks>

	public string ReturnProfileName { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Specifies 1 year feedback metrics for a seller.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class SellerRoleMetricsType {

#region 属性
    /// <summary>
    /// GetFeedbackDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Count of positive feedback entries given as a seller.
    /// 					
    /// </remarks>

	public int? PositiveFeedbackLeftCount { get; set; }
    /// <summary>
    /// GetFeedbackDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Count of negative feedback entries given as a seller.
    /// 					
    /// </remarks>

	public int? NegativeFeedbackLeftCount { get; set; }
    /// <summary>
    /// GetFeedbackDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Count of neutral feedback entries given as a seller.
    /// 					
    /// </remarks>

	public int? NeutralFeedbackLeftCount { get; set; }
    /// <summary>
    /// GetFeedbackDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Percentage of leaving feedback as a seller.
    /// 					
    /// </remarks>

	public float? FeedbackLeftPercent { get; set; }
    /// <summary>
    /// GetFeedbackDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Number of buyers who bought more than once from this seller.
    /// 					
    /// </remarks>

	public int? RepeatBuyerCount { get; set; }
    /// <summary>
    /// GetFeedbackDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Percentage of repeat buyers.
    /// 					
    /// </remarks>

	public float? RepeatBuyerPercent { get; set; }
    /// <summary>
    /// GetFeedbackDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Count of unique buyers from this seller.
    /// 					
    /// </remarks>

	public int? UniqueBuyerCount { get; set; }
    /// <summary>
    /// GetFeedbackDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Percentage of number of times a member has sold successfully vs. the number of
    /// 						times a member has bought an item in the preceding 365 days.
    /// 					
    /// </remarks>

	public float? TransactionPercent { get; set; }
    /// <summary>
    /// GetFeedbackDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The count of Cross-Border Trade order line items.
    /// 					
    /// </remarks>

	public int? CrossBorderTransactionCount { get; set; }
    /// <summary>
    /// GetFeedbackDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The percentage of order line items that are Cross-Border Trade order line items.
    /// 					
    /// </remarks>

	public float? CrossBorderTransactionPercent { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>SellerShippingProfile</b> container, which is used in an Add/Revise/Relist Trading API call to reference a shipping business policy. Shipping business policies contain detailed information on domestic and international shipping, including shipping service options and costs, handling time, shipping discount inormation, and excluded ship-to locations.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class SellerShippingProfileType {

#region 属性
    /// <summary>
    /// AddFixedPriceItemReviseFixedPriceItemRelistFixedPriceItemVerifyAddFixedPriceItemConditionally
    /// AddItemAddItemsReviseItemRelistItemVerifyAddItemVerifyRelistItemConditionally
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetSellerEventsGetMyeBaySellingConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The unique identifier of a shipping business policy. A <b>ShippingProfileID</b> and/or a <b>ShipppingProfileName</b> value is used in the Add/Revise/Relist/Verify call to reference and use the shippping-related settings/values of a shipping business policy. If both fields are provided and their values don't match, the <b>ShipppingProfileID</b> takes precedence.
    /// 						<br/><br/>
    /// 						Shipping profile IDs can be retrieved with the <b>getFulfillmentPolicies</b> call of the <b>Account API</b> or with the <b>getSellerProfiles</b> call of the <b>Business Policies Management API</b>. Business policy IDs can also be retrieved through the Business policies section of My eBay.
    /// 						<br/><br/>
    /// 						In the 'Get' calls, the <b>ShipppingProfileID</b> value will always be returned if business policies are set for the listing, and the person making the API call is the seller of the listing. The <b>ShipppingProfileName</b> value will be returned if a name is assigned to the shipping business policy.
    /// 					
    /// </remarks>

	public long? ShippingProfileID { get; set; }
    /// <summary>
    /// AddFixedPriceItemReviseFixedPriceItemRelistFixedPriceItemVerifyAddFixedPriceItemConditionally
    /// AddItemAddItemsReviseItemRelistItemVerifyAddItemVerifyRelistItemConditionally
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetSellerEventsGetMyeBaySellingConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The name of a shipping business policy. A <b>ShippingProfileID</b> and/or a <b>ShippingProfileName</b> value is used in the Add/Revise/Relist/Verify call to reference and use the shipping-related settings/values of a shipping business policy. If both fields are provided and their values don't match, the <b>ShippingProfileID</b> takes precedence.
    /// 						<br/><br/>
    /// 						In the 'Get' calls, the <b>ShippingProfileID</b> value will always be returned if business policies are set for the listing, and the person making the API call is the seller of the listing. The <b>ShippingProfileName</b> value will be returned if a name is assigned to the shipping business policy.
    /// 					
    /// </remarks>

	public string ShippingProfileName { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 			Information about a user returned in the context of an item's seller.
/// 		
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class SellerType {

#region 属性
    /// <summary>
    /// GetBidderListAlways
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// GetItemAlwaysSellerDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// GetSellerListSellerInfoDetailLevel: none, ItemReturnDescription, ReturnAllGranularityLevel: FineAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 					<br>
    /// 					Indicates whether the seller allows buyers to edit the
    /// 					total cost of an item during checkout. 
    /// 					<br>
    /// 					<span class="tablenote"><b>Note: </b> The <b>SellerInfo</b> container and its child fields will stop being returned in <b>GetItemTransactions</b> and <b>GetSellerTransactions</b> on January 31, 2024.
    /// 					</span>
    /// 				
    /// </remarks>

	public bool? AllowPaymentEdit { get; set; }
    /// <summary>
    /// GetItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					Currency type in which the user is billed seller fees.
    /// 				
    /// </remarks>

	public CurrencyCodeType? BillingCurrency { get; set; }
    /// <summary>
    /// GetBidderListAlways
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// GetItemAlwaysSellerDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// GetSellerListSellerInfoDetailLevel: none, ItemReturnDescription, ReturnAllGranularityLevel: FineAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 					<br>
    /// 					This flag indicates whether or not the seller's Checkout Enabled preference is turned on. 
    /// 					<br>
    /// 					<span class="tablenote"><b>Note: </b> The <b>SellerInfo</b> container and its child fields will stop being returned in <b>GetItemTransactions</b> and <b>GetSellerTransactions</b> on January 31, 2024.
    /// 					</span>
    /// 				
    /// </remarks>

	public bool? CheckoutEnabled { get; set; }
    /// <summary>
    /// GetBidderListAlways
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// GetSellerListSellerInfoDetailLevel: none, ItemReturnDescription, ReturnAllGranularityLevel: FineAlways
    /// GetItemAlwaysSellerDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 					<br>
    /// 					This boolean field indicates whether or not the seller has stored bank account information on file with eBay.
    /// 					<br>
    /// 					<span class="tablenote"><b>Note: </b> The <b>SellerInfo</b> container and its child fields will stop being returned in <b>GetItemTransactions</b> and <b>GetSellerTransactions</b> on January 31, 2024.
    /// 					</span>
    /// 				
    /// </remarks>

	public bool? CIPBankAccountStored { get; set; }
    /// <summary>
    /// GetBidderListAlways
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// GetItemAlwaysSellerDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// GetSellerListSellerInfoDetailLevel: none, ItemReturnDescription, ReturnAllGranularityLevel: FineAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 					<br>
    /// 					This boolean field indicates whether or not the seller is in good standing with eBay.
    /// 					<br>
    /// 					<span class="tablenote"><b>Note: </b> The <b>SellerInfo</b> container and its child fields will stop being returned in <b>GetItemTransactions</b> and <b>GetSellerTransactions</b> on January 31, 2024.
    /// 					</span>
    /// 				
    /// </remarks>

	public bool? GoodStanding { get; set; }
    /// <remarks>
    /// 
    /// 					This field is deprecated.
    /// 				
    /// </remarks>

	public MerchandizingPrefCodeType? MerchandizingPref { get; set; }
    /// <summary>
    /// GetBidderListAlways
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// GetItemAlwaysSellerDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// GetSellerListSellerInfoDetailLevel: none, ItemReturnDescription, ReturnAllGranularityLevel: FineAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 					<br>
    /// 					Indicates whether the user is subject to VAT. Users who have registered with
    /// 					eBay as VAT-exempt are not subject to VAT.
    /// 					<br>
    /// 					<span class="tablenote"><b>Note: </b> The <b>SellerInfo</b> container and its child fields will stop being returned in <b>GetItemTransactions</b> and <b>GetSellerTransactions</b> on January 31, 2024.
    /// 					</span>
    /// 				
    /// </remarks>

	public bool? QualifiesForB2BVAT { get; set; }
    /// <summary>
    /// 
    /// 773
    /// Avoid
    /// 889
    /// </summary>
    /// <remarks>
    /// 
    /// 					This field is deprecated.
    /// 				
    /// </remarks>

	public SellerGuaranteeLevelCodeType? SellerGuaranteeLevel { get; set; }
    /// <summary>
    /// GetBidderListAlways
    /// GetSellerListSellerInfoDetailLevel: none, ItemReturnDescription, ReturnAllGranularityLevel: FineAlways
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// GetItemAlwaysSellerDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 					<br>
    /// 					This enumeration value indicates the user's eBay PowerSeller tier. 
    /// 					<br>
    /// 					<span class="tablenote"><b>Note: </b> The <b>SellerInfo</b> container and its child fields will stop being returned in <b>GetItemTransactions</b> and <b>GetSellerTransactions</b> on January 31, 2024.
    /// 					</span>
    /// 				
    /// </remarks>

	public SellerLevelCodeType? SellerLevel { get; set; }
    /// <summary>
    /// GetUserDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					Address used by eBay for purposes of billing the user for seller fees.
    /// 				
    /// </remarks>

	public AddressType SellerPaymentAddress { get; set; }
    /// <summary>
    /// GetUserDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					Container for scheduling limits for the user. Conveys the minimum and maximum minutes the user may schedule listings in advance, as well as the maximum number of items the user may schedule at any given time.
    /// 				
    /// </remarks>

	public SchedulingInfoType SchedulingInfo { get; set; }
    /// <summary>
    /// GetBidderListAlways
    /// GetSellerListSellerInfoDetailLevel: none, ItemReturnDescription, ReturnAllGranularityLevel: FineConditionally
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// GetItemAlwaysSellerDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 					<br>
    /// 					Boolean value indicates whether or not the seller is an eBay Store owner.
    /// 					<br>
    /// 					<span class="tablenote"><b>Note: </b> The <b>SellerInfo</b> container and its child fields will stop being returned in <b>GetItemTransactions</b> and <b>GetSellerTransactions</b> on January 31, 2024.
    /// 					</span>
    /// 				
    /// </remarks>

	public bool? StoreOwner { get; set; }
    /// <summary>
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetSellerListSellerInfoDetailLevel: none, ItemReturnDescription, ReturnAllGranularityLevel: FineConditionally
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					<br>
    /// 					The URL for the seller's eBay Store. This field is only returned if the seller is a store owner (look for a value of <code>true</code> in the <b>SellerInfo.StoreOwner</b> field). 
    /// 					<br>
    /// 					<span class="tablenote"><b>Note: </b> The <b>SellerInfo</b> container and its child fields will stop being returned in <b>GetItemTransactions</b> and <b>GetSellerTransactions</b> on January 31, 2024.
    /// 					</span>
    /// 				
    /// </remarks>

	public string StoreURL { get; set; }
    /// <summary>
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					This enumeration value indicates the type of eBay account used by the seller. 
    /// 				
    /// </remarks>

	public SellerBusinessCodeType? SellerBusinessType { get; set; }
    /// <summary>
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					If true, the user is registered as a vehicle dealer on the eBay Motors site.
    /// 				
    /// </remarks>

	public bool? RegisteredBusinessSeller { get; set; }
    /// <summary>
    /// GetUserConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 				This enumeration value indicates the eBay marketplace hosting the seller's eBay Store.
    /// 				
    /// </remarks>

	public SiteCodeType? StoreSite { get; set; }
    /// <summary>
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This enumeration value indicates the default payment method that the seller is using to pay eBay fees.
    /// 				
    /// </remarks>

	public SellerPaymentMethodCodeType? PaymentMethod { get; set; }
    /// <summary>
    /// eBay for Charityhttps://pages.ebay.com/help/sell/nonprofit.html
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 					Indicates whether or not the seller is a registered charity
    /// 					seller. If <b>CharityRegistered</b> is <code>false</code>, the user must
    /// 					register their nonprofit organization with the PayPal Giving Fund to list eBay for Charity items.
    /// 				
    /// </remarks>

	public bool? CharityRegistered { get; set; }
    /// <summary>
    /// false
    /// GetBidderListAlwaysSellerDetailLevel: none, ReturnAll
    /// GetItemAlwaysSellerDetailLevel: none, ItemReturnAttributes, ItemReturnDescription,ReturnAll
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllAlways
    /// GetSellerListSellerDetailLevel: none, ItemReturnDescription, ReturnAllGranularityLevel: FineAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 					<br>
    /// 					If this field is <code>true</code>, the user is exempt from the requirement to offer at least one safe payment method when listing items. 
    /// 					<br>
    /// 					<span class="tablenote"><b>Note: </b> The <b>SellerInfo</b> container and its child fields will stop being returned in <b>GetItemTransactions</b> and <b>GetSellerTransactions</b> on January 31, 2024.
    /// 					</span>
    /// 				
    /// </remarks>

	public bool? SafePaymentExempt { get; set; }
    /// <summary>
    /// eBay for Charityhttps://pages.ebay.com/help/sell/nonprofit.html
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					This container consists of one or more of nonprofit organizations associated with the seller's account. This container will not be returned if the user is not affiliated with any nonprofit organizations. A seller must be registered with the PayPal Giving Fund to be affiliated with an eBay for Charity nonprofit organization.
    /// 				
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("CharityAffiliationDetail", IsNullable = false)]

	public System.Collections.Generic.List<CharityAffiliationDetailType> CharityAffiliationDetails { get; set; }
    /// <summary>
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					Percentage of the number of times a member has sold successfully vs.
    /// 					the number of times a member has bought an item in the preceding 365 days.
    /// 				
    /// </remarks>

	public float? TransactionPercent { get; set; }
    /// <summary>
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Contains eligibility details about seller- or platform-based features. This is returned only
    /// 						if the <b>IncludeFeatureEligibility</b> field is included and set to <code>true</code> in the request.
    /// 					
    /// </remarks>

	public FeatureEligibilityType FeatureEligibility { get; set; }
    /// <summary>
    /// GetBidderListConditionally
    /// GetSellerListSellerInfoDetailLevel: none, ItemReturnDescription, ReturnAllGranularityLevel: FineConditionally
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// GetItemConditionallySellerDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						This boolean field indicates if the seller is certified as a
    /// 						<em>Top Rated Seller</em>. Only Top Rated Sellers can qualify for Top Rated Plus listings, which receive the Top Rated Plus seal and other benefits.
    /// 						<br/>
    /// 						This field is only returned for the following sites: US, Germany, Austria, Switzerland, UK, Ireland, and Australia. The Top Rated Seller and Top Rated Plus listing requirements will differ by site. Below are some links to Help pages that discuss these requirements:
    /// 						<ul>
    /// 						<li>eBay US: <a href="https://www.ebay.com/help/policies/selling-policies/seller-standards-policy?id=4347&#section3">Requirements to become Top Rated</a></li>
    /// 						<li>eBay UK/IE: <a href="https://www.ebay.co.uk/help/policies/selling-policies/seller-standards-policy?id=4347&#section3">Requirements to become Top Rated and the eBay Premium Service</a></li>
    /// 						<li>eBay DE/AT/CH: <a href="https://pages.ebay.de/help/sell/top-rated/2.html">
    /// Anforderungen fur den Verkaufer mit Top-Bewertung</a></li>
    /// 						<li>eBay AU: <a href="https://www.ebay.com.au/help/policies/selling-policies/seller-standards-policy?id=4347&#section3">
    /// Requirements to become Top Rated</a></li>
    /// 						</ul>
    /// 						Top Rated Sellers, registered in the US, can qualify for Top Rated Seller programs in other countries as long as they meet the selling requirements in those countries. However, even if US sellers qualify for programs in other countries, they will not receive the Final Value Fee discount on sales in those countries. 
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> The <b>SellerInfo</b> container and its child fields will stop being returned in <b>GetItemTransactions</b> and <b>GetSellerTransactions</b> on January 31, 2024.
    /// 						</span>
    /// 					
    /// </remarks>

	public bool? TopRatedSeller { get; set; }
    /// <summary>
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Contains Top Rated Seller program details for the seller.
    /// 					
    /// </remarks>

	public TopRatedSellerDetailsType TopRatedSellerDetails { get; set; }
    /// <summary>
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						The list of the sites where a seller has agreed to the cross-border recoupment terms.
    /// 						<br><br>
    /// 						Sellers who engage in cross-border trade on sites that require a recoupment agreement, must
    /// 						agree to the recoupment terms before adding items to the site. This agreement allows eBay to
    /// 						reimburse a buyer during a dispute and then recoup the cost from the seller.
    /// 					
    /// </remarks>

	public RecoupmentPolicyConsentType RecoupmentPolicyConsent { get; set; }
    /// <summary>
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						A returned value of <code>true</code> indicates that the seller has configured a default, domestic shipping rate table in their My eBay shipping preferences.
    /// 					
    /// </remarks>

	public bool? DomesticRateTable { get; set; }
    /// <summary>
    /// 
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						A returned value of <code>true</code> indicates that the seller has configured a default, international shipping rate table in their My eBay shipping preferences.
    /// 					
    /// </remarks>

	public bool? InternationalRateTable { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Contains various details about the current status of a listing. These
/// 				values are computed by eBay and cannot be specified at listing time.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class SellingStatusType {

#region 属性
    /// <summary>
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: FineVariationConditionally
    /// GetMyeBayBuyingBidListLostListWatchListWonListDeletedFromWonListDeletedFromLostListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingActiveListUnsoldListDeleteFromUnsoldListBidListVariationsDetailLevel: none, ReturnAllConditionally
    /// GetBidderListAlways
    /// GetItemTransactionsDetailLevel: none, ReturnAll, ItemReturnDescriptionItem.SellingStatusConditionally
    /// GetSellerTransactionsDetailLevel: none, ReturnAll, ItemReturnDescriptionConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllVariationAlways
    /// GetSellerEventsDetailLevel: none, ReturnAllItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Number of bids placed so far against the auction item.
    /// 					
    /// </remarks>

	public int? BidCount { get; set; }
    /// <summary>
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: FineVariationConditionally
    /// GetBidderListAlways
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllVariationAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						The minimum amount a progressive bid must be above the current high bid to be accepted. This field is only
    /// 						applicable to auction listings. The value of this field will always be '0.00' for Classified Ad and fixed-price
    /// 						listings.
    /// 					
    /// </remarks>

	public AmountType BidIncrement { get; set; }
    /// <summary>
    /// GetBidderListPlaceOfferConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllVariationConditionally
    /// GetItemTransactionsDetailLevel: none, ReturnAll, ItemReturnDescriptionItem.SellingStatusConditionally
    /// GetSellerTransactionsDetailLevel: none, ReturnAll, ItemReturnDescriptionConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: FineVariationConditionally
    /// GetMyeBayBuyingBestOfferListBidListLostListWatchListWonListDeletedFromWonListDeletedFromLostListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingActiveListBidListScheduledListSoldListUnsoldListVariationsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Converted value of the <b>CurrentPrice</b> in the currency of the site that
    /// 						returned this response. For active items, refresh the listing's data every 24
    /// 						hours to pick up the current conversion rates. Only returned when the item's
    /// 						<b>CurrentPrice</b> on the listing site is in different currency than the currency of
    /// 						the host site for the user/application making the API call. <b>ConvertedCurrentPrice</b>
    /// 						is not returned for Classified listings (Classified listings are not available
    /// 						on all sites).<br>
    /// 						<br>
    /// 						In multi-variation listings, this value matches the lowest-priced
    /// 						variation that is still available for sale.
    /// 					
    /// </remarks>

	public AmountType ConvertedCurrentPrice { get; set; }
    /// <summary>
    /// GetBidderListPlaceOfferAlways
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllVariationAlways
    /// GetItemTransactionsDetailLevel: none, ReturnAll, ItemReturnDescriptionItem.SellingStatusAlways
    /// GetSellerTransactionsDetailLevel: none, ReturnAll, ItemReturnDescriptionAlways
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: FineVariationConditionally
    /// GetMemberMessagesConditionally
    /// GetMyeBayBuyingBestOfferListBidListLostListWatchListWonListDeletedFromWonListDeletedFromLostListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingBidListActiveListScheduledListSoldListUnsoldListVariationsDetailLevel: none, ReturnAllConditionally
    /// GetSellerEventsDetailLevel: none, ReturnAllItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             The current price of the item in the original listing currency.
    /// 						<br><br>
    /// 						For auction listings, this price is the starting minimum price (if the listing has no bids) or the current highest bid (if bids have been placed) for the item. This does not reflect the <b>BuyItNow</b> price.
    /// 						<br><br>
    /// 						For fixed-price and ad format listings, this is the current listing price.
    /// 						<br><br>
    /// 						In multi-variation, fixed-price listings, this value matches the lowest-priced variation that is still available for sale.
    /// 					
    /// </remarks>

	public AmountType CurrentPrice { get; set; }
    /// <summary>
    /// PlaceOfferConditionally
    /// GetBidderListDetailLevel: ReturnAllGranularityLevel: MediumVariationConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: FineVariationConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllVariationConditionally
    /// GetMyeBayBuyingBidListLostListWatchListDeletedFromLostListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingBidListActiveListVariationsDetailLevel: none, ReturnAllConditionally
    /// GetSellerEventsDetailLevel: ReturnAllItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						For ended auction listings that have a winning bidder,
    /// 						this field is a container for the high bidder's user ID.
    /// 						For ended, single-item, fixed-price listings,
    /// 						this field is a container for the user ID of the purchaser.
    /// 						This field isn't returned for auctions with no bids, or for active fixed-price listings.
    /// 						<br/><br/>
    /// 						In the case of <b>PlaceOffer</b>, for auction listings,
    /// 						this field is a container for the high bidder's user ID.
    /// 						In the <b>PlaceOffer</b> response, the following applies:
    /// 						For multiple-quantity, fixed-price listings,
    /// 						the high bidder is only returned if there is just one order line item
    /// 						(or only for the first order line item that is created).
    /// 					
    /// </remarks>

	public UserType HighBidder { get; set; }
    /// <summary>
    /// GetSellerListDetailLevel: ReturnAllVariationConditionally
    /// GetBidderListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllVariationConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Applicable to Ad type listings only. Indicates how many leads to
    /// 						potential buyers are associated with this item. Returns 0 (zero) for listings in other formats. You must be the seller of the item to retrieve the lead count.
    /// 					
    /// </remarks>

	public int? LeadCount { get; set; }
    /// <summary>
    /// PlaceOfferConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: FineVariationConditionally
    /// GetBidderListAlways
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllVariationAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Smallest amount the next bid on the item can be. Returns same value as
    /// 						<b>Item.StartPrice</b> (if no bids have yet been placed) or <b>CurrentPrice</b> plus
    /// 						<b>BidIncrement</b> (if at least one bid has been placed). Only applicable to
    /// 						auction listings. Returns null for fixed-price
    /// 						and Ad type listings.
    /// 						<br><br>
    /// 						In multi-variation listings, this value matches the lowest-priced
    /// 						variation that is still available for sale.
    /// 					
    /// </remarks>

	public AmountType MinimumToBid { get; set; }
    /// <summary>
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAll, ItemReturnDescriptionAlways
    /// GetBidderListAlways
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllAlways
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: FineItemConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllVariationConditionally
    /// GetSellerEventsDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingActiveListSoldListUnsoldListScheduledListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The total number of items purchased so far (in the listing's lifetime).
    /// 						Subtract this from <b>Quantity</b> to determine the quantity available.
    /// 						<br><br>
    /// 						If the listing has Item Variations,
    /// 						then in <b>GetItem</b> (and related calls) and <b>GetItemTransactions</b>,
    /// 						<b>Item.SellingStatus.QuantitySold</b> contains the sum of all quantities
    /// 						sold across all variations in the listing, and <b>Variation.SellingStatus.QuantitySold</b> contains the number
    /// 						of items sold for that variation.
    /// 						<br/><br/>
    /// 						In <b>GetSellerTransactions</b>,
    /// 						<b>Transaction.Item.SellingStatus.QuantitySold</b> contains the number
    /// 						of items sold in that order line item.<br>
    /// 						<br>
    /// 						For order line item calls, also see <b>Transaction.QuantityPurchased</b> for
    /// 						the number of items purchased in the order line item.<br>
    /// 						In multi-variation listings, this value matches total quantity sold
    /// 						across all variations.
    /// 					
    /// </remarks>

	public int? QuantitySold { get; set; }
    /// <summary>
    /// PlaceOfferConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: FineVariationConditionally
    /// GetMyeBayBuyingBidListDetailLevel: none, ReturnAllConditionally
    /// GetBidderListAlways
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllVariationAlways
    /// GetMyeBaySellingActiveListBidListScheduledListSoldListUnsoldListVariationsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether the reserve price has been met for the listing. Returns
    /// 						true if the reserve price was met or no reserve price was specified.
    /// 					
    /// </remarks>

	public bool? ReserveMet { get; set; }
    /// <summary>
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: FineVariationConditionally
    /// GetBidderListAlways
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllVariationAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Part of the Second Chance Offer feature, indicates whether the seller can
    /// 						extend a second chance offer for the item.
    /// 					
    /// </remarks>

	public bool? SecondChanceEligible { get; set; }
    /// <summary>
    /// GetMyeBaySellingActiveListUnsoldListVariationsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Number of bidders for an item. Only applicable to auction listings.
    /// 						Only returned for the seller of the item.
    /// 					
    /// </remarks>

	public long? BidderCount { get; set; }
    /// <summary>
    /// GetAllBiddersGetBidderListAlways
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllVariationAlways
    /// GetItemTransactionsDetailLevel: none, ReturnAll, ItemReturnDescriptionItem.SellingStatusAlways
    /// GetSellerTransactionsDetailLevel: none, ReturnAll, ItemReturnDescriptionAlways
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: FineVariationConditionally
    /// GetSellerEventsItemDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies an active or ended listing's status in eBay's processing workflow.
    /// 						<b></b>
    /// 							<ul>
    /// 	  						<li>If a listing ends with a sale (or sales), eBay needs to update the sale details
    /// 						(e.g., total price and buyer/high bidder) and the transaction fees. This processing
    /// 						can take several minutes.</li>
    /// 							  <li>If you retrieve a sold item and no details about the buyer/high bidder
    /// 						are returned or no transaction fees are available, use this listing status information
    /// 						to determine whether eBay has finished processing the listing.</li>
    /// 						  </ul>
    /// 					
    /// </remarks>

	public ListingStatusCodeType? ListingStatus { get; set; }
    /// <summary>
    /// GetBidderListConditionally
    /// GetItemTransactionsDetailLevel: none, ReturnAll, ItemReturnDescriptionItem.SellingStatusConditionally
    /// GetSellerTransactionsDetailLevel: none, ReturnAll, ItemReturnDescriptionConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						A seller is changed a Final Value Fee (FVF) when the item is sold, ends with a
    /// 						winning bid, or is purchased. This fee applies whether or not the sale is completed with the buyer and
    /// 						is generated before the buyer makes a payment.
    /// 						<br/><br/>
    /// 						The FVF is calculated using a percentage. This percentage is based on whether the seller has a
    /// 						Store subscription or not. If a seller does have a Store subscription, the FVF is calculated based on
    /// 						the level of that plan. For complete information about selling fees and eBay Store subscription plans, see the
    /// 						<a href="http://www.feectr.ebay.com/feecenter/home">Fee Center Home Page</a>.
    /// 						<br/><br/>
    /// 						The Final Value Fee for each order line
    /// 						item is returned by <b>GetSellerTransactions</b>, <b>GetItemTransactions</b>, and <b>GetOrders</b>,
    /// 						regardless of the checkout status.
    /// 						<br><br>
    /// 						If a seller requests a Final Value Fee credit, the value of
    /// 						<b>Transaction.FinalValueFee</b> will not change if a credit is
    /// 						issued. The credit only appears in the seller's account data.
    /// 						<br>
    /// 						<br>
    /// 									See the <a href="https://www.ebay.com/help/selling/fees-credits-invoices/selling-fees?id=4822" target="_blank">Selling fees</a> help page for more information about how Final Value Fees are calculated.
    /// 					
    /// </remarks>

	public AmountType FinalValueFee { get; set; }
    /// <summary>
    /// GetBidderListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllVariationConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllVariationConditionally
    /// GetMyeBayBuyingWatchListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingActiveListVariationsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						If a seller has reduced the price of a listed item with the Promotional Price Display feature,
    /// 						this field contains the original price of the discounted item, along with the start-time
    /// 						and end-time of the discount.
    /// 					
    /// </remarks>

	public PromotionalSaleDetailsType PromotionalSaleDetails { get; set; }
    /// <summary>
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllVariationConditionally
    /// GetItemVariationConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						If included in the response as <code>true</code>, indicates that the listing was administratively
    /// 						canceled due to a violation of eBay's listing policies and that the item can be relisted
    /// 						using <b>RelistItem</b>.
    /// 						<br/><br/>
    /// 						<span class="tablenote"><b>Note: </b>
    /// 						<b>GetItem</b> returns an error (invalid item ID)
    /// 						in the response if <b>Item.SellingStatus.AdminEnded</b> = <code>true</code> and the requesting user is not the seller of the item.
    /// 						</span>
    /// 					
    /// </remarks>

	public bool? AdminEnded { get; set; }
    /// <summary>
    /// GetItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 				    	If this flag appears in the <b>GetItem</b> response, the auction has ended due to the
    /// 							item being sold to a seller using the <b>Buy It Now</b> option.
    /// 							This flag is not relevant for fixed-priced listings.
    /// 					
    /// </remarks>

	public bool? SoldAsBin { get; set; }
    /// <summary>
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates the total quantity of items sold and picked up by buyers using the In-Store Pickup option. This value is the total number of items purchased by one or more buyers using the In-Store Pickup option, and is not the total number of In-Store Pickup orders. So, if two buyers selected the In-Store Pickup option, but each of these buyers bought a quantity of five of these items (in same purchase), the <b>Item.SellingStatus.QuantitySoldByPickupInStore</b> value would be '10' and not '2'.
    /// 						<br>
    /// 						<br>
    /// 						In the case of multi-variation, fixed-price listings, each <b>Item.Variations.Variation.SellingStatus.QuantitySoldByPickupInStore</b> value indicates the total quantity of that corresponding item variation (for example, large blue shirts) sold and picked up by buyers using the In-Store Pickup option, and the <b>Item.SellingStatus.QuantitySoldByPickupInStore</b> value would be the total quantity of all item variations sold for the listing.
    /// 						<br>
    /// 						<br>
    /// 						This field is returned only if the listing is eligible for In-Store Pickup (<b>EligibleForPickupInStore</b> is returned as <code>true</code>).
    /// 						<br/><br/>
    /// 						<span class="tablenote">
    /// 						<strong>Note:</strong> At this time, the In-Store Pickup feature is generally only available to large retail merchants, and can only be applied to multi-quantity, fixed-price listings.
    /// 						</span>
    /// 					
    /// </remarks>

	public int? QuantitySoldByPickupInStore { get; set; }
    /// <summary>
    /// PlaceOfferConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container is only returned if the buyer is attempting to bid on an auction item. To bid on an auction item, the buyer sets the value of the <b>Offer.Action</b> field to <code>Bid</code>, and sets the maximum bid amount in the <b>Offer.MaxBid</b> field.
    /// 						<br><br>
    /// 						The <b>SuggestedBidValues</b> container consists of an array of incremental bid values (up to the dollar value in the <b>Offer.MaxBid</b> field) that eBay will bid on behalf of the buyer each time that buyer is outbid for the auction item.
    /// 					
    /// </remarks>

	public SuggestedBidValueType SuggestedBidValues { get; set; }
    /// <summary>
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					  Indicates if a listing is on hold due to an eBay policy violation. 
    /// 					  <br><br>
    ///                       If a listing is put on hold, users are unable to view the listing details, the listing is hidden from search, and all attempted purchases, offers, and bids for the listing are blocked. eBay, however, gives sellers the opportunity to address violations and get listings fully reinstated. A listing will be ended if a seller does not address a violation, or if the violation can not be rectified. 
    ///                       <br><br>
    ///                       If a listing is fixable, the seller should be able to view the listing details and this boolean will be returned as <code>true</code>.
    ///                       <br><br>
    ///                       Once a listing is fixed, this boolean will no longer be returned.  
    /// 					
    /// </remarks>

	public bool? ListingOnHold { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Contains summary information about the items the seller is selling.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class SellingSummaryType {

#region 属性
    /// <summary>
    /// GetMyeBaySellingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The number of currently active auctions that will sell. That
    /// 						is, there is at least one bidder, and any reserve price has
    /// 						been met. Equivalent to the "Will Sell" value in My eBay.
    /// 					
    /// </remarks>

	public int? ActiveAuctionCount { get; set; }
    /// <summary>
    /// GetMyeBaySellingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The total number of currently active auctions for a given
    /// 						seller. Equivalent to the
    /// 						"Auction Quantity" value in My eBay.
    /// 					
    /// </remarks>

	public int? AuctionSellingCount { get; set; }
    /// <summary>
    /// GetMyeBaySellingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The total value of all items the seller has for sale in all listings.
    /// 					
    /// </remarks>

	public AmountType TotalAuctionSellingValue { get; set; }
    /// <summary>
    /// GetMyeBaySellingDetailLevel: none, ReturnAllConditionally
    /// https://developer.ebay.com/support/kb-article?KBid=1111Discrepancies Between Results of GetMyeBaySelling and GetSellerTransactions
    /// </summary>
    /// <remarks>
    /// 
    /// 						The total number of items the seller has sold.
    /// 					
    /// </remarks>

	public int? TotalSoldCount { get; set; }
    /// <summary>
    /// GetMyeBaySellingDetailLevel: none, ReturnAllConditionally
    /// https://developer.ebay.com/support/kb-article?KBid=1111Discrepancies Between Results of GetMyeBaySelling and GetSellerTransactions
    /// </summary>
    /// <remarks>
    /// 
    /// 						The total monetary value of the items the seller has sold.
    /// 					
    /// </remarks>

	public AmountType TotalSoldValue { get; set; }
    /// <summary>
    /// GetMyeBaySellingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The average duration, in days, of all items sold.
    /// 					
    /// </remarks>

	public int? SoldDurationInDays { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type used by the <b>ServiceCost</b> container to display any service cost to the buyer for an item that will go through the Authenticity Guarantee process.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ServiceCostType {

#region 属性
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The amount charged to the buyer for any service cost related to an item going through the Authenticity Guarantee process. This amount is given in the currency of the listing site.
    /// 					
    /// </remarks>

	public AmountType Amount { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The amount (in the buyer's currency) charged to the buyer for any service cost related to an item going through the Authenticity Guarantee process. This amount is only applicable if the buyer resides in another country that uses a different currency than the currency of the listing site.
    /// 					
    /// </remarks>

	public AmountType ConvertedFromAmount { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Details pertinent to one or more items for which
/// 				calculated shipping (or flat rate shipping using shipping rate tables with
/// 				weight surcharges) has been offered by the seller, such as package
/// 				dimension and weight and packaging/handling costs.
/// 				<br/><br/>
/// 				Also returned with the data for an item's transaction.
/// 				<br/><br/>
/// 				<span class="tablenote"><strong>Note:</strong>
/// 				The <strong>ShippingPackageDetails</strong> container should now be used instead of the <strong>CalculatedShippingRate</strong> container to specify values for the <strong>MeasurementUnit</strong>, <strong>PackageDepth</strong>,  <strong>PackageWidth</strong>, <strong>PackageLength</strong>, <strong>ShippingIrregular</strong>, <strong>ShippingPackage</strong>, <strong>WeightMajor</strong>, and/or <strong>WeightMinor</strong> fields. The <strong>CalculatedShippingRate</strong> container should only be used to specify values for the <strong>InternationalPackagingHandlingCosts</strong>, and/or <strong>PackagingHandlingCosts</strong> fields.
/// 				</span>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ShipPackageDetailsType {

#region 属性
    /// <summary>
    /// AddItemAddItemsRelistItemReviseItemVerifyAddItemAddFixedPriceItemVerifyAddFixedPriceItemRelistFixedPriceItemReviseFixedPriceItemVerifyRelistItemConditionally
    /// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/shipping-package-size.htmlPackage dimensions and weight
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the unit type of the weight and dimensions of a
    /// 						shipping package.
    /// 						If <b>MeasurementUnit</b> is used, it overrides the system specified by measurementSystem.
    /// 						If <b>MeasurementUnit</b> and measurementSystem are not specified, the following defaults
    /// 						will be used:
    /// 						<br><br>
    /// 						English: US<br>
    /// 						Metric: CA, CAFR, AU
    /// 						<br><br>
    /// 						CA and CAFR supports both English and Metric, while other sites
    /// 						only support the site's default.
    /// 						<br><br>
    /// 						Use <b>MeasurementUnit</b> with weight and package dimensions.  For example,
    /// 						to represent a 5 lbs 2 oz package:
    /// 						<br><br>
    /// 						<code>
    /// 						&lt;MeasurementUnit&gt;English&lt;/MeasurementUnit&gt;
    /// 						<br>
    /// 						&lt;WeightMajor&gt;5&lt;/WeightMajor&gt;
    /// 						<br>
    /// 						&lt;WeightMinor&gt;2&lt;/WeightMinor&gt;
    /// 						</code>
    /// 					
    /// </remarks>

	public MeasurementSystemCodeType? MeasurementUnit { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetBidderListGetItemShippingConditionally
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// GetItemTransactionsGetSellerTransactionsGetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/shipping-package-size.htmlPackage dimensions and weight
    /// </summary>
    /// <remarks>
    /// 
    /// 						Depth of the package, in whole number of inches, needed to ship the item.
    /// 						This is validated against the selected shipping service.
    /// 						Upon mismatch, a message is returned, such as, "Package
    /// 						dimensions exceeds maximum allowable limit for
    /// 						service XXXXX," where XXXXX is the name of the shipping service.
    /// 						For calculated shipping only. Only returned if the seller
    /// 						specified the value for the item. (In many cases, the seller
    /// 						only specifies the weight fields.)	
    /// 		
    /// 						<b>Developer impact:</b> UPS requires dimensions for any Ground packages that are 3
    /// 						cubic feet or larger and for all air packages, if they are to provide correct
    /// 						shipping cost. If package dimensions are not included for an item listed with
    /// 						calculated shipping, the shipping cost returned will be an estimate based on
    /// 						standard dimensions for the defined package type. eBay enforces a dimensions
    /// 						requirement on listings so that buyers receive accurate calculated shipping
    /// 						costs.
    /// 						<br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						The <b>unit</b> and <b>measurementSystem</b> attributes associated with this field will be returned by the <b>GetItem</b> call and are automatically derived based on the <b>MeasurementUnit</b> value specified during listing creation or revision. These attributes will be ignored if passed into the request of the AddItem family of calls. 
    /// 						</span>		
    /// 					
    /// </remarks>

	public MeasureType PackageDepth { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetBidderListGetItemShippingConditionally
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// GetItemTransactionsGetSellerTransactionsGetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/shipping-package-size.htmlPackage dimensions and weight
    /// </summary>
    /// <remarks>
    /// 
    /// 						Length of the package, in whole number of inches, needed to ship the item.
    /// 						Upon mismatch, a message is returned, such as, "Package
    /// 						dimensions exceeds maximum allowable limit for
    /// 						service XXXXX," where XXXXX is the name of the shipping service.
    /// 						For calculated shipping only. Only returned if the seller
    /// 						specified the value for the item. (In many cases, the seller
    /// 						only specifies the weight fields.)
    /// 						<br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						The <b>unit</b> and <b>measurementSystem</b> attributes associated with this field will be returned by the <b>GetItem</b> call and are automatically derived based on the <b>MeasurementUnit</b> value specified during listing creation or revision. These attributes will be ignored if passed into the request of the AddItem family of calls. 
    /// 						</span>	
    /// 					
    /// </remarks>

	public MeasureType PackageLength { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetBidderListGetItemShippingConditionally
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// GetItemTransactionsGetSellerTransactionsGetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/shipping-package-size.htmlPackage dimensions and weight
    /// </summary>
    /// <remarks>
    /// 
    /// 						Width of the package, in whole number of inches, needed to ship the item.
    /// 						Upon mismatch, a message is returned, such as, "Package
    /// 						dimensions exceeds maximum allowable limit for
    /// 						service XXXXX," where XXXXX is the name of the shipping service.
    /// 						For calculated shipping only. Only returned if the seller
    /// 						specified the value for the item. (In many cases, the seller
    /// 						only specifies the weight fields.)
    /// 						<br>				
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						The <b>unit</b> and <b>measurementSystem</b> attributes associated with this field will be returned by the <b>GetItem</b> call and are automatically derived based on the <b>MeasurementUnit</b> value specified during listing creation or revision. These attributes will be ignored if passed into the request of the AddItem family of calls. 
    /// 						</span>	
    /// 					
    /// </remarks>

	public MeasureType PackageWidth { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemNo
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetBidderListGetItemShippingConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetItemTransactionsGetSellerTransactionsGetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Whether a package is irregular and therefore cannot go
    /// 						through the stamping machine at the shipping service office and
    /// 						thus requires special or fragile handling. For calculated
    /// 						shipping only.
    /// 					
    /// </remarks>

	public bool? ShippingIrregular { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetBidderListGetItemShippingConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetItemTransactionsGetSellerTransactionsGetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The nature of the package used to ship the item(s).
    /// 						Required for calculated shipping only.
    /// 					
    /// </remarks>

	public ShippingPackageCodeType? ShippingPackage { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetBidderListGetItemShippingConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetItemTransactionsGetSellerTransactionsGetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						<b>WeightMajor</b> and <b>WeightMinor</b> are used to specify the weight of a
    /// 						shipping package. <b>WeightMajor</b> is used to specify the weight of the package in pounds (in US) or kilograms (all countries that use metric system). Although <b>MeasureType</b> is of decimal type, decimal values should not be used in <b>WeightMajor</b> and <b>WeightMinor</b>.
    /// 
    /// 						If a shipping package was 5 pounds and 1.8 ounces, the 1.8 ounces should be rounded up to an even 2 ounces. The same is for kilograms. If the package is 2.267 kilgram, you would round up the grams. Below shows you how to represent a package weight of 5 lbs 2 oz and and 2 kg 3 gr:
    /// 						<br/><br/>
    /// 						<code>
    /// 						&lt;WeightMajor unit="lbs"&gt;5&lt;/WeightMajor&gt;<br/>
    /// 						&lt;WeightMinor unit="oz"&gt;2&lt;/WeightMinor&gt;<br/>
    /// 						&lt;WeightMajor unit="kg"&gt;2&lt;/WeightMajor&gt;<br/>
    /// 						&lt;WeightMinor unit="gr"&gt;3&lt;/WeightMinor&gt;
    /// 						</code>
    /// 						<br/><br/>
    /// 						If a package weighed 14 oz or 324 gr, below is how you would represent this weight:
    /// 						<br/><br/>
    /// 						<code>
    /// 						&lt;WeightMajor unit="lbs"&gt;0&lt;/WeightMajor&gt;<br/>
    /// 						&lt;WeightMinor unit="oz"&gt;14&lt;/WeightMinor&gt;<br/>
    /// 						&lt;WeightMajor unit="kg"&gt;0&lt;/WeightMajor&gt;<br/>
    /// 						&lt;WeightMinor unit="gr"&gt;324&lt;/WeightMinor&gt;
    /// 						</code>
    /// 						<br/><br/>
    /// 						If a package weighed exactly 2 lbs or 105 kg, below is how you would represent this weight:
    /// 						<br/><br/>
    /// 						<code>
    /// 						&lt;WeightMajor unit="lbs"&gt;2&lt;/WeightMajor&gt;<br/>
    /// 						&lt;WeightMinor unit="oz"&gt;0&lt;/WeightMinor&gt;<br/>
    /// 						&lt;WeightMajor unit="kg"&gt;105&lt;/WeightMajor&gt;<br/>
    /// 						&lt;WeightMinor unit="gr"&gt;0&lt;/WeightMinor&gt;
    /// 						</code>
    /// 						<br/><br/>
    /// 						In all cases, both the <b>WeightMajor</b> and <b>WeightMinor</b> should be specified in an Add/Revise/Relist/Verify call, even if either's value is '0'.
    /// 						<br><br>
    /// 						The <b>WeightMajor</b> and <b>WeightMinor</b> are applicable for calculated shipping or for flat-rate shipping if shipping rate tables are specified and the shipping rate table uses weight surcharges.
    /// 						<br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						The <b>unit</b> and <b>measurementSystem</b> attributes associated with this field will be returned by the <b>GetItem</b> call and are automatically derived based on the <b>MeasurementUnit</b> value specified during listing creation or revision. These attributes will be ignored if passed into the request of the AddItem family of calls. 
    /// 						</span>	
    /// 					
    /// </remarks>

	public MeasureType WeightMajor { get; set; }
    /// <summary>
    /// 0
    /// 15 for ounces; 999 for grams
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetBidderListGetItemShippingConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetItemTransactionsGetSellerTransactionsGetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						<b>WeightMajor</b> and <b>WeightMinor</b> are used to specify the weight of a
    /// 						shipping package. <b>WeightMinor</b> is used to specify the weight of the package in ounces (in US) or grams (all countries that use metric system). Although <b>MeasureType</b> is of decimal type, decimal values should not be used in <b>WeightMajor</b> and <b>WeightMinor</b>.
    /// 
    /// 						If a shipping package was 5 pounds and 1.8 ounces, the 1.8 ounces should be rounded up to an even 2 ounces. The same is for kilograms. If the package is 2.267 kilgram, you would round up the grams. Below shows you how to represent a package weight of 5 lbs 2 oz and and 2 kg 3 gr:
    /// 						<br/><br/>
    /// 						<code>
    /// 						&lt;WeightMajor unit="lbs"&gt;5&lt;/WeightMajor&gt;<br/>
    /// 						&lt;WeightMinor unit="oz"&gt;2&lt;/WeightMinor&gt;<br/>
    /// 						&lt;WeightMajor unit="kg"&gt;2&lt;/WeightMajor&gt;<br/>
    /// 						&lt;WeightMinor unit="gr"&gt;3&lt;/WeightMinor&gt;
    /// 						</code>
    /// 						<br/><br/>
    /// 						If a package weighed 14 oz or 324 gr, below is how you would represent this weight:
    /// 						<br/><br/>
    /// 						<code>
    /// 						&lt;WeightMajor unit="lbs"&gt;0&lt;/WeightMajor&gt;<br/>
    /// 						&lt;WeightMinor unit="oz"&gt;14&lt;/WeightMinor&gt;<br/>
    /// 						&lt;WeightMajor unit="kg"&gt;0&lt;/WeightMajor&gt;<br/>
    /// 						&lt;WeightMinor unit="gr"&gt;324&lt;/WeightMinor&gt;
    /// 						</code>
    /// 						<br/><br/>
    /// 						If a package weighed exactly 2 lbs or 105 kg, below is how you would represent this weight:
    /// 						<br/><br/>
    /// 						<code>
    /// 						&lt;WeightMajor unit="lbs"&gt;2&lt;/WeightMajor&gt;<br/>
    /// 						&lt;WeightMinor unit="oz"&gt;0&lt;/WeightMinor&gt;<br/>
    /// 						&lt;WeightMajor unit="kg"&gt;105&lt;/WeightMajor&gt;<br/>
    /// 						&lt;WeightMinor unit="gr"&gt;0&lt;/WeightMinor&gt;
    /// 						</code>
    /// 						<br/><br/>
    /// 						In all cases, both the <b>WeightMajor</b> and <b>WeightMinor</b> should be specified in an Add/Revise/Relist/Verify call, even if either's value is '0'.
    /// 						<br><br>
    /// 						The <b>WeightMajor</b> and <b>WeightMinor</b> are applicable for calculated shipping or for flat-rate shipping if shipping rate tables are specified and the shipping rate table uses weight surcharges.
    /// 						<br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						The <b>unit</b> and <b>measurementSystem</b> attributes associated with this field will be returned by the <b>GetItem</b> call and are automatically derived based on the <b>MeasurementUnit</b> value specified during listing creation or revision. These attributes will be ignored if passed into the request of the AddItem family of calls. 
    /// 						</span>	
    /// 					
    /// </remarks>

	public MeasureType WeightMinor { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
///          This type provides information about one or more order line items in a package.
/// 		
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ShipmentLineItemType {

#region 属性
    /// <summary>
    /// CompleteSaleSetShipmentTrackingInfoNo
    /// </summary>
    /// <remarks>
    /// 
    /// 				   Contains information about one order line item in a package. The package can contain multiple units of a given order line item, and multiple order line items.
    /// 				
    /// </remarks>
[System.Xml.Serialization.XmlElement("LineItem")]

	public System.Collections.Generic.List<LineItemType> LineItem { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
///         This type details the shipping carrier and shipment tracking number associated with a
///         package shipment. It also contains information about the line items shipped through the Global Shipping program.
///       
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ShipmentTrackingDetailsType {

#region 属性
    /// <summary>
    /// ShippingCarrierCodeType
    /// CompleteSaleSetShipmentTrackingInfoConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             The name of the shipping carrier used to ship the item. This field and the <strong>ShipmentTrackingNumber</strong> field are mutually dependent. When you submit <strong>ShippingCarrierUsed</strong>, you must also supply a value for <strong>ShipmentTrackingNumber</strong>. When you submit <strong>ShipmentTrackingNumber</strong>, you must also supply a value for <strong>ShippingCarrierUsed</strong>.
    ///             <br/><br/>
    ///             When the site ID is Austria, Poland, or UK, <strong>ShippingCarrierUsed</strong> can be any value, because it is not checked by eBay. For all other sites, only the following  characters are allowed: letters (<code>a-z</code>, <code>A-Z</code>), numbers (<code>0-9</code>), space, and dash (<code>-</code>). The site ID is specified in the <b>CompleteSale</b> request header.
    ///             <br/><br/>
    ///             <span class="tablenote">
    ///             <strong>Note:</strong> Commonly used shipping carriers can be found by calling <b>GeteBayDetails</b> with <b>DetailName</b> set to <code>ShippingCarrierDetails</code> and examining the returned <b>ShippingCarrierDetails.ShippingCarrier</b> field. <a href="https://developer.ebay.com/Devzone/XML/docs/Reference/eBay/types/ShippingCarrierCodeType.html">ShippingCarrierCodeType</a> also has a list of valid shipping carriers, but eBay cannot guarantee that this enumerated type contains a full, updated list of shipping carriers.
    ///             </span>
    ///             <strong>For the CompleteSale call</strong>:
    ///             <ul>
    ///               <li>This field is not case sensitive in the <strong>CompleteSale</strong> request.</li>
    ///               <li>When using UPS Mail Innovations, supply the value <code>UPS-MI</code>. Buyers will subsequently be sent to the UPS Mail Innovations website for tracking status. </li>
    ///               <li>When using FedEx SmartPost, supply the value <code>FedEx</code>. Buyers will subsequently be sent to the FedEx web site for tracking status. </li>
    ///             </ul>
    ///             <strong>For the Get calls</strong>: When using the Global Shipping Program, this field returns a value of <code>PBI</code>.
    ///           
    /// </remarks>

	public string ShippingCarrierUsed { get; set; }
    /// <summary>
    /// CompleteSaleSetShipmentTrackingInfoConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             The tracking number assigned by the shipping carrier to the item shipment. This field and the <b>ShippingCarrierUsed</b> field are mutually dependent. When you submit <strong>ShipmentTrackingNumber</strong>, you must also supply a value for <strong>ShippingCarrierUsed</strong>. When you submit <strong>ShippingCarrierUsed</strong>, you must also supply a value for <strong>ShipmentTrackingNumber</strong>.
    ///             <br/><br/>
    ///             The seller is responsible for the accuracy of the shipment tracking number, as eBay only verifies that the tracking number is consistent with the numbering scheme used by the specified shipping carrier, but cannot verify the accuracy of the tracking number.
    ///             For order management calls,
    ///             <br><br>
    /// 						<b>For GetOrders, GetSellerTransactions, and GetItemTransactions only:</b> This field is only returned if a valid tracking number is set. With the exception of the <b>GetSellerTransactions</b> (where it is only returned to the seller and not buyer), the tracking number will only be returned to the seller or buyer. If a user is using a Trading WSDL Version 1019 or above, this field will only be returned to the buyer or seller, and no longer returned at all to third parties. If using a Trading WSDL older than Version 1019, this field is returned to third parties, but the string value returned in the field will be <code>Unavailable</code>.
    /// 						<br><br>
    /// 						<span class="tablenote"><b>Note: </b>
    /// 						The Trading API only supports alphanumeric characters for shipment tracking numbers, and any other characters are not supported, including spaces, hyphens, and all other special characters. Users should not enter spaces even if spaces are shown for the tracking number on the shipping label.
    /// 						</span>
    ///           
    /// </remarks>

	public string ShipmentTrackingNumber { get; set; }
    /// <summary>
    /// CompleteSaleSetShipmentTrackingInfoNo
    /// </summary>
    /// <remarks>
    /// 
    ///              Contains information about one or more order line items in a Global Shipping Program package. Required or returned if the value of <strong>ShippingCarrierUsed</strong> is <code>PBI</code>.
    ///           
    /// </remarks>

	public ShipmentLineItemType ShipmentLineItem { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
///         Type defining the <b>Shipment</b> container, which is used by
///         the seller in <b>CompleteSale</b> to provide shipping information.
///       
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ShipmentType {

#region 属性
    /// <summary>
    /// SetShipmentTrackingInfoNo
    /// CompleteSaleNo
    /// </summary>
    /// <remarks>
    /// 
    ///             The date and time that the seller handed off the package(s) to the shipping
    ///             carrier. If this field is not included in the request, the timestamp of the call
    ///             execution is used as the shipped time. Note that sellers have the ability to set
    ///             this value up to 3 calendar days in the future.
    ///           
    /// </remarks>

	public System.DateTime? ShippedTime { get; set; }
    /// <summary>
    /// CompleteSaleSetShipmentTrackingInfoNo
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             Container consisting of the tracking number and shipping carrier associated with
    ///             the shipment of one item (package).
    ///             <br><br>
    ///             Because an order can have multiple line items and/or packages, there can be
    ///             multiple <b>ShipmentTrackingDetails</b> containers under the
    ///             <b>Shipment</b> container.
    ///           
    /// </remarks>
[System.Xml.Serialization.XmlElement("ShipmentTrackingDetails")]

	public System.Collections.Generic.List<ShipmentTrackingDetailsType> ShipmentTrackingDetails { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
///         Details about type of Carrier used to ship an item.
///       
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ShippingCarrierDetailsType {

#region 属性
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             Numeric identifier.
    ///             Some applications use this ID
    ///             to look up shipping Carriers more efficiently.
    ///           
    /// </remarks>

	public int? ShippingCarrierID { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             Display string that applications can use to present a list of shipping carriers in
    ///             a more user-friendly format (such as in a drop-down list).
    ///           
    /// </remarks>

	public string Description { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             The code for the shipping carrier.
    ///             <br/><br/>
    ///             <span class="tablenote">
    ///             <strong>Note:</strong> Commonly used shipping carriers can also be found by calling <b>GeteBayDetails</b> with <b>DetailName</b> set to <code>ShippingCarrierDetails</code> and examining the returned <b>ShippingCarrierDetails.ShippingCarrier</b> field.
    ///             </span>
    ///           
    /// </remarks>

	public ShippingCarrierCodeType? ShippingCarrier { get; set; }
    /// <summary>
    /// GeteBayDetailsDetailLevel: none, ReturnSummary, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    ///             Returns the latest version number for this field. The version can be
    ///             used to determine if and when to refresh cached client data.
    ///           
    /// </remarks>

	public string DetailVersion { get; set; }
    /// <summary>
    /// GeteBayDetailsDetailLevel: none, ReturnSummary, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    ///             Gives the time in GMT that the feature flags for the details were last
    ///             updated. This timestamp can be used to determine if and when to refresh
    ///             cached client data.
    ///           
    /// </remarks>

	public System.DateTime? UpdateTime { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type defines the <b>ShippingCategoryDetails</b> container. When the <b>DetailName</b> field
/// 				is set to ShippingCategoryDetails in a <b>GeteBayDetails</b> request, one
/// 				<b>ShippingCategoryDetails</b> container is returned for each valid shipping category
/// 				used on the eBay site. Besides being useful to view the list of valid shipping
/// 				categories, this container is also useful to discover when the last update to
/// 				shipping categories was made by eBay.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ShippingCategoryDetailsType {

#region 属性
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates the shipping category. Shipping categories include the following: ECONOMY, STANDARD, EXPEDITED, ONE_DAY, PICKUP, OTHER, and NONE. International shipping services are generally grouped into the NONE category. For more information on these shipping categories, and which services fall into which category, see the <a href="http://pages.ebay.com/sellerinformation/shipping/chooseservice.html">Shipping Basics</a> page on the eBay Shipping Center site.
    /// 						<br/><br/>
    /// 						<span class="tablenote">
    /// 						<strong>Note:</strong> This field is returned only for those sites that support shipping categories: US (0), CA (2), CAFR (210), UK (3), AU (15), FR (71), DE (77), IT (101) and ES (186).
    /// 						</span>
    /// 					
    /// </remarks>

	public string ShippingCategory { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Display string that applications can use to present a list of shipping categories in a more user-friendly format (such as in a drop-down list). This field is localized per site.
    /// 					
    /// </remarks>

	public string Description { get; set; }
    /// <summary>
    /// GeteBayDetailsDetailLevel: none, ReturnSummary, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						The current version number for shipping categories. Sellers can compare this
    /// 						version number to their version number to determine if and when to refresh
    /// 						cached client data.
    /// 					
    /// </remarks>

	public string DetailVersion { get; set; }
    /// <summary>
    /// GeteBayDetailsDetailLevel: none, ReturnSummary, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates the time of the last version update.
    /// 					
    /// </remarks>

	public System.DateTime? UpdateTime { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type defines the <b>ShippingCostPaidBy</b> container that is returned in <b>GeteBayDetails</b> if <b>ReturnPolicyDetails</b> is set as a <b>DetailName</b> value (or if no value is included in the request).
/// 				<br><br>
/// 				<span class="tablenote"><b>Note:</b> The <b>GeteBayDetails</b> call returns site-default Return Policy settings. For most categories within a given eBay site, the supported Return Policy options/values are the same, but there a few exceptions. To discover what return shipping 'payee' values that a particular category supports, call <b>GetCategoryFeatures</b> and include <code>DomesticReturnsShipmentPayeeValues</code> and/or <code>InternationalReturnsShipmentPayeeValues</code> as <b>FeatureID</b> values to see the return shipping 'payee' values available for domestic and international returns, respectively.
/// 				</span>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ShippingCostPaidByDetailsType {

#region 属性
    /// <summary>
    /// ShippingCostPaidByOptionsCodeType
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The party who pays the shipping cost for a returned item.
    /// 						This value can be passed in the Add/Revise/Relist calls.
    /// 					
    /// </remarks>

	public string ShippingCostPaidByOption { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Display string that applications can use to present <b>ShippingCostPaidByOption</b> in a more user-friendly format (such as in a drop-down list). Not applicable as input to the Add/Revise/Relist calls. (Use <b>ShippingCostPaidBy</b> instead.)
    /// 					
    /// </remarks>

	public string Description { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>ShippingDetails</b> container, which contains the shipping-related
/// 				details for an order line item (pre-checkout) or order (post-checkout).
/// 				<br/><br/>
/// 				<span class="tablenote">
/// 				<strong>IMPORTANT:</strong> To avoid loss of shipping details when revising a listing, you must include all <strong>ShippingDetails</strong> fields that were originally provided. Do not omit any tag, even if its value does not change. Omitting a shipping field when revising an item will remove that detail from the listing.
/// 				</span>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ShippingDetailsType {

#region 属性
    /// <remarks>
    /// 
    /// 						This field is deprecated and has been replaced by the <b>ShippingDetails.PaymentEdited</b> field.
    /// 					
    /// </remarks>

	public bool? AllowPaymentEdit { get; set; }
    /// <summary>
    /// 
    /// 663
    /// NoOp
    /// 759
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is deprecated.
    /// 					
    /// </remarks>

	public bool? ApplyShippingDiscount { get; set; }
    /// <summary>
    /// AddFixedPriceItemVerifyAddFixedPriceItemAddItemVerifyAddItemAddItemsRelistFixedPriceItemRelistItemVerifyRelistItemReviseFixedPriceItemReviseItemConditionally
    /// GetItemGetSellerListGetMyeBaySellingDetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						<span class="tablenote"><strong>Note:</strong>
    /// 							The <b>Global Shipping Program</b> (GSP) is only available on the UK marketplace. On the US marketplace, the <b>Global Shipping Program</b> was replaced by the intermediated international shipping program called <b>eBay International Shipping</b>. 
    /// 							<br><br>
    /// 							<b>eBay International Shipping</b> is an account level setting, and no field will need to be set in a add/revise call to enable this setting. As long as the US seller's account is opted in to <b>eBay International Shipping</b>, this shipping option will be automatically enabled for all listings where international shipping is available. Even if the US seller is opted into <b>eBay International Shipping</b>, that same seller can still also specify individual international shipping service options through the ShippingDetails.InternationalShippingServiceOption container. 
    /// 						</span>
    /// 						In an Add/Revise/Relist call, this boolean field can be included and set to <code>True</code> if the seller would like to use eBay's Global Shipping Program for orders that are shipped internationally. 
    /// 						<br/><br/>
    /// 						In 'Get' calls, if this field is returned as <code>True</code>, it indicates that international shipping through the Global Shipping Program is available for the listing. If this field is returned as <code>False</code>, the seller is responsible for shipping the item internationally using one of the specified international shipping service options set for the listing.
    /// 						<br/><br/>
    /// 						When calling <strong>RelistFixedPriceItem</strong>, <strong>RelistItem</strong>, <strong>ReviseFixedPriceItem</strong> or <strong>ReviseItem</strong>, you can omit this field if its value doesn't need to change.
    /// 						<br/><br/>
    /// 					
    /// </remarks>

	public bool? GlobalShipping { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetItemDetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAllConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetItemShippingConditionally
    /// GetItemTransactionsGetSellerTransactionsGetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Details pertinent to one or more items for which calculated shipping has been
    /// 						offered by the seller, such as package dimension and weight and
    /// 						packaging/handling costs. If your call specifies a large-dimension item listed
    /// 						with UPS, see <a href=
    /// 						"https://developer.ebay.com/support/kb-article?KBid=1159"
    /// 						>Dimensional Weight limit on UPS shipping services results in failure of
    /// 						shipping calculator</a>.
    /// 						<br><br>
    /// 						<span class="tablenote"><strong>Note:</strong>
    /// 							The <strong>CalculatedShippingRate</strong> container should only be used to specify values for the <strong>InternationalPackagingHandlingCosts</strong> and/or <strong>PackagingHandlingCosts</strong> fields. The rest of the fields in the <strong>CalculatedShippingRate</strong> container are used to specify package dimensions and package weight, and these values should now be specified in the <strong>ShippingPackageDetails</strong> container instead.
    /// 						</span>
    /// 					
    /// </remarks>

	public CalculatedShippingRateType CalculatedShippingRate { get; set; }
    /// <summary>
    /// GetItemShippingConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether the seller specified payment and shipping instructions during checkout.
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> This field is deprecated and will stop being returned in <b>GetItemTransactions</b> and <b>GetSellerTransactions</b> on January 31, 2024.
    /// 						</span>
    /// 					
    /// </remarks>

	public bool? ChangePaymentInstructions { get; set; }
    /// <summary>
    /// GetItemShippingConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Whether the seller allows the buyer to edit the payment amount for the order.
    /// 						(Sellers enable this property in their My eBay user preferences on the eBay site.)
    /// 					
    /// </remarks>

	public bool? PaymentEdited { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsAddOrderRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemNo
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: FineConditionally
    /// GetBidderListGetItemShippingConditionally
    /// GetItemDetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAllConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// Multi-jurisdiction sales taxhttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/taxes.html
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container shows sales tax information for an item in a specific tax jurisdiction. The concept of 'sales tax' is only applicable to eBay US and Canada (English and French) sites.
    /// 						<br><br>
    /// 						This container can be used in an Add/Revise/Relist/Verify call to set sales tax settings for a specific tax jurisdiction, but it is actually a better practice if a user sets up sales tax rates through the Sales Tax Table tool in My eBay (or by using the <b>SetTaxTable</b> call). A seller's Sales Tax Table is applied to the listing by including the <b>UseTaxTable</b> field in the request and setting its value to <code>true</code>. The <b>GetTaxTable</b> call can be used to retrieve the current sales tax rates for different tax jurisdictions.
    /// 						<br><br>
    /// 						This container is only returned in order management 'Get' calls if sales tax is applicable to the order line item. For eBay Collect and Remit states, the sales tax information is displayed in the <b>Transaction.Taxes</b> container instead.
    /// 						<br><br>
    /// 						<span class="tablenote"><b>Note: </b> Buyers in all 50 US states and DC are automatically charged sales tax for eBay purchases, and eBay collects and remits this sales tax to the proper taxing authority on the buyer's behalf. Because of this, if a sales tax percentage rate is applied to a listing by a seller in one of these states, this field will be ignored during the checkout process.
    /// 						<br><br>
    /// 						Currently, sales tax percentage rates can only be specified by sellers in Canada and 5 US territories, including American Samoa (AS), Guam (GU), Northern Mariana Islands (MP), Palau (PW), and Virgin Islands (VI).
    /// 						</span>
    /// 					
    /// </remarks>

	public SalesTaxType SalesTax { get; set; }
    /// <summary>
    /// GetItemShippingConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						For most applicable calls, returns the words No Error or returns an error message
    /// 						related to an attempt to calculate shipping rates. For calculated shipping only.
    /// 						<br><br>
    /// 						The message text explains that a postal code is needed to calculate
    /// 						shipping. Only returned when <b>ItemDetails</b> is set to <code>Fine</code>.
    /// 					
    /// </remarks>

	public string ShippingRateErrorMessage { get; set; }
    /// <summary>
    /// GetItemShippingConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/shipping-ups.htmlUPS rate scales
    /// </summary>
    /// <remarks>
    /// 
    /// 						A shipping rate scale for shipping through USPS that affects the shipping cost calculated for USPS (lower if <strong>ShippingRateType</strong> is <code>DailyPickup</code>). <strong>ShippingRateType</strong> is returned only if the value of <strong>ShippingService</strong> is one of the USPS shipping services. For calculated shipping only.
    /// 					
    /// </remarks>

	public ShippingRateTypeCodeType? ShippingRateType { get; set; }
    /// <summary>
    /// GetItemDetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAllAlways
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetMyeBayBuyingBestOfferListBidListDeletedFromWonListWonListWatchListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingGetItemTransactionsDetailLevel: none, ReturnAllConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetItemShippingDetailLevel: noneConditionally
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// AddOrderNo
    /// https://developer.ebay.com/api-docs/user-guides/static/make-a-call/tapi-validation.html#unboundedRepeating (unbounded) fieldsrules regarding repeating instances of a nodes (nodes for which maxOccurs is "unbounded" or is greater than 1)
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container is used to provide details on a specific domestic shipping service option, including the unique identifier of the shipping service option and the costs related to domestic shipping service. A separate <b>ShippingServiceOptions</b> container is needed for each domestic shipping service option that is available to ship the item. Unless a fulfillment business policy is being used, generally at least one <b>ShippingServiceOptions</b> container will be required.
    /// 						<br><br>
    /// 						If you specify multiple <b>ShippingServiceOptions</b> nodes, the repeating nodes must be
    /// 						contiguous. For example, you can insert <b>InternationalShippingServiceOption</b> nodes
    /// 						after a list of repeating <b>ShippingServiceOptions</b> nodes, but not between them:
    /// 						<br><br>
    /// 						<code>
    /// 						&lt;ShippingServiceOptions&gt;...&lt;/ShippingServiceOptions&gt;<br>
    /// 						&lt;ShippingServiceOptions&gt;...&lt;/ShippingServiceOptions&gt;<br>
    /// 						&lt;ShippingServiceOptions&gt;...&lt;/ShippingServiceOptions&gt;<br>
    /// 						&lt;InternationalShippingServiceOption&gt;...&lt;/InternationalShippingServiceOption&gt;<br>
    /// 						&lt;InternationalShippingServiceOption&gt;...&lt;/InternationalShippingServiceOption&gt;
    /// 						</code>
    /// 						<br><br>
    /// 						If you specify <b>ShippingDetails</b> when you revise or relist an item but you omit
    /// 						<b>ShippingServiceOptions</b>, eBay will drop the domestic shipping services from the
    /// 						listing. This may also have unintended side effects, as other fields that depend
    /// 						on this data may be dropped as well.
    /// 						<br/><br/>
    /// 						To retain the shipping services and
    /// 						dependent fields when you modify other shipping details, it may be simplest to
    /// 						specify all <b>ShippingDetails</b> that you still want to include in the listing.
    /// 						<br><br>
    /// 						A seller can offer up to four domestic shipping services and up to five
    /// 						international shipping services. However, if the seller is opted in to the Global Shipping Program or eBay International Shipping, only four other international shipping services may be offered (regardless of whether or not Global Shipping shipment or eBay International Shipping is offered for the listing). All specified domestic and international
    /// 						shipping services must be the same shipping type (for example, Flat versus
    /// 						Calculated).
    /// 						<br/><br/>
    /// 						<span class="tablenote"><b>Note: </b>
    /// 						If the seller has set the shipping cost model to 'Flat' or 'Calculated' (<b>ShippingDetails.ShippingType</b> field), at least one actual shipping service option must be specified through a <b>ShippingServiceOptions</b> container. In the past, eBay allowed users to set the shipping cost model to 'Flat' or 'Calculated', and then just pass in one <b>ShippingServiceOptions</b> container with the <b>ShippingServiceOptions.ShipppingService</b> value set to a 'Local Pickup' option. Now, sellers must pass in at least one actual domestic shipping service option in addition to any 'Local Pickup' option, or the listing will be blocked with the following error: <em>17510	- You must specify at least one domestic shipping service, other than or in addition to Local Pickup.</em>
    /// 						</span>
    /// 						<br>
    /// 						For <b>GetItemShipping</b>, results are filtered:  if any service is not available
    /// 						in the buyer's region, it is removed. If no services remain after this
    /// 						filtering, a warning is returned.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("ShippingServiceOptions")]

	public System.Collections.Generic.List<ShippingServiceOptionsType> ShippingServiceOptions { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsAddOrderRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemNo
    /// GetBidderListGetItemShippingDetailLevel: noneConditionally
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetItemTransactionsDetailLevel: none, ReturnAllConditionally
    /// GetMyeBayBuyingBestOfferListBidListDeletedFromWonListWonListWatchListDetailLevel: none, ReturnAllConditionally
    /// https://developer.ebay.com/api-docs/user-guides/static/make-a-call/tapi-validation.html#unboundedRepeating (unbounded) fieldsrules regarding repeating instances of a nodes (nodes for which maxOccurs is "unbounded" or is greater than 1)
    /// </summary>
    /// <remarks>
    /// 
    /// 						Shipping costs and options related to an international shipping service. If used, at least one domestic shipping service must also be provided in <b>ShippingServiceOptions</b>.
    /// 						<br><br>
    /// 						If you specify multiple <b>InternationalShippingServiceOption</b> nodes, the repeating nodes must be contiguous. That is, you cannot insert other nodes between <b>InternationalShippingServiceOption</b> nodes.
    /// 						<br><br>
    /// 						All specified domestic and international shipping services must be the same shipping type (for example, Flat versus Calculated).
    /// 						<br><br>
    /// 						A seller can offer up to four domestic shipping services and up to five international shipping services. However, if the seller is opted in to the Global Shipping Program or eBay International Shipping, only four other international shipping services may be offered (regardless of whether or not Global Shipping or eBay International Shipping is offered for the listing).
    /// 						<br><br>
    /// 						If you specify <b>ShippingDetails</b> when you revise or relist an item but you omit <b>InternationalShippingServiceOption</b>, eBay will drop the international shipping services (except the Global Shipping Program or eBay International Shipping) from the listing. This may also have unintended side effects, as other fields that depend on this data may be dropped as well. To retain the shipping services and dependent fields when you modify other shipping details, it may be simplest to specify all <b>ShippingDetails</b> that you still want to include in the listing.
    /// 						<br><br>
    /// 						For <b>GetItemShipping</b>, results are filtered:  if any service is not available in the buyer's region, it is removed. If no services remain after this filtering, a warning is returned.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("InternationalShippingServiceOption")]

	public System.Collections.Generic.List<InternationalShippingServiceOptionsType> InternationalShippingServiceOption { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemFree, FreightNo
    /// GetItemShippingAlwaysFree, Freight
    /// GetBidderListFreeConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllFree, FreightConditionally
    /// GetItemDetailLevel: none, ItemReturnAttributes, ReturnAllFree, FreightConditionally
    /// GetMyeBayBuyingGetMyeBaySellingFree, FreightConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The shipping cost model offered by the seller. This is not returned for
    /// 						various calls since shipping type can be deduced: if a <b>CalculatedShippingRate</b>
    /// 						structure is returned by the call, the shipping type is Calculated. Otherwise,
    /// 						it is one of the other non-Calculated shipping types.
    /// 						<br><br>
    /// 						<b>GetItemShipping and GetItemTransactions</b>:
    /// 						If the type was a mix of flat and calculated services, this is
    /// 						set simply to Flat or Calculated because it is the buyer's
    /// 						selection that results in one of these.
    /// 						<br><br>
    /// 						<b>GetMyeBayBuying</b>:
    /// 						If the seller has set the <b>ShipToLocation</b> to <code>Worldwide</code> for an item, but has not specified any international shipping service options, <code>NotSpecified</code> is returned as the <b>ShippingType</b> value.
    /// 					
    /// </remarks>

	public ShippingTypeCodeType? ShippingType { get; set; }
    /// <summary>
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The sale record ID. Applicable to Selling Manager users.
    /// 						When an item is sold, Selling Manager generates a sale record.
    /// 						A sale record contains buyer information, shipping, and other information.
    /// 						A sale record is displayed in the Sold view in Selling Manager.
    /// 						Each sale record has a sale record ID.
    /// 						<br/><br/>
    /// 						In the following calls,
    /// 						the value for the sale record ID is in the <b>SellingManagerSalesRecordNumber</b> field:
    /// 						<b>GetItemTransactions</b>, <b>GetSellerTransactions</b>, and <b>GetOrders</b>.
    /// 						<br><br>
    /// 						<b>For GetOrders and GetItemTransactions only:</b> If using Trading WSDL Version 1019 or above, this field will only be returned to the buyer or seller, and no longer returned at all to third parties. If using a Trading WSDL older than Version 1019, the real record number is only returned to the buyer or seller, and a dummy value of <code>0</code> will be returned to all third parties.
    /// 						<br/><br/>
    /// 						The sale record ID can be for a single or a multiple line item order.
    /// 						<br> <br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 							For the <strong>GetItemTransactions</strong> and <strong>GetOrders</strong>calls, this field is only returned to the seller of the order; this field is not returned for the buyer or third party.
    /// 						</span>
    /// 					
    /// </remarks>

	public int? SellingManagerSalesRecordNumber { get; set; }
    /// <summary>
    /// AddOrderNo
    /// GetItemDetailLevel: none,ItemReturnAttributes,  ItemReturnDescription, ReturnAllAlways
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: FineConditionally
    /// GetBidderListGetItemShippingConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> This field is deprecated and will stop being returned in <b>GetItemTransactions</b> and <b>GetSellerTransactions</b> on January 31, 2024.
    /// 						</span>
    /// 					
    /// </remarks>

	public bool? ThirdPartyCheckout { get; set; }
    /// <summary>
    /// GetItemDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetBidderListConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Coarse, Medium, FineConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Tax details for a jurisdiction, such as a state or province. If no tax table
    /// 						is associated with the item, a tax table is not returned.
    /// 						<br><br>
    /// 						For <b>GetItem</b>, a tax table is returned if it exists when:
    /// 						<ul>
    /// 						<li><b>DetailLevel</b> is set to <code>ReturnAll</code> or <b>ItemReturnDescription</b> (in this case,
    /// 						the value of <b>IncludeTaxTable</b> does not matter)</li>
    /// 						<li><b>IncludeTaxTable</b> is set to <code>true</code> and <b>DetailLevel</b> is not set or it is set
    /// 						to <code>ItemReturnAttributes</code></li>
    /// 						</ul>
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("TaxJurisdiction", IsNullable = false)]

	public System.Collections.Generic.List<TaxJurisdictionType> TaxTable { get; set; }
    /// <summary>
    /// GetBidderListGetItemShippingConditionally
    /// GetItemAlwaysDetailLevel: none,ItemReturnAttributes,  ItemReturnDescription, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> This field is deprecated and will stop being returned in order management calls on January 31, 2024.
    /// 						</span>
    /// 					
    /// </remarks>

	public bool? GetItFast { get; set; }
    /// <summary>
    /// ShippingServiceCodeType
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The shipping service actually used by the seller to ship the item(s) to the
    /// 						buyer.
    /// 					
    /// </remarks>

	public string ShippingServiceUsed { get; set; }
    /// <remarks>
    /// 
    /// 						The field is deprecated.
    /// 					
    /// </remarks>

	public AmountType DefaultShippingCost { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetItemDetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAllConditionally
    /// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/shipping-discount-profiles.htmlShipping discount profiles
    /// </summary>
    /// <remarks>
    /// 
    /// 						On input, this is the ID of the shipping discount to offer for the domestic
    /// 						shipping services (where the shipping discount is either of type
    /// 						<b>FlatShippingDiscount</b> or <b>CalculatedShippingDiscount</b>).
    /// 						<br/><br/>
    /// 						On output, this is the ID
    /// 						of the shipping discount offered and corresponds to whichever is returned:
    /// 						<b>FlatShippingDiscount</b> or <b>CalculatedShippingDiscount</b>. Only returned if the calling user is the seller.
    /// 						<br/><br/>
    /// 						If the user created a shipping discount profile,
    /// 						use the <b>ShippingDiscountProfileID</b>.
    /// 						<br><br>
    /// 						In the <b>RelistItem</b> and <b>ReviseItem</b> family of calls, you can remove the existing
    /// 						<b>ShippingDiscountProfileID</b> associated with the item by supplying a value of 0 (zero).
    /// 						<br><br>
    /// 						Only returned if the calling user is the seller.
    /// 					
    /// </remarks>

	public string ShippingDiscountProfileID { get; set; }
    /// <summary>
    /// GetItemDetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAllConditionally
    /// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/shipping-discount-profiles.htmlShipping discount profiles
    /// </summary>
    /// <remarks>
    /// 
    /// 						If a flat rate shipping discount was offered for the domestic shipping
    /// 						services, this contains the details of the flat rate shipping discount.
    /// 						Otherwise, it is not returned. Only returned if the calling user is the seller.
    /// 					
    /// </remarks>

	public FlatShippingDiscountType FlatShippingDiscount { get; set; }
    /// <summary>
    /// GetItemDetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAllConditionally
    /// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/shipping-discount-profiles.htmlShipping discount profiles
    /// </summary>
    /// <remarks>
    /// 
    /// 						If a calculated shipping discount was offered for the domestic shipping
    /// 						services, this contains the details of the calculated shipping discount.
    /// 						Otherwise, it is not returned. Only returned if the calling user is the seller.
    /// 					
    /// </remarks>

	public CalculatedShippingDiscountType CalculatedShippingDiscount { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetItemDetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAllConditionally
    /// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/shipping-discount-profiles.htmlShipping discount profiles
    /// </summary>
    /// <remarks>
    /// 
    /// 						On input, this specifies whether to offer the promotional shipping discount for
    /// 						the domestic shipping services of this listing (only applicable if the seller
    /// 						has a promotional shipping discount in effect at the moment).
    /// 						<br><br>
    /// 						Returned on output only if the seller is making the call. This indicates
    /// 						whether the promotional shipping discount is being offered for the domestic
    /// 						shipping services of this listing (if the listing is still active&#8212;this is only
    /// 						possible if the seller has a promotional shipping discount in effect at the
    /// 						moment) or whether the discount was offered at the time the listing ended.
    /// 					
    /// </remarks>

	public bool? PromotionalShippingDiscount { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetItemDetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAllConditionally
    /// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/shipping-discount-profiles.htmlShipping discount profiles
    /// </summary>
    /// <remarks>
    /// 
    /// 						On input, this is the ID of the shipping discount to offer for the
    /// 						international shipping services (where the shipping discount is either
    /// 						of type <b>FlatShippingDiscount</b> or <b>CalculatedShippingDiscount</b>).
    /// 						<br><br>
    /// 						In the <b>RelistItem</b> and <b>ReviseItem</b> family of calls, you can remove the existing
    /// 						<b>InternationalShippingDiscountProfileID</b> associated with the item by supplying a
    /// 						value of 0 (zero).
    /// 						<br><br>
    /// 						Returned on output only if the seller is making the call. The value is
    /// 						the ID of the shipping discount offered and corresponds to whichever
    /// 						is returned: <b>FlatShippingDiscount</b> or <b>CalculatedShippingDiscount</b>.
    /// 						<br><br>
    /// 						If the user created a shipping discount profile, use
    /// 						<b>InternationalShippingDiscountProfileID</b>.
    /// 					
    /// </remarks>

	public string InternationalShippingDiscountProfileID { get; set; }
    /// <summary>
    /// GetItemDetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAllConditionally
    /// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/shipping-discount-profiles.htmlShipping discount profiles
    /// </summary>
    /// <remarks>
    /// 
    /// 						This value is returned only if the seller is making the call. If a flat
    /// 						rate shipping discount was offered for the international shipping
    /// 						services, this contains the details of the flat rate shipping discount.
    /// 						Otherwise, it is not returned.
    /// 					
    /// </remarks>

	public FlatShippingDiscountType InternationalFlatShippingDiscount { get; set; }
    /// <summary>
    /// GetItemDetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAllConditionally
    /// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/shipping-discount-profiles.htmlShipping discount profiles
    /// </summary>
    /// <remarks>
    /// 
    /// 						This value is returned only if the seller is making the call. If a
    /// 						calculated shipping discount was offered for the international shipping
    /// 						services, this contains the details of the calculated shipping
    /// 						discount. Otherwise, it is not returned.
    /// 					
    /// </remarks>

	public CalculatedShippingDiscountType InternationalCalculatedShippingDiscount { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetItemDetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAllConditionally
    /// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/shipping-discount-profiles.htmlShipping discount profiles
    /// </summary>
    /// <remarks>
    /// 
    /// 						On input, this specifies whether to offer the promotional shipping
    /// 						discount for the listing's international shipping services (only
    /// 						applicable if the seller has a promotional shipping discount in effect
    /// 						at the moment).
    /// 						<br><br>
    /// 						Returned on output only if the seller is making the call. This value
    /// 						indicates whether the promotional shipping discount is being offered
    /// 						for the international shipping services of this listing (if the listing
    /// 						is still active&#8212;this is only possible if the seller has a promotional
    /// 						shipping discount in effect at the moment) or whether the discount was
    /// 						offered at the time the listing ended.
    /// 					
    /// </remarks>

	public bool? InternationalPromotionalShippingDiscount { get; set; }
    /// <summary>
    /// GetShippingDiscountProfilesConditionally
    /// GetItemDetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAllConditionally
    /// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/shipping-discount-profiles.htmlShipping discount profiles
    /// </summary>
    /// <remarks>
    /// 
    /// 						This value is returned only if the seller is making the call. Contains details of the promotional shipping discount, if such is being offered while the listing is active or if it was offered at the time the listing ended.
    /// 					
    /// </remarks>

	public PromotionalShippingDiscountDetailsType PromotionalShippingDiscountDetails { get; set; }
    /// <summary>
    /// ShippingRegionCodeType, CountryCodeType
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetItemConditionallyDetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAll
    /// GetItemShippingConditionally
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Use this field in an Add/Revise/Relist call to specify an international country or region, or a special domestic location, such as 'PO Box' (in US) or 'Packstation' (in DE), to where you will not ship the associated item. Repeat this element in the call request for each location that you want to exclude as a shipping destination for your item.
    /// 						<br><br>
    /// 						The exclude ship-to location values are eBay regions and countries. To see
    /// 						the valid exclude ship-to locations for a specified site, call <b>GeteBayDetails</b>
    /// 						with <b>DetailName</b> set to <b>ExcludeShippingLocationDetails</b>,
    /// 						and then look for the <b>ExcludeShippingLocationDetails.Location</b> fields in the response.
    /// 						Repeat <b>GeteBayDetails</b> for each site on which you list.
    /// 						<br><br>
    /// 						This field works in conjunction with <b>Item.ShipToLocation</b>s to create a set of
    /// 						international countries and regions to where you will, and will not, ship.
    /// 						You can list a region in the <b>ShipToLocations</b> field, then exclude specific
    /// 						countries within that region with this field (for example, you can specify
    /// 						Africa in <b>ShipToLocations</b>, yet exclude Chad with a <b>ExcludeShipToLocation</b>
    /// 						setting). In addition, if your <b>ShipToLocations</b> is <code>Worldwide</code>, you can use
    /// 						this field to specify both regions and countries that you want to exclude
    /// 						from your shipping destinations.
    /// 						<br>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> The <b>ShipToLocations</b> and <b>ShippingDetails.ExcludeShipToLocation</b> containers are not applicable for motor vehicle listings on the US, CA, or UK marketplaces. If these containers are sent in the request, they are ignored and a warning is returned.
    /// 						</span>
    /// 						<span class="tablenote"><b>Note: </b> Any shipping exclusions specified by this field can be overridden by the eBay International Shipping exclusions toggle located under <b>Shipping Preferences</b> in <b>My eBay</b>. For more information on eBay International Shipping, see <a href="https://www.ebay.com/help/selling/shipping-items/setting-shipping-options/ebay-international-shipping-program?id=5348">eBay International Shipping program</a>. 
    /// 						</span>
    /// 						<br>
    /// 						You can specify a default set of locations to where you will not ship in My
    /// 						eBay. If you create an Exclude Ship-To List, it is, by default, in effect
    /// 						when you list items. However, if you specify any value in this field on
    /// 						input, it nullifies the default settings in your Exclude Ship-To List. (If
    /// 						you use <b>ExcludeShipToLocation</b> when you list an item, you will need to list
    /// 						all the locations to where you will not ship the associated item, regardless
    /// 						of the default settings in your Exclude Ship-To List.)
    /// 						<br><br>
    /// 						Specify <code>none</code> in this field to override the default Exclude Ship-To List you
    /// 						might have set up in My eBay and indicate that you do not want to exclude any
    /// 						shipping locations from the respective item listing.
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> This field will stop being returned in <b>GetItemTransactions</b> and <b>GetSellerTransactions</b> responses on January 31, 2024.
    /// 						</span>
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("ExcludeShipToLocation")]

	public System.Collections.Generic.List<string> ExcludeShipToLocation { get; set; }
    /// <summary>
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///                         This dollar value indicates the cost to buy the shipping label from eBay. Presently, this field is only returned for orders that will go through eBay shipping and its value will be <code>0.0</code>. With eBay shipping, a free shipping label by eBay is downloadable by the seller via the eBay website.
    ///                     
    /// </remarks>

	public AmountType eBayEstimatedLabelCost { get; set; }
    /// <summary>
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: FineConditionally
    /// GetBidderListConditionally
    /// GetItemDetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAllVerifyRelistItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Sellers can set up a global Exclude Ship-To List through their My eBay account.
    /// 						The Exclude Ship-To List defines the countries to where the seller does not
    /// 						ship, by default.
    /// 						<br><br>
    /// 						This flag returns true if the Exclude Ship-To List is enabled by the seller for
    /// 						the associated item. If <code>false</code>, the seller's Exclude Ship-To List is either not
    /// 						set up, or it has been overridden by the seller when they listed the item with
    /// 						ExcludeShipToLocation fields.
    /// 						<br><br>
    /// 						In the response, <b>ExcludeShipToLocation</b> fields detail the locations to where the
    /// 						seller will not ship the item, regardless of the value returned in this field.
    /// 					
    /// </remarks>

	public bool? SellerExcludeShipToLocationsPreference { get; set; }
    /// <summary>
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Container for the shipping carrier and tracking information associated with the
    /// 						shipment of an order.
    /// 						<br><br>
    /// 						As each package has a unique tracking number, this container should be
    /// 						repeated for each package in the order.
    /// 						<br>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						Top-rated sellers must have a record of uploading shipment tracking
    /// 						information (through site or through API) for at least 90 percent of their order line
    /// 						items (purchased by U.S. buyers) to keep their status as Top-rated sellers. For more
    /// 						information on eBay's Top-rated seller program, see the <a href="http://pages.ebay.com/help/sell/top-rated.html">Becoming a Top Rated Seller and qualifying for Top Rated Plus</a> page.
    /// 						</span>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						Shipment tracking information does not appear in Merchant Data API's <b>OrderReport</b> responses, because once shipment tracking information is provided to the buyer, the order/order line item is considered acknowledged, and acknowledged orders do not show up in <b>OrderReport</b> responses.
    /// 						</span>
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("ShipmentTrackingDetails")]

	public System.Collections.Generic.List<ShipmentTrackingDetailsType> ShipmentTrackingDetails { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemNo
    /// GetItemDetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAllConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// Shipping rate tableshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/shipping-rate-tables.htmlmore information on using shipping rate tables.
    /// </summary>
    /// <remarks>
    /// 
    ///    					This container is used to reference and apply a seller's domestic and/or international shipping rate tables to a listing. Shipping rate tables allow sellers to configure specific shipping costs based on the shipping destinations and level of service (e.g. economy, standard, expedited, and one-day). Generally speaking, sellers want to use these shipping rate tables so they can charge a higher shipping cost to the buyer whenever shipping costs are higher for them as well. For example, shipping to Alaska or Hawaii is generally more expensive than shipping to any other of the 48 US states, or in regards to international shipping, shipping to some regions and countries are more expensive than others.
    /// 						 <br><br>
    /// 						 Sellers configure domestic and international shipping rate tables in My eBay Shipping Preferences. To apply shipping rate tables to a listing, the shipping cost type must be flat-rate.
    /// 						 <br><br>
    /// 						 For domestic shipping rate tables, the three supported domestic regions are Alaska & Hawaii, US Protectorates (e.g. Puerto Rico and Guam), and APO/FPO destinations, which are US military bases/locations outside of the continental US. In addition to setting one flat rate based on the destination and service level, the seller also has the option of adding an extra charge based on the weight of the shipping package, or they can add a surcharge instead. To determine if a domestic shipping rate table is set up for the seller's account, the <b>GetUser</b> call can be used, and then the seller will look for a value of <code>true</code> in the <b>User.SellerInfo.DomesticRateTable</b> field. Although the <b>GetUser</b> call can be used to see if a domestic shipping rate table exists for the seller's account, details of the shipping rate table, including all specified costs for the different regions, can only be viewed and modified in My eBay Shipping Preferences. This functionality is not yet available in any public APIs.
    /// 						 <br><br>
    /// 						 For international shipping rate tables, specific rates may be set up for any and all of the nine geographical regions and individual countries within those regions. Similar to domestic shipping rate tables, the seller has the option of adding an extra charge based on the weight of the shipping package. Sellers cannot add a surcharge for international shipping. To determine if a international shipping rate table is set up for the seller's account, the <b>GetUser</b> call can be used, and then the seller will look for a value of <code>true</code> in the <b>User.SellerInfo.InternationalRateTable</b> field. Although the <b>GetUser</b> call can be used to see if an international shipping rate table exists for the seller's account, details of the shipping rate table, including all specified costs for the different regions/countries, can only be viewed and modified in My eBay Shipping Preferences. This functionality is not yet available in any public APIs.
    /// 						 <br/><br/>
    /// 						 If you are applying a domestic or international shipping rate table that specifies a surcharge by weight, you must specify the item weight in the <b>ShippingPackageDetails</b> container's <b>WeightMajor</b> and <b>WeightMinor</b> fields, even though the listing is using flat-rate shipping. Do not use any other fields in the <b>ShippingPackageDetails</b> container because none of those fields are applicable in this use case.
    /// 						 <br><br>
    /// 						This container is only returned in the 'Get' calls if one or more shipping rate tables have been applied to the listing, and if the call is being made by the seller who listed the item.
    /// 						 <br/><br/>
    /// 						<span class="tablenote"><b>Note: </b> The capability to create and use multiple domestic and international shipping rate tables (up to 40 per seller account) has rolled out to the US, Australia, Canada (English and French), Italy, UK, and Germany sites. For other sites, only one domestic and one international shipping rate table may be set up per seller. Whether a seller is using the old default domestic and international shipping rate tables or the new shipping rate tables, these shipping rate tables are set up in My eBay Shipping Preferences or as part of a Shipping Business Policy. If using the Trading API to create a listing that will use the new shipping rate tables, the <b>DomesticRateTableId</b> and <b>InternationalRateTableId</b> fields are used to reference and apply these new shipping rate tables to the listing. If desired, sellers can still use the old default shipping rate tables, but they are not allowed to mix and match old and new shipping rate tables, meaning that they will get an error if they pass in both the old fields (<b>DomesticRateTable</b> and <b>InternationalRateTable</b>) and the new fields (<b>DomesticRateTableId</b> and <b>InternationalRateTableId</b>). The new shipping rate tables have all of the functionality of the old shipping rate tables, plus the seller has access to all domestic regions and not just the special regions (such as Alaska & Hawaii, US Protectorates, and APO/FPO locations in US).</span>
    ///    				
    /// </remarks>

	public RateTableDetailsType RateTableDetails { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Details about a region or location to which the seller is willing to ship.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ShippingLocationDetailsType {

#region 属性
    /// <summary>
    /// ShippingDetails.InternationalShippingServiceOption in AddItemAddItem.html#Request.Item.ShippingDetails.InternationalShippingServiceOption
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Short name or abbreviation for a region (e.g., Asia) or location (e.g. Japan).
    /// 					
    /// </remarks>

	public string ShippingLocation { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Display string that applications can use to present a list of shipping locations in
    /// 						a more user-friendly format (such as in a drop-down list). This field is localized 
    /// 						in the language of the site.
    /// 					
    /// </remarks>

	public string Description { get; set; }
    /// <summary>
    /// GeteBayDetailsDetailLevel: none, ReturnSummary, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Returns the latest version number for this field. The version can be
    /// 						used to determine if and when to refresh cached client data.
    /// 					
    /// </remarks>

	public string DetailVersion { get; set; }
    /// <summary>
    /// GeteBayDetailsDetailLevel: none, ReturnSummary, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Gives the time in GMT that the feature flags for the details were last
    /// 						updated. This timestamp can be used to determine if and when to refresh
    /// 						cached client data.
    /// 					
    /// </remarks>

	public System.DateTime? UpdateTime { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Details about type of package used to ship an item.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ShippingPackageDetailsType {

#region 属性
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Numeric identifier.
    /// 						Some applications use this ID to look up shipping packages more efficiently.
    /// 					
    /// </remarks>

	public int? PackageID { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Display string that applications can use to present a list of shipping package
    /// 						options in a more user-friendly format (such as in a drop-down list). 
    /// 					
    /// </remarks>

	public string Description { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						A supported value for the site that can be used in the 
    /// 						<b>Item.ShippingPackageDetails.ShippingPackage</b> or 
    /// 						<b>Item.ShippingDetails.CalculatedShippingRate.ShippingPackage</b> fields 
    /// 						of an Add/Revise/Relist API call.
    /// 					
    /// </remarks>

	public ShippingPackageCodeType? ShippingPackage { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates if the package type is the default for the specified site.
    /// 					
    /// </remarks>

	public bool? DefaultValue { get; set; }
    /// <summary>
    /// false
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as 'true' if the shipping package supports the use of 
    /// 						package dimensions.
    /// 					
    /// </remarks>

	public bool? DimensionsSupported { get; set; }
    /// <summary>
    /// GeteBayDetailsDetailLevel: none, ReturnSummary, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Returns the latest version number for this field. The version can be
    /// 						used to determine if and when to refresh cached client data.
    /// 					
    /// </remarks>

	public string DetailVersion { get; set; }
    /// <summary>
    /// GeteBayDetailsDetailLevel: none, ReturnSummary, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Gives the time in GMT that the feature flags for the details were last
    /// 						updated. This timestamp can be used to determine if and when to refresh
    /// 						cached client data.
    /// 					
    /// </remarks>

	public System.DateTime? UpdateTime { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>ShippingPackageInfoType</b> container, which is returned in order management calls. The <b>ShippingPackageInfoType</b> container provides information on delivery times and tracking information for a shipping package.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ShippingPackageInfoType {

#region 属性
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The unique identifier of the store from where the order will be delivered. This field is only applicable to 'In-Store Pickup' and 'Click and Collect' orders.
    /// 					
    /// </remarks>

	public string StoreID { get; set; }
    /// <summary>
    /// ShippingTrackingEventCodeType
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This enumeration value indicates whether or not the order has been picked up from the store indicated by the <b>StoreID</b> value. This field is only applicable to 'In-Store Pickup' and 'Click and Collect' orders.
    /// 					
    /// </remarks>

	public string ShippingTrackingEvent { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The <b>ScheduledDeliveryTimeMin</b> and <b>ScheduledDeliveryTimeMax</b> timestamps indicate the delivery window for which the buyer can expect to receive the order. The <b>ScheduledDeliveryTimeMin</b> value indicates the earliest time that the buyer can expect to receive the order.
    /// 						<br><br>
    /// 						The <b>ScheduledDeliveryTimeMin</b> and <b>ScheduledDeliveryTimeMax</b> fields will start being returned once the seller marks the order as shipped/provides tracking information. Until then, the <b>EstimatedDeliveryTimeMin</b> and <b>EstimatedDeliveryTimeMax</b> dates are returned instead.
    /// 						<br><br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 							This field does not appear in the Sell Feed API's <code>LMS_ORDER_REPORT</code> responses, because once shipment tracking information is provided to the buyer, the order/order line item is considered acknowledged, and acknowledged orders do not show up in the <code>LMS_ORDER_REPORT</code> responses.
    /// 						</span>
    /// 					
    /// </remarks>

	public System.DateTime? ScheduledDeliveryTimeMin { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The <b>ScheduledDeliveryTimeMin</b> and <b>ScheduledDeliveryTimeMax</b> timestamps indicate the delivery window for which the buyer can expect to receive the order. The <b>ScheduledDeliveryTimeMax</b> value indicates the latest time that the buyer can expect to receive the order.
    /// 						<br><br>
    /// 						The <b>ScheduledDeliveryTimeMin</b> and <b>ScheduledDeliveryTimeMax</b> fields will start being returned once the seller marks the order as shipped/provides tracking information. Until then, the <b>EstimatedDeliveryTimeMin</b> and <b>EstimatedDeliveryTimeMax</b> dates are returned instead.
    /// 						<br><br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 							This field does not appear in the Sell Feed API's <code>LMS_ORDER_REPORT</code> responses, because once shipment tracking information is provided to the buyer, the order/order line item is considered acknowledged, and acknowledged orders do not show up in the <code>LMS_ORDER_REPORT</code> responses.
    /// 						</span>
    /// 					
    /// </remarks>

	public System.DateTime? ScheduledDeliveryTimeMax { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This timestamp indicates when the order was actually delivered to the buyer. This field is only returned after the order has been delivered to the buyer.
    /// 						<br><br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						This field does not appear in the Sell Feed API's <code>LMS_ORDER_REPORT</code> responses, because once shipment tracking information is provided to the buyer (or marked as shipped), the order/order line item is considered acknowledged, and acknowledged orders do not show up in the <code>LMS_ORDER_REPORT</code> responses.
    /// 						</span>
    /// 					
    /// </remarks>

	public System.DateTime? ActualDeliveryTime { get; set; }
    /// <summary>
    /// GetOrdersShippingServiceSelectedDetailLevel: none, ReturnAllConditionally
    /// OrderReportShippingServiceSelectedConditionally
    /// GetItemTransactionsGetSellerTransactionsShippingServiceSelectedDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The <b>EstimatedDeliveryTimeMin</b> and <b>EstimatedDeliveryTimeMax</b> timestamps indicate the window during which the buyer can expect delivery. The <b>EstimatedDeliveryTimeMin</b> value indicates the earliest date and time that the buyer can expect to receive the order.
    /// 						<br><br>
    /// 						The <b>EstimatedDeliveryTimeMin</b> and <b>EstimatedDeliveryTimeMax</b> dates are only estimates made by eBay, and their accuracy will depend on the seller meeting the handling time deadline. Once the seller ships the order, and marks it as shipped/provides tracking information, the more accurate delivery dates can be found in the the <b>ScheduledDeliveryTimeMin</b> and <b>ScheduledDeliveryTimeMax</b> fields.
    /// 					
    /// </remarks>

	public System.DateTime? EstimatedDeliveryTimeMin { get; set; }
    /// <summary>
    /// GetOrdersShippingServiceSelectedDetailLevel: none, ReturnAllConditionally
    /// OrderReportShippingServiceSelectedConditionally
    /// GetItemTransactionsGetSellerTransactionsShippingServiceSelectedDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The <b>EstimatedDeliveryTimeMin</b> and <b>EstimatedDeliveryTimeMax</b> timestamps indicate the window during which the buyer can expect delivery. The <b>EstimatedDeliveryTimeMax</b> value indicates the latest date and time that the buyer can expect to receive the order.
    /// 						<br><br>
    /// 						The <b>EstimatedDeliveryTimeMin</b> and <b>EstimatedDeliveryTimeMax</b> dates are only estimates made by eBay, and their accuracy will depend on the seller meeting the handling time deadline. Once the seller ships the order, and marks it as shipped/provides tracking information, the more accurate delivery dates can be found in the the <b>ScheduledDeliveryTimeMin</b> and <b>ScheduledDeliveryTimeMax</b> fields.
    /// 					
    /// </remarks>

	public System.DateTime? EstimatedDeliveryTimeMax { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllShippingServiceSelectedConditionally
    /// OrderReportShippingServiceSelectedConditionally
    /// GetItemTransactionsGetSellerTransactionsShippingServiceSelectedDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This timestamp indicates the latest date/time that the seller should ship the package to ensure that the package arrives to the buyer within the estimated delivery window. This date/time is calculated by adding the handling time (in days) to the purchase time.
    /// 						<br><br>
    /// 						This field is applicable for domestic shipping services, and for Click and Collect orders in the UK and Australia.
    /// 					
    /// </remarks>

	public System.DateTime? HandleByTime { get; set; }
    /// <summary>
    /// GetOrdersShippingServiceSelectedDetailLevel: none, ReturnAllConditionally
    /// OrderReportShippingServiceSelectedConditionally
    /// GetItemTransactionsGetSellerTransactionsShippingServiceSelectedDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The <b>MinNativeEstimatedDeliveryTime</b> and <b>MaxNativeEstimatedDeliveryTime</b> timestamps indicate the window during which the buyer can expect delivery based on the seller's handling time and selected shipping service. The <b>MinNativeEstimatedDeliveryTime</b> value indicates the earliest date and time that the buyer can expect to receive the order.
    /// 						<br><br>
    /// 						This field is applicable for domestic shipping services, and for Click and Collect orders in the UK and Australia.
    /// 					
    /// </remarks>

	public System.DateTime? MinNativeEstimatedDeliveryTime { get; set; }
    /// <summary>
    /// GetOrdersShippingServiceSelectedDetailLevel: none, ReturnAllConditionally
    /// OrderReportShippingServiceSelectedConditionally
    /// GetItemTransactionsGetSellerTransactionsShippingServiceSelectedDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The <b>MinNativeEstimatedDeliveryTime</b> and <b>MaxNativeEstimatedDeliveryTime</b> timestamps indicate the window during which the buyer can expect delivery based on the seller's handling time and selected shipping service. The <b>MaxNativeEstimatedDeliveryTime</b> value indicates the latest date and time that the buyer can expect to receive the order.
    /// 						<br><br>
    /// 						This field is applicable for domestic shipping services, and for Click and Collect orders in the UK and Australia.
    /// 					
    /// </remarks>

	public System.DateTime? MaxNativeEstimatedDeliveryTime { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>ShippingServiceCostOverrideList</b> container, which is used when the seller wants to override flat-rate shipping costs for one or more domestic and/or international shipping service options defined in the Business Policies shipping profile referenced in the <b>SellerProfiles.SellerShippingProfile.ShippingProfileID</b> field of an Add/Revise/Relist call.
/// 				<br/><br/>
/// 				Shipping service cost overrides are a listing-level concept, and the shipping costs specified through each <b>ShippingServiceCostOverrideList.ShippingServiceCostOverride</b> container will not change the shipping costs defined for the same shipping services in the Business Policies shipping profile.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ShippingServiceCostOverrideListType {

#region 属性
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemNo
    /// GetItemGetSellerListConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						A <b>ShippingServiceCostOverride</b> container is required for each domestic and/or international shipping service option, defined in the <b>domesticShippingPolicyInfoService</b> and <b>intlShippingPolicyInfoService</b> containers of the Business Policies shipping profile, that the seller wishes to override the shipping costs. Shipping costs include the cost to ship one item, the cost to ship each additional identical item, and any shipping surcharges applicable to domestic shipping services.
    /// 						<br/><br/>
    /// 						Shipping service cost overrides are a listing-level concept, and the shipping costs specified through each <b>ShippingServiceCostOverride</b> container will not change the shipping costs defined for the same shipping service options in the Business Policies shipping profile.
    /// 						<br/><br/>
    /// 						To override the shipping costs for any domestic shipping service option in the Business Policies shipping profile, the <b>ShippingServiceType</b> field should be set to 'Domestic', and to override the shipping costs for any international shipping service option, the <b>ShippingServiceType</b> field should be set to 'International'. For both domestic and international shipping services, the <b>ShippingServicePriority</b> value should match the <b>sortOrderId</b> value for the matching shipping service in the shipping profile. If any of the domestic and/or international shipping service priorities and shipping service options in the Add/Revise/Relist call and Business Policies shipping profile do not match, an error occurs.
    /// 						<br/><br/>
    /// 						If shipping service cost overrides are used in a listing, the <b>ShippingServiceCostOverride</b> container will be returned in the <b>GetItem</b>, and <b>GetSellerList</b> calls.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("ShippingServiceCostOverride")]

	public System.Collections.Generic.List<ShippingServiceCostOverrideType> ShippingServiceCostOverride { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <strong>ShippingServiceCostOverride</strong> container, which is used to override the flat shipping costs for a domestic and/or international shipping service option that is defined in the <strong>domesticShippingPolicyInfoService</strong> and <strong>intlShippingPolicyInfoService</strong> containers of the Business Policies shipping profile. Shipping costs include the cost to ship one item, the cost to ship each additional identical item, and any shipping surcharges applicable to domestic shipping services. A <strong>ShippingServiceCostOverride</strong> container is required for each domestic and/or international shipping service option whose costs the seller wishes to override.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ShippingServiceCostOverrideType {

#region 属性
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemNo
    /// GetItemGetSellerListConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This integer value maps the particular instance of the <strong>ShippingServiceCostOverride</strong> container to the <strong>domesticShippingPolicyInfoService</strong> or <strong>intlShippingPolicyInfoService</strong> container of the Business Policies shipping profile. The <strong>ShippingServicePriority</strong> value should match the <strong>sortOrderId</strong> value for the matching shipping service in the Business Policies shipping profile. If overriding the shipping costs for a domestic shipping service, the <strong>ShippingServiceType</strong> field should be set to 'Domestic', and to override the shipping costs for an international shipping service, the <strong>ShippingServiceType</strong> field should be set to 'International'.
    /// 						<br/><br/>
    /// 						If any of the domestic and/or international shipping service priorities and shipping service options in the Add/Revise/Relist call and Business Policies shipping profile do not match, an error occurs.
    /// 					
    /// </remarks>

	public int? ShippingServicePriority { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemNo
    /// GetItemGetSellerListConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This enumerated value indicates whether the shipping costs of a domestic or an international shipping costs are being overridden. To override the shipping costs for any domestic shipping service in the Business Policies shipping profile, this field should be set to 'Domestic', and to override the shipping costs for any international shipping service, this field should be set to 'International'.
    /// 					
    /// </remarks>

	public ShippingServiceType? ShippingServiceType { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemNo
    /// GetItemGetSellerListConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This dollar value indicates the shipping service cost to ship one item to the buyer. If the shipping service costs override operation is successful, this value will override the corresponding <strong>shippingServiceCost</strong> value set in the <strong>domesticShippingPolicyInfoService</strong> (domestic shipping service) or <strong>intlShippingPolicyInfoService</strong> (international shipping service) containers in the Business Policies shipping profile.
    /// 					
    /// </remarks>

	public AmountType ShippingServiceCost { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemNo
    /// GetItemGetSellerListConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This dollar value indicates the cost to ship each additional identical item to the buyer. If the shipping service costs override operation is successful, this value will override the corresponding <strong>shippingServiceAdditionalCost</strong> value set in the <strong>domesticShippingPolicyInfoService</strong> (domestic shipping service) or <strong>intlShippingPolicyInfoService</strong> (international shipping service) containers in the Business Policies shipping profile.
    /// 						<br/><br/>
    /// 						This field is only applicable to multi-quantity, fixed-price listings.
    /// 					
    /// </remarks>

	public AmountType ShippingServiceAdditionalCost { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
///         Type used by the <b>ShippingServiceDetails</b> containers that are returned in the <b>GeteBayDetails</b> response. Each <b>ShippingServiceDetails</b> container consists of detailed information about each shipping service option available for the specified country. These details include the shipping service enumeration value to use when specifying shipping service options in an Add/Revise/Relist call, the shipping carrier, the shipping category (e.g. expedited, economy, etc.), the shipping packages that can be used, and the shipping delivery window.
///         <br/><br/>
///         <b>ShippingServiceDetails</b> containers are returned if a <b>DetailName</b> field is included in the call request and set to <code>ShippingServiceDetails</code>, or if no <b>DetailName</b> field is included in the call request.
///       
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ShippingServiceDetailsType {

#region 属性
    /// <summary>
    /// GeteBayDetailsAlways
    /// </summary>
    /// <remarks>
    /// 
    ///             Display string that applications can use to present a list of shipping service
    ///             options in a more user-friendly format (such as in a drop-down list).
    ///           
    /// </remarks>

	public string Description { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             Indicates whether a domestic shipping service option is an expedited shipping service. This field is only returned under a <b>ShippingServiceDetails</b> if <code>true</code>. Expedited generally means that the shipment of the order can arrive at the buyer's location within one or two business days.
    ///           
    /// </remarks>

	public bool? ExpeditedService { get; set; }
    /// <summary>
    /// Item.ShippingDetails.InternationalShippingServiceOption in AddItemAddItem.html#Request.Item.ShippingDetails.InternationalShippingDiscountProfileID
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             Indicates whether the shipping service is an international shipping service.
    ///             An international shipping service option is required if an item is being
    ///             shipped from one country (origin) to another (destination).
    ///           
    /// </remarks>

	public bool? InternationalService { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             The name of shipping service option. The ShippingServiceDetails.<strong>ValidForSellingFlow</strong> flag must also be present and <code>true</code>. Otherwise, that particular shipping service option is no longer valid and cannot be offered to buyers through a listing.
    ///             <br/><br/>
    ///             This token value is the text that a seller will provide in the ShippingDetails.ShippingServiceOptions.<strong>ShippingService</strong> field when creating a listing.
    ///           
    /// </remarks>

	public string ShippingService { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             Numeric identifier. A value greater than 50000 represents an
    ///             international shipping service (confirmed by
    ///             <strong>InternationalShippingService</strong> being true). Some applications use this ID
    ///             to look up shipping services more efficiently.
    ///           
    /// </remarks>

	public int? ShippingServiceID { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             The integer value returned here indicates the maximum number of business days that the shipping carrier (indicated in the corresponding <b>ShippingCarrier</b> field) will take to ship an item using the corresponding shipping service option (indicated in the <b>ShippingService</b> field).
    ///             <br><br>
    ///             This maximum shipping time does not include the seller's handling time, and the clock starts on the shipping time only after the seller has delivered the item to the shipping carrier for shipment to the buyer. 'Business days' can vary by shipping carrier and by country, but 'business days' are generally Monday through Friday, excluding holidays. This field is returned if defined for that particular shipping service option.
    ///             <br><br>
    ///             For sellers opted into and using eBay Guaranteed Delivery, they should be looking at this value, and this value plus their handling time stated in the listing cannot be greater than 4 business days in order for that listing to be eligible for eBay Guaranteed Delivery.
    ///           
    /// </remarks>

	public int? ShippingTimeMax { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///            The integer value returned here indicates the minimum number of business days that the shipping carrier (indicated in the corresponding <b>ShippingCarrier</b> field) will take to ship an item using the corresponding shipping service option (indicated in the <b>ShippingService</b> field).
    /// 					 <br><br>
    /// 					 This minimum shipping time does not include the seller's handling time, and the clock starts on the shipping time only after the seller has delivered the item to the shipping carrier for shipment to the buyer. 'Business days' can vary by shipping carrier and by country, but 'business days' are generally Monday through Friday, excluding holidays. This field is returned if defined for that particular shipping service option.
    ///           
    /// </remarks>

	public int? ShippingTimeMin { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionallyFlat, Calculated
    /// </summary>
    /// <remarks>
    /// 
    ///             The shipping cost types that this shipping service option supports, such as flat-rate or calculated. A <strong>ServiceType</strong> field is returned for each shipping cost type supported by the shipping service option.
    ///           
    /// </remarks>
[System.Xml.Serialization.XmlElement("ServiceType")]

	public System.Collections.Generic.List<ShippingTypeCodeType> ServiceType { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             The shipping packages that can be used for this shipping service option. A <strong>ShippingPackage</strong> field is returned for each shipping package supported by the shipping service option.
    ///           
    /// </remarks>
[System.Xml.Serialization.XmlElement("ShippingPackage")]

	public System.Collections.Generic.List<ShippingPackageCodeType> ShippingPackage { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             This field is only returned if the shipping service option requires that package dimensions are provided by the seller. This field is only returned if 'true'.
    ///           
    /// </remarks>

	public bool? DimensionsRequired { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             If this field is returned as 'true', the shipping service option can be used in a Add/Revise/Relist API call. If this field is returned as 'false', the shipping service option is not currently supported and cannot be used in a Add/Revise/Relist API call.
    ///           
    /// </remarks>

	public bool? ValidForSellingFlow { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             This field is only returned if 'true', and indicates that a shipping surcharge is applicable for this shipping service option.
    ///           
    /// </remarks>

	public bool? SurchargeApplicable { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             The enumeration value for the shipping carrier associated with the shipping service option.
    ///             <br/><br/>
    ///             <span class="tablenote">
    ///             <strong>Note:</strong> Commonly used shipping carriers can also be found by calling <b>GeteBayDetails</b> with <b>DetailName</b> set to <code>ShippingCarrierDetails</code> and examining the returned <b>ShippingCarrierDetails.ShippingCarrier</b> field.
    ///             </span>
    ///           
    /// </remarks>
[System.Xml.Serialization.XmlElement("ShippingCarrier")]

	public System.Collections.Generic.List<ShippingCarrierCodeType> ShippingCarrier { get; set; }
    /// <remarks>
    /// 
    ///             This field is deprecated, as there are longer any shipping services that support cash on delivery.
    ///           
    /// </remarks>

	public bool? CODService { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/shipping-deprecated.htmlDeprecated services
    /// </summary>
    /// <remarks>
    /// 
    ///             A mechanism by which details about deprecation of a shipping service is
    ///             announced. See also MappedToShippingServiceID.
    ///             If this container is empty, it means that there is no mapping for this
    ///             shipping service and that the shipping service will be dropped from the
    ///             listing without an accompanying warning message from the eBay API.
    ///           
    /// </remarks>
[System.Xml.Serialization.XmlElement("DeprecationDetails")]

	public System.Collections.Generic.List<AnnouncementMessageType> DeprecationDetails { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/shipping-deprecated.htmlDeprecated services
    /// </summary>
    /// <remarks>
    /// 
    ///             The ID of another shipping service that will be used when a
    ///             shipping service is deprecated. See also DeprecationDetails.
    ///           
    /// </remarks>

	public int? MappedToShippingServiceID { get; set; }
    /// <summary>
    /// CostGroupFlatCodeType
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             If returned, this is the shipping service group to which the shipping service belongs. Valid values are found in CostGroupFlatCodeType.
    ///           
    /// </remarks>

	public string CostGroupFlat { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             Shipping Package level details for the enclosing shipping service, this
    ///             complex type replaces the existing ShippingPackage type.
    ///           
    /// </remarks>
[System.Xml.Serialization.XmlElement("ShippingServicePackageDetails")]

	public System.Collections.Generic.List<ShippingServicePackageDetailsType> ShippingServicePackageDetails { get; set; }
    /// <summary>
    /// false
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             If true, a seller who selects this package type for the listing and then offers this shipping service must specify WeightMajor and WeightMinor in the item definition. If not returned, WeightRequired is false.
    ///           
    /// </remarks>

	public bool? WeightRequired { get; set; }
    /// <summary>
    /// GeteBayDetailsDetailLevel: none, ReturnSummary, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    ///             Returns the latest version number for this field. The version can be
    ///             used to determine if and when to refresh cached client data.
    ///           
    /// </remarks>

	public string DetailVersion { get; set; }
    /// <summary>
    /// GeteBayDetailsDetailLevel: none, ReturnSummary, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    ///             Gives the time in GMT that the feature flags for the details were last
    ///             updated. This timestamp can be used to determine if and when to refresh
    ///             cached client data.
    ///           
    /// </remarks>

	public System.DateTime? UpdateTime { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             Indicates the shipping category. Shipping categories include the following: <code>ECONOMY</code>, <code>STANDARD</code>, <code>EXPEDITED</code>, <code>ONE_DAY</code>, <code>PICKUP</code>, <code>OTHER</code>, and <code>NONE</code>. International shipping services are generally grouped into the <code>NONE</code> category. For more information about these shipping categories, see the <a href="http://pages.ebay.com/sellerinformation/shipping/chooseservice.html">Shipping Basics</a> page on the eBay Shipping Center site.
    ///             <br/><br/>
    ///             <span class="tablenote">
    ///             <strong>Note:</strong> This field is returned only for those sites that support shipping categories: US (0), CA (2), CAFR (210), UK (3), AU (15), FR (71), DE (77), IT (101) and ES (186).
    ///             </span>
    ///           
    /// </remarks>

	public string ShippingCategory { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Container consisting of shipping costs and other details related to a domestic
/// 				shipping service. A <b>ShippingServiceOptions</b> container is required for each domestic shipping service option that the seller will make available to buyers in an Add/Revise/Relist call. Up to four domestic shipping service options can be offered per listing.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ShippingServiceOptionsType {

#region 属性
    /// <summary>
    /// ShippingServiceCodeType
    /// SendInvoiceNo
    /// AddFixedPriceItemAddItemAddItemsAddOrderRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetItemShippingGetMyeBayBuyingConditionally
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// GeteBayDetailshttps://developer.ebay.com/Devzone/XML/docs/Reference/eBay/GeteBayDetails.html
    /// </summary>
    /// <remarks>
    /// 
    /// 						This enumeration value indicates a specific domestic shipping service option being offered by the seller to ship an item to a buyer who is located within the same country as the item. This field is required to identify each domestic shipping service option that is specified with a <b>ShippingServiceOptions</b> container.
    /// 						<br><br>
    /// 						For a list of valid <b>ShippingService</b> values, call  <b>GeteBayDetails</b>
    /// 						with <b>DetailName</b> set to <code>ShippingServiceDetails</code>. The
    /// 						<b>ShippingServiceDetails.ValidForSellingFlow</b> flag must also be present. Otherwise,
    /// 						that particular shipping service option is no longer valid and cannot be offered
    /// 						to buyers through a listing.<br><br>
    /// 						To view the full list of domestic shipping service options in the response, look for the
    /// 						<b>ShippingServiceDetails.ShippingService</b> fields. Domestic shipping service options will
    /// 						not have a <b>InternationalService</b> = <code>true</code> field, as this indicates that the <b>ShippingService</b>
    /// 						value is an International shipping service option.<br><br>
    /// 						<span class="tablenote"><strong>Note:</strong>
    /// 							The eBay standard envelope (eSE) is a domestic envelope service with tracking through eBay. This service applies to specific sub-categories of <b>Trading Cards</b>, and to coins & paper money, postcards, stamps, patches, and similar <a href="https://www.ebay.com/sellercenter/shipping/choosing-a-carrier-and-service/ebay-standard-envelope#eligible-categories" target="_blank">eligible categories</a>, and is only available on the US marketplace. See <a href="https://pages.ebay.com/seller-center/shipping/ebay-standard-envelope.html#lower-cost-way" target="_blank">eBay standard envelope</a> for details, restrictions, and an <a href="https://ir.ebaystatic.com/pictures/sc/Shipping/ebay_standard_envelope_template.pdf" target="_blank">envelope size template</a>. To use this service, send envelopes using the USPS mail and set the <b>ShippingService</b> field to <code>US_eBayStandardEnvelope</code>. <br><br> For the REST equivalent, see <a href="https://developer.ebay.com/api-docs/sell/static/seller-accounts/using-the-ebay-standard-envelope-service.html" target=/"_blank/">Using the eBay standard envelope (eSE) service</a>.
    /// 						</span>
    /// 					
    /// </remarks>

	public string ShippingService { get; set; }
    /// <summary>
    /// SendInvoiceNo
    /// AddFixedPriceItemAddItemAddItemsAddOrderRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetBidderListGetItemShippingGetMyeBayBuyingConditionally
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// GetMyeBayBuyingBidListWonListWatchListDeletedFromWonListBestOfferListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The base cost of shipping one unit of the item using the shipping service specified in the corresponding <b>ShippingService</b> field.
    /// 						<br>
    /// 						<br>
    /// 						In the case of a multiple-quantity, fixed-price listing, the <b>ShippingServiceAdditionalCost</b> field also becomes applicable, and shows the cost to ship each additional unit of the item if the buyer purchases multiple quantity of the same line item.
    /// 						<br>
    /// 						<br>
    /// 						<span class="tablenote"><strong>Note:</strong>
    /// 							If the corresponding shipping service option is set as a 'free shipping' option (<b>FreeShipping=true</b>), the seller still needs to include this <b>ShippingServiceCost</b> field and set its value to <code>0.0</code>, as eBay will not do this automatically.
    /// 						</span>
    /// 						When returned by <b>GetItemShipping</b>, it includes the packaging and
    /// 						handling cost.
    /// 						<br>
    /// 						<br>
    /// 						Note that if <b>ShippingService</b> is set to <code>LocalPickup</code>, <b>ShippingServiceCost</b> must be set to <code>0.0</code>. Also, if a shipping service has been specified (even <b>LocalPickup</b>), <b>GetItem</b> returns
    /// 						the shipping service cost, even if the cost is zero.
    /// 						<br>
    /// 						<br>
    /// 						If this is for calculated shipping for a listing that has not
    /// 						yet ended, note that the cost cannot be determined until the listing
    /// 						has ended and the buyer has specified a postal code.
    /// 					
    /// </remarks>

	public AmountType ShippingServiceCost { get; set; }
    /// <summary>
    /// SendInvoiceNo
    /// AddFixedPriceItemAddItemAddItemsAddOrderRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetBidderListGetItemShippingGetMyeBayBuyingConditionally
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The cost of shipping each additional item if the same buyer purchases multiple quantity of the same line item. This field is required when creating a multiple-quantity, fixed-price listing. Generally, the seller will give the buyer a shipping discount if that buyer purchases multiple quantity of the item, so this value should usually be less than the value set for <b>ShippingServiceCost</b>.
    /// 						<br/><br/>
    /// 						The value of this field can even be set to <code>0</code> if the seller wants to encourage buyers to buy multiple quantity of the item, or it could be that the seller can fit multiple quantities of the line item in a single shipping package, so the seller is just passing this shipping savings onto the buyer.  This field is not applicable for single-quantity listings.
    /// 					
    /// </remarks>

	public AmountType ShippingServiceAdditionalCost { get; set; }
    /// <summary>
    /// SendInvoiceNo
    /// AddFixedPriceItemAddItemAddItemsAddOrderRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetBidderListGetItemShippingGetMyeBayBuyingConditionally
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Controls the order (relative to other shipping services) in
    /// 						which the corresponding <b>ShippingService</b> will appear in the View Item and
    /// 						Checkout page.
    /// 						<br/><br/>
    /// 						Sellers can specify up to four domestic shipping services (with
    /// 						four <b>ShippingServiceOptions</b> containers), so valid values are 1, 2, 3, and 4. A
    /// 						shipping service with a <b>ShippingServicePriority</b> value of 1 appears at the top.
    /// 						Conversely, a shipping service with a <b>ShippingServicePriority</b> value of 4 appears
    /// 						at the bottom of a list of four shipping service options.
    /// 						<br><br>
    /// 						If this field is omitted from domestic shipping service options, the order of the shipping service options in View Item and Checkout pages will be determined by the order that these shipping service options are presented in the request payload of an Add/Revise/Relist call.
    /// 					
    /// </remarks>

	public int? ShippingServicePriority { get; set; }
    /// <summary>
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetItemShippingGetMyeBayBuyingConditionally
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as <code>true</code> if the domestic shipping service is considered an expedited shipping service. An expedited service is typically a shipping service that can ship an order that will arrive at the buyer's location within one to two business days.
    /// 					
    /// </remarks>

	public bool? ExpeditedService { get; set; }
    /// <summary>
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetItemShippingGetMyeBayBuyingConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The integer value returned here indicates the minimum number of business days that the shipping service (indicated in the corresponding <b>ShippingService</b> field) will take to be delivered to the buyer.
    /// 						<br><br>
    /// 						This minimum shipping time does not include the seller's handling time, and the clock starts on the shipping time only after the seller has delivered the item to the shipping carrier for shipment to the buyer. 'Business days' can vary by shipping carrier and by country, but 'business days' are generally Monday through Friday, excluding holidays. This field is returned if defined for that particular shipping service option.
    /// 					
    /// </remarks>

	public int? ShippingTimeMin { get; set; }
    /// <summary>
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetItemShippingGetMyeBayBuyingConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The integer value returned here indicates the maximum number of business days that the shipping service (indicated in the corresponding <b>ShippingService</b> field) will take to be delivered to the buyer.
    /// 						<br><br>
    /// 						This maximum shipping time does not include the seller's handling time, and the clock starts on the shipping time only after the seller has delivered the item to the shipping carrier for shipment to the buyer. 'Business days' can vary by shipping carrier and by country, but 'business days' are generally Monday through Friday, excluding holidays. This field is returned if defined for that particular shipping service option.
    /// 					
    /// </remarks>

	public int? ShippingTimeMax { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetItemShippingDetailLevel: none, ReturnAllConditionally
    /// GetMyeBayBuyingConditionally
    /// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/shipping-costs.html#freeFree shipping
    /// </summary>
    /// <remarks>
    /// 
    /// 						This boolean field indicates whether or not the corresponding domestic shipping service option is free to the buyer. In an Add/Revise/Relist call, free shipping can only be offered for the first specified shipping service (so, the corresponding <b>ShippingServicePriority</b> value should be <code>1</code> or included first in the call request). If 'free shipping' is for any other shipping service, this field is ignored.
    /// 						<br/><br/>
    /// 						For 'Get' calls, including <b>GetItem</b>, this field is only returned if <code>1</code>.
    /// 						<br/>
    /// 						<span class="tablenote"><strong>Note:</strong>
    /// 							If a seller is specifying a shipping service option as 'free shipping', in addition to this <b>FreeShipping</b> boolean field, the seller will also need to include the corresponding <b>ShippingServiceCost</b> field and set its value to <code>0.0</code>, as eBay will not do this automatically.
    /// 						</span>
    /// 						<span class="tablenote"><strong>Note:</strong>
    /// 							If the condition is certified refurbished (<b>ConditionID</b> set to <code>2000</code>, 'Certified - Refurbished'), you must offer a free shipping option. Set <b>FreeShipping</b> as <code>true</code> (or <code>1</code>) along with the <b>ShippingServiceCost</b> as <code>0.0</code> for the first domestic shipping service.
    /// 						</span>
    /// 					
    /// </remarks>

	public bool? FreeShipping { get; set; }
    /// <summary>
    /// GetMyeBayBuyingGetMyeBaySellingConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 	         The <b>LocalPickup</b> flag is used by the <b>GetMyEbayBuying</b> and <b>GetMyEbaySelling</b> calls to indicate whether the buyer has selected local pickup as the shipping option or the seller has specified local pickup as the first shipping option.
    ///            The <b>LocalPickup</b> flag can also be used with other fields to indicate if there is  no fee for local pickup.
    ///            <br/><br/>
    ///            For example, if the <b>LocalPickup</b> flag is used with the <b>ShippingServiceOptions</b> and <b>ShippingServiceCost</b> fields, the seller can indicate that local pickup is an available option and that no is fee charged. This is the equivalent of free shipping.
    /// 					
    /// </remarks>

	public bool? LocalPickup { get; set; }
    /// <summary>
    /// GetItemShippingConditionally
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// GetMyeBayBuyingConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						For orders using eBay International Shipping, when using the <b>GetOrders</b> call, the <b>OrderArray.Order.ShippingServiceSelected.ImportCharge</b> field contains only customs charges.<br /><br />For the Global Shipping Program, which is only supported in the UK, this field contains the total cost of customs and taxes for the international leg of an order shipped using the Global Shipping Program. This amount is calculated and supplied for each item by the international shipping provider when a buyer views the item properties.					
    /// 					
    /// </remarks>

	public AmountType ImportCharge { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container is no longer applicable, and it was only applicable to eBay Now and 'eBay On Demand Delivery' orders, and neither of these features are available any longer.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("ShippingPackageInfo")]

	public System.Collections.Generic.List<ShippingPackageInfoType> ShippingPackageInfo { get; set; }
    /// <summary>
    /// GetItemShippingConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The last time of day that an order using the specified shipping service will be accepted by the seller for the current listing. The cut off time applies and is returned only when the <strong>ShippingService</strong> field contains the name of a qualifying time-sensitive shipping service, such as <code>eBayNowImmediateDelivery</code>.
    /// 						<br/><br/>
    /// 						The cut off time is set by eBay and determined in part by the policies and locations of the seller and the shipping carrier.
    /// 					
    /// </remarks>

	public System.DateTime? ShippingServiceCutOffTime { get; set; }
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

	public string LogisticPlanType { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 			Packages supported by the enclosing shipping service.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ShippingServicePackageDetailsType {

#region 属性
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The name of the package type.
    /// 					
    /// </remarks>

	public ShippingPackageCodeType? Name { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is only returned if package dimensions are required for the corresponding
    /// 						package type (<b>ShippingServicePackageDetails.Name</b> value) supported 
    /// 						by the corresponding shipping service option 
    /// 						(<b>ShippingServiceDetails.ShippingService</b> value).
    /// 					
    /// </remarks>

	public bool? DimensionsRequired { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				If the field is present, the corresponding feature applies to the category. The
/// 				field is returned as an empty element (i.e., a boolean value is not returned).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ShippingTermRequiredDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>BuyerRequirementDetails</b> container, which is returned in <b>GeteBayDetails</b>, and provides the seller with the buyer requirement features (and applicable values) that are supported by the listing site.
/// 				<br/><br/>
/// 				<span class="tablenote"><b>Note: </b>
/// 				This container is only returned if <b>BuyerRequirementDetails</b> is included as a <b>DetailName</b>
/// 				filter in the call request, or if no <b>DetailName</b> filters are used in the request.
/// 				</span>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class SiteBuyerRequirementDetailsType {

#region 属性
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is deprecated.
    /// 					
    /// </remarks>

	public bool? LinkedPayPalAccount { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						<span class="tablenote"><b>Note: </b>
    /// 							This field is no longer applicable, as sellers can no longer set the Buyer Requirement that buyers must have only a certain amount of buyer policy violations within a specified amount of time in order to purchase an item.
    /// 						</span>
    /// 					
    /// </remarks>

	public MaximumBuyerPolicyViolationsDetailsType MaximumBuyerPolicyViolations { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					  This container shows the supported values that can be set as the <b>MaximumItemCount</b> and <b>MinimumFeedbackScore</b> to help control inexperienced or low Feedback bidders/buyers from bidding on or buying an item in a listing.
    /// 					
    /// </remarks>

	public MaximumItemRequirementsDetailsType MaximumItemRequirements { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					  This container shows the supported values that can be set as the Maximum Unpaid Item count and period (number of days) to block buyers who have recent Unpaid Item Strikes from bidding on or buying an item in a listing.
    /// 					
    /// </remarks>

	public MaximumUnpaidItemStrikesInfoDetailsType MaximumUnpaidItemStrikesInfo { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						<span class="tablenote"><b>Note: </b>
    /// 							This field is no longer applicable, as sellers can no longer set a buyer's Minimum Feedback Score threshold Buyer Requirement at the listing-level in Add/Revise/Relist calls.
    /// 						</span>
    /// 					
    /// </remarks>

	public MinimumFeedbackScoreDetailsType MinimumFeedbackScore { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						A <code>true</code> value returned in this field indicates that the <b>ShipToRegistrationCountry</b> Buyer Requirement is supported for the specified site.
    /// 					
    /// </remarks>

	public bool? ShipToRegistrationCountry { get; set; }
    /// <summary>
    /// GeteBayDetailsDetailLevel: none, ReturnSummary, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Returns the latest version number for this field. The version can be
    /// 						used to determine if and when to refresh cached client data.
    /// 					
    /// </remarks>

	public string DetailVersion { get; set; }
    /// <summary>
    /// GeteBayDetailsDetailLevel: none, ReturnSummary, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Gives the time in GMT when the feature flags for the details were last
    /// 						updated. This timestamp can be used to determine if and when to refresh
    /// 						cached client data.
    /// 					
    /// </remarks>

	public System.DateTime? UpdateTime { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// ProductCreationEnabled
/// </summary>
/// <remarks>
/// 
/// 				This type is used by the <b>SiteDefaults</b> container to display the features/settings that are default for most categories on the eBay marketplace.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class SiteDefaultsType {

#region 属性
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						A <b>ListingDuration</b> field will be returned for each different listing type that is supported on the eBay marketplace. Each field will show the listing type and the identifier associated with this listing type. These IDs will be used to match the default listing duration values that are displayed in the <b>FeatureDefinitions.ListingDurations</b> containers.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("ListingDuration")]

	public System.Collections.Generic.List<ListingDurationReferenceType> ListingDuration { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting for whether sellers are required to specify a domestic shipping service and its associated cost when listing items. True means the shipping terms are required unless a specific category overrides this setting.
    /// 					
    /// </remarks>

	public bool? ShippingTermsRequired { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting for whether categories allow Best Offers. A value of <code>true</code> means Best Offers are allowed site-wide, unless a specific category overrides the setting.
    /// 					
    /// </remarks>

	public bool? BestOfferEnabled { get; set; }
    /// <remarks>
    /// 
    /// 						This field is no longer applicable as Dutch auctions are no longer available on eBay sites.
    /// 					
    /// </remarks>

	public bool? DutchBINEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting for whether a bidder must consent to the bid by confirming that he or she read and agrees to the terms in eBay's privacy policy.
    /// 					
    /// </remarks>

	public bool? UserConsentRequired { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether or not it is possible to enhance a listing by putting it into a rotation for display on a special area of the eBay home page. Support for this feature varies by site. Item or feedback restrictions may apply.
    /// 					
    /// </remarks>

	public bool? HomePageFeaturedEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting for whether categories allow the ProPack feature (a feature pack). True means ProPack is allowed site-wide, unless a specific category overrides the setting.
    /// 					
    /// </remarks>

	public bool? ProPackEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting for whether categories allow the <b>BasicUpgradePack</b> feature (a feature pack). No longer allowed on any sites. Formerly, Australia site (site ID 15, abbreviation AU) only.
    /// 					
    /// </remarks>

	public bool? BasicUpgradePackEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting for whether categories allow the ValuePack feature (a feature pack). A value of <code>true</code> means it is allowed site-wide, unless a specific category overrides the setting.
    /// 					
    /// </remarks>

	public bool? ValuePackEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting for whether categories allow the ProPackPlus feature (a feature pack). A value of <code>true</code> means it is allowed site-wide, unless a specific category overrides the setting.
    /// 					
    /// </remarks>

	public bool? ProPackPlusEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting for whether categories allow Classified Ad format listings. A value of <code>true</code> means the feature is allowed site-wide, unless a specific category overrides the setting.
    /// 					
    /// </remarks>

	public AdFormatEnabledCodeType? AdFormatEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting for whether categories allow counter offers for Best Offers. A value of <code>true</code> means counter offers are allowed site-wide, unless a specific category overrides the setting.
    /// 					
    /// </remarks>

	public bool? BestOfferCounterEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting for whether categories allow auto decline for Best Offers. A value of <code>true</code> means auto decline is allowed site-wide, unless a specific category overrides the setting.
    /// 					
    /// </remarks>

	public bool? BestOfferAutoDeclineEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting for whether
    /// 						<b>LocalMarketSpecialitySubscription</b> feature is supported for most categories.
    /// 					
    /// </remarks>

	public bool? LocalMarketSpecialitySubscription { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting for whether <b>LocalMarketRegularSubscription</b>
    /// 						feature is supported for most categories.
    /// 					
    /// </remarks>

	public bool? LocalMarketRegularSubscription { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting for whether <b>LocalMarketPremiumSubscription</b>
    /// 						feature is supported for most categories.
    /// 					
    /// </remarks>

	public bool? LocalMarketPremiumSubscription { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting for whether <b>LocalMarketNonSubscription</b>
    /// 						feature is supported for most categories.
    /// 					
    /// </remarks>

	public bool? LocalMarketNonSubscription { get; set; }
    /// <summary>
    /// 579
    /// 681
    /// NoOp
    /// 
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is deprecated.
    /// 					
    /// </remarks>

	public bool? ExpressEnabled { get; set; }
    /// <summary>
    /// 579
    /// 681
    /// NoOp
    /// 
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is deprecated.
    /// 					
    /// </remarks>

	public bool? ExpressPicturesRequired { get; set; }
    /// <summary>
    /// 579
    /// 681
    /// NoOp
    /// 
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is deprecated.
    /// 					
    /// </remarks>

	public bool? ExpressConditionRequired { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting for whether the Minimum Reserve Price feature is supported for most categories.
    /// 					
    /// </remarks>

	public double? MinimumReservePrice { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting for whether most categories allow seller-level contact information for Classified Ad listings.
    /// 						<br/><br/>
    /// 						A value of <code>true</code> means seller-level contact information is available for Classified Ad format listings site-wide, unless a specific category overrides the setting.
    /// 					
    /// </remarks>

	public bool? SellerContactDetailsEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting for whether the Transaction Confirmation Request feature is supported for most categories.
    /// 					
    /// </remarks>

	public bool? TransactionConfirmationRequestEnabled { get; set; }
    /// <remarks>
    /// 
    /// 						This field is is no longer applicable.
    /// 					
    /// </remarks>

	public bool? StoreInventoryEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This feature is no longer applicable.
    /// 					
    /// </remarks>

	public bool? SkypeMeTransactionalEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This feature is no longer applicable.
    /// 					
    /// </remarks>

	public bool? SkypeMeNonTransactionalEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the supported local listing distances of regular vehicles
    /// 						for most categories.
    /// 					
    /// </remarks>

	public string LocalListingDistancesRegular { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the supported local listing distances of specialty vehicles
    /// 						for most categories.
    /// 					
    /// </remarks>

	public string LocalListingDistancesSpecialty { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the supported local listing distances for most categories,
    /// 						for users who have not subscribed to either Regular or Specialty vehicles.
    /// 					
    /// </remarks>

	public string LocalListingDistancesNonSubscription { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates if the payment method should be displayed to the user
    /// 						for most categories. Even if enabled, checkout may or may not
    /// 						be enabled.
    /// 					
    /// </remarks>

	public ClassifiedAdPaymentMethodEnabledCodeType? ClassifiedAdPaymentMethodEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates if shipping options are available for most categories.
    /// 					
    /// </remarks>

	public bool? ClassifiedAdShippingMethodEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates if Best Offer is enabled for Classified Ad listings
    /// 						in most categories.
    /// 					
    /// </remarks>

	public ClassifiedAdBestOfferEnabledCodeType? ClassifiedAdBestOfferEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether counter offers are allowed on Best Offers for
    /// 						most categories.
    /// 					
    /// </remarks>

	public bool? ClassifiedAdCounterOfferEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether automatic decline for Best Offers is allowed for most
    /// 						categories.
    /// 					
    /// </remarks>

	public bool? ClassifiedAdAutoDeclineEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether most categories support including a phone number in the
    /// 						seller's contact information.
    /// 					
    /// </remarks>

	public bool? ClassifiedAdContactByPhoneEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether most categories support including an email address in the
    /// 						seller's contact information.
    /// 					
    /// </remarks>

	public bool? ClassifiedAdContactByEmailEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						eBay controls all forms of electronic payment methods that are avaialable to buyers, so this field is no longer applicable.
    /// 					
    /// </remarks>

	public bool? SafePaymentRequired { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting for whether the pay-per-lead feature
    /// 						is supported for most categories.
    /// 					
    /// </remarks>

	public bool? ClassifiedAdPayPerLeadEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The value returned in this field indicates whether most categories on the specified eBay site support listings with Item Specifics. Item Specifics enable sellers to present descriptive details of an item in a structured manner.
    /// 					
    /// </remarks>

	public ItemSpecificsEnabledCodeType? ItemSpecificsEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether the category is enabled for the <b>BrandMPN</b> field for a specific item. If <code>true</code>, sellers can add <b>BrandMPN</b> for that item.
    /// 					
    /// </remarks>

	public bool? BrandMPNIdentifierEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting for whether categories allow
    /// 						auto-accept for Best Offers for Classified Ads.
    /// 					
    /// </remarks>

	public bool? ClassifiedAdAutoAcceptEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting for whether categories allow auto-accept for Best Offers.
    /// 					
    /// </remarks>

	public bool? BestOfferAutoAcceptEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting for whether categories allow you to specify that listings be displayed in the default search results of the respective sites.
    /// 					
    /// </remarks>

	public bool? CrossBorderTradeNorthAmericaEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting for whether categories allow you to specify that listings be displayed in the default search results of the respective site.
    /// 					
    /// </remarks>

	public bool? CrossBorderTradeGBEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting for whether categories allow you to specify that listings be displayed in the default search results of the respective site.
    /// 					
    /// </remarks>

	public bool? CrossBorderTradeAustraliaEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						For the Australia site, if the <b>BuyerGuaranteeEnabled</b> is returned, then the default site setting is that categories allow buyer protection.
    /// 					
    /// </remarks>

	public bool? BuyerGuaranteeEnabled { get; set; }
    /// <remarks>
    /// 
    /// 						This field is deprecated.
    /// 					
    /// </remarks>

	public bool? CombinedFixedPriceTreatmentEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting that enables durations for "Gallery Featured".
    /// 					
    /// </remarks>

	public ListingEnhancementDurationReferenceType GalleryFeaturedDurations { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is deprecated. 
    /// 					
    /// </remarks>

	public bool? PayPalRequired { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting for whether categories allow Classified Ad listings. A value of <code>true</code> means the feature is allowed site-wide, unless a specific category overrides the setting. This element is for eBay Motors Pro users.
    /// 					
    /// </remarks>

	public AdFormatEnabledCodeType? eBayMotorsProAdFormatEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether most categories support including a phone number in the
    /// 						seller's contact information. This element is for eBay Motors Pro users.
    /// 					
    /// </remarks>

	public bool? eBayMotorsProContactByPhoneEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates which telephone option is enabled to contact the seller. This element is for eBay Motors Pro users.
    /// 					
    /// </remarks>

	public int? eBayMotorsProPhoneCount { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether most categories support including an address in the seller's
    /// 						contact information. This element is for eBay Motors Pro users.
    /// 					
    /// </remarks>

	public bool? eBayMotorsProContactByAddressEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates which address option is enabled to
    /// 						contact the seller. This element is for eBay Motors Pro users.
    /// 					
    /// </remarks>

	public int? eBayMotorsProStreetCount { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether most categories support including a company name in the
    /// 						seller's contact information. This element is for eBay Motors Pro users.
    /// 					
    /// </remarks>

	public bool? eBayMotorsProCompanyNameEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether most categories support including an email address in the
    /// 						seller's contact information. This element is for eBay Motors Pro users.
    /// 					
    /// </remarks>

	public bool? eBayMotorsProContactByEmailEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates if Best Offer is enabled for Classified Ad listings
    /// 						in most categories. This element is for eBay Motors Pro users.
    /// 					
    /// </remarks>

	public ClassifiedAdBestOfferEnabledCodeType? eBayMotorsProBestOfferEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting for whether categories allow
    /// 						auto-accept for Best Offers for Classified Ads.
    /// 						This element is for eBay Motors Pro users.
    /// 					
    /// </remarks>

	public bool? eBayMotorsProAutoAcceptEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting for whether categories allow
    /// 						auto-decline for Best Offers for Classified Ads.
    /// 						This element is for eBay Motors Pro users.
    /// 					
    /// </remarks>

	public bool? eBayMotorsProAutoDeclineEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates if the payment method should be displayed to the user for most categories. Even if enabled, checkout may or may not be enabled. This element is for eBay Motors Pro users.
    /// 					
    /// </remarks>

	public ClassifiedAdPaymentMethodEnabledCodeType? eBayMotorsProPaymentMethodCheckOutEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates if shipping options are available for most categories.
    /// 						This element is for eBay Motors Pro users.
    /// 					
    /// </remarks>

	public bool? eBayMotorsProShippingMethodEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether counter offers are allowed on Best Offers for
    /// 						most categories. This element is for eBay Motors Pro users.
    /// 					
    /// </remarks>

	public bool? eBayMotorsProCounterOfferEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting for whether most categories allow seller-
    /// 						level contact information for Classified Ad format listings. A value of <code>true</code>
    /// 						means seller-level contact information is available for Classified Ad listings
    /// 						site-wide, unless a specific category overrides the setting. This element is
    /// 						for eBay Motors Pro users.
    /// 					
    /// </remarks>

	public bool? eBayMotorsProSellerContactDetailsEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting for whether categories allow Classified Ad listings. A value of <code>true</code> means the feature is allowed site-wide, unless a specific category overrides the setting. This element is for Local Market dealers.
    /// 					
    /// </remarks>

	public AdFormatEnabledCodeType? LocalMarketAdFormatEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether most categories support including a phone number in the
    /// 						seller's contact information. This element is for Local Market dealers.
    /// 					
    /// </remarks>

	public bool? LocalMarketContactByPhoneEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates which telephone option is enabled to contact the seller. This element is for Local Market dealers.
    /// 					
    /// </remarks>

	public int? LocalMarketPhoneCount { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether most categories support including an address in the seller's
    /// 						contact information. This element is for Local Market dealers.
    /// 					
    /// </remarks>

	public bool? LocalMarketContactByAddressEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates which address option is enabled to
    /// 						contact the seller. This element is for Local Market dealers.
    /// 					
    /// </remarks>

	public int? LocalMarketStreetCount { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether most categories support including a company name in the
    /// 						seller's contact information. This element is for Local Market dealers.
    /// 					
    /// </remarks>

	public bool? LocalMarketCompanyNameEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether most categories support including an email address in the
    /// 						seller's contact information. This element is for Local Market dealers.
    /// 					
    /// </remarks>

	public bool? LocalMarketContactByEmailEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates if Best Offer is enabled for Classified Ad listings
    /// 						in most categories. This element is for Local Market dealers.
    /// 					
    /// </remarks>

	public ClassifiedAdBestOfferEnabledCodeType? LocalMarketBestOfferEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting for whether categories allow auto-accept for Best Offers for Classified Ads. This element is for Local Market dealers.
    /// 					
    /// </remarks>

	public bool? LocalMarketAutoAcceptEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting for whether categories allow auto-decline for Best Offers for Classified Ads. This element is for Local Market dealers.
    /// 					
    /// </remarks>

	public bool? LocalMarketAutoDeclineEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates if the payment method should be displayed to the user for most categories. Even if enabled, checkout may or may not be enabled. This element is for Local Market dealers.
    /// 					
    /// </remarks>

	public ClassifiedAdPaymentMethodEnabledCodeType? LocalMarketPaymentMethodCheckOutEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates if shipping options are available for most categories.
    /// 						This element is for Local Market dealers.
    /// 					
    /// </remarks>

	public bool? LocalMarketShippingMethodEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether counter offers are allowed on Best Offers for
    /// 						most categories. This element is for Local Market dealers.
    /// 					
    /// </remarks>

	public bool? LocalMarketCounterOfferEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting for whether most categories allow seller- level contact information for Classified Ad format listings. A value of <code>true</code> means seller-level contact information is available for Classified Ad format listings site-wide, unless a specific category overrides the setting. This element is for Local Market dealers.
    /// 					
    /// </remarks>

	public bool? LocalMarketSellerContactDetailsEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates which telephone option is enabled to
    /// 						contact the seller. This element is for For Sale By Owner.
    /// 					
    /// </remarks>

	public int? ClassifiedAdPhoneCount { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether most categories support including an address in the seller's
    /// 						contact information. This element is for For Sale By Owner.
    /// 					
    /// </remarks>

	public bool? ClassifiedAdContactByAddressEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates which address option is enabled to
    /// 						contact the seller. This element is for For Sale By Owner.
    /// 					
    /// </remarks>

	public int? ClassifiedAdStreetCount { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether most categories support including a company name in the
    /// 						seller's contact information. This element is for For Sale By Owner.
    /// 					
    /// </remarks>

	public bool? ClassifiedAdCompanyNameEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting for whether
    /// 						<b>LocalMarketSpecialitySubscription</b> feature is supported for most categories.
    /// 					
    /// </remarks>

	public GeographicExposureCodeType? SpecialitySubscription { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting for whether <b>LocalMarketRegularSubscription</b>
    /// 						feature is supported for most categories.
    /// 					
    /// </remarks>

	public GeographicExposureCodeType? RegularSubscription { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting for whether <b>LocalMarketPremiumSubscription</b>
    /// 						feature is supported for most categories.
    /// 					
    /// </remarks>

	public GeographicExposureCodeType? PremiumSubscription { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the supported local listing distances for most categories,
    /// 						for users who have not subscribed to either Regular or Specialty vehicles.
    /// 					
    /// </remarks>

	public GeographicExposureCodeType? NonSubscription { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is deprecated.
    /// 					
    /// </remarks>

	public bool? PayPalRequiredForStoreOwner { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Defines if quantity can be revised while a listing is in semi or fully restricted mode.
    /// 						Applies to fixed-price listings.
    /// 					
    /// </remarks>

	public bool? ReviseQuantityAllowed { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Defines if price can be revised while a listing is in semi or fully restricted mode.
    /// 						Applies to fixed-price listings.
    /// 					
    /// </remarks>

	public bool? RevisePriceAllowed { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Defines if extended business seller listing durations are enabled on a given site.
    /// 						When the value of this element is <code>true</code>, it means the listing duration values
    /// 						defined in <b>StoreOwnerExtendedListingDurations</b> are applicable to fixed-price
    /// 						listings.
    /// 					
    /// </remarks>

	public bool? StoreOwnerExtendedListingDurationsEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Provides additional listings durations that are supported by Store Owners.
    /// 						The extended listing durations provided here in this element should be merged
    /// 						in with the baseline listing durations provided in the <b>ListingDurations</b> container.
    /// 					
    /// </remarks>

	public StoreOwnerExtendedListingDurationsType StoreOwnerExtendedListingDurations { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting for whether a return policy is required for most categories.
    /// 						<br>
    /// 						<br>
    /// 						<b>For most sites:</b> If true, listings in most categories require a return policy.
    /// 						<br>
    /// 						<br>
    /// 						<b>For eBay Australia (AU) and US eBay Motors Parts and Accessories:</b> If true, most categories support but do not require a return policy.
    /// 						<br>
    /// 						<br>
    /// 						Individual categories can override the site default.
    /// 					
    /// </remarks>

	public bool? ReturnPolicyEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting for whether a handling time (dispatch time) is
    /// 						required for most categories.
    /// 						<br>
    /// 						<br>
    /// 						The handling time is the maximum number of business days the seller commits to for preparing an item to be shipped after receiving a cleared payment. The seller's handling time does not include the shipping time (the carrier's transit time).
    /// 						<br>
    /// 						<br>
    /// 						If <code>false</code>, most listings on the site require a handling time (see <b>DispatchTimeMax</b> in <b>AddItem</b>) when flat or calculated shipping is specified. (A handling time is not required for local pickup or for freight shipping.)
    /// 						<br>
    /// 						<br>
    /// 						For a list of the handling time values allowed for each site, use <b>DispatchTimeMaxDetails</b> in <b>GeteBayDetails</b>.
    /// 						<br>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						Although the field name ends with "Enabled", a value of <code>true</code> means that a handling time is NOT required, and value of <code>false</code> means that a handling time IS required.</span>
    /// 					
    /// </remarks>

	public bool? HandlingTimeEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// Flat rate shippinghttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/shipping-flat-rate.html#max-flat
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting for whether a maximum flat rate shipping cost
    /// 						is imposed for listings in most categories on the site.
    /// 					
    /// </remarks>

	public AmountType MaxFlatShippingCost { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/shipping-flat-rate.html#max-flatFlat rate shipping
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting for whether a maximum flat rate shipping cost
    /// 						is imposed on sellers who list in categories on this site yet are shipping an
    /// 						item into the country of this site from another country.
    /// 					
    /// </remarks>

	public bool? MaxFlatShippingCostCBTExempt { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Returns the applicable max cap per shipping cost for shipping service group1
    /// 					
    /// </remarks>

	public AmountType Group1MaxFlatShippingCost { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Returns the applicable max cap per shipping cost for shipping service group2
    /// 					
    /// </remarks>

	public AmountType Group2MaxFlatShippingCost { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Returns the applicable max cap per shipping cost for shipping service group3
    /// 					
    /// </remarks>

	public AmountType Group3MaxFlatShippingCost { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates the acceptable payment methods that can be used when using the <b>Add</b>/<b>Revise</b>/<b>Relist</b> calls for an item listed on the corresponding site.
    /// 						<br><br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						eBay now controls all electronic payment methods available to buyers, but sellers still need to specify offline payment methods for listings that require/support offline payment such as motor vehicle listings.</span>
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("PaymentMethod")]

	public System.Collections.Generic.List<BuyerPaymentMethodCodeType> PaymentMethod { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting for whether categories support multi-variation listings. If true, you can pass in Item.Variations in the AddFixedPriceItem family of calls when you list in categories that support this feature.
    /// 						<br>
    /// 						<br>
    /// 						Multi-variation listings contain items that are logically the same product, but that vary in their manufacturing details or packaging. For example, a particular brand and style of shirt could be available in different sizes and colors, such as "large blue" and "medium black" variations.
    /// 					
    /// </remarks>

	public bool? VariationsEnabled { get; set; }
    /// <remarks>
    /// 
    /// 						This field is deprecated.
    /// 					
    /// </remarks>

	public AttributeConversionEnabledCodeType? AttributeConversionEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting for whether categories allow free, automatic upgrades for Gallery Plus, which enhances pictures in search results.
    /// 					
    /// </remarks>

	public bool? FreeGalleryPlusEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting for whether categories allow free, automatic upgrades for Picture Pack, a discount package that includes super-sizing of pictures.
    /// 					
    /// </remarks>

	public bool? FreePicturePackEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// Parts and accessorieshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/ebay-motors-parts-accessories.html#search
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting for whether listing items with parts compatibility is supported by application (<code>ByApplication</code>), by specification (<code>BySpecification</code>), or not at all (<code>Disabled</code>). A given category cannot support both types of parts compatibility.
    /// 						<br><br>
    /// 						Parts compatibility listings contain information to determine the assemblies with which a part is compatible. For example, an automotive part or accessory listed with parts compatibility can be matched with vehicles (e.g., specific years, makes, and models) with which the part or accessory can  be used.
    /// 						<br><br>
    /// 						Parts Compatibility is supported in limited Parts & Accessories categories for the US eBay Motors site only.
    /// 					
    /// </remarks>

	public ItemCompatibilityEnabledCodeType? ItemCompatibilityEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting for whether parts compatibility information is required when listing items, and if so, how many compatibilities must be specified. If the value is "0," you are not required to specify compatibility information. A value greater than "0" indicates that listing with parts compatibity is mandatory and the listing must contain the specified number of compatibilities at a minimum.
    /// 						<br><br>
    /// 						Parts compatibility listings contain information to determine the assemblies with which a part is compatible. For example, an automotive part or accessory listed witih parts compatibility can be matched with vehicles (e.g., specific years, makes, and models) with which the part or accessory can  be used.
    /// 						<br><br>
    /// 						This field applies only to listings in which compatibility is specified by application. Entering parts compatibility by application specifies the assemblies (e.g., a specific year, make, and model of car) to which the item applies. This can be done automatically by listing with a catalog product that supports parts compatibility, or manually, using <b class="con">Item.ItemCompatibilityList</b> when listing or revising an item.
    /// 					
    /// </remarks>

	public int? MinItemCompatibility { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting for the maximum number of compatible applications allowed per item when adding or revising items with parts compatibility.
    /// 						<br><br>
    /// 						Parts compatibility listings contain structured information to determine the assemblies with which a part is compatible. For example, an automotive part or accessory listed with parts compatibility can be matched with vehicles (e.g., specific years, makes, and models) with which the part or accessory can be used.
    /// 						<br><br>
    /// 						This field applies only to listings in which compatibility is specified by application manually when listing or revising an item. Entering parts compatibility by application manually specifies the assemblies (e.g., a specific year, make, and model of car) to which the item applies, using <b class="con">Item.ItemCompatibilityList</b>.
    /// 					
    /// </remarks>

	public int? MaxItemCompatibility { get; set; }
    /// <summary>
    /// Disabled
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting for whether most categories support (or require) <b>Item.ConditionID</b> in listings. Use this to determine whether to use <b>ConditionID</b> in <b>AddItem</b> and related calls. See <b>ConditionValues</b> for a list of valid IDs.
    /// 						<br><br>
    /// 						In general, this is set to <code>Disabled</code>, and meta-categories
    /// 						(level 1 categories) define their own default settings.
    /// 					
    /// </remarks>

	public ConditionEnabledCodeType? ConditionEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container shows the site default item condition values. Individual leaf categories define their own default set of item condition values and always override this list.
    /// 					
    /// </remarks>

	public ConditionValuesType ConditionValues { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container shows the site default special item condition values, such as <b>Certified - Refurbished</b> condition (condition ID 2000), <b>Excellent - Refurbished</b> condition (condition ID 2010), <b>Very Good - Refurbished</b> condition (condition ID 2020), and <b>Good - Refurbished</b> condition (condition ID 2030). A seller must be pre-qualified by eBay to list items with the any of these refurbished item conditions.
    /// 						<br/><br/>
    /// 						All other item conditions supported by a category will be returned in the <b>ConditionValues</b> container instead. Individual leaf categories define their own default set of item condition values and always override this list.
    /// 					
    /// </remarks>

	public ConditionValuesType SpecialFeatures { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the default site setting for whether most categories follow specific rules associated with "value categories".
    /// 						<br>
    /// 						<br>
    /// 						Some eBay sites may select a few categories and designate them as "value categories". These are typically selected from categories where buyers can find great deals. (Not all categories with great deals are designated as value categories.) This designation can change over time.
    /// 						<br>
    /// 						<br>
    /// 						While a category is designated as a value category (i.e., when <b>ValueCategory</b> = <code>true</code>), it is subject to the following rule: Items in value categories can only be listed in one category.
    /// 						<br>
    /// 						<br>
    /// 						For example, if you attempt to list in two categories and the <b>PrimaryCategory</b> or <b>SecondaryCategory</b> is a value category, then eBay drops the <b>SecondaryCategory</b> and lists the item in the <b>PrimaryCategory</b> only. Similarly, if you attempt to add a secondary category to an existing listing, or you change the category for an existing listing, and if the primary or secondary category is a value category, then eBay drops the secondary category.
    /// 					
    /// </remarks>

	public bool? ValueCategory { get; set; }
    /// <summary>
    /// Disabled
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is no longer applicable.
    /// 					
    /// </remarks>

	public ProductCreationEnabledCodeType? ProductCreationEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This enumeration value indicates whether or not most categories on the specified eBay site support the use of European Article Numbers (EANs) to help create a listing in an <b>Add</b>/<b>Revise</b>/<b>Relist</b>/<b>Verify</b> API call.
    /// 						<b></b>
    /// 							<ul>
    /// 								<li>A value of <code>Disabled</code> indicates that EANs cannot be used for most categories on the specified eBay site. </li>
    /// 								<li>A value of <code>Enabled</code> indicates that EANs can be used for most categories on the specified eBay site. </li>
    /// 								<li>A value of <code>Required</code> indicates that an EAN is required for most categories on the specified eBay site. </li>
    /// 						  </ul>
    /// 					
    /// </remarks>

	public ProductIdentiferEnabledCodeType? EANEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This enumeration value indicates whether or not most categories on the specified eBay site support the use of International Standard Book Numbers (ISBNs) to help create a listing in an <b>Add</b>/<b>Revise</b>/<b>Relist</b>/<b>Verify</b> API call.
    /// 						<br/><br/>
    /// 						A value of <code>Disabled</code> indicates that ISBNs cannot be used for most categories on the specified eBay site, a value of <code>Enabled</code> indicates that ISBNs can be used for most categories on the specified eBay site, and a value of <code>Required</code> indicates that an ISBN is required for most categories on the specified eBay site.
    /// 					
    /// </remarks>

	public ProductIdentiferEnabledCodeType? ISBNEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This enumeration value indicates whether or not most categories on
    /// 						the specified eBay site support the use of Universal Product Codes
    /// 						(UPCs) to help create a listing in an
    /// 						Add/Revise/Relist/Verify API call. A value of
    /// 						<code>Disabled</code> indicates that UPCs cannot be
    /// 						used for most categories on the specified eBay site, a value of
    /// 						<code>Enabled</code> indicates that UPCs can be used
    /// 						for most categories on the specified eBay site, and a value of
    /// 						<code>Required</code> indicates that a UPC is required
    /// 						for most categories on the specified eBay site.
    /// 					
    /// </remarks>

	public ProductIdentiferEnabledCodeType? UPCEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the maximum fitment count. Sellers can provide up to
    /// 						1000 fitments at the lowest level of granularity.
    /// 					
    /// </remarks>

	public int? MaxGranularFitmentCount { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates the type of vehicle; car, truck, boat, or motorcycle.
    /// 					
    /// </remarks>

	public string CompatibleVehicleType { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies what categories the Shipping profile is applicable to.
    /// 						Only returned when this value (or this category's setting)
    /// 						overrides the value inherited from the category's parent.
    /// 					
    /// </remarks>

	public ProfileCategoryGroupCodeType? ShippingProfileCategoryGroup { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies what categories the Payment profile is applicable to.
    /// 					
    /// </remarks>

	public ProfileCategoryGroupCodeType? PaymentProfileCategoryGroup { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies what categories the Return Policy profile is applicable to.
    /// 					
    /// </remarks>

	public ProfileCategoryGroupCodeType? ReturnPolicyProfileCategoryGroup { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						After EOL Attributes, VIN will no longer be supported as primary attributes,
    /// 						rather consumers should use new tag. This feature helps consumers in identifying
    /// 						if category supports VIN.
    /// 					
    /// </remarks>

	public bool? VINSupported { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						After EOL Attributes, VRM will no longer be supported as primary attributes,
    /// 						rather consumers should use new tag. This feature helps consumers in identifying
    /// 						if category supports VRM.
    /// 					
    /// </remarks>

	public bool? VRMSupported { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						After EOL Attributes, Seller Provided Title will no longer be supported as primary attributes,
    /// 						rather consumers should use new tag. This feature helps consumers in identifying
    /// 						if category supports Seller Provided Title.
    /// 					
    /// </remarks>

	public bool? SellerProvidedTitleSupported { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						After EOL Attributes, Deposit will no longer be supported as primary attributes,
    /// 						rather consumers should use new tags. This feature helps consumers in identifying
    /// 						if category supports Deposit.
    /// 					
    /// </remarks>

	public bool? DepositSupported { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether or not the the specified category is enabled for Global Shipping Program.
    /// 					
    /// </remarks>

	public bool? GlobalShippingEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether most categories on the specified eBay site support the Boat and Motorcycle Parts Compatibility feature. The Boats Parts Compatibility feature allows sellers to list their boats' parts and accessories items with parts compatibility name-value pairs specific to boats, and allows potential buyers to search for these items using parts compatibility search fields.
    /// 					
    /// </remarks>

	public bool? AdditionalCompatibilityEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether most categories on the specified eBay site
    /// 						support the "Click and Collect" feature. With the 'Click and Collect' feature, a buyer can purchase certain items on an eBay site and collect them at a local store. Buyers are notified by eBay once their items are available.
    /// 						<br/><br/>
    /// 						The "Click and Collect" feature is only available to large merchants on the UK and Australia sites. The 'Click and Collect' feature is only available to large merchants on the eBay UK (site ID - 3), eBay Australia (Site ID - 15), and eBay Germany (Site ID - 77) sites.
    /// 						<br>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note:</b> For Click and Collect eligible sellers, the Click and Collect feature can only be enabled at the account level, and then each of the seller's listings within an Click and Collect enabled category will be automatically evaluated for Click and Collect eligibility.
    /// 						</span>
    /// 					
    /// </remarks>

	public bool? PickupDropOffEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field indicates whether or not most categories on the specified eBay site support digital gift cards.
    /// 						<br/><br/>
    /// 						Digital gift cards are currently only supported on the US site. There are some restrictions when it comes to selling gift cards, including the following:
    /// 						
    /// 
    /// 
    /// 						<ul>
    /// 						<li>Each seller can only have one gift card listing at any given time</li>
    /// 						<li>The maximum dollar value of the gift card may not exceed 500.00</li>
    /// 						<li>Prepaid credit cards from American Express, Discover, MasterCard, or Visa are not allowed</li>
    /// 						</ul>
    /// 						For more information on eBay's Gift Card policy, see the <a href="http://pages.ebay.com/help/policies/gift.html">Gift cards policy</a> Help page.
    /// 					
    /// </remarks>

	public bool? DigitalGoodDeliveryEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as <code>true</code> if one or more categories on an eBay site
    /// 						support the use of an eBay Product ID (e.g. ePID) in an Add/Revise/Relist API
    /// 						call to identify which motorcycles and/or scooters are compatible with a motor
    /// 						vehicle part or accessory. ePIDs can only be used to identify motorcycles and
    /// 						scooters on the Germany and UK sites. <br/><br/> For more
    /// 						information on using an ePID to identify a compatible motorcycle or scooter
    /// 						through an Add/Revise/Relist API call on the Germany or UK site, see the
    /// 						documentation for the <a href="
    /// 						https://developer.ebay.com/Devzone/XML/docs/Reference/eBay/AddItem.html#Request
    /// 						.Item.ItemCompatibilityList.Compatibility.NameValueList">Compatibility.Name
    /// 						ValueList</a> container.
    /// 					
    /// </remarks>

	public bool? EpidSupported { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned as <code>true</code> if one or more categories on an eBay site
    /// 						support the use of a K Type vehicle number in an Add/Revise/Relist API call
    /// 						to identify which cars and/or trucks are compatible with a motor vehicle part
    /// 						or accessory. K type vehicle numbers can only be used to identify cars and
    /// 						trucks on the Germany site. <br/><br/> For more information on
    /// 						using a K Type vehicle number to identify a compatible car or truck through an
    /// 						Add/Revise/Relist API call on the Germany site, see the documentation for the
    /// 						<a href="
    /// 						https://developer.ebay.com/Devzone/XML/docs/Reference/eBay/AddItem.html#Request
    /// 						.Item.ItemCompatibilityList.Compatibility.NameValueList">Compatibility.Name
    /// 						ValueList</a> container.
    /// 					
    /// </remarks>

	public bool? KTypeSupported { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is deprecated. No eBay categories require listings based on an eBay catalog product.
    /// 					
    /// </remarks>

	public ProductRequiredEnabledCodeType? ProductRequiredEnabled { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field returns the options a seller has for accepting or not accepting returns from domestic buyers.
    ///             <br><br>
    ///             The values returned in this field are pertinent only if <b>ReturnPolicyEnabled</b> in GetCategoryFeatures is set to <code>true</code> for the associated marketplace and category.
    /// 					
    /// </remarks>

	public DomesticReturnsAcceptedCodeType DomesticReturnsAcceptedValues { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field returns the options a seller has for accepting or not accepting returns from international buyers.
    ///             <br><br>
    ///             The values returned in this field are pertinent only if <b>ReturnPolicyEnabled</b> in GetCategoryFeatures is set to <code>true</code> for the associated marketplace and category.
    /// 					
    /// </remarks>

	public InternationalReturnsAcceptedCodeType InternationalReturnsAcceptedValues { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field returns the options a seller has for specifying the return period for returns from domestic buyers. The return period is the amount of time the buyer has to initiate a return once they have received the item.
    ///             <br><br>
    ///             The values returned in this field are pertinent only if <b>ReturnPolicyEnabled</b> in GetCategoryFeatures is set to <code>true</code> for the associated marketplace and category.
    /// 					
    /// </remarks>

	public DomesticReturnsDurationCodeType DomesticReturnsDurationValues { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field returns the options a seller has for specifying the return period for returns from international buyers. The return period is the amount of time the buyer has to initiate a return once they have received the item.
    ///             <br><br>
    ///             The values returned in this field are pertinent only if <b>ReturnPolicyEnabled</b> in GetCategoryFeatures is set to <code>true</code> for the associated marketplace and category.
    /// 					
    /// </remarks>

	public InternationalReturnsDurationCodeType InternationalReturnsDurationValues { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field returns the options a seller has for specifying who pays the return shipping cost for domestic returns.
    ///             <br><br>
    ///             The values returned in this field are pertinent only if <b>ReturnPolicyEnabled</b> in GetCategoryFeatures is set to <code>true</code> for the associated marketplace and category.
    /// 					
    /// </remarks>

	public DomesticReturnsShipmentPayeeCodeType DomesticReturnsShipmentPayeeValues { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field returns the options a seller has for specifying who pays the return shipping cost for international returns.
    ///             <br><br>
    ///             The values returned in this field are pertinent only if <b>ReturnPolicyEnabled</b> in GetCategoryFeatures is set to <code>true</code> for the associated marketplace and category.
    /// 					
    /// </remarks>

	public InternationalReturnsShipmentPayeeCodeType InternationalReturnsShipmentPayeeValues { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						In US, sellers can offer an item replacement in addition to offering money-back for domestic returns. This field returns the options a seller has for specifying how they will handle domestic returns.
    ///             <br><br>
    ///             The values returned in this field are pertinent only if <b>ReturnPolicyEnabled</b> in GetCategoryFeatures is set to <code>true</code> for the associated marketplace and category.
    /// 					
    /// </remarks>

	public DomesticRefundMethodCodeType DomesticRefundMethodValues { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						In US, sellers can offer an item replacement in addition to offering money-back for international returns. This field returns the options a seller has for specifying how they will handle international returns.
    ///             <br><br>
    ///             The values returned in this field are pertinent only if <b>ReturnPolicyEnabled</b> in GetCategoryFeatures is set to <code>true</code> for the associated marketplace and category.
    /// 					
    /// </remarks>

	public InternationalRefundMethodCodeType InternationalRefundMethodValues { get; set; }
    /// <summary>
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						In some EU countries, sellers are legally required to describe the return policy they offer. This field returns a flag that indicates whether or not the seller can specify their return-policy details in the associated marketplace.
    ///             <br><br>
    ///             The values returned in this field are pertinent only if <b>ReturnPolicyEnabled</b> in GetCategoryFeatures is set to <code>true</code> for the associated marketplace and category.
    /// 					
    /// </remarks>

	public bool? ReturnPolicyDescriptionEnabled { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Details about a specific site.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class SiteDetailsType {

#region 属性
    /// <summary>
    /// Item.Site in AddItemAddItem.html#Request.Item.Site
    /// User.Site in GetUserGetUser.html#Response.User.Site
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Short name that identifies an eBay site. Usually, an eBay site is associated
    /// 						with a particular country or region (e.g., US or Belgium_French). Specialty
    /// 						sites (e.g., eBay Stores) use the same site ID as their associated main eBay
    /// 						site. The US eBay Motors site is an exception to this convention.
    /// 					
    /// </remarks>

	public SiteCodeType? Site { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Numeric identifier for an eBay site. If you are using the
    /// 						SOAP API, you use numeric site IDs in the request URL.
    /// 						If you are using the XML API, you use numeric site IDs in the
    /// 						X-EBAY-API-SITEID header.
    /// 					
    /// </remarks>

	public int? SiteID { get; set; }
    /// <summary>
    /// GeteBayDetailsDetailLevel: none, ReturnSummary, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Returns the latest version number for this field. The version can be
    /// 						used to determine if and when to refresh cached client data.
    /// 					
    /// </remarks>

	public string DetailVersion { get; set; }
    /// <summary>
    /// GeteBayDetailsDetailLevel: none, ReturnSummary, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Gives the time in GMT that the feature flags for the details were last
    /// 						updated. This timestamp can be used to determine if and when to refresh
    /// 						cached client data.
    /// 					
    /// </remarks>

	public System.DateTime? UpdateTime { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
///         Type defining the <b>SiteHostedPictureDetails</b> container that is returned
/// 				in an <b>UploadSiteHostedPictures</b> call.
///       
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class SiteHostedPictureDetailsType {

#region 属性
    /// <summary>
    /// UploadSiteHostedPicturesConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///             The seller-defined name for the picture. This field is only returned if a <b>PictureName</b> value was specified in the request. A name for a picture can make it easier to track than an arbitrary, eBay-assigned URL.
    ///           
    /// </remarks>

	public string PictureName { get; set; }
    /// <summary>
    /// UploadSiteHostedPicturesAlways
    /// </summary>
    /// <remarks>
    /// 
    ///             This enumeration value indicates the size of the generated picture. This value may differ from the one specified in the request (e.g. if a Supersize image cannot be generated).
    ///           
    /// </remarks>

	public PictureSetCodeType? PictureSet { get; set; }
    /// <summary>
    /// UploadSiteHostedPicturesAlways
    /// </summary>
    /// <remarks>
    /// 
    ///             This enumeration value indicates the image format of the generated image, such as JPG, GIF, or PNG.
    ///           
    /// </remarks>

	public PictureFormatCodeType? PictureFormat { get; set; }
    /// <summary>
    /// UploadSiteHostedPicturesAlways
    /// </summary>
    /// <remarks>
    /// 
    ///             This is the full URL for the uploaded picture on the EPS server. This value should be stored by the seller, as this URL will be needed when create, revise, or relist an item and add this image to the listing. This URL will also be needed for unpublished pictures whose expiration date must be extended through an <b>ExtendSiteHostedPictures</b> call.
    ///           
    /// </remarks>

	public string FullURL { get; set; }
    /// <summary>
    /// UploadSiteHostedPicturesAlways
    /// </summary>
    /// <remarks>
    /// 
    ///             This is the truncated version of the full URL.
    ///           
    /// </remarks>

	public string BaseURL { get; set; }
    /// <summary>
    /// UploadSiteHostedPicturesAlways
    /// </summary>
    /// <remarks>
    /// 
    ///             The URL and size information for each generated image.
    ///           
    /// </remarks>
[System.Xml.Serialization.XmlElement("PictureSetMember")]

	public System.Collections.Generic.List<PictureSetMemberType> PictureSetMember { get; set; }
    /// <summary>
    /// 500
    /// 1
    /// UploadSiteHostedPicturesConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///       			The URL of the external Web site hosting the uploaded photo. This field is returned if an <b>ExternalPictureURL</b> is provided in the call request.
    /// 						<br>
    ///       		
    /// </remarks>

	public string ExternalPictureURL { get; set; }
    /// <summary>
    /// UploadSiteHostedPicturesAlways
    /// </summary>
    /// <remarks>
    /// 
    ///       		  This timestamp indicates when the picture must be uploaded with an eBay listing before it is purged from the EPS server.
    ///       		  <br>
    /// 						<br>
    ///       			By default, unpublished pictures (not associated with an active eBay listing) are kept on the EPS server for five days, but a seller can use the <b>ExtensionInDays</b> field in the request to make the expiration date further into the future (a maximum of 30 days). The seller can also use the <b>ExtendSiteHostedPictures</b> to extend the expiration date of the picture.
    ///       		
    /// </remarks>

	public System.DateTime? UseByDate { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is no longer applicable as member communication through Skype has been disabled in API calls.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class SkypeMeNonTransactionalEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is no longer applicable as member communication through Skype has been disabled in API calls.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class SkypeMeTransactionalEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
///  
/// 				Indicates category support for listing of Local Market items by sellers
/// 				subscribed to Local Market for Specialty Vehicles.
/// 				Each of the subscriptions will have following options, which will define
/// 				"National" vs "Local" ad format listing.
/// 				"LocalOptional" : This will allow national and local listing.
/// 				"LocalOnly" : Seller can have Local listings only.
/// 				"NationalOnly" : Seller can not opt into local only exposure. It has to be 
/// 				national listing.				
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class SpecialitySubscriptionDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
///             Type defining the <b>Statements</b> regulatory container used at the listing level to provide statements for the listing.
///          
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class StatementsType {

#region 属性
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    ///                   This field sets the statement code(s) for hazard or product safety statement(s) for the listing. If your product contains hazardous substances or mixtures, please select the values corresponding to the hazard statements that are stated on your product's Safety Data Sheet. The selected hazard information will be displayed on your listing. If your product shows universal product safety or compliance warnings, please select the values corresponding to the product safety statements for display in the product safety section of the listing. A separate Statement field is required for each hazard or product safety statement. The seller specifies the identifier of each statement in this field. 
    /// 				  <span class="tablenote"><strong>Note:</strong>  For hazmat statements, use the <a href="https://developer.ebay.com/api-docs/sell/metadata/resources/marketplace/methods/getHazardousMaterialsLabels">getHazardousMaterialsLabels</a> method in the <a href="https://developer.ebay.com/api-docs/sell/metadata/resources/methods">Metadata API</a> to find supported values for a specific marketplace/site. For sample values, see <a href="https://developer.ebay.com/api-docs/sell/static/metadata/feature-regulatorhazmatcontainer.html#Hazard" target="_blank">Hazard statement sample values</a>.
    ///                   <br>    <br>
    /// 				  For product safety statements, use the <a href = "/api-docs/sell/metadata/resources/marketplace/methods/getProductSafetyLabels" target="_blank">getProductSafetyLabels</a> method in the <a href="https://developer.ebay.com/api-docs/sell/metadata/resources/methods">Metadata API</a> to find supported values for a specific marketplace/site.</span>
    ///                
    /// </remarks>
[System.Xml.Serialization.XmlElement("Statement")]

	public System.Collections.Generic.List<string> Statement { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is used to express details about a customized eBay Store category.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class StoreCustomCategoryType {

#region 属性
    /// <summary>
    /// GetStoreSetStoreCategoriesAlways
    /// SetStoreCategoriesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Unique identifier of an eBay Store's custom category. eBay auto-generates this identifier when a seller establishes a custom store category. This category ID should not be confused with an eBay category ID. 
    /// 						<br>
    /// 						<br>
    /// 						This field is conditionally required for <b>SetStoreCategories</b>, if the <b>Action</b> value is set to <code>Rename</code>, <code>Move</code> or <code>Delete</code>.
    /// 					
    /// </remarks>

	public long? CategoryID { get; set; }
    /// <summary>
    /// GetStoreSetStoreCategoriesAlways
    /// SetStoreCategoriesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The seller-specified name of the custom category.
    /// 						<br>
    /// 						This field is conditionally required for <b>SetStoreCategories</b>, if the <b>Action</b> value is set to <code>Add</code>.
    /// 					
    /// </remarks>

	public string Name { get; set; }
    /// <summary>
    /// GetStoreSetStoreCategoriesAlways
    /// SetStoreCategoriesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						The order in which the custom store category appears in the list of store
    /// 						categories when the eBay store is visited.
    /// 					
    /// </remarks>

	public int? Order { get; set; }
    /// <summary>
    /// 3
    /// GetStoreSetStoreCategoriesAlways
    /// SetStoreCategoriesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container is used if the seller wants to add child categories to a top-level eBay store category. eBay Stores support three category levels.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("ChildCategory")]

	public System.Collections.Generic.List<StoreCustomCategoryType> ChildCategory { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is no longer applicable, as Store Inventory is no longer a supported eBay listing type.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class StoreInventoryEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Store logo.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class StoreLogoType {

#region 属性
    /// <summary>
    /// 12671279NoOpSetStoreConditionally
    /// GetStoreConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The URL of the seller's store logo. 
    /// 					
    /// </remarks>

	public string URL { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				If the field is present, the corresponding feature applies to the category. The
/// 				field is returned as an empty element (i.e., a boolean value is not returned).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class StoreOwnerExtendedListingDurationsDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				If the field is present, the corresponding feature applies to the category. The
/// 				field is returned as an empty element (i.e., a boolean value is not returned).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class StoreOwnerExtendedListingDurationsEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 			This type is used to specify the additional listing durations that are available to sellers who have eBay Store subscriptions. The <b>StoreOwnerExtendedListingDurations</b> container is only returned under the <b>SiteDefaults</b> node if the eBay marketplace supports additional listing durations for eBay Store owners, and this container is only returned under a <b>Category</b> node if this eBay category supports additional listing durations for eBay Store owners (other than the durations that are already supported for the category).
/// 		
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class StoreOwnerExtendedListingDurationsType {

#region 属性
    /// <summary>
    /// ListingDurationCodeType
    /// GetCategoryFeaturesDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					Specifies the additional listing duration(s) (in days) supported by the eBay site and/or category. A <b>Duration</b> field is returned for each additional listing duration that the eBay marketplace or category supports.
    /// 				
    /// </remarks>
[System.Xml.Serialization.XmlElement("Duration")]

	public System.Collections.Generic.List<string> Duration { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 	      This type is used to provide details about a seller's eBay Store.
/// 	    
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class StoreType {

#region 属性
    /// <summary>
    /// 35
    /// GetStoreAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Name of the eBay Store. The name is shown
    /// 						at the top of the Store page.
    /// 					
    /// </remarks>

	public string Name { get; set; }
    /// <summary>
    /// GetStoreConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The URL path of the Store (58 characters maximum). Only if you
    /// 						are using Chinese characters in the Name property do you need to
    /// 						use this field, such as if you are opening a Store on the Taiwan
    /// 						site. The reason for this is that the URL path is normally derived
    /// 						from the Store name, but it cannot be derived from the name of the
    /// 						Store if it contains Chinese characters because URLs cannot
    /// 						contain Chinese characters.
    /// 					
    /// </remarks>

	public string URLPath { get; set; }
    /// <summary>
    /// GetStoreConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The complete URL of the user's Store. This field is only ever
    /// 						returned, and does not need to be explicitly set.
    /// 					
    /// </remarks>

	public string URL { get; set; }
    /// <summary>
    /// 300
    /// GetStoreAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						The seller-provided description of the eBay Store.
    /// 					
    /// </remarks>

	public string Description { get; set; }
    /// <summary>
    /// GetStoreConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container provides information about a Store logo.
    /// 						<br>
    /// 						<br>
    /// 						The <b>GetStore</b> call now only returns the <b>Logo.URL</b> value, but not <b>Logo.LogoID</b> or <b>Logo.Name</b>.
    /// 					
    /// </remarks>

	public StoreLogoType Logo { get; set; }
    /// <summary>
    /// GetStoreAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Container consisting of an array of one or more <b>CustomCategory</b>
    /// 						containers. Each <b>CustomCategory</b> container consists of details
    /// 						related to an eBay Store custom category.
    /// 						<br>
    /// 						<br>
    /// 						To modify an eBay Store's custom categories, an eBay Store owner would use the
    /// 						<b>StoreCategories</b> container in the request of a
    /// 						<b>SetStoreCategories</b> call.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("CustomCategory", IsNullable = false)]

	public System.Collections.Generic.List<StoreCustomCategoryType> CustomCategories { get; set; }
    /// <remarks>
    /// 
    /// 						This field is deprecated.
    /// 					
    /// </remarks>

	public MerchDisplayCodeType? MerchDisplay { get; set; }
    /// <summary>
    /// GetStoreConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates the time the store was last opened or reopened.
    /// 					
    /// </remarks>

	public System.DateTime? LastOpenedTime { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type defines the <b>Storefront</b> container, which can be used by eBay Stores sellers to list an item under two primary custom categories either by category ID or category name. A custom category is a category that was created by a seller in their eBay store. This container is used by Add/Revise/Relist calls.
/// 				<br/><br/>
/// 				The <b>Storefront</b> container is also returned in <b>GetItem</b> and other Trading calls that retrieve Item data.
/// 				<br/><br/>
/// 				<span class="tablenote"><b>Note: </b>
/// 				This type is applicable only for eBay Store sellers.
/// 				</span>
///  			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class StorefrontType {

#region 属性
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemNo
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Coarse, Medium, FineConditionally
    /// GetBidderListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Unique identifier of a primary custom category in which to list the item. A custom category is a category that the seller created in their eBay Store. eBay Store sellers can create up to three levels of custom categories for their stores, but the API only supports root-level categories.
    /// 						<br> <br>
    /// 						To list an item using the categories in a seller's store, you must set this field to a root-level custom category or a custom category that has no child categories (subcategories). If you attempt to list an item in a category that has subcategories, the call response contains a warning, and the item is listed in the 'Other' store category.
    /// 					
    /// </remarks>

	public long? StoreCategoryID { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemNo
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Coarse, Medium, FineConditionally
    /// GetBidderListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Unique identifier for the secondary custom category in which to list the item. Set this field to a root-level custom category or a custom category that has no child categories (subcategories).
    /// 						<br> <br>
    /// 						The system resets the value to 0 (None) in the following cases:
    /// 						<br> - The values of <b>StoreCategoryID</b> and <b>StoreCategory2ID</b> field are the same
    /// 						<br> - You specify <b>StoreCategory2ID</b> but not <b>StoreCategoryID</b>
    /// 						<br> <br>
    /// 						<br>In other words, <b>StoreCategoryID</b> must be set to a valid custom category and be different from <b>StoreCategory2ID</b>.
    /// 					
    /// </remarks>

	public long? StoreCategory2ID { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						Category name of a primary custom category in which to list the item. A custom category is a category that the seller created in their eBay Store. eBay Store sellers can create up to three levels of custom categories for their stores, but the API only supports root-level categories.
    /// 						<br> <br>
    /// 						To list an item using a category name from a seller's store, you must set this field to a root-level custom category or a custom category that has no child categories (subcategories). If you attempt to list an item in a category that has subcategories, the call response contains a warning, and the item is listed in the store category called 'Other'.
    /// 					
    /// </remarks>

	public string StoreCategoryName { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						Name of the secondary custom category in which to list the item. Set this field to a root-level custom category or a custom category that has no child categories (subcategories).
    /// 						<br> <br>
    /// 						The system resets the value to 0 (None) in the following cases:
    /// 						<br> - The values of <b>StoreCategoryName</b> and <b>StoreCategory2Name</b> field are the same
    /// 						<br> - You specify <b>StoreCategory2Name</b> but not <b>StoreCategoryName</b>
    /// 						<br> <br>
    /// 						<br>In other words <b>StoreCategoryName</b> must be set to a valid custom category name and be different from <b>StoreCategory2Name</b>.
    /// 					
    /// </remarks>

	public string StoreCategory2Name { get; set; }
    /// <summary>
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: Coarse, Medium, FineConditionally
    /// GetBidderListConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The URL of the seller's eBay Stores page.
    /// 					
    /// </remarks>

	public string StoreURL { get; set; }
    /// <summary>
    /// 200
    /// </summary>
    /// <remarks>
    /// 
    /// 						The name of the seller's eBay Store.
    /// 					
    /// </remarks>

	public string StoreName { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is used by the <b>SuggestedBidValues</b> container that is returned if the buyer is attempting to bid on an auction item through the <b>PlaceOffer</b> call.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class SuggestedBidValueType {

#region 属性
    /// <summary>
    /// PlaceOfferConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The <b>SuggestedBidValues</b> container is only returned if the buyer is attempting to bid on an auction item. A <b>BidValue</b> field is returned for each incremental bid value (up to the dollar value specified in the <b>Offer.MaxBid</b> field in the request) that eBay will bid on behalf of the buyer each time that buyer is outbid for the auction item. How many <b>BidValue</b> fields that appear will depend on the current winning bid amount, the required bid increment, and the buyer's specified max bid amount.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("BidValue")]

	public System.Collections.Generic.List<AmountType> BidValue { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 			  Type defining the <b>SupportedSellerProfile</b> container, which contains
/// 				summary information related to specific Business Policies payment, return policy, and shipping 
/// 				profiles. The profile type is found in the <b>ProfileType</b> field.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class SupportedSellerProfileType {

#region 属性
    /// <summary>
    /// GetUserPreferencesConditionally
    /// SetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 					  Unique identifier of a Business Policies profile. This identifier is auto-generated by eBay when the seller creates the profile. This field is always 
    /// 						returned with the <b>SupportedSellerProfile</b> container.
    ///   				
    /// </remarks>

	public long? ProfileID { get; set; }
    /// <summary>
    /// GetUserPreferencesConditionally
    /// SetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 					  Indicates the type of the Business Policies profile. Valid values are PAYMENT,
    /// 						RETURN_POLICY, and SHIPPING. This field is always returned with the 
    /// 						<b>SupportedSellerProfile</b> container.
    /// 					
    /// </remarks>

	public string ProfileType { get; set; }
    /// <summary>
    /// GetUserPreferencesConditionally
    /// SetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 					 The seller-defined name for a Business Policies profile. This field is always
    /// 					 returned with the <b>SupportedSellerProfile</b> container.
    /// 					
    /// </remarks>

	public string ProfileName { get; set; }
    /// <summary>
    /// GetUserPreferencesConditionally
    /// SetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 					  Seller-provided description of a Business Policies profile. This field is only
    /// 						returned if a seller has provided a description for the profile.
    /// 					
    /// </remarks>

	public string ShortSummary { get; set; }
    /// <summary>
    /// GetUserPreferencesConditionally
    /// SetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 					 Identifies the the Business Policies category group associated with the Business
    /// 					 Policies profile. Current values are ALL (referring to all non-motor vehicle
    /// 					 categories) and MOTORS_VEHICLE (for motor vehicle listings).
    /// 					
    /// </remarks>

	public CategoryGroupType CategoryGroup { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
///  
/// 				Defines the Transaction Confirmation Request feature. If the field is present, the corresponding feature applies to the category. The field is returned as an empty element (i.e., a boolean value is not returned).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class TCREnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type used by the <b>TaxDetails</b> container, which consists of detailed tax information for an order line item, including the tax type and description, tax on the item cost, and tax related to shipping and handling. The information in this container supercedes/overrides the sales tax information in the <b>ShippingDetails.SalesTax</b> container (if returned).
/// 				<br><br>
/// 				A separate <b>TaxDetails</b> container will be returned for each type of tax that applied to an order line item. For tax that is subject to 'eBay collect and remit', such as US sales tax or 'Goods and Services tax' for Australia or New Zealand, the <b>TaxDetails</b> container will be returned under the <b>eBayCollectAndRemitTaxes</b> container. For all other tax, the tax details will be returned under the <b>Taxes</b> container.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class TaxDetailsType {

#region 属性
    /// <summary>
    /// GetItemTransactionsGetOrdersGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field indicates the tax type. A separate <b>TaxDetails</b> container is returned for each unique imposition (tax type).
    /// 					
    /// </remarks>

	public TaxTypeCodeType? Imposition { get; set; }
    /// <summary>
    /// GetItemTransactionsGetOrdersGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This enumeration value indicates the type of tax charged against the item.
    /// 					
    /// </remarks>

	public TaxDescriptionCodeType? TaxDescription { get; set; }
    /// <summary>
    /// GetItemTransactionsGetOrdersGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This value is the total amount of tax charges for the order line item for the
    /// 						corresponding tax type (see <b>Imposition</b> value).
    /// 						<br><br>
    /// 						<b>TaxAmount</b> = <b>TaxOnSubtotalAmount</b> + <b>TaxOnShippingAmount</b> + <b>TaxOnHandlingAmount</b>
    /// 					
    /// </remarks>

	public AmountType TaxAmount { get; set; }
    /// <summary>
    /// GetItemTransactionsGetOrdersGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This value is the amount of sales tax applied based on the unit cost of the
    /// 						order line item for the corresponding impositiion (tax type).
    /// 					
    /// </remarks>

	public AmountType TaxOnSubtotalAmount { get; set; }
    /// <summary>
    /// GetItemTransactionsGetOrdersGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This value is the amount of sales tax applied based on shipping costs for the
    /// 						order line item for the corresponding impositiion (tax type).
    /// 					
    /// </remarks>

	public AmountType TaxOnShippingAmount { get; set; }
    /// <summary>
    /// GetItemTransactionsGetOrdersGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This value is the amount of sales tax applied based on handling costs for the
    /// 						order line item for the corresponding impositiion (tax type).
    /// 					
    /// </remarks>

	public AmountType TaxOnHandlingAmount { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This value is the actual tax ID for the buyer. This field will generally only be returned if a seller on the Italy or Spain sites required that the buyer supply a tax ID during the checkout process. If the <b>Order.BuyerTaxIdentifier</b> container is returned, the type of tax ID can be found in the <b>BuyerTaxIdentifier.Type</b> field.
    /// 					
    /// </remarks>

	public string TaxCode { get; set; }
    /// <summary>
    /// NETGetItemTransactionsGetOrdersOrderReportGetSellerTransactionsDetailLevel: none, ReturnAllConditionallyeBayCollectAndRemitTaxes.TaxDetails
    /// NETOrderReportConditionallyeBayCollectAndRemitTaxes.TaxDetails
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field indicates the collection method used to collect the 'eBay Collect and Remit' or 'Good and Services' tax for the order. This field is always returned for orders subject to 'Collect and Remit' or 'Good and Services' tax, and its value is always <code>NET</code>.
    /// 						<br>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> Although the <b>CollectionMethod</b> field is returned for all orders subject to 'Collect and Remit' sales tax or 'Good and Services' tax, the <b>CollectionMethod</b> field and <b>CollectionMethodCodeType</b> are not currently of any practical use, although this field may have use in the future. If and when the logic of this field is changed, this note will be updated and a note will also be added to the Release Notes.
    /// 						</span>
    /// 					
    /// </remarks>

	public CollectionMethodCodeType? CollectionMethod { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is used to display the value of the <b>name</b> attribute of the <b>BuyerTaxIdentifier.Attribute</b> field.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class TaxIdentifierAttributeType {

#region 属性
[System.Xml.Serialization.XmlText(DataType="string")]

	public string Value { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 							The only supported value for this attribute is 'IssuingCountry', but in the future, other attributes related to the tax ID may be supported.
    /// 						
    /// </remarks>
[System.Xml.Serialization.XmlAttribute]

	public TaxIdentifierAttributeCodeType name { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type defines the <b>BuyerTaxIdentifier</b> container that is returned in order management calls. This container will either consist of VAT or Codice Fiscale taxpayer identification information for the buyer.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class TaxIdentifierType {

#region 属性
    /// <summary>
    /// Date, Decimal, EAN, ISBN, Text, UPCGetOrdersDetailLevel: none, ReturnAllConditionally
    /// Date, Decimal, EAN, ISBN, Text, UPCOrderReportConditionally
    /// Date, Decimal, EAN, ISBN, Text, UPCGetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						<br>
    /// 						This enumeration value identifies the type of tax ID that was supplied by the buyer during the checkout process.
    /// 					
    /// </remarks>

	public ValueTypeCodeType? Type { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel:none,ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel:none,ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						<br>
    /// 						This value is the actual tax ID for the buyer. The type of tax ID is shown in the <b>Type</b> field.
    /// 					
    /// </remarks>

	public string ID { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								<br>
    /// 								This field shows an attribute, and its corresponding value for the buyer's tax identification card. Currently, this field is only used to indicate which country issued the buyer's tax ID, but in the future, other attributes related to the tax ID may be returned in this field. This field's value will be an <a href="http://en.wikipedia.org/wiki/ISO_3166-1" target="_blank">ISO 3166-1 two-digit code</a> that represents the issuing country.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("Attribute")]

	public System.Collections.Generic.List<TaxIdentifierAttributeType> Attribute { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is used to show sales tax-related details for a tax jurisdiction. The concept of 'sales tax' is only applicable to eBay US and Canada (English and French) sites.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class TaxJurisdictionType {

#region 属性
    /// <summary>
    /// SetTaxTableYes
    /// GetBidderListGeteBayDetailsConditionally
    /// GetTaxTableGetSellerListDetailLevel: none, ReturnAllConditionally
    /// GetItemDetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAllConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This is the unique, two-digit identifier of the tax jurisdiction (such as 'CA' for California). To retrieve all <b>JurisdictionID</b> values for a site, a seller can either use a <b>GetTaxTable</b> call with <b>DetailLevel</b> set to <code>ReturnAll</code>, or they can use the <b>GeteBayDetails</b> call with <b>DetailLevel</b> name set to <code>TaxJurisdiction</code>.
    /// 						<br/><br/>
    /// 						The <b>JurisdictionID</b> field is always required in a <b>SetTaxTable</b> call, and always returned with each <b>TaxJurisdiction</b> container to identify the tax jurisdiction.
    /// 					
    /// </remarks>

	public string JurisdictionID { get; set; }
    /// <summary>
    /// SetTaxTableYes
    /// GetBidderListConditionally
    /// GetSellerListGetTaxTableDetailLevel: none, ReturnAllConditionally
    /// GetItemDetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAllConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This float value is the sales tax percentage rate applicable to the corresponding tax jurisdiction. Sellers are responsible for providing accurate sales tax rates for each jurisdiction. This sales tax rate comes into play when a buyer from that tax jurisdiction makes a purchase from the seller. The value passed in is stored with a precision of 3 digits after the decimal point (##.###).
    /// 						<br><br>
    /// 						This field is only returned in <b>GetTaxTable</b> (and other 'Get' calls) if a sales tax percentage rate has been set.
    /// 						<br><br>
    /// 						<span class="tablenote"><b>Note: </b> Buyers in all 50 US states and DC are automatically charged sales tax for eBay purchases, and eBay collects and remits this sales tax to the proper taxing authority on the buyer's behalf. Because of this, if a sales tax percentage rate is applied to a listing by a seller in one of these states, this field will be ignored during the checkout process.
    /// 						<br><br>
    /// 						Currently, sales tax percentage rates can only be specified by sellers in Canada and 5 US territories, including American Samoa (AS), Guam (GU), Northern Mariana Islands (MP), Palau (PW), and Virgin Islands (VI).
    /// 						</span>
    /// 					
    /// </remarks>

	public float? SalesTaxPercent { get; set; }
    /// <summary>
    /// GetBidderListConditionally
    /// GetSellerListGetTaxTableDetailLevel: none, ReturnAllConditionally
    /// GetItemDetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAllConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// FalseSetTaxTableYes
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is included in a <b>SetTaxTable</b> call and set to <code>true</code> if the seller wants sales tax for the jurisdiction to apply to the cumulative amount of item cost and shipping charges. This value defaults to <code>false</code> if not specified.
    /// 						<br><br>
    /// 						This field is always returned with each <b>TaxJurisdiction</b> container (whether <code>true</code> or <code>false</code>).
    /// 						<br><br>
    /// 						<span class="tablenote"><b>Note: </b> Buyers in all 50 US states and DC are automatically charged sales tax for eBay purchases, and eBay collects and remits this sales tax to the proper taxing authority on the buyer's behalf. Because of this, if a sales tax percentage rate is applied to a listing by a seller in one of these states, this field will be ignored during the checkout process.
    /// 						<br><br>
    /// 						Currently, sales tax percentage rates can only be specified by sellers in Canada and 5 US territories, including American Samoa (AS), Guam (GU), Northern Mariana Islands (MP), Palau (PW), and Virgin Islands (VI).
    /// 						</span>
    /// 					
    /// </remarks>

	public bool? ShippingIncludedInTax { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Full name for the jurisdiction or region for display purposes.
    /// 					
    /// </remarks>

	public string JurisdictionName { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Returns the latest version number for this feature. Use the version to determine
    /// 						if and when to refresh your cached client data.
    /// 					
    /// </remarks>

	public string DetailVersion { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The time in GMT when the details for this feature were last updated. Use this
    /// 						timestamp to determine if and when to refresh your cached client data.
    /// 					
    /// </remarks>

	public System.DateTime? UpdateTime { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>Taxes</b> container, which contains detailed tax information (sales tax and VAT) for an order line item. The information in this container supercedes/overrides the sales tax information in the <b>ShippingDetails.SalesTax</b> container.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class TaxesType {

#region 属性
    /// <summary>
    /// GetItemTransactionsGetOrdersGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The value returned in this field is the VAT ID for eBay, and this value may vary based on the region or country. The <b>eBayReference</b> field's <b>name</b> attribute will show the type of VAT ID, such as <code>IOSS</code>, <code>OSS</code>, or <code>ABN</code>. This field will be returned if VAT tax is applicable for the order.  See the <a href="types/eBayTaxReferenceValue.html">eBayTaxReferenceValue</a> type page for more information on the VAT tax type strings that may appear for the <b>name</b> attribute.
    /// 						<br>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> For all VAT ID/VATIN values to be returned (except for France), developers will need to use a Trading WSDL with a version number of 1211 (or newer). For French VAT ID/VATIN values to be returned, developers will need to use a Trading WSDL with a version number of 1225 (or newer). Otherwise, the VAT information will be returned in the <b>Order.ShippingAddress.Street2</b> field. Developers will also have the option of using older version, but setting the <b>X-EBAY-API-COMPATIBILITY-LEVEL</b> header value to 1211 or 1225 or higher.
    /// 						</span>
    /// 						<br>
    /// 					
    /// </remarks>

	public eBayTaxReferenceValue eBayReference { get; set; }
    /// <summary>
    /// GetItemTransactionsGetOrdersGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This value indicates the total tax amount for the order line item, for all tax types, which may include sales tax (seller-applied or 'eBay Collect and Remit'), 'Goods and Services' tax (for Australian or New Zealand sellers), or other fees like an electronic waste recycling fee.
    /// 					
    /// </remarks>

	public AmountType TotalTaxAmount { get; set; }
    /// <summary>
    /// GetItemTransactionsGetOrdersGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					 Container consisting of detailed sales tax information for an order line item, including the tax type and description, sales tax on the item cost, and sales tax related to shipping and handling.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("TaxDetails")]

	public System.Collections.Generic.List<TaxDetailsType> TaxDetails { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Data for one theme group. Returned for <b>GetDescriptionTemplates</b>
/// 				if theme groups are requested.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ThemeGroupType {

#region 属性
    /// <summary>
    /// GetDescriptionTemplatesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Unique identifier for this theme group.
    /// 					
    /// </remarks>

	public int? GroupID { get; set; }
    /// <summary>
    /// GetDescriptionTemplatesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Name of this theme group (localized to the language associated
    /// 						with the eBay site).
    /// 					
    /// </remarks>

	public string GroupName { get; set; }
    /// <summary>
    /// GetDescriptionTemplatesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Unique identifier for each theme in this group. There
    /// 						is at least one theme in a theme group.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("ThemeID")]

	public System.Collections.Generic.List<int> ThemeID { get; set; }
    /// <summary>
    /// GetDescriptionTemplatesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The number of <b>ThemeID</b> elements in this group.
    /// 					
    /// </remarks>

	public int? ThemeTotal { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Time zone details about a region or location to which the seller is willing to
/// 				ship.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class TimeZoneDetailsType {

#region 属性
    /// <summary>
    /// Time valueshttps://developer.ebay.com/api-docs/user-guides/static/make-a-call/tapi-data-types.html#time
    /// Olson ID Comparisonhttp://en.wikipedia.org/wiki/Tz_database
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						A unique identifier for a given time zone. This ID does not change for a
    /// 						given time zone, even if the time zone supports both standard and daylight
    /// 						saving time variants. Valid values for TimeZoneID correspond to OLSON IDs.
    /// 						These IDs provide not only the information as to the offset from GMT (UTC),
    /// 						but also daylight saving time information. Thus, for example, America/Phoenix
    /// 						is distinct from America/Denver because they have different daylight saving
    /// 						time behavior. This value is not localized.
    /// 					
    /// </remarks>

	public string TimeZoneID { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Display name of a time zone in its standard (non-daylight saving) time
    /// 						representation. This value is localized and returned in the language for the
    /// 						site specified in the request (i.e., the numeric site ID that you specify in
    /// 						the request URL for the SOAP API or the X-EBAY-API-SITEID header for the XML
    /// 						API).
    /// 					
    /// </remarks>

	public string StandardLabel { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The offset in hours from GMT for a time zone when it is not adjusted for
    /// 						daylight saving time.
    /// 					
    /// </remarks>

	public string StandardOffset { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Display name of a time zone in its daylight saving time representation.
    /// 						This element is emitted for time zones that support daylight saving time
    /// 						only. The value is localized and returned in the language for the site
    /// 						specified in the request.
    /// 					
    /// </remarks>

	public string DaylightSavingsLabel { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The offset in hours from GMT for a time zone when it is on daylight saving
    /// 						time. This element is emitted for time zones that support daylight
    /// 						saving time only.
    /// 					
    /// </remarks>

	public string DaylightSavingsOffset { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether or not the time zone is currently on daylight saving time.
    /// 						A value of true indicates that the time zone is on daylights savings time.
    /// 						This element is emitted for time zones that support daylight saving time only.
    /// 					
    /// </remarks>

	public bool? DaylightSavingsInEffect { get; set; }
    /// <summary>
    /// GeteBayDetailsDetailLevel: none, ReturnSummary, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Returns the latest version number for this field. The version can be
    /// 						used to determine if and when to refresh cached client data.
    /// 					
    /// </remarks>

	public string DetailVersion { get; set; }
    /// <summary>
    /// GeteBayDetailsDetailLevel: none, ReturnSummary, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Gives the time in GMT that the feature flags for the details were last
    /// 						updated. This timestamp can be used to determine if and when to refresh
    /// 						cached client data.
    /// 					
    /// </remarks>

	public System.DateTime? UpdateTime { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Returns token status.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class TokenStatusType {

#region 属性
    /// <summary>
    /// GetTokenStatusAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Current token status.
    /// 					
    /// </remarks>

	public TokenStatusCodeType? Status { get; set; }
    /// <summary>
    /// GetTokenStatusAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Identifies the user to whom the token belongs.
    /// 					
    /// </remarks>

	public string EIASToken { get; set; }
    /// <summary>
    /// GetTokenStatusAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Original expiration time for the token.
    /// 					
    /// </remarks>

	public System.DateTime? ExpirationTime { get; set; }
    /// <summary>
    /// GetTokenStatusAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Token revocation time, if the token has been revoked.
    /// 					
    /// </remarks>

	public System.DateTime? RevocationTime { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 			Container for Top-Rated Seller program information.
/// 		
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class TopRatedSellerDetailsType {

#region 属性
    /// <summary>
    /// q
    /// 					
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionallyComingSoon
    /// </summary>
    /// <remarks>
    /// 
    /// 					A <b>TopRatedProgram</b> field is returned for each Top-Rated Seller program that the eBay user qualifies for.
    /// 				
    /// </remarks>
[System.Xml.Serialization.XmlElement("TopRatedProgram")]

	public System.Collections.Generic.List<TopRatedProgramCodeType> TopRatedProgram { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is used by the <b>Program</b> container, which provides details on whether the order line item has passed or failed the authenticity inspection.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class TransactionProgramType {

#region 属性
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container gives status on whether the order line item has passed or failed the authenticity inspection.
    /// 					
    /// </remarks>

	public AuthenticityVerificationType AuthenticityVerification { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container provides details about an order line item being handled by eBay fulfillment. It is only returned for paid orders being fulfilled by eBay or an eBay fulfillment partner.
    /// 					
    /// </remarks>

	public FulfillmentType Fulfillment { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <strong>ReferenceID</strong> element, which is used to display the unique identifier of a payment (and payment type through the <strong>type</strong> attribute.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class TransactionReferenceType {

#region 属性
[System.Xml.Serialization.XmlText(DataType="string")]

	public string Value { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This attribute indicates the type of payment.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlAttribute]

	public TransactionReferenceCodeType type { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Contains the order status, e.g. the buyer's online payment and whether the checkout process for the order is complete.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class TransactionStatusType {

#region 属性
    /// <summary>
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates the status of the buyer's payment for an order. If the payment was successfuly processed, a value of <code>NoPaymentFailure</code> will be returned.
    /// 					
    /// </remarks>

	public PaymentStatusCodeType? eBayPaymentStatus { get; set; }
    /// <summary>
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates the current status of the checkout flow for the order. If the payment was successfuly processed, a value of <code>CheckoutComplete</code> will be returned.
    /// 					
    /// </remarks>

	public CheckoutStatusCodeType? CheckoutStatus { get; set; }
    /// <summary>
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates date and time an order's status was last updated (in GMT).
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b>
    /// 							Please note that for a multiple line item order, if any part of the order was modified, all line items of that order may be returned in the response, and each line item of that order should have the same timestamp value in this field.
    /// 						</span>
    /// 					
    /// </remarks>

	public System.DateTime? LastTimeModified { get; set; }
    /// <summary>
    /// OrderReportAlways
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The payment method that the buyer selected to pay for the order. 
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b>
    /// 							Sellers no longer have to specify any electronic payment methods at listing time, but this field is still returned. The value returned in this field will generally be <code>CreditCard</code>, unless an eBay gift card was used by the buyer to pay a partial or full balance of the order. If this is the case, the value returned in this field will be <code>CCAccepted</code>. Either of these two values will be returned, but neither accurately reflects the actual payment method that the buyer used. If the order was paid for off of eBay's platform using an 'offline' payment method such as 'CashOnPickup' or 'MOCC' (money order or cashier's check), and the seller marked the order as paid, either of those values may get returned here.
    /// 						</span>
    /// 					
    /// </remarks>

	public BuyerPaymentMethodCodeType? PaymentMethodUsed { get; set; }
    /// <summary>
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether checkout is complete, incomplete, or pending for an order.
    /// 					
    /// </remarks>

	public CompleteStatusCodeType? CompleteStatus { get; set; }
    /// <summary>
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether the buyer has selected shipping details during checkout. False indicates that the shipping service was selected by eBay for the buyer. For example, if the buyer has not yet completed the Review Your Purchase page, he has not picked a shipping service. If it is false, the application should ignore <strong>ShippingServiceCost</strong> and <strong>ShippingServiceSelected</strong> (items whose values are defaulted by eBay).
    /// 					
    /// </remarks>

	public bool? BuyerSelectedShipping { get; set; }
    /// <summary>
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllAlways
    /// GetOrdersDetailLevel: none, ReturnAllAlways
    /// OrderReportAlways
    /// GetMyeBayBuyingWonListDeletedFromWonListDetailLevel: none, ReturnAllAlways
    /// GetMyeBaySellingSoldListDetailLevel: none, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field indicates the type and/or status of a payment hold on the item. If there is no hold against the item, this field is returned with a value of <code>NotApplicable</code>.
    /// 						<br> 
    /// 						<span class="tablenote"><b>Note:</b>
    /// 							For the <strong>GetItemTransactions</strong> and <strong>GetOrders</strong>, calls, this field is only returned to the seller of the order; this field is not returned for the buyer or third party.
    /// 						</span>
    /// 					
    /// </remarks>

	public PaymentHoldStatusCodeType? PaymentHoldStatus { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllAlways
    /// OrderReportAlways
    /// GetItemTransactionsDetailLevel: none, ReturnAllAlways
    /// GetSellerTransactionsDetailLevel: none, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field gives the status of a buyer's Item Not Received (INR) Inquiry if the buyer has created an INR Inquiry through the site or through the Post-Order API. If there is no INR inquiry or return request filed against the order, this field is returned with a value of <code>NotApplicable</code>. 
    /// 					
    /// </remarks>

	public InquiryStatusCodeType? InquiryStatus { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllAlways
    /// OrderReportAlways
    /// GetItemTransactionsDetailLevel: none, ReturnAllAlways
    /// GetSellerTransactionsDetailLevel: none, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field gives the status of a buyer's return request if the buyer has initiated a return request or has escalated an existing return request into a return case. If there is no return request filed against the order or no escalation, this field is returned with a value of <code>NotApplicable</code>.
    /// 					
    /// </remarks>

	public ReturnStatusCodeType? ReturnStatus { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsDetailLevel: none, ReturnAllConditionally
    /// GetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The enumeration value in this field indicates which payment method was used by the German buyer who was offered the 'Pay Upon Invoice' option. This field will only be returned if a German buyer was offered the 'Pay Upon Invoice' option. Otherwise, the buyer's selected payment method is returned in the <b>PaymentMethodUsed</b> field by the <b>GetItemTransactions</b> call.
    /// 					
    /// </remarks>

	public BuyerPaymentInstrumentCodeType? PaymentInstrument { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsDetailLevel: none, ReturnAllConditionally
    /// GetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This enumeration value indicates the current state of a purchased digital gift card. The normal flow is for the buyer (or other recipient of the gift card) to download the gift card from the delivered email after purchase, and then to activate the card for use. This field is only applicable and returned for digital gift card order line items.
    /// 					
    /// </remarks>

	public DigitalStatusCodeType? DigitalStatus { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The current status for the order cancellation request if it exists. This field is only returned if a cancellation request has been made on an order, or if the order is currently going through the cancellation process, or if the order has already been cancelled.
    /// 					
    /// </remarks>

	public CancelStatusCodeType? CancelStatus { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Contains information about a sales transaction from an eBay listing. This identifier is automatically created by the eBay system once a buyer has committed to make a purchase in an
/// 				auction or fixed-price listing. A fixed-priced listing (single or multiple-variation) with multiple quantity can spawn one or more sales transactions.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class TransactionType {

#region 属性
    /// <summary>
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The total amount the buyer paid for the order line item. This
    /// 						amount includes all costs such as item cost, shipping/handling charges, and sales tax that is applied to the order by the seller. If the
    /// 						seller allowed the buyer to change the total for an order, the buyer is
    /// 						able to change the total up until the time when Checkout status is
    /// 						Complete. Determine whether the buyer changed the amount by retrieving the
    /// 						order line item data and comparing the <b>AmountPaid</b> value to
    /// 						what the seller expected. If multiple order line items
    /// 						between the same buyer and seller have been combined into a 'Combined
    /// 						Invoice' order, the <b>AmountPaid</b> value returned for each line item in the order reflects the total amount paid for the entire order,
    /// 						and not for the individual order line item. In a <b>GetItemTransactions</b> or <b>GetSellerTransactions</b> call, you can determine which
    /// 						order line items belong to the same 'Combined Invoice' order by checking
    /// 						to see if the <b>ContainingOrder.OrderID</b> value is the same.
    /// 					
    /// </remarks>

	public AmountType AmountPaid { get; set; }
    /// <summary>
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						 This value indicates the dollar amount by which the buyer has adjusted the the total cost of the sales transaction. Adjustments to sales transaction costs may include shipping and handling, buyer discounts, or added services. A positive amount indicates the amount is an extra charge being paid to the seller by the buyer. A negative value indicates this amount is a credit given to the buyer by the seller.
    /// 						 <br><br>
    /// 						 This field is always returned, even if there was no cost adjustment to the sales transaction. Its value will just be '0.0' if there was no cost adjustment.
    /// 					
    /// </remarks>

	public AmountType AdjustmentAmount { get; set; }
    /// <summary>
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field shows the converted value of <b>AdjustmentAmount</b> in the currency of the site that returned the response. Refresh this value every 24 hours to pick up the current conversion rates.
    /// 						<br><br>
    /// 						 This field is always returned, even if there was no cost adjustment to the sales transaction. Its value will just be '0.0' if there was no cost adjustment. This value should be the same as the value in <b>AdjustmentAmount</b> if the eBay listing site and the site that returned the response are the same, or use the same currency.
    /// 					
    /// </remarks>

	public AmountType ConvertedAdjustmentAmount { get; set; }
    /// <summary>
    /// GetItemsAwaitingFeedbackConditionally
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetMyeBaySellingSoldListDetailLevel: none, ReturnAllConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Container consisting of user and shipping details for the order's buyer. To be returned by <b>GetItemsAwaitingFeedback</b> the seller
    /// 						must be the one making the request.
    /// 						<br><br>
    /// 						<b>For GetOrders and GetItemTransactions only:</b> If using Trading WSDL Version 1019 or above, this container will only be returned to the buyer or seller, and no longer returned at all to third parties. If using a Trading WSDL older than Version 1019, real data is only returned to the buyer or seller, and dummy/masked data will be returned to all third parties.
    /// 					
    /// </remarks>

	public UserType Buyer { get; set; }
    /// <summary>
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Container consisting of shipping-related details for a sales transaction. Shipping details may include shipping rates, package dimensions, handling costs, excluded shipping locations (if specified), shipping service options, sales tax information (if applicable), and shipment tracking details (if shipped).
    /// 						<br><br>
    /// 							<span class="tablenote"><b>Note: </b> For <b>GetOrders</b>, a <b>ShippingDetails</b> container is returned at the order at line item level.
    /// 						</span>
    /// 					
    /// </remarks>

	public ShippingDetailsType ShippingDetails { get; set; }
    /// <summary>
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field shows the converted value of <b>AmountPaid</b> in the currency of the site that returned the response. Refresh this value every 24 hours to pick up the current conversion rates.
    /// 						<br><br>
    /// 						This field is always returned for paid orders. This value should be the same as the value in <b>AmountPaid</b> if the eBay listing site and the site that returned the response are the same, or use the same currency.
    /// 					
    /// </remarks>

	public AmountType ConvertedAmountPaid { get; set; }
    /// <summary>
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// GetMyeBaySellingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field shows the converted value of <b>TransactionPrice</b> in the currency of the site that returned the response. Refresh this value every 24 hours to pick up the current conversion rates.
    /// 						<br><br>
    /// 						This field is always returned for sales transactions. This value should be the same as the value in <b>TransactionPrice</b> if the eBay listing site and the site that returned the response are the same, or use the same currency.
    /// 					
    /// </remarks>

	public AmountType ConvertedTransactionPrice { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllAlways
    /// OrderReportAlways
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// GetMyeBayBuyingWonListDeletedFromWonListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingSoldListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This timestamp indicates date/time when the sales transaction occurred. A sales transaction is created when there is a commitment to buy, or when the buyer purchases the item through a 'Buy it Now' option. For auction listings, a sales transaction is created when that listing ends with a high bidder whose bid meets or exceeds the Reserve Price (if set). For a fixed-price listing or a 'Buy It Now' auction listing, a sales transaction is created once the buyer clicks the Buy button.
    /// 					
    /// </remarks>

	public System.DateTime? CreatedDate { get; set; }
    /// <summary>
    /// eBay motors offline payment methodshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/ebay-motors-payments.html#deposit
    /// GetItemTransactionsGetSellerTransactionsNone, OtherMethodDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This value indicates whether or not the seller requires a deposit for the purchase of a motor vehicle. This field is only applicable to motor vehicle listings that require an initial deposit. A value of 'OtherMethod' will be returned if the motor vehicle listing requires an initial deposit, or a value of 'None' if an initial deposit is not required.
    /// 					
    /// </remarks>

	public DepositTypeCodeType? DepositType { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllAlways
    /// OrderReportAlways
    /// GetMyeBayBuyingWonListDeletedFromWonListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingSoldListDetailLevel: none, ReturnAllConditionally
    /// GetItemsAwaitingFeedbackGetMyeBaySellingConditionally
    /// AddOrderYes
    /// GetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container consists of relevant details about the listing associated with the sales transaction. Which listing fields are returned under this container will depend on the listing, the eBay marketplace, and the API call.
    /// 						<br><br>
    /// 						In an <b>AddOrder</b> call, only the unique identifier of the listing (<b>ItemID</b>) is needed to help identify the sales transaction to combine into a 'Combined Invoice' order.
    /// 					
    /// </remarks>

	public ItemType Item { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllAlways
    /// OrderReportAlways
    /// GetMyeBayBuyingWonListDeletedFromWonListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingSoldListDetailLevel: none, ReturnAllConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This value indicates the quantity of the line item purchased at the same
    /// 						time by the same buyer from one listing. For auction listings, this value
    /// 						is always '1'. For fixed-price, non-variation listings, this value can be
    /// 						greater than 1.
    /// 					
    /// </remarks>

	public int? QuantityPurchased { get; set; }
    /// <summary>
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetMyeBayBuyingWonListDeletedFromWonListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingSoldListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Container consisting of checkout/payment status details for an order line item. Several of these fields change values during the checkout flow.
    /// 						<br><br>
    /// 						For <b>GetOrders</b>, only a limited number of applicable fields are returned at the order line item level. The
    /// 						fields indicating the status of the order are actually found in the
    /// 						<b>OrderArray.Order.CheckoutStatus</b> container.
    /// 					
    /// </remarks>

	public TransactionStatusType Status { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllAlways
    /// OrderReportAlways
    /// GetMyeBayBuyingWonListDeletedFromWonListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingSoldListDetailLevel: none, ReturnAllConditionally
    /// GetItemsAwaitingFeedbackConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllAlways
    /// AddOrderYes
    /// </summary>
    /// <remarks>
    /// 
    /// 						Unique identifier for an eBay sales transaction. This identifier
    /// 						is created once there is a commitment from a buyer to
    /// 						purchase an item, or if/when the buyer actually purchases the line item through a 'Buy it Now' option.  An <b>ItemID</b>/<b>TransactionID</b> pair can be used and referenced during an order checkout flow to identify a line item.
    /// 						<br>
    /// 						<br>
    /// 						The <b>TransactionID</b> value for auction listings is always <code>0</code> since there can be only one winning bidder/one sale for an auction listing.
    /// 						<br/><br/>
    /// 						<span class="tablenote"><b>Note: </b> Beginning in July 2024, non-zero transaction IDs will start being returned for auction listings. If necessary, update code to handle non-zero transaction IDs for auction transactions before this time. 
    /// 						</span>
    /// 						<br>
    /// 						<b>For GetOrders and GetItemTransactions only:</b> If using Trading WSDL Version 1019 or above, this field will only be returned to the buyer and seller, and no longer returned at all to third parties. If using a Trading WSDL older than Version 1019, transaction ID is only returned to the buyer and seller, and a dummy value of <code>10000000000000</code> will be returned to all third parties.
    /// 					
    /// </remarks>

	public string TransactionID { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllAlways
    /// OrderReportAlways
    /// GetMyeBaySellingDetailLevel: ReturnAllSoldList, DeletedFromSoldListConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    ///             The sale price for one unit of the line item. This price does not include any other costs like shipping charges or sales tax, and its value will remain the same before and after payment. If multiple units were purchased through a single-variation, fixed-price listing, to get the subtotal of the units purchased, the <b>TransactionPrice</b> value would have to be multiplied by the <b>Transaction.QuantityPurchased</b> value. <br><br>
    ///             For a motor vehicle listing that required a deposit/down payment, the amount in the <b>TransactionPrice</b> is actually the deposit amount. <br><br>
    ///             <strong>For GetMyeBaySelling</strong>: this field is only returned if the transaction came as a result of a buyer's Best Offer accepted by the seller. Otherwise, the <b>Transaction.TotalPrice</b> field should be viewed instead.
    /// 					
    /// </remarks>

	public AmountType TransactionPrice { get; set; }
    /// <summary>
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether or not the sales transaction resulted from the seller accepting a Best Offer (or Counter Offer) from a buyer.
    /// 					
    /// </remarks>

	public bool? BestOfferSale { get; set; }
    /// <remarks>
    /// 
    /// 						VAT rate for the line item. When the <b>VATPercent</b> is specified, the item's VAT information appears on the item's listing page. In addition, the seller can choose to print an invoice that includes the item's net price, VAT percent, VAT amount, and total price. Since VAT rates vary depending on the item and on the user's country of residence, a seller is responsible for entering the correct VAT rate; it is not calculated by eBay. To specify a <b>VATPercent</b>, a seller must have a VAT-ID registered with eBay and must be listing the item on a VAT-enabled site. Max precision 3 decimal places. Max length 5 characters. Note: The View Item page displays the precision to 2 decimal places with no trailing zeros. However, the full value you send in is stored.
    /// 					
    /// </remarks>

	public decimal? VATPercent { get; set; }
    /// <summary>
    /// GetItemTransactionsGetSellerTransactionsGetOrdersDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The shipping service actually selected by the buyer from the shipping services
    /// 						offered by the seller. The buyer typically selects the shipping service at checkout/payment time.
    /// 					
    /// </remarks>

	public ShippingServiceOptionsType ShippingServiceSelected { get; set; }
    /// <summary>
    /// Subscribe to platform notificationshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/platform-notifications.html
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// 						Display message from buyer. This field holds transient data that is only
    /// 						being returned in Checkout-related notifications.
    /// 					
    /// </remarks>

	public string BuyerMessage { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: none, ReturnAllWonListDeletedFromWonListConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the paid status of the order.
    /// 					
    /// </remarks>

	public PaidStatusCodeType? BuyerPaidStatus { get; set; }
    /// <summary>
    /// GetMyeBaySellingSoldListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the paid status of the order.
    /// 					
    /// </remarks>

	public PaidStatusCodeType? SellerPaidStatus { get; set; }
    /// <summary>
    /// GetItemTransactionsGetSellerTransactionsGetOrdersDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetMyeBayBuyingDetailLevel: none, ReturnAllWonListDeletedFromWonListConditionally
    /// GetMyeBaySellingSoldListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates the time when the buyer paid for the order and/or order was marked as 'Paid' by the seller. This field is returned once payment has been made by the buyer.
    /// 						<br><br>
    /// 						This value will only be visible to the user on either side of the order. An order can be marked as 'Paid' in the following ways:
    /// 						<ul>
    /// 						<li>Automatically when a payment is made through eBay's system</li>
    /// 						<li>Seller marks the item as paid in My eBay or through Selling Manager Pro </li>
    /// 						<li>Programmatically by the seller through the <b>CompleteSale</b> call.</li>
    /// 						</ul>
    /// 					
    /// </remarks>

	public System.DateTime? PaidTime { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllAlways
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// GetMyeBaySellingSoldListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBayBuyingDetailLevel: none, ReturnAllWonListDeletedFromWonListConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates the time when the line item was marked as 'Shipped'. This value will only be visible to the user on either side of the order. An order can be marked as 'Shipped' by purchasing an eBay shipping label, providing shipment tracking in My eBay or through Selling Manager Pro, or programmatically by the seller through the <b>CompleteSale</b> call.
    /// 						<br><br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 							This field does not appear in the Sell Feed API's <code>LMS_ORDER_REPORT</code> responses, because once shipment tracking information is provided to the buyer, the order/order line item is considered acknowledged, and acknowledged orders do not show up in the <code>LMS_ORDER_REPORT</code> responses.
    /// 						</span>
    /// 					
    /// </remarks>

	public System.DateTime? ShippedTime { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDetailLevel: none, ReturnAllWonListDeletedFromWonListConditionally
    /// GetMyeBaySellingDetailLevel: none, ReturnAllSoldListConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field indicates the total price for a sales transaction. Before payment, this dollar value will be the price before a shipping service option is selected. Once a shipping service option is selected, the price in this field will be updated to reflect the shipping and handling costs associated with that shipping service option.
    /// 					
    /// </remarks>

	public AmountType TotalPrice { get; set; }
    /// <summary>
    /// GetMyeBayBuyingDeletedFromWonListWonListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingSoldListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container consists of Feedback left by the caller for their order
    /// 						partner. This container is only returned if the order is complete and
    /// 						feedback on the order line item has been left by the caller.
    /// 					
    /// </remarks>

	public FeedbackInfoType FeedbackLeft { get; set; }
    /// <summary>
    /// GetItemsAwaitingFeedbackConditionally
    /// GetMyeBayBuyingDeletedFromWonListWonListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingSoldListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container consists of Feedback received by the caller from their
    /// 						order partner. This container is only returned if the order is complete and
    /// 						feedback on the order line item has been received by the
    /// 						caller.
    /// 					
    /// </remarks>

	public FeedbackInfoType FeedbackReceived { get; set; }
    /// <summary>
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container is returned in a <b>GetItemTransactions</b> or <b>GetSellerTransactions</b> response if the <b>IncludeContainingOrder</b> field is
    /// 						included in the call request payload and set to 'true'. This container will be returned whether the order line item is the only line item in the order, or if the order has multiple line items.
    /// 						<br/><br/>
    /// 							<span class="tablenote"><b>Note:</b> The new <b>OrderLineItemCount</b> field is automatically returned if the user is using Version 1113 of the Trading WSDL (or newer, as versions roll out). If the user is using Versions 1107 or 1111 of the Trading WSDL, the <b>OrderLineItemCount</b> field will only be returned if the user includes the <b>X-EBAY-API-COMPATIBILITY-LEVEL</b> HTTP header and sets its value to <code>1113</code>. If a user is using a Trading WSDL older than 1107, the <b>OrderLineItemCount</b> field will not be returned.
    ///             </span>
    /// 					
    /// </remarks>

	public OrderType ContainingOrder { get; set; }
    /// <summary>
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						A Final Value Fee is calculated and charged to a seller's account
    /// 						immediately upon creation of an order line item. Note that this fee is created
    /// 						before the buyer makes a payment. As long as the <b>IncludeFinalValueFee</b> field is included in the call request and set to 'true', the Final Value Fee for each order line
    /// 						item is returned, regardless of the checkout status.
    /// 						<br><br>
    /// 						If a seller requests a Final Value Fee credit, the value of
    /// 						<b>Transaction.FinalValueFee</b> will not change if a credit is
    /// 						issued. The credit only appears in the seller's account data.
    /// 					
    /// </remarks>

	public AmountType FinalValueFee { get; set; }
    /// <summary>
    /// GetItemTransactionsGetSellerTransactionsGetOrdersDetailLevel: none, ReturnAllConditionally
    /// GetItemTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The site upon which the line item was purchased.
    /// 					
    /// </remarks>

	public SiteCodeType? TransactionSiteID { get; set; }
    /// <summary>
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllAlwaysCustomCode, eBay
    /// GetMyeBayBuyingWonListDeletedFromWonListDetailLevel: none, ReturnAllConditionallyCustomCode, eBay
    /// GetMyeBaySellingSoldListDetailLevel: none, ReturnAllConditionallyCustomCode, eBay
    /// </summary>
    /// <remarks>
    /// 
    /// 						This value indicates the site on which the sales transaction originated.
    /// 						<br><br>
    /// 						<span class="tablenote"><b>Note: </b> Currently, the only value that should be returned in this field is <code>eBay</code>,  as the Half.com marketplace no longer exists.
    /// 				</span>
    /// 					
    /// </remarks>

	public TransactionPlatformCodeType? Platform { get; set; }
    /// <summary>
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 					 In a fixed-priced listing, a seller can offer variations of the same item.
    /// 					 For example, the seller could create a fixed-priced listing for a t-shirt
    /// 					 design, and offer the shirt in different colors and sizes. In this case, each
    /// 					 color and size combination is a separate variation. Each variation can have
    /// 					 a different quantity and price. Due to the possible price differentiation,
    /// 					 buyers can buy multiple items from this listing at the same time, but all of
    /// 					 the items must be of the same variation. One order line item is created
    /// 					 whether one or multiple quanity of the same variation are purchased.
    /// 					 <br><br>
    /// 					 The <b>Variation</b> node contains information about which variation
    /// 					 was purchased. Therefore, applications that process orders
    /// 					 should always check to see if this node is present.
    /// 					
    /// </remarks>

	public VariationType Variation { get; set; }
    /// <summary>
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned if a buyer left a comment for the seller during the
    /// 						left by buyer during the checkout flow.
    /// 						<br><br>
    /// 						<b>For GetItemTransactions only:</b> If using Trading WSDL Version 1019 or above, this field will only be returned to the buyer or seller, and no longer returned at all to third parties. If using a Trading WSDL older than Version 1019, real data is only returned to the buyer or seller, and a string value of <code>Unavailable</code> will be returned to all third parties.
    /// 					
    /// </remarks>

	public string BuyerCheckoutMessage { get; set; }
    /// <summary>
    /// GetMyeBaySellingSoldListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBayBuyingWonListDeletedFromWonListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The sale price of the order line item. This amount does not take
    /// 						into account shipping and handling charges, sales tax, or any other costs related to the order line
    /// 						item. If multiple units were purchased through a non-
    /// 						variation, fixed-price listing, this value will reflect that. So, if the base cost of the order line item was $15.00, and a quantity of two were purchased (<b>Transaction.QuantityPurchased</b>) the value in this field would show as <code>30.00</code>.
    /// 						<br><br>
    /// 						To see the full price of the order line item, including any shipping and handling charges, and any sales tax, the (<b>Transaction.TotalPrice</b>) field value should be viewed instead. However, note that the <b>TotalPrice</b> field value is only updated after a shipping service option is selected and payment is made. And if the seller is offering free shipping, the values in the <b>TotalTransactionPrice</b> and the <b>TotalPrice</b> fields may be the same.
    /// 					
    /// </remarks>

	public AmountType TotalTransactionPrice { get; set; }
    /// <summary>
    /// GetItemTransactionsGetOrdersGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						A container consisting of detailed tax information (sales tax, Goods and Services tax, or VAT) for a sales transaction. The <b>Taxes</b> container is returned if the order line item is subject to any taxes on the buyer's purchase. The information in this container supercedes/overrides any sales tax information in the <b>ShippingDetails.SalesTax</b> container.
    /// 					
    /// </remarks>

	public TaxesType Taxes { get; set; }
    /// <summary>
    /// GetItemTransactionsGetSellerTransactions
    /// GetOrdersDetailLevel: none, ReturnAll
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Boolean value indicating whether or not an order line item is
    /// 						part of a bundle purchase using Product Configurator.
    /// 					
    /// </remarks>

	public bool? BundlePurchase { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The shipping cost paid by the buyer for the order line item. This field is only returned after checkout is complete.
    /// 					
    /// </remarks>

	public AmountType ActualShippingCost { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The handling cost that the seller has charged for the order line item. This field is only returned after checkout is complete.
    /// 						<br><br>
    /// 						The value of this field is returned as zero dollars (0.0) if the seller did not specify a handling cost for the listing.
    /// 					
    /// </remarks>

	public AmountType ActualHandlingCost { get; set; }
    /// <summary>
    /// GetMyeBayBuyingWonListDeletedFromWonListDetailLevel: none, ReturnAllAlways
    /// GetMyeBaySellingSoldListDetailLevel: none, ReturnAllAlways
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllAlways
    /// GetItemsAwaitingFeedbackConditionally
    /// GetOrdersDetailLevel: none, ReturnAllAlways
    /// OrderReportAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						A unique identifier for an eBay order line item. This identifier is created as
    /// 						soon as there is a commitment to buy from the seller, or the buyer actually purchases the item using a 'Buy it Now' option.
    /// 						<br><br>
    /// 						<b>For GetOrders and GetItemTransactions only:</b> If using Trading WSDL Version 1019 or above, this field will only be returned to the buyer or seller, and no longer returned at all to third parties. If using a Trading WSDL older than Version 1019, order line item ID is only returned to the buyer or seller, and a dummy value of <code>10000000000000</code> will be returned to all third parties.
    /// 						<br>
    /// 					
    /// </remarks>

	public string OrderLineItemID { get; set; }
    /// <summary>
    /// GetSellerTransactionsDetailLevel: noneConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The generated eBay payment ID used by the buyer when he/she chooses electronic
    /// 						transfer as payment method for paying the seller. This field is only applicable to the eBay Germany site (Site ID 77).
    /// 					
    /// </remarks>

	public string eBayPaymentID { get; set; }
    /// <summary>
    /// GetItemTransactionsGetOrdersGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						A container consisting of name and ID of the seller's discount campaign, as well as the discount amount that is being applied to the order line item. This container is only returned if the order line item is eligible for seller discounts.
    /// 					
    /// </remarks>

	public SellerDiscountsType SellerDiscounts { get; set; }
    /// <summary>
    /// GetSellerTransactionsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is returned if the <b>IncludeCodiceFiscale</b> flag is included in the request and set to <code>true</code>, and if the buyer has provided this value at checkout time.
    /// 						<br/><br/>
    /// 						This field is only applicable to buyers on the Italy and Spain sites. The Codice Fiscale number is unique for each Italian and Spanish citizen and is used for tax purposes.
    /// 					
    /// </remarks>

	public string CodiceFiscale { get; set; }
    /// <summary>
    /// GetItemTransactionsGetSellerTransactionsGetMyeBaySellingDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Order line items requiring multiple shipping legs include items being shipped through the Global Shipping Program or through eBay International Shipping, as well as order line items subject to/eligible for the Authenticity Guarantee program. For both international shipping options, the address of the shipping logistics provider is shown in the <b>MultiLegShippingDetails.SellerShipmentToLogisticsProvider.ShipToAddress</b> container. Similarly, for Authenticity Guarantee orders, the authentication partner's shipping address is shown in the same container.
    /// 						<br><br>
    ///             If an order line item is subject to the Authenticity Guarantee service, the <b>Transaction.Program</b> container will be returned.
    /// 					
    /// </remarks>

	public bool? IsMultiLegShipping { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container consists of details related to the first leg of an order requiring multiple shipping legs. Types of orders that require multiple shipping legs include international orders going through the Global Shipping Program or through eBay International Shipping, as well as orders subject to/eligible for the Authenticity Guarantee program.</br/></br/>If the item is subject to the Authenticity Guarantee service program, the seller ships the item to the authentication partner, and if the item passes an authentication inspection, the authentication partner ships it directly to the buyer.<br/><br/>
    /// 						This container is only returned if the order has one or more order line items requiring multiple shipping legs.
    /// 					
    /// </remarks>

	public MultiLegShippingDetailsType MultiLegShippingDetails { get; set; }
    /// <summary>
    /// GetOrdersGetItemTransactionsGetSellerTransactionsDetailLevel: ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field indicates the date/time that an order invoice was sent from the seller to the buyer. This field is only returned if an invoice (containing the order line item) was sent to the buyer.
    /// 					
    /// </remarks>

	public System.DateTime? InvoiceSentTime { get; set; }
    /// <summary>
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 					  This flag indicates whether or not the order line item is an intangible good, such as an MP3 track or a mobile phone ringtone. 
    /// 					
    /// </remarks>

	public bool? IntangibleItem { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel:ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel:ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						 Contains information about each monetary transaction that occurs for the order line item, including order payment, any refund, a credit, etc. Both the payer and payee are shown in this container.
    /// 					
    /// </remarks>

	public PaymentsInformationType MonetaryDetails { get; set; }
    /// <summary>
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// GetMyeBayBuyingWonListDeletedFromWonListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Container consisting of an array of <strong>PickupOptions</strong> containers. Each <strong>PickupOptions</strong> container consists of the pickup method and its priority. The priority of each pickup method controls the order (relative to other pickup methods) in which the corresponding pickup method will appear in the View Item and Checkout page.
    /// 						<br/><br/>
    /// 						This container is always returned prior to order payment if the seller created/revised/relisted the item with the <strong>EligibleForPickupInStore</strong> and/or <strong>EligibleForPickupDropOff</strong> flag in the call request set to 'true'. If and when the In-Store pickup method (US only) or 'Click and Collect' pickup method (UK and Australia only) is selected by the buyer and payment for the order is made, this container will no longer be returned in the response, and will essentially be replaced by the <strong>PickupMethodSelected</strong> container.
    /// 						<br/><br/>
    /// 						<span class="tablenote">
    /// 						<strong>Note:</strong> A seller must be eligible for the In-Store Pickup feature or Click and Collect feature to list an item that is eligible for In-Store Pickup or Click and Collect. At this time, the In-Store Pickup and Click and Collect features are generally only available to large retail merchants, and can only be applied to multiple-quantity, fixed-price listings.
    ///             </span>
    /// 					
    /// </remarks>

	public PickupDetailsType PickupDetails { get; set; }
    /// <summary>
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// GetMyeBayBuyingWonListDeletedFromWonListDetailLevel: none, ReturnAllConditionally
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container consists of details related to the selected In-Store pickup method, including the pickup method, the merchant's store ID, the status of the In-Store pickup, and the pickup reference code (if provided by merchant).
    /// 				  
    /// </remarks>

	public PickupMethodSelectedType PickupMethodSelected { get; set; }
    /// <summary>
    /// LogisticsPlanCodeType
    /// GetOrdersDetailLevel:none,ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel:none,ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 							This field will be returned at the order line item level only if the buyer purchased a digital gift card, which is delivered by email, or if the buyer purchased an item that is enabled with the 'Click and Collect' feature.
    /// 							 <br/><br/>
    ///               Currently, <strong>LogisticsPlanType</strong> has two applicable values: <code>PickUpDropOff</code>, which indicates that the buyer selected the 'Click and Collect' option. With Click and Collect, buyers are able to purchase from thousands of sellers on the eBay UK and Australia sites, and then pick up their order from the nearest 'eBay Collection Point', including over 750 Argos stores in the UK. The Click and Collect feature is only available on the eBay UK and Australia sites; or, <code>DigitalDelivery</code>, which indicates that the order line item is a digital gift card that will be delivered to the buyer or recipient of the gift card by email.
    /// 						
    /// </remarks>

	public string LogisticsPlanType { get; set; }
    /// <summary>
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container is returned in <b>GetOrders</b> (and other order management calls) if the 'Pay Upon Invoice' option is being offered to the buyer, and the seller is including payment instructions in the shipping package(s) for the order. The 'Pay Upon Invoice' option is only available on the Germany site.
    /// 					
    /// </remarks>

	public BuyerPackageEnclosuresType BuyerPackageEnclosures { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel:none,ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel:none,ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The unique identifier of the inventory reservation.
    /// 					
    /// </remarks>

	public string InventoryReservationID { get; set; }
    /// <summary>
    /// 40
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						 A unique identifier for an eBay order. This field is only returned for paid orders, and not unpaid orders.
    /// 						 <br>
    /// 							<span class="tablenote"><b>Note: </b> <b>ExtendedOrderID</b> was first created when eBay changed the format of Order IDs back in June 2019. For a short period, the <b>OrderID</b> field showed the old Order ID format and the <b>ExtendedOrderID</b> field showed the new Order ID format. For paid orders, both <b>OrderID</b> and <b>ExtendedOrderID</b> now show the same Order ID value.
    /// 						<br>
    ///             <b>For GetOrders and GetItemTransactions only:</b> If using Trading WSDL Version 1019 or above, this field will only be returned to the buyer or seller, and no longer returned at all to third parties. If using a Trading WSDL older than Version 1019, the correct Order ID is returned to the buyer or seller, but a dummy Order ID value of <code>1000000000000</code> will be returned to all third parties.
    /// 						<br>
    /// 					
    /// </remarks>

	public string ExtendedOrderID { get; set; }
    /// <summary>
    /// more detailseBay Plushttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/ebay-plus.html
    /// GetOrdersGetItemTransactionsGetSellerTransactionsConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						If <code>true</code>, the buyer of the order line item has a eBay Plus program subscription, and is eligible to receive the benefits of this program, such as fast, free shipping and free returns. Top-Rated eBay sellers must opt in to eBay Plus to be able offer the program on qualifying listings. Sellers must commit to next-day delivery of those items.
    /// 						<br/><br/>
    /// 						<span class="tablenote"><b>Note:</b> Currently, eBay Plus is available only to buyers in Germany and Australia.
    ///             </span>
    /// 					
    /// </remarks>

	public bool? eBayPlusTransaction { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container is returned in <b>GetOrders</b> and other order management calls if a buyer has purchased a digital gift card but has sent it to another individual as a gift, and has left a message for the recipient. The <b>GiftSummary</b> container consists of the message that the buyer wrote for the recipient of the digital gift card. A digital gift card line item is indicated if the <b>DigitalDeliverySelected</b> container is returned in the response, and if the digital gift card is sent to another individual as a gift, the <b>Gift</b> boolean field will be returned with a value of <code>true</code>.
    /// 					
    /// </remarks>

	public GiftSummaryType GiftSummary { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container is only returned by <b>GetOrders</b> and other order management calls if the buyer purchased a digital gift card for themselves, or is giving the digital gift card to someone else as a gift (in this case, the <b>Gift</b> boolean field will be returned with a value of <code>true</code>). The <b>DigitalDeliverySelected</b> container consists of information related to the digital gift card order line item, including the delivery method, delivery status, and recipient of the gift card (either the buyer, or another individual that is receiving the gift card as a gift from the buyer.
    /// 					
    /// </remarks>

	public DigitalDeliverySelectedType DigitalDeliverySelected { get; set; }
    /// <summary>
    /// GetOrdersGetItemTransactionsGetSellerTransactionsConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This boolean field is returned as <code>true</code> if the seller is giving a digital gift card to another individual as a gift. This field is only applicable for digital gift card order line items.
    /// 					
    /// </remarks>

	public bool? Gift { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						<span class="tablenote"><b>Note: </b> This field is for future use, as the eBay Guaranteed Shipping feature has been put on hold. eBay Guaranteed Shipping should not be confused with eBay Guaranteed Delivery, which is a completely different feature.
    /// 						</span>
    /// 						This field is returned as <code>true</code> if the seller chose to use eBay's Guaranteed Shipping feature at listing time. With eBay's Guaranteed Shipping, the seller will never pay more for shipping than what is charged to the buyer. eBay recommends the shipping service option for the seller to use based on the dimensions and weight of the shipping package.
    /// 					
    /// </remarks>

	public bool? GuaranteedShipping { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllAlways
    /// OrderReportAlways
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is deprecated, and can be ignored if returned. The Guaranteed Delivery program is no longer supported on any eBay marketplace.
    /// 						
    /// </remarks>

	public bool? GuaranteedDelivery { get; set; }
    /// <summary>
    /// GetItemTransactionsGetOrdersOrderReportGetSellerTransactionsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This boolean field is returned as <code>true</code> if the line item is subject to a tax (US sales tax or Australian Goods and Services tax) that eBay will collect and remit to the proper taxing authority on the buyer's behalf. This field is also returned if <code>false</code> (not subject to eBay Collect and Remit). An <b>eBayCollectAndRemitTaxes</b> container is returned if the order line item is subject to such a tax, and the type and amount of this tax is displayed in the <b>eBayCollectAndRemitTaxes.TaxDetails</b> container.
    /// 						<br/><br/>
    /// 						Australian 'Goods and Services' tax (GST) is automatically charged to buyers outside of Australia when they purchase items on the eBay Australia site. Sellers on the Australia site do not have to take any extra steps to enable the collection of GST, as this tax is collected by eBay and remitted to the Australian government. For more information about Australian GST, see the <a href="https://www.ebay.com.au/help/selling/fees-credits-invoices/taxes-import-charges?id=4121">Taxes and import charges</a> help topic.
    /// 						<br/><br/>
    /// 						As of January 2023, buyers in all US states will automatically be charged sales tax for purchases, and the seller does not set this rate. eBay will collect and remit this sales tax to the proper taxing authority on the buyer's behalf. For more US state-level information on sales tax, see the <a href="https://www.ebay.com/help/selling/fees-credits-invoices/taxes-import-charges?id=4121#section4">eBay sales tax collection</a> help topic.
    /// 					
    /// </remarks>

	public bool? eBayCollectAndRemitTax { get; set; }
    /// <summary>
    /// GetItemTransactionsGetOrdersOrderReportGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container is returned if the order line item is subject to a tax (US sales tax or Australian Goods and Services tax) that eBay will collect and remit to the proper taxing authority on the buyer's behalf. The type of tax will be shown in the <b>TaxDetails.Imposition</b> and <b>TaxDetails.TaxDescription</b> fields, and the amount of this tax will be displayed in the <b>TaxDetails.TaxAmount</b> field.
    /// 						<br/><br/>
    /// 						Australian 'Goods and Services' tax (GST) is automatically charged to buyers outside of Australia when they purchase items on the eBay Australia site. Sellers on the Australia site do not have to take any extra steps to enable the collection of GST, as this tax is collected by eBay and remitted to the Australian government. For more information about Australian GST, see the <a href="https://www.ebay.com.au/help/selling/fees-credits-invoices/taxes-import-charges?id=4121">Taxes and import charges</a> help topic.
    /// 						<br/><br/>
    /// 						As of January 2023, buyers in all US states will automatically be charged sales tax for purchases, and the seller does not set this rate. eBay will collect and remit this sales tax to the proper taxing authority on the buyer's behalf. For more US state-level information on sales tax, see the <a href="https://www.ebay.com/help/selling/fees-credits-invoices/taxes-import-charges?id=4121#section4">eBay sales tax collection</a> help topic.
    /// 					
    /// </remarks>

	public TaxesType eBayCollectAndRemitTaxes { get; set; }
    /// <summary>
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container gives the status of an order line item going through the Authenticity Guarantee service process. In the Authenticity Guarantee service program, a third-party authenticator must verify the authenticity of the item before it can be sent to the buyer.
    /// 						<br/><br/>
    /// 						This container is only returned for order line items subject to the Authenticity Guarantee service process, and if it is returned, the seller must make sure to send the item to the third-party authenticator's address (shown in the <b>MultiLegShippingDetails.SellerShipmentToLogisticsProvider.ShipToAddress</b> field), and not to the buyer's shipping address. If the item is successfully authenticated, the authenticator will ship the item to the buyer.
    /// 					
    /// </remarks>

	public TransactionProgramType Program { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						<span class="tablenote"><b>Note: </b> This array is only returned if the order has associated linked line items.</span>
    /// 						Container consisting of an array of linked line item objects.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("LinkedLineItem", IsNullable = false)]

	public System.Collections.Generic.List<LinkedLineItemType> LinkedLineItemArray { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>UPCEnabled</b> field that is returned under the <b>FeatureDefinitions</b> container of the <b>GetCategoryFeatures</b> response (as long as 'UPCEnabled' is included as a <b>FeatureID</b> value in the call request or no <b>FeatureID</b> values are passed into the call request). This field is returned as an empty element (a boolean value is not returned) if one or more eBay API-enabled sites support the UPC product identifying feature.
/// 				<br><br>
/// 				To verify if a specific eBay site supports the UPC product identifying feature (for most categories), look for a 'true' value in the <b>SiteDefaults.UPCEnabled</b> field.
/// 				<br><br>
/// 				To verify if a specific category on a specific eBay site supports the UPC product identifying feature, pass in a <b>CategoryID</b> value in the request, and then look for a 'true' value in the <b>UPCEnabled</b> field of the corresponding <b>Category</b> node (match up the <b>CategoryID</b> values if more than one Category IDs were passed in the request).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class UPCEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is used by the <b>URLDetails</b> containers that are returned in the response of <b>GeteBayDetails</b> if the <code>URLDetails</code> value is used in the <b>DetailName</b> field of the call request. Each <b>URLDetails</b> container conists of the URL of the different eBay pages, such as the View Item URL, the eBay Store URL, and others.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class URLDetailsType {

#region 属性
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This enumeration value indicates the type of eBay page.
    /// 					
    /// </remarks>

	public URLTypeCodeType? URLType { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						A commonly used eBay URL. Applications use some of these URLs (such as the View Item URL)
    /// 						to launch eBay Web site pages in a browser.<br><br>
    /// 						Logo URLs are required to be used in certain types of applications.
    /// 						See your API license agreement. Also see this page for logo usage rules:<br>
    /// 						https://developer.ebay.com/join/licenses/apilogousage
    /// 					
    /// </remarks>

	public string URL { get; set; }
    /// <summary>
    /// GeteBayDetailsDetailLevel: none, ReturnSummary, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Returns the latest version number for this field. The version can be
    /// 						used to determine if and when to refresh cached client data.
    /// 					
    /// </remarks>

	public string DetailVersion { get; set; }
    /// <summary>
    /// GeteBayDetailsDetailLevel: none, ReturnSummary, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Gives the time in GMT that the feature flags for the details were last
    /// 						updated. This timestamp can be used to determine if and when to refresh
    /// 						cached client data.
    /// 					
    /// </remarks>

	public System.DateTime? UpdateTime { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type provides information about the weight, volume or other quantity measurement of a listed item. The European Union requires listings for certain types of products to include the price per unit so buyers can accurately compare prices. eBay uses the <strong>UnitType</strong> and <strong>UnitQuantity</strong> values and the item's listed price to calculate and display the per-unit price on eBay EU sites. 
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class UnitInfoType {

#region 属性
    /// <summary>
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Designation of size, weight, volume or count to be used to specify the unit quantity of the item. This value can be one of the following:
    /// 						<br/>
    /// 						<pre> Kg  100g  10g  L  100ml  10ml  M  M2  M3  Unit </pre>
    /// 						With <b>GetItem</b>, this field is returned only when you provide <strong>IncludeItemSpecifics</strong> in the request and set it to <code>true</code>.
    /// 					
    /// </remarks>

	public string UnitType { get; set; }
    /// <summary>
    /// GetItemGetItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Number of units of size, weight, volume or count of the specified unit type for the item. eBay divides the item price by this number to get the price per unit to be displayed in the item listing for comparison purposes.
    /// 						<br/><br/>
    /// 						With GetItem, this field is returned only when you provide <strong>IncludeItemSpecifics</strong> in the request and set it to <code>true</code>.
    /// 					
    /// </remarks>

	public double? UnitQuantity { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 			  This type defines the <b>UnpaidItemAssistancePreferences</b> container. This container is
/// 				used in <b>SetUserPreferences</b> to set the preferences related to the <b>Unpaid Item
/// 				Assistant</b> feature. The <b>UnpaidItemAssistancePreferences</b> container is also returned in
/// 				<b>GetUserPreferences</b> (if the <b>ShowUnpaidItemAssistancePreference</b> flag is included and
/// 				set to true in the request).
/// 				<br/><br/>
/// 				See the <a href="https://www.ebay.com/help/selling/getting-paid/resolving-unpaid-items?id=4137">Resolving unpaid items with buyers</a> Help topic for more information about setting up and using the Unpaid Item preferences feature.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class UnpaidItemAssistancePreferencesType {

#region 属性
    /// <summary>
    /// 4
    /// 30
    /// GetUserPreferencesConditionally
    /// SetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						This value indicates the number of days that should elapse before an unpaid order is cancelled on behalf of the seller.
    /// 						<b>Valid values are</b>: 4, 7, 11, 19, 27, and 30 (days).
    /// 						<br/><br/>
    /// 						This field is ignored if the <b>OptInStatus</b> flag is included and set to <code>false</code> in the request, or if the seller is not currently opted into the Unpaid Item preferences feature on My eBay.
    /// 						<br/>
    /// 				  
    /// </remarks>

	public int? DelayBeforeOpeningDispute { get; set; }
    /// <summary>
    /// GetUserPreferencesConditionally
    /// SetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						Flag to indicate whether or not the seller has enabled Unpaid Item preferences. Unpaid Item preferences must be enabled for any of the Unpaid Item preferences to have an effect.
    /// 					
    /// </remarks>

	public bool? OptInStatus { get; set; }
    /// <summary>
    /// GetUserPreferencesConditionally
    /// SetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						Flag to indicate whether or not the seller wants eBay to automatically relist items after an unpaid order is cancelled. For a multiple-quantity listing,
    /// 						the quantity is adjusted if <b>AutoRelist</b> is set to <code>true</code>.
    /// 						<br/><br/>
    /// 						This field is ignored if the <b>OptInStatus</b> flag is included and set to <code>false</code> in the request, or if the seller is not currently opted into the Unpaid Item preferences feature on My eBay.
    /// 					
    /// </remarks>

	public bool? AutoRelist { get; set; }
    /// <summary>
    /// GetUserPreferencesConditionally
    /// SetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field should be included and set to <code>true</code> if the seller wants to clear all excluded users set in Unpaid Item preferences. A seller may want to create an excluded user list if that seller prefers to work directly with those buyers to work out the unpaid order situation.
    /// 						<br/><br/>
    /// 						Users can be added to Exclusion list through the <b>ExcludedUser</b>
    /// 						field. The <b>RemoveAllExcludedUsers</b> field is ignored if the
    /// 						<b>OptInStatus</b> flag is included and set to false in the request,
    /// 						or if the seller is not currently opted into the Unpaid Item preferences feature
    /// 						in Unpaid Item preferences on My eBay.
    /// 					
    /// </remarks>

	public bool? RemoveAllExcludedUsers { get; set; }
    /// <summary>
    /// GetUserPreferencesConditionally
    /// SetUserPreferencesNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						An eBay User ID to which the seller's Unpaid Item preferences do not apply. A seller may want to create an excluded user list if that seller prefers to work directly with those buyers to work out the unpaid order situation.
    /// 						<br/><br/>
    /// 						One or more <b>ExcludedUser</b> fields are used in
    /// 						<b>SetUserPreferences</b> to add users to Unpaid Item preferences Exclusion
    /// 						list. Any and all <b>ExcludedUser</b> fields are ignored if the
    /// 						<b>OptInStatus</b> flag is included and set to <code>false</code> in the request,
    /// 						or if the seller is not currently opted into the Unpaid Item preferences feature
    /// 						in Unpaid Item preferences on My eBay.
    /// 						<br/><br/>
    /// 						In <b>GetUserPreferences</b>, one or more <b>ExcludedUser</b> fields
    /// 						represent the current Excluded user list.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("ExcludedUser")]

	public System.Collections.Generic.List<string> ExcludedUser { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is deprecated.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class UserConsentRequiredDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Contains the items, searches and sellers that the user has saved to this
/// 				list using the "Add to list" feature.  The name of the list is given by the
/// 				"Name" element.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class UserDefinedListType {

#region 属性
    /// <summary>
    /// GetMyeBayBuyingConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The user's chosen name for this list.
    /// 					
    /// </remarks>

	public string Name { get; set; }
    /// <summary>
    /// GetMyeBayBuyingConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The value in this field indicates the total number of items in the
    /// 						user-defined list. The number of <b>Item</b> nodes in the
    /// 						<b>ItemArray</b> should match this value.
    /// 					
    /// </remarks>

	public int? ItemCount { get; set; }
    /// <remarks>
    /// 
    /// 						This field is not supported.
    /// 					
    /// </remarks>

	public int? FavoriteSearcheCount { get; set; }
    /// <summary>
    /// GetMyeBayBuyingConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The value in this field indicates the total number of favorite sellers in the
    /// 						user-defined list. The number of <b>FavoriteSeller</b> nodes returned
    /// 						in the response should match this value.
    /// 				   
    /// </remarks>

	public int? FavoriteSellerCount { get; set; }
    /// <summary>
    /// GetMyeBayBuyingConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						An array of Items that the user has added to the user-defined list.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("Item", IsNullable = false)]

	public System.Collections.Generic.List<ItemType> ItemArray { get; set; }
    /// <summary>
    /// GetMyeBayBuyingConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						An array of Favorite Searches that the user has added to the user-defined list.
    /// 					
    /// </remarks>

	public MyeBayFavoriteSearchListType FavoriteSearches { get; set; }
    /// <summary>
    /// GetMyeBayBuyingConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						An array of Favorite Sellers that the user has added to the user-defined list.
    /// 					
    /// </remarks>

	public MyeBayFavoriteSellerListType FavoriteSellers { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Contains an array of eBay UserID entries. 
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class UserIDArrayType {

#region 属性
    /// <summary>
    /// GetSellerListNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						Unique eBay user ID for the user. 
    /// 						Applies to eBay Motors Pro applications only. 
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("UserID")]

	public System.Collections.Generic.List<string> UserID { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Based on the context of the field, this type defines the user is sending or receiving a payment.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class UserIdentityType {

#region 属性
[System.Xml.Serialization.XmlText(DataType="string")]

	public string Value { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 							This attribute indicates if the payer or payee is an eBay user or an eBay partner.
    /// 						
    /// </remarks>
[System.Xml.Serialization.XmlAttribute]

	public UserIdentityCodeType type { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type to contain the data for one eBay user. Depending on the context, the user
/// 				might be the seller or the buyer on either side of an order, or the bidder or winning bidder
/// 				in a listing. An object of this type is returned by a number of calls, including
/// 				the <b>GetUser</b> call.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class UserType {

#region 属性
    /// <summary>
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// GetItemAlwaysSellerDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// GetSellerListHighBidderDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: FineConditionally
    /// GetItemConditionallyHighBidderDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// GetSellerListSellerDetailLevel: none, ItemReturnDescription, ReturnAllGranularityLevel: FineAlways
    /// GetAllBiddersGetBidderListAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						<br>
    /// 						A value of <code>true</code> indicates that the user has set up an About Me page.
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> This field will stop being returned in <b>GetItemTransactions</b> and <b>GetSellerTransactions</b> on January 31, 2024.
    /// 						</span>
    /// 					
    /// </remarks>

	public bool? AboutMePage { get; set; }
    /// <summary>
    /// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/user-mgmt-anonymous-info.htmlAnonymous user information
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllAlwaysSeller
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionallyBuyer
    /// GetSellerListHighBidderDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: FineConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Unique identifier for the user that does not change when the eBay user name
    /// 						is changed. Use when an application needs to associate a new eBay user name
    /// 						with the corresponding eBay user.
    /// 					
    /// </remarks>

	public string EIASToken { get; set; }
    /// <summary>
    /// 
    /// 							64 for US. May differ for other countries. Note: The eBay database
    /// 							allocates up to 128 characters for this field
    /// 						
    /// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/user-mgmt-anonymous-info.htmlAnonymous user information
    /// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/member-communications.htmlMember communications
    /// GetAllBiddersGetBidderListConditionally
    /// GetBestOffersDetailLevel: none, ReturnAllConditionally
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetMyeBayBuyingWonListDeletedFromWonListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingSoldListDetailLevel: none, ReturnAllConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllAlwaysSeller
    /// GetSellerListSellerDetailLevel: ReturnAllConditionally
    /// GetSellerListHighBidderDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionallyBuyer
    /// GetSellerEventsDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Email address for the user.
    /// 						Please see the links below to the topics related to anonymous user information
    /// 						and static email addresses.
    /// 						You cannot retrieve an email address for any user
    /// 						with whom you do not have an order relationship, regardless of site.
    /// 						<br/><br/>
    /// 						An email address of another user is only returned
    /// 						if you and the other user are in an order relationship,
    /// 						within a certain time of order line item creation
    /// 						(although this limitation isn't applicable to the <b>GetAllBidders</b> call
    /// 						in the case of motor vehicles categories.)
    /// 						Based on Trust and Safety policies, the time is
    /// 						unspecified and can vary by site.
    /// 						<br><br>
    /// 						Since a bidder's user info is anonymous, this tag will be returned only to that
    /// 						bidder, and to the seller of an item that the user is bidding on.
    /// 						<br><br>
    /// 						For the <b>GetOrders</b> call, the buyer's email address will be returned (to the seller only) for orders less than two weeks old, but for orders that occurred more than two weeks in the past, the buyer's email address will no longer be returned. This <b>Email</b> field will still be returned, but 'dummy data', such as <code>Invalid Request</code> will replace the actual email address.
    ///             <br>
    ///             <br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						For the <b>GetItemTransactions</b> call, this field is only returned to the seller of the order; this field is not returned for the buyer or third party.
    /// 						</span>
    /// 					
    /// </remarks>

	public string Email { get; set; }
    /// <summary>
    /// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/user-mgmt-anonymous-info.htmlAnonymous user information
    /// GetAllBiddersConditionally
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetBidderListAlways
    /// GetBestOffersDetailLevel: none, ReturnAllAlways
    /// GetSellerListSellerDetailLevel: none, ItemReturnDescription, ReturnAllGranularityLevel: FineAlways
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllAlwaysSeller
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionallyBuyer
    /// GetSellerListHighBidderDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: FineConditionally
    /// GetSellerEventsDetailLevel: ReturnAllConditionally
    /// GetMyeBayBuyingGetMyeBaySellingBidListWatchListBestOfferListLostListDeletedFromLostListActiveListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The aggregate feedback score for a user. A user's feedback score is the net
    /// 						positive feedback minus the net negative feedback left for the user.
    /// 						Feedback scores are a quantitative expression of the desirability of dealing
    /// 						with a user as a buyer or a seller in either side of an order.
    /// 						<br/><br/>
    /// 						Each order line item can
    /// 						result in one feedback entry for a given user (the buyer can leave feedback
    /// 						for the seller, and the seller can leave feedback for the buyer.). That one
    /// 						feedback can be positive, negative, or neutral. The aggregated feedback
    /// 						counts for a particular user represent that user's overall feedback score
    /// 						(referred to as a "feedback rating" on the eBay site).
    /// 						<br/><br/>
    /// 						If the user has
    /// 						chosen to make their feedback private and that user is not the user
    /// 						identified in the request's authentication token, <b>FeedbackScore</b> is not
    /// 						returned and <b>FeedbackPrivate</b> is returned with a value of <code>true</code>.
    /// 						<br/><br/>
    /// 						In <b>GetMyeBayBuying</b> and <b>GetMyeBaySelling</b>, feedback information (<b>FeedbackScore</b>
    /// 						and <b>FeedbackRatingStar</b>) is returned in <b>BidList.ItemArray.Item.Seller</b>. For
    /// 						<b>GetMyeBayBuying</b>, the feedback score of each seller with an item having
    /// 						received a bid from the buyer is returned. For <b>GetMyeBaySelling</b>, the
    /// 						feedback score of the seller is returned. <br>
    /// 						<br>
    /// 						<b>GetMyeBayBuying</b> and <b>GetMyeBaySelling</b> also return feedback information
    /// 						(<b>FeedbackScore</b> and <b>FeedbackRatingStar</b>) in
    /// 						<b>BidList.ItemArray.Item.SellingStatus.HighBidder</b>. <b>GetMyeBayBuying</b> returns
    /// 						feedback information on the high bidder of each item the buyer is bidding
    /// 						on. <b>GetMyeBaySelling</b> returns feedback information on the high bidder of each
    /// 						item the seller is selling.<br>
    /// 						<br>
    /// 						Since a bidder's user info is anonymous, the real feedback score will
    /// 						be returned only to that bidder, and to the seller of an item that the
    /// 						user is bidding on. For all other users, the value -99 is returned.
    /// 						<br><br>
    /// 						<b>For GetOrders and GetItemTransactions only:</b> If using Trading WSDL Version 1019 or above, this field will only be returned to the buyer or seller, and no longer returned at all to third parties. If using a Trading WSDL older than Version 1019, the accurate Feedback Score for the user is returned to the buyer or seller, but a dummy value of <code>0</code> will be returned to all third parties.
    /// 					
    /// </remarks>

	public int? FeedbackScore { get; set; }
    /// <summary>
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Total count of negative Feedback entries received by the user, including weekly repeats.
    /// 					
    /// </remarks>

	public int? UniqueNegativeFeedbackCount { get; set; }
    /// <summary>
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Total count of positive Feedback entries received by the user, including
    /// 						weekly repeats. This contains the aggregate feedback score for a user. A member's
    /// 						feedback score is the net positive feedback minus the net negative feedback
    /// 						left for the member.
    /// 						<br/><br/>
    /// 						Feedback scores are a quantitative expression of the
    /// 						desirability of dealing with that person as a Buyer or a Seller on either side of an order. Each order line item can result in one feedback entry for
    /// 						a given user (the buyer can leave feedback for the seller, and the seller
    /// 						can leave feedback for the buyer).
    /// 						<br/><br/>
    /// 						Feedback can be positive,
    /// 						negative, or neutral. The aggregated feedback counts for a particular user
    /// 						represent that user's overall feedback score (referred to as a "feedback
    /// 						rating" on the eBay site). This rating is commonly expressed as the eBay
    /// 						Feedback score for the user.
    /// 					
    /// </remarks>

	public int? UniquePositiveFeedbackCount { get; set; }
    /// <summary>
    /// GetAllBiddersDetailLevel: ReturnAllConditionally
    /// GetItemConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionally
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Percent of total feedback that is positive. For example, if the member has
    /// 						50 feedbacks, where 49 are positive and 1 is neutral or negative, the
    /// 						positive feedback percent could be 98.0. The value uses a max precision of 4
    /// 						and a scale of 1. If the user has feedback, this value can be returned
    /// 						regardless of whether the member has chosen to make their feedback private.
    /// 						Not returned if the user has no feedback.
    /// 						<br><br>
    /// 						<b>For GetOrders and GetItemTransactions only:</b> If using Trading WSDL Version 1019 or above, this field will only be returned to the buyer or seller, and no longer returned at all to third parties. If using a Trading WSDL older than Version 1019, the accurate Positive Feedback Percentage value for the user is returned to the buyer or seller, but a dummy value of <code>0.0</code> will be returned to all third parties.
    /// 					
    /// </remarks>

	public float? PositiveFeedbackPercent { get; set; }
    /// <summary>
    /// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/user-mgmt-anonymous-info.htmlAnonymous user information
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// GetAllBiddersGetBidderListAlways
    /// GetItemAlwaysSellerDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// GetItemConditionallyHighBidderDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// GetSellerListHighBidderDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: FineConditionally
    /// GetSellerListSellerDetailLevel: none, ItemReturnDescription, ReturnAllGranularityLevel: FineAlways
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllAlwaysSeller
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionallyBuyer
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether the user has chosen to make their feedback score and
    /// 						feedback details private (hidden from other users). The percentage
    /// 						of positive feedback can still be returned, even if other feedback details
    /// 						are private.
    /// 						<br><br>
    /// 						Since a bidder's user info is anonymous, this tag will be returned only to
    /// 						that bidder, and to the seller of an item that the user is bidding on.
    /// 					
    /// </remarks>

	public bool? FeedbackPrivate { get; set; }
    /// <summary>
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// GetAllBiddersGetBidderListAlways
    /// GetItemAlwaysSellerDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// GetSellerListHighBidderDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: FineConditionally
    /// GetItemConditionallyHighBidderDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// GetSellerListSellerDetailLevel: none, ItemReturnDescription, ReturnAllGranularityLevel: FineAlways
    /// GetMyeBayBuyingGetMyeBaySellingBidListWatchListBestOfferListLostListDeletedFromLostListActiveListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						<br>
    /// 						A visual indicator of an eBay user's Feedback score. A different colored star is used for each range of Feedback scores. See <b>FeedbackRatingStarCodeType</b> for specific values.
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> This field will stop being returned in <b>GetItemTransactions</b> and <b>GetSellerTransactions</b> on January 31, 2024.
    /// 						</span>
    /// 					
    /// </remarks>

	public FeedbackRatingStarCodeType? FeedbackRatingStar { get; set; }
    /// <summary>
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// GetAllBiddersGetBidderListAlways
    /// GetItemAlwaysSellerDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// GetSellerListHighBidderDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: FineConditionally
    /// GetItemConditionallyHighBidderDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// GetSellerListSellerDetailLevel: none, ItemReturnDescription, ReturnAllGranularityLevel: FineAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						<br>
    /// 						Indicates whether the user has been verified. For more information
    /// 						about the ID Verify program, see:
    /// 						<a href="https://pages.ebay.com/help/policies/identity-idverify.html">Protecting your account</a>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> This field will stop being returned in <b>GetItemTransactions</b> and <b>GetSellerTransactions</b> on January 31, 2024.
    /// 						</span>
    /// 					
    /// </remarks>

	public bool? IDVerified { get; set; }
    /// <summary>
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// GetAllBiddersGetBidderListAlways
    /// GetItemAlwaysSellerDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// GetSellerListHighBidderDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: FineConditionally
    /// GetItemConditionallyHighBidderDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// GetSellerListSellerDetailLevel: none, ItemReturnDescription, ReturnAllGranularityLevel: FineAlways
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllAlwaysSeller
    /// </summary>
    /// <remarks>
    /// 
    /// 						<br>
    /// 						This boolean field is returned as <code>true</code> if the eBay user is in good standing with eBay.
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> This field will stop being returned in <b>GetItemTransactions</b> and <b>GetSellerTransactions</b> on January 31, 2024.
    /// 						</span>
    /// 					
    /// </remarks>

	public bool? eBayGoodStanding { get; set; }
    /// <summary>
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// GetAllBiddersGetBidderListAlways
    /// GetItemAlwaysSellerDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// GetSellerListHighBidderDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: FineConditionally
    /// GetItemConditionallyHighBidderDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// GetSellerListSellerDetailLevel: none, ItemReturnDescription, ReturnAllGranularityLevel: FineAlways
    /// GetItemTransactionsGetSellerTransactionsSellerDetailLevel: none, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						This boolean is returned as <code>true</code> if the eBay user has been registered on eBay for 30 days or less.
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> The <b>Buyer.NewUser</b> field will stop being returned in <b>GetItemTransactions</b> and <b>GetSellerTransactions</b> on January 31, 2024.
    /// 						</span>
    /// 					
    /// </remarks>

	public bool? NewUser { get; set; }
    /// <summary>
    /// GetUserDetailLevel: ReturnAllConditionally
    /// GetItemConditionallySellerHighBidderDetailLevel: ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						<br>
    /// 						This container consists of the Registration address for the eBay user.<br>
    /// 						<br>
    /// 						<b>GetUser:</b> eBay returns complete
    /// 						<b>RegistrationAddress</b> details (including Phone), as applicable to the
    /// 						registration site for the eBay user making the call.
    /// 						<br><br>
    /// 						<b>GetItem and GetSellerTransactions:</b> <b>RegistrationAddress</b> for another user (except for Phone) is only returned if you have an order relationship with that user AND that user is registered on DE/AT/CH, regardless of your registration site and the site to which you send the request. For example, the seller can see the buyer's registration address if the buyer is registered on DE/AT/CH, or the buyer can see the seller's registration address if the seller is registered on DE/AT/CH. (The buyer and seller won't see their own registration addresses in <b>GetItem</b>.)
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> This container and its child fields will stop being returned in <b>GetSellerTransactions</b> on January 31, 2024. 
    /// 						</span>
    /// 					
    /// </remarks>

	public AddressType RegistrationAddress { get; set; }
    /// <summary>
    /// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/user-mgmt-anonymous-info.htmlAnonymous user information
    /// GetBestOffersDetailLevel: none, ReturnAllAlways
    /// GetAllBiddersGetBidderListAlways
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// GetItemAlwaysSellerHighBidderDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// GetSellerListHighBidderDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: FineConditionally
    /// GetSellerListSellerDetailLevel: none, ItemReturnDescription, ReturnAllGranularityLevel: FineAlways
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllAlwaysSeller
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionallyBuyer
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates the date the specified user originally registered with eBay.
    /// 						<br><br>
    /// 						Since a bidder's user info is anonymous, this tag will be returned only to that bidder,
    /// 						and to the seller of an item that the user is bidding on.
    /// 					
    /// </remarks>

	public System.DateTime? RegistrationDate { get; set; }
    /// <summary>
    /// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/user-mgmt-anonymous-info.htmlAnonymous user information
    /// GetAllBiddersGetBidderListAlways
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// GetItemAlwaysSellerDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// GetSellerListHighBidderDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: FineConditionally
    /// GetItemConditionallyHighBidderDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// GetSellerListSellerDetailLevel: none, ItemReturnDescription, ReturnAllGranularityLevel: FineAlways
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllAlwaysSeller
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionallyBuyer
    /// </summary>
    /// <remarks>
    /// 
    /// 						eBay site the user is registered with.
    /// 						<br><br>
    /// 						Since a bidder's user info is anonymous, this tag will be returned only to
    /// 						that bidder, and to the seller of an item that the user is bidding on.
    /// 					
    /// </remarks>

	public SiteCodeType? Site { get; set; }
    /// <summary>
    /// GetAllBiddersGetBidderListAlways
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// GetItemSellerDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllAlways
    /// GetItemHighBidderDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// GetSellerListHighBidderDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: FineConditionally
    /// GetSellerListSellerDetailLevel: none, ItemReturnDescription,
    /// 							ReturnAllGranularityLevel: FineAlways
    /// GetItemTransactionsGetSellerTransactionsSellerDetailLevel: none, ReturnAllAlways
    /// GetItemTransactionsGetSellerTransactionsBuyerDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates the user's registration/user status.
    /// 					
    /// </remarks>

	public UserStatusCodeType? Status { get; set; }
    /// <summary>
    /// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/user-mgmt-anonymous-info.htmlAnonymous user information
    /// PlaceOfferConditionally
    /// GetAllBiddersGetBidderListConditionally
    /// GetBestOffersDetailLevel: none, ReturnAllConditionally
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// GetItemAlwaysSellerDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// GetSellerListHighBidderDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: FineConditionally
    /// GetItemConditionallyHighBidderDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// GetItemsAwaitingFeedbackConditionallyBuyer
    /// GetMyeBayBuyingDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingActiveListSoldListBidListDetailLevel: none, ReturnAllConditionally
    /// GetSellerListSellerDetailLevel: none, ItemReturnDescription, ReturnAllGranularityLevel: FineAlways
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllAlwaysSeller
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionallyBuyer
    /// GetSellerEventsDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Unique eBay user ID for the user.<br>
    /// 						<br>
    /// 						Since a bidder's user info is anonymous, this tag contains the actual
    /// 						value of an ID only for that bidder, and for the seller of an item that the user is
    /// 						bidding on. For other users, the actual value is replaced by an
    /// 						anonymous value, according to these rules:
    /// 						<br><br>
    /// 						When bidding on items, <b>UserID</b> is replaced with the
    /// 						value "a****b" where a and b are random characters from the <b>UserID</b>. For
    /// 						example, if the <b>UserID</b> = <code>IBidALot</code>, it might be displayed as, "I****A".
    /// 						<br/><br/>
    /// 						<span class="tablenote"><b>Important: </b>
    /// 						In this format, the anonymous bidder ID can change for each
    /// 						auction.
    /// 						</span>
    /// 						For <b>GetMyeBayBuying</b> only, when bidding on items: <b>UserID</b>
    /// 						is replaced with the value "a****b" where a and b are random characters from
    /// 						the <b>UserID</b>.
    /// 						<br><br>
    /// 						When bidding on items listed on the Philippines site: <b>UserID</b> is replaced
    /// 						with the value "Bidder X" where X is a number indicating the order of that
    /// 						user's first bid. For example, if the user was the third bidder,
    /// 						<b>UserID</b> = <code>Bidder 3</code>.
    /// 						Note that in this Philippines site format, the anonymous bidder ID stays the same for a given
    /// 						auction, but is different for different auctions. For example, a bidder who
    /// 						is the third and then the seventh bidder in an auction will be listed for
    /// 						both bids as "Bidder 3". However, if that same bidder is the first bidder on
    /// 						a different auction, the bidder will be listed for that auction as "Bidder
    /// 						1", not "Bidder 3".
    /// 						<br><br>
    /// 						For <b>GetMyeBayBuying</b> only, when bidding on items listed on the UK and AU sites:
    /// 						<b>UserID</b> is replaced with the string "High Bidder".
    /// 						<br><br>
    /// 						For <b>PlaceOffer</b>, see also <b>SellingStatus.HighBidder</b>.
    /// 						
    /// </remarks>

	public string UserID { get; set; }
    /// <summary>
    /// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/user-mgmt-anonymous-info.htmlAnonymous user information
    /// GetAllBiddersGetBidderListAlways
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// GetItemAlwaysSellerDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// GetSellerListHighBidderDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: FineConditionally
    /// GetItemConditionallyHighBidderDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// GetSellerListSellerDetailLevel: none, ItemReturnDescription, ReturnAllGranularityLevel: FineAlways
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllAlwaysSeller
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionallyBuyer
    /// </summary>
    /// <remarks>
    /// 
    /// 						If <code>true</code>, identifies a user whose ID has changed within the last 30 days. Does not
    /// 						indicate a new user (see <b>NewUser</b>).
    /// 						<br><br>
    ///             Since a bidder's user info is anonymous, this tag will be returned only to that bidder,
    ///             and to the seller of an item that the user is bidding on.
    ///             <br> <br>
    ///             <span class="tablenote"><b>Note:</b>
    ///             For the <strong>GetItemTransactions</strong> call, this field is only returned to the seller of the order; this field is not returned for the buyer or third party.
    ///             </span>
    /// 					
    /// </remarks>

	public bool? UserIDChanged { get; set; }
    /// <summary>
    /// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/user-mgmt-anonymous-info.htmlAnonymous user information
    /// GetAllBiddersGetBidderListAlways
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// GetItemAlwaysSellerDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// GetSellerListHighBidderDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: FineConditionally
    /// GetItemConditionallyHighBidderDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// GetSellerListSellerDetailLevel: none, ItemReturnDescription, ReturnAllGranularityLevel: FineAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						<br>
    /// 						Date and time when the user last changed their eBay user ID (in GMT).
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> The <b>Buyer.UserIDLastChanged</b> field will stop being returned in <b>GetItemTransactions</b> and <b>GetSellerTransactions</b> on January 31, 2024.
    ///             </span>
    /// 					
    /// </remarks>

	public System.DateTime? UserIDLastChanged { get; set; }
    /// <summary>
    /// Vat-exempt sellershttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/taxes-vat.html#exempt
    /// GetAllBiddersGetBidderListAlways
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// GetItemAlwaysSellerDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// GetSellerListHighBidderDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: FineConditionally
    /// GetItemConditionallyHighBidderDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// GetSellerListSellerDetailLevel: none, ItemReturnDescription, ReturnAllGranularityLevel: FineAlways
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllAlwaysSeller
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionallyBuyer
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether or not the user is subject to VAT.
    /// 						Users who have registered with eBay as VAT-exempt are not
    /// 						subject to VAT. See documentation on Value-Added Tax (VAT).
    /// 					
    /// </remarks>

	public VATStatusCodeType? VATStatus { get; set; }
    /// <summary>
    /// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/user-mgmt-anonymous-info.htmlAnonymous user information
    /// GetAllBiddersAlways
    /// GetSellerListHighBidderDetailLevel: ItemReturnDescription, ReturnAllGranularityLevel: FineConditionally
    /// GetItemConditionallyHighBidderDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ReturnAllConditionallyBuyer
    /// GetMyeBaySellingSoldListDetailLevel: none, ReturnAllConditionally
    /// GetOrdersDetailLevel: none, ReturnAllConditionallyBuyer
    /// OrderReportBuyerConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Contains information about the user as a buyer, such as
    /// 						the shipping address. See <b>BuyerType</b> for its child elements.
    /// 						<br><br>
    /// 						Since a bidder's user info is anonymous, this tag will be returned only to that bidder,
    /// 						and to the seller of an item that the user is bidding on.
    /// 					
    /// </remarks>

	public BuyerType BuyerInfo { get; set; }
    /// <summary>
    /// GetBidderListSellerAlways
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// GetItemAlwaysSellerDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// GetSellerListSellerDetailLevel: none, ItemReturnDescription, ReturnAllGranularityLevel: Coarse, Medium, FineAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						<br>
    /// 						Contains information about a seller, including listing settings, listing
    /// 						preferences, seller rankings, and seller type.
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> This container will stop being returned in <b>GetItemTransactions</b> and <b>GetSellerTransactions</b> on January 31, 2024.
    /// 						</span>
    /// 					
    /// </remarks>

	public SellerType SellerInfo { get; set; }
    /// <summary>
    /// GetUserAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field indicates whether the user's account is enabled for buying and selling
    /// 						(indicated by <b>FullMarketPlaceParticipant</b>) on eBay, or if the account is a Partially
    /// 						Provisioned Account (indicated by <b>Shopper</b>) without selling and buying privileges on
    /// 						eBay.
    /// 					
    /// </remarks>

	public BusinessRoleType? BusinessRole { get; set; }
    /// <summary>
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Specifies the subscription level for a user.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("UserSubscription")]

	public System.Collections.Generic.List<EBaySubscriptionTypeCodeType> UserSubscription { get; set; }
    /// <summary>
    /// false
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether a user has read-only access to the eBay Wiki (<code>true</code>)
    /// 						or whether the user is able contribute or edit articles on the eBay Wiki
    /// 						(<code>false</code>). By default, all registered eBay users have access to contribute and
    /// 						edit articles on the eBay Wiki. All content contributed to the eBay Wiki is
    /// 						subject to the Community Content Policy.
    /// 					
    /// </remarks>

	public bool? eBayWikiReadOnly { get; set; }
    /// <summary>
    /// AU, DE, FR, IT, UK
    /// GetUserDetailLevel: ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						TUV level is a number allocated to a user based on various characteristics
    /// 						such as buyer, seller, new buyer, new seller, high risk, or bid limit.
    /// 						Applies to eBay Motors Pro applications only.
    /// 					
    /// </remarks>

	public int? TUVLevel { get; set; }
    /// <summary>
    /// AU, DE, FR, IT, UK
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The value added tax identifier (<b>VATID</b>) is applicable to the VAT-enabled
    /// 						sites.
    /// 						Applies to eBay Motors Pro applications only.
    /// 					
    /// </remarks>

	public string VATID { get; set; }
    /// <summary>
    /// GetAllBiddersConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Contains information about the user as a bidder on a certain
    /// 						item. Returned by <b>GetAllBidders</b> if <b>IncludeBiddingSummary</b> =
    /// 						<code>true</code> is included in the request.
    /// 					
    /// </remarks>

	public BiddingSummaryType BiddingSummary { get; set; }
    /// <summary>
    /// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/user-mgmt-anonymous-info.htmlAnonymous user information
    /// GetAllBiddersGetSellerEventsAlways
    /// GetSellerListGranularityLevel: FineAlways
    /// GetItemAlwaysDetailLevel: none, ItemReturnAttributes, ItemReturnDescription, ReturnAllHighBidder
    /// </summary>
    /// <remarks>
    /// 
    /// 						Indicates whether or not the User container has been made
    /// 						anonymous. If <code>true</code>, some elements in the User container have
    /// 						either been removed, or had their values changed to remove
    /// 						identifying characteristics. If false, all expected elements
    /// 						are returned, and no values are changed.
    /// 						<br><br>
    /// 						Since a bidder's user info is anonymous, this tag is returned as false
    /// 						only to the bidder, and to the seller of an item that the user is bidding
    /// 						on. For all other users, this tag is returned as <code>true</code>.
    /// 					
    /// </remarks>

	public bool? UserAnonymized { get; set; }
    /// <summary>
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Total count of neutral Feedback entries received by the user, including weekly repeats.
    /// 					
    /// </remarks>

	public int? UniqueNeutralFeedbackCount { get; set; }
    /// <summary>
    /// GetUserDetailLevel: none, ReturnAllAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

	public bool? EnterpriseSeller { get; set; }
    /// <summary>
    /// GetUserDetailLevel: none, ReturnSummary, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This flag indicates whether or not the user is eligible to sell items on eBay. This field is only returned if the <b>IncludeFeatureEligibility</b> flag is included in the call request and set to <code>true</code>.
    /// 					
    /// </remarks>

	public bool? QualifiesForSelling { get; set; }
    /// <summary>
    /// GetBestOffersDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Contains the shipping address of a bidder who has made a Best Offer for an item.
    /// 						<br/><br/>
    /// 						You cannot retrieve a shipping address for any user with whom you do not have an order relationship, regardless of site. The shipping address of another user is returned only if you and the other user are in an order relationship, within a certain time of order line item creation.
    /// 						<br><br>
    /// 						Because a bidder's user information is anonymous, this container is returned only to that bidder, and to the seller of an item that the user is bidding on.
    /// 					
    /// </remarks>

	public AddressType ShippingAddress { get; set; }
    /// <summary>
    /// GetUserDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The <strong>Membership</strong> container will be returned if the seller is enrolled in one or more membership programs on one or more eBay sites. A <b>Program</b> container will be returned for each applicable membership program, and provides details on that program, including the eBay site, the program name (such as '<code>EBAYPLUS</code>'), and the membership expiration date. This container will not be returned at all if the seller is not enrolled in any applicable membership programs.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("Program", IsNullable = false)]

	public System.Collections.Generic.List<MembershipDetailType> Membership { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none,ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						<br>
    /// 						The first name of the buyer or seller involved in the order.
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> The <b>Seller.UserFirstName</b> field will stop being returned in <b>GetItemTransactions</b> and <b>GetSellerTransactions</b> on January 31, 2024.
    /// 						</span>
    /// 					
    /// </remarks>

	public string UserFirstName { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none,ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						<br>
    /// 						The last name of the buyer or seller involved in the order.
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> The <b>Seller.UserLastName</b> field will stop being returned in <b>GetItemTransactions</b> and <b>GetSellerTransactions</b> on January 31, 2024.
    /// 						</span>
    /// 					
    /// </remarks>

	public string UserLastName { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is used to set/display details related to VAT (Value-Added Tax) and Business Seller features.
/// 				<br>
/// 				<br>
/// 				<span class="tablenote"><b>Note:</b>
/// 					VAT is not applicable to all countries, including the US. Sellers must be registered as Business Sellers on the site they are selling on in order to use the Business Seller-related fields.
/// 				</span>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class VATDetailsType {

#region 属性
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllBusinessSellerDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field should be included in an Add/Revise/Relist call and set to <code>true</code> if the seller is registered on the selling site as a Business Seller. This field must be included and set to <code>true</code> if the <b>RestrictedToBusiness</b> field is also included and set to <code>true</code>. The <b>RestrictedToBusiness</b> field is used by German (Site ID 77), Austrian (Site ID 16), and Swiss (Site ID 193) sellers who wish to restrict sales of their item to other users registered as business users.
    /// 						<br><br>
    /// 						This field is returned in 'Get' calls only if set on the listing, and the person making the call owns the listing. However, other Business Seller-related information will be returned to all users in 'Get' calls under the <b>SellerInfo</b> and <b>BusinessSellerDetails</b> containers.
    /// 					
    /// </remarks>

	public bool? BusinessSeller { get; set; }
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemNo
    /// GetBidderListBusinessSellerDetailsConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllBusinessSellerDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field must be included in an Add/Revise/Relist call and set to <code>true</code> if a German (Site ID 77), Austrian (Site ID 16), or Swiss (Site ID 193) seller wishes to restrict sales of their item to other users registered on eBay as business users. If this field is set as <code>true</code>, the <b>BusinessSeller</b> field must also be included and set to <code>true</code>. This feature is not available on any other eBay marketplaces.
    /// 						<br><br>
    /// 						This field can be included and set to <code>true</code> only by Business Sellers registered on one of the three sites above, and only if the listing category supports Business-to-Business listings. The <b>GetCategories</b> call can be used by the seller (using one of the Site IDs above) to see which categories support Business-to-Business listings. A <b>B2BVATEnabled</b> boolean field will be returned as <code>true</code> if a listing category supports Business-to-Business listings.
    /// 						<br><br>
    /// 						This field is returned in 'Get' calls only if set on the listing, and the person making the call owns the listing. However, other Business Seller-related information will be returned to all users in 'Get' calls under the <b>SellerInfo</b> and <b>BusinessSellerDetails</b> containers.
    /// 					
    /// </remarks>

	public bool? RestrictedToBusiness { get; set; }
    /// <summary>
    /// 0.0
    /// 27.0
    /// 4
    /// 4AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemConditionally
    /// GetBidderListItemConditionally
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container is used in an Add/Revise/Relist call to set the VAT (Value-added Tax) percentage rate that will be charged to buyers when an item is purchased from the listing.
    /// 						<br/><br/>
    /// 						VAT is not applicable to all countries, including the US. Allowed VAT percentage rates can vary by region/country, so sellers should be aware of the rates they are legally required/allowed to charge, and they are responsible for charging the correct VAT rate.
    /// 						<br/><br/>
    /// 						If VAT is charged on a listing, the seller can choose to print an invoice for the buyer that shows the item's net price, the VAT percentage rate, the VAT amount, and the total price.
    /// 						<br/><br/>
    /// 						This field is returned in 'Get' calls only if the listing is subject to VAT.
    /// 						<br>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 							Previously, up to three digits beyond the decimal point were allowed for this float value, but now a seller can include only one digit beyond the decimal point (e.g. 12.3) when using an Add/Revise/Relist call to set this value. An error will occur if more digits beyond the decimal point are specified.
    /// 						</span>
    /// 					
    /// </remarks>

	public float? VATPercent { get; set; }
    /// <summary>
    /// GetItemConditionallyBusinessSellerDetailsDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						This string value is the Site ID value of the eBay Marketplace where the VAT is applicable and where the seller is registered as a Business Seller.
    /// 						<br/><br/>
    /// 						The eBay sites that support VAT (and their corresponding Site IDs) can be found in the <a href="https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/taxes-vat.html" target="_blank">Value-added tax (VAT)</a> topic.
    /// 					
    /// </remarks>

	public string VATSite { get; set; }
    /// <summary>
    /// GetItemConditionallyBusinessSellerDetailsDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						This is the unique VAT identifier associated with the Business Seller's account. This field will only be returned to Business Sellers who own the specified listing.
    /// 						<br/><br/>
    /// 						Non-Business Sellers will not have a VAT identifier associated with their account, so this field will never be returned for those users.
    /// 					
    /// </remarks>

	public string VATID { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				If present, the site defines category settings for when the seller 
/// 				can provide a Vehicle Identification Number (VIN) for 
/// 				US, CA, and CAFR eBay Motors sites. VIN is required for cars and trucks 
/// 				from model year 1981 and later. (The US developed national standards for VIN 
/// 				values as of 1981.)
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class VINSupportedDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				If present, the site defines category settings for whether the seller 
/// 				can provide a Vehicle Registration Mark (VRM) for a 
/// 				UK eBay Motors vehicle listing.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class VRMSupportedDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// GetCategoryFeaturesDetailLevel: none, ReturnSummary, ReturnAllConditionally
/// </summary>
/// <remarks>
/// 
/// 				Defines the value category feature. If a field of this type is present,
/// 				the corresponding feature applies to the site. The field is returned as 
/// 				an empty element (e.g., a boolean value is not returned).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ValueCategoryDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Defines the Value Pack feature (a feature pack). If the field is present, the corresponding feature applies to the category. The field is returned as an empty element (i.e., a boolean value is not returned).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class ValuePackEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>VariationDetails</b> container that is returned in
/// 				<b>GeteBayDetails</b> if <b>VariationDetails</b> is included
/// 				in the request as a <b>DetailName</b> filter, or if <b>GeteBayDetails</b>
/// 				is called with no <b>DetailName</b> filters.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class VariationDetailsType {

#region 属性
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This value indicates the maximum number of item variations that the site will allow within one multi-variation listing.
    /// 					
    /// </remarks>

	public int? MaxVariationsPerItem { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This value indicates the maximum number of variation specific sets that the site will allow per listing. Typical variation specific sets for clothing may be 'Color', 'Size', 'Long Sleeve', etc.
    /// 					
    /// </remarks>

	public int? MaxNamesPerVariationSpecificsSet { get; set; }
    /// <summary>
    /// GeteBayDetailsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This value indicates the maximum number of values that the site will allow within one variation specific set. For example, if the variation specific set was 'Color', the seller could specify as many colors that are available up to this maximum value.
    /// 					
    /// </remarks>

	public int? MaxValuesPerVariationSpecificsSetName { get; set; }
    /// <summary>
    /// GeteBayDetailsAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Returns the latest version number for this field. The version can be
    /// 						used to determine if and when to refresh cached client data.
    /// 					
    /// </remarks>

	public string DetailVersion { get; set; }
    /// <summary>
    /// GeteBayDetailsAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						Gives the time in GMT that the feature flags for the details were last
    /// 						updated. This timestamp can be used to determine if and when to refresh
    /// 						cached client data.
    /// 					
    /// </remarks>

	public System.DateTime? UpdateTime { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type specifies variation-specific Extended Producer Responsibility information, specifically the <strong>EcoParticipationFee</strong>. For multiple-variation listings, this type's <b>EcoParticipationFee</b> is used and not the <b>EcoParticipationFee</b> in the <b>ExtendedProducerResponsibility</b> type. This type is supported by a limited number of sites and specific categories. Use the <a href="../../../../../api-docs/sell/metadata/resources/marketplace/methods/getExtendedProducerResponsibilityPolicies" target="_blank">getExtendedProducerResponsibilityPolicies</a> method of the <b>Sell Metadata API</b> to retrieve valid categories for a site. <br/><br/>For <b>GetItem</b> calls, this container is only returned to the listing owner, if the container is available.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class VariationExtendedProducerResponsibilityType {

#region 属性
    /// <summary>
    /// 16
    /// 0.0
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemNo
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This is the fee paid for new items to the eco-organization (for example, "eco-organisme" in France) fee for each variation in a multiple-variation listing. It is a contribution to the financing of the elimination of the item responsibly. For multiple-variation listings, this <b>EcoParticipationFee</b> (in the <b>VariationExtendedProducerResponsibility</b> container) is used and not the <b>EcoParticipationFee</b> in the <b>ExtendedProducerResponsibility</b> container.
    /// 					
    /// </remarks>

	public AmountType EcoParticipationFee { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type used by the <b>VariationKey</b> container to identify one or more item variations to either add or remove from an eBay user's Watch List.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class VariationKeyType {

#region 属性
    /// <summary>
    /// AddToWatchListRemoveFromWatchListConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								The unique identifier of the fixed-price listing whose variation(s) should be added to or removed from the watch list.
    /// 							
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// AddToWatchListRemoveFromWatchListConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This container is used to identify one or more item variations within the multiple-variation listing. If the specified name-value pairs do not match any item variation, the call behaves as if no variations were specified.
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("NameValueList", IsNullable = false)]

	public System.Collections.Generic.List<NameValueListType> VariationSpecifics { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type defines the <b>VariationProductListingDetails</b> container that is used to specify a Global Trade Item Number (GTIN), such as an EAN, an ISBN, or a UPC value, to identify a specific product variation in a multiple-variation listing. For a multiple-variation listing, the same GTIN type(s) must be used for all product variations within the same listing. For instance, if specify an ISBN value for one product variation within the listing, an ISBN value (and not an EAN or UPC value) must be specified for all product variations within the listing.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class VariationProductListingDetailsType {

#region 属性
    /// <summary>
    /// AddFixedPriceItemRelistFixedPriceItemReviseFixedPriceItemConditionally
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetSellerEventsConditionallyDetailLevel: none, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is used if the seller wants to, or is required to identify each product variation within a multiplge-variation listing by an ISBN (International Standard Book Number) value. An ISBN is a unique identifer for books. Both 10 and 13-character ISBNs are supported. When specifying a 13-character ISBN, the value must begin with either '978' or '979'. The seller can use the <b>GetCategoryFeatures</b> call to see if an ISBN is supported/required for a category.
    /// 						<br/><br/>
    /// 						<span class="tablenote"><b>Note: </b>
    /// 						If the listing is being posted to a category that expects ISBN values, but one doesn't exist for the product, the seller must pass in the text that can be found in the <b>ProductDetails.ProductIdentifierUnavailableText</b> field of the <b>GeteBayDetails</b> response. To get the <b>ProductDetails</b> container to return in the <b>GeteBayDetails</b> response, <code>ProductDetails</code> should be included as a <b>DetailName</b> value in the call request.
    /// 						</span>
    /// 					
    /// </remarks>

	public string ISBN { get; set; }
    /// <summary>
    /// AddFixedPriceItemRelistFixedPriceItemReviseFixedPriceItemConditionally
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetSellerEventsConditionallyDetailLevel: none, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is used if the seller wants to, or is required to identify each product variation within a multiple-variation listing by a UPC (Universal Product Code) value. A UPC is a commonly-used identifier for many different products. The seller can use the <b>GetCategoryFeatures</b> call to see if a UPC is supported/required for a category.
    /// 						<br/><br/>
    /// 						<span class="tablenote"><b>Note: </b>
    /// 						If the listing is being posted to a category that expects UPC values, but one doesn't exist for the product, the seller must pass in the text that can be found in the <b>ProductDetails.ProductIdentifierUnavailableText</b> field of the <b>GeteBayDetails</b> response. To get the <b>ProductDetails</b> container to return in the <b>GeteBayDetails</b> response, <code>ProductDetails</code> should be included as a <b>DetailName</b> value in the call request.
    /// 						</span>
    /// 					
    /// </remarks>

	public string UPC { get; set; }
    /// <summary>
    /// AddFixedPriceItemRelistFixedPriceItemReviseFixedPriceItemConditionally
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetSellerEventsConditionallyDetailLevel: none, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is used if the seller wants to, or is required to identify each product variation within a multiple-variation listing by an EAN (European Article Number) value. An EAN is a unique 8 or 13-digit identifier that many industries (such as book publishers) use to identify products. The seller can use the <b>GetCategoryFeatures</b> call to see if an EAN is supported/required for a category.
    /// 						<br/><br/>
    /// 						<span class="tablenote"><b>Note: </b>
    /// 						If the listing is being posted to a category that expects EAN values, but one doesn't exist for the product, the seller must pass in the text that can be found in the <b>ProductDetails.ProductIdentifierUnavailableText</b> field of the <b>GeteBayDetails</b> response. To get the <b>ProductDetails</b> container to return in the <b>GeteBayDetails</b> response, <code>ProductDetails</code> should be included as a <b>DetailName</b> value in the call request.
    /// 						</span>
    /// 					
    /// </remarks>

	public string EAN { get; set; }
    /// <summary>
    /// 38 (42 with "EPID")
    /// AddFixedPriceItemRelistFixedPriceItemReviseFixedPriceItemVerifyAddFixedPriceItemConditionally
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						<span class="tablenote"><b>Note: </b> DO NOT USE.<br/><br/>Currently, sellers cannot associate an eBay catalog product with single variations within a multiple-variation listing for any eBay category. If the seller attempts to supply an eBay Product Identifier (ePID) at the variation level, a warning will get returned in the response stating that, '<i>Specifying a product identifier on a variant is not allowed in this category.</i>'.<br/><br/>The <b>ProductReferenceID</b> field was originally added as part of the Product-Based Shopping Experience (PBSE) mandate, and eBay was going to allow and even require ePIDs to be specified for some leaf categories. However, with the rollback of the PBSE mandate, this field is not currently applicable or supported.
    /// 						</span>
    /// 					
    /// </remarks>

	public string ProductReferenceID { get; set; }
    /// <remarks>
    /// 
    /// 						This container is for future use. If it used, it will be ignored.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("NameValueList")]

	public System.Collections.Generic.List<NameValueListType> NameValueList { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 			 Type defining the <b>VariationSpecificPictureSet</b> container, which is
/// 			 used to specify the URL(s) where the picture(s) of the variation specific will be
/// 			 hosted. If the <b>Variations.Pictures</b> container is used, at least one
/// 			 <b>VariationSpecificPictureSet</b> container is required.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class VariationSpecificPictureSetType {

#region 属性
    /// <summary>
    /// AddFixedPriceItemReviseFixedPriceItemRelistFixedPriceItemVerifyAddFixedPriceItemConditionally
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						A value that is associated with <b>VariationSpecificName</b>. For example,
    /// 						suppose this set of pictures is showing blue shirts, and some of
    /// 						the variations include Color=Blue in their variation specifics.
    /// 						If <b>VariationSpecificName</b> is  <code>Color </code>, then <b>VariationSpecificValue</b> would be <code>Blue</code>.
    /// 					
    /// </remarks>

	public string VariationSpecificValue { get; set; }
    /// <summary>
    /// AddFixedPriceItemReviseFixedPriceItemRelistFixedPriceItemVerifyAddFixedPriceItemConditionally
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 					The URL of a picture that is associated with the
    /// 					<b>VariationSpecificValue</b>. A variation specific picture set can
    /// 					consist of up to 12 self-hosted or eBay Picture Services (EPS) hosted pictures. eBay Picture
    /// 					Services and self-hosted images can never be combined into the same variation
    /// 					specific picture set. To specify more than one image, use
    /// 					multiple <b>PictureURL</b> fields, passing in a distinct URL in each
    /// 					of those fields. This field cannot have an empty/null value. The <b>UploadSiteHostedPictures</b> call can be used to upload pictures to EPS. Note that if pictures are externally-hosted, they must be hosted on a site that is using the 'https' protocol.
    /// 					<br><br>
    /// 					The image specified in the first <b>PictureURL</b> field is also used as the thumbnail image for applicable variations. For example, if the picture set contains pictures of red
    /// 					shirts (i.e., VariationSpecificName=Color and VariationSpecificValue=Red), the
    /// 					first picture is used as the thumbnail image for all the red shirt variations.
    /// 
    /// 					<br/><br/>
    /// 					<span class="tablenote"><b>Note: </b>
    /// 					Up to 12 pictures may be specified for one variation within a multiple-variation listing.
    /// 					</span>					
    /// 					
    /// 					<br/>
    /// 					<span class="tablenote"><b>Note: </b>
    /// 					All images, whether they are hosted by EPS or self-hosted, must comply with eBay picture requirements, including the requirement that all images must be at least 500 pixels on its longest side. If the image does not satisfy the 500 pixels requirement, the listing may be blocked. For more information about other requirements and tips for adding pictures to listings, see the  <a href="https://www.ebay.com/help/selling/listings/adding-pictures-listings?id=4148">Adding pictures to your listings</a> help page.
    /// 					</span>
    /// 
    /// 					You can use Item.PictureDetails to specify additional pictures.
    /// 					For example, the item-level pictures could include a model wearing a
    /// 					black shirt, as a typical example of the shirt style.
    /// 					<br><br>
    /// 					<span class="tablenote"><b>Note:</b>
    /// 					If a URL contains spaces, those spaces can be replaced with <code>%20</code>. For example, <code>https://example.com/my image.jpg</code> must be submitted as <code>https://example.com/my%20image.jpg</code> to replace the space in the image file name. However, a semicolon character (;) cannot be replaced with <code>%20</code>, so a semicolon cannot be a part of the URL, as an error will occur.
    /// 					</span>
    /// 					Variation pictures cannot be added or removed from a fixed-price listing when the listing is scheduled to end within 12 hours or if the item variation has already had transactions.
    /// 					<br/><br/>
    /// 					<span class="tablenote">
    /// 					<strong>Note:</strong> For some large merchants, there are no limitations on when variation pictures can be added or removed from a fixed-price listing, even when the item variation has had transactions or is set to end within 12 hours.
    /// 					</span>
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("PictureURL")]

	public System.Collections.Generic.List<string> PictureURL { get; set; }
    /// <summary>
    /// 150
    /// https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/picture-hosting.htmlPicture hosting
    /// GetItemConditionallyoutputSelector: Variations
    /// </summary>
    /// <remarks>
    /// 
    /// 						Returns the URL of a variation-specific picture that is hosted outside of eBay.<br>
    /// 						<br>
    /// 						When you list, revise, or relist a variation, use VariationSpecificPictureSet.PictureURL (not ExternalPictureURL) to specify your self-hosted picture or EPS picture.<br>
    /// 						<br/>
    /// 						<span class="tablenote"><b>Note: </b>
    /// 						All images must comply to the <a href="https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/pictures.html">Picture Requirements</a>.
    /// 						</span>
    /// 						This is returned only when the seller used a self-hosted picture for the variation.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("ExternalPictureURL")]

	public System.Collections.Generic.List<string> ExternalPictureURL { get; set; }
    /// <summary>
    /// GetItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Returns the URLs of the seller's self-hosted (hosted outside of eBay) variation specific pictures and the URL for the corresponding eBay Picture Services (EPS), that was generated when the picture was uploaded.
    /// 					
    /// </remarks>

	public ExtendedPictureDetailsType ExtendedPictureDetails { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is used by the <b>Variation</b> container, which provides full details on each item variation in a multiple-variation listing.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class VariationType {

#region 属性
    /// <summary>
    /// 80
    /// SKU identifiershttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/skus.html
    /// AddFixedPriceItemReviseFixedPriceItemRelistFixedPriceItemVerifyAddFixedPriceItemConditionally
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// GetItemTransactionsTransactionDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// 1309Avoid1349Transaction.VariationGetItemTransactionsItemDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetMyeBaySellingActiveListScheduledListSoldListUnsoldListDetailLevel: none, ReturnAllConditionally
    /// GetSellerEventsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						<br>
    /// 						A SKU (stock keeping unit) is a seller-defined identifier. It is only intended for the seller's use (not for buyers). A SKU value is not required, but many large sellers like to add SKU value to their listings. If defined on a listing, a SKU value can be used by sellers to reconcile their eBay inventory with your own inventory system, instead of using the <b>VariationSpecifics</b> identifying values.
    /// 						<br>
    /// 						<br>
    /// 						If specified, all SKU values must be unique within the <b>Variations</b>
    /// 						node. That is, no two variations within the same listing can have
    /// 						the same SKU. <br>
    /// 						<br>
    /// 						If you include the <b>Item.InventoryTrackingMethod</b> field in an 'FixedPriceItem' call and set its value to <code>SKU</code>,
    /// 						the <b>Variation.SKU</b> values become required for each variation..<br>
    /// 						<br>
    /// 						<b>For GetItem, GetOrders and other 'Get' calls:</b> Only returned if the
    /// 						seller specified a SKU for the variation.
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> The <b>Item.Variations</b> container and its child fields will stop being returned in <b>GetItemTransactions</b> on January 31, 2024. 
    /// 						</span>
    /// 					
    /// </remarks>

	public string SKU { get; set; }
    /// <summary>
    /// Pricinghttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/variations.html#price
    /// AddFixedPriceItemReviseFixedPriceItemRelistFixedPriceItemVerifyAddFixedPriceItemConditionally
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetSellerEventsDetailLevel: none, ReturnAllConditionally
    /// 1309Avoid1349Transaction.VariationGetItemTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllVariations.VariationConditionally
    /// GetMyeBaySellingActiveListScheduledListSoldListUnsoldListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						<br>
    /// 						The fixed price for this item variation.
    /// 						For example, a "Blue, Large" variation price could be USD 10.00,
    /// 						and a "Black, Medium" variation price could be USD 5.00.<br>
    /// 						<br>
    /// 						Each variation requires this field, and the prices can be the same for all variations, or
    /// 						be different for each variation. This enables sellers to
    /// 						provide discounts on certain
    /// 						variations without affecting the price of others.
    /// 						Required (and always returned) for listings with variations.<br>
    /// 						<br>
    /// 						You can revise a variation's price at any time (even if it
    /// 						has purchases). When you modify a variation during revise or
    /// 						relist, you need to include both its <b>StartPrice</b> and <b>Quantity</b>.
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> The <b>Item.Variations</b> container and its child fields will stop being returned in <b>GetItemTransactions</b> on January 31, 2024. 
    /// 						</span>
    /// 					
    /// </remarks>

	public AmountType StartPrice { get; set; }
    /// <summary>
    /// Set and adjust a variation's quantityhttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/variations.html#qty
    /// Out-of-Stock controlhttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/out-of-stock.html
    /// AddFixedPriceItemReviseFixedPriceItemRelistFixedPriceItemVerifyAddFixedPriceItemYes
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetMyeBaySellingActiveListScheduledListSoldListUnsoldListDetailLevel: none, ReturnAllConditionally
    /// GetSellerEventsDetailLevel: none, ReturnAllConditionally
    /// 1309Avoid1349Transaction.VariationGetItemTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllVariations.VariationConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						<br/>
    /// 						This value indicates the quantity of the specific variation that are
    /// 						available for purchase. If you set <b>Variation.Quantity</b> to <code>0</code> when
    /// 						you create, revise, or relist an item listing, the variation is dropped from
    /// 						the listing. To prevent this, you can set
    /// 						<a href="https://developer.ebay.com/DevZone/XML/docs/Reference/ebay/SetUserPreferences.html#Request.OutOfStockControlPreference">SetUserPreferences.OutOfStockControlPreference</a> to <code>true</code>.
    /// 						<br/><br/>
    /// 						For <b>GetItem</b> (and other related calls that retrieve the Item
    /// 						object), the <b>Variation.Quantity</b> value indicates the total quantity associated with the variation, including the quantity available and the
    /// 						quantity sold. To calculate the quantity available for sale, subtract
    /// 						<b>SellingStatus.QuantitySold</b> from this value.<br>
    /// 						<br>
    /// 						<b>For RelistFixedPriceItem:</b>
    /// 						<ul>
    /// 						<li>For an item variation that had an available quantity greater than <code>0</code> when the listing ended, the <b>Quantity</b> value of the item variation for  the newly relisted item is set to the actual quantity available. For item variations, there is actually no <b>QuantityAvailable</b> field, but this value may be derived if you look at the corresponding item variation in a <b>GetMyeBaySelling</b>) response and subtract the <b>Variation.QuantitySold</b> value from the <b>Variation.Quantity</b> value, which represents the original <b>Variation.Quantity</b> value at creation time of the previous listing. </li>
    /// 						<li>For item variations with an available quantity of <code>0</code> when the listing ended, the relisted item will retain the <b>Variaton.Quantity</b> value that was passed in at creation time of the previous listing.   </li>
    /// 						</ul>
    /// 						So, if you are relisting an item that had one or more item variations with an available quantity of <code>0</code> when the listing ended, we strongly recommend that you pass in the correct available quantity through the corresponding <b>Variation.Quantity</b> field of a relist call. Alternatively, you can update the correct quantity available by using a <b>ReviseInventoryStatus</b> call and passing in a <b>Quantity</b> value, while also making sure to pass in the correct <b>SKU</b> value(s) to identify the correct item variation. A <b>ReviseInventoryStatus</b> call can be used to revise the quantity of up to four single item listings and/or item variations (from the same or different listings).
    /// 						<br> <br>
    /// 						<b>For ReviseFixedPriceItem:</b>
    /// 						You can revise a variation's quantity at any time, even if
    /// 						it has purchases. However, unless you set the <a href="https://developer.ebay.com/DevZone/XML/docs/Reference/ebay/SetUserPreferences.html#Request.OutOfStockControlPreference">OutOfStockControlPreference</a> boolean field of the <b>SetUserPreferences</b> call to <code>true</code>, at least one variation must remain
    /// 						with a non-zero quantity in order for the listing to remain active. If you set the <b>OutOfStockControlPreference</b> field to <code>true</code>, a multiple-variation listing will remain active but hidden from search even if the quantity of all variations in the listing is set to <code>0</code>.
    /// 						When you modify a variation during revise or
    /// 						relist, you need to include both its <b>StartPrice</b> and <b>Quantity</b>.
    /// 						If you revise the <b>Quantity</b> value for a variation after items have
    /// 						already sold, specify the quantity available for sale.
    /// 						(eBay will automatically add the
    /// 						quantity sold to the value you specify.) If you set the quantity to
    /// 						<code>0</code> and the variation has no purchases, the variation may be
    /// 						dropped from the listing.
    /// 						<br> <br>
    /// 						<b>For GetSellerTransactions:</b> See <b>Item.Quantity</b> instead.<br>
    /// 						<br>
    /// 						See the <a href="https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/update-variations.html" target="_blank">Trading API User Guide</a>
    /// 						for more details about setting and modifying a variation's quantity.
    /// 						<br><br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						The number in the <b>Variation.Quantity</b> field represents the current quantity of the item variation that is available using the "Ship to home" fulfillment method. This number does not take into account any quantity of the item variation that is available through "local" fulfillment methods such as In-Store Pickup or Click and Collect. This is due to the fact that there is no current implementation (or API field) where the seller informs eBay about the quantity of item variations available through each local fulfillment method. In the case where a listing is only offering the item variations through a local fulfillment method, this value should default to <code>0</code>, and the <b>Item.IgnoreQuantity</b> will also be returned as <code>True</code>.
    /// 						</span>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> The <b>Item.Variations</b> container and its child fields will stop being returned in <b>GetItemTransactions</b> on January 31, 2024. 
    /// 						</span>
    /// 					
    /// </remarks>

	public int? Quantity { get; set; }
    /// <summary>
    /// 2
    /// 5
    /// Configure variation-selection widgets for buyers (View Item)https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/variations.html#widgets
    /// Revise and relist with variationshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/update-variations.html
    /// AddFixedPriceItemReviseFixedPriceItemRelistFixedPriceItemVerifyAddFixedPriceItemConditionally
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetItemTransactionsGetSellerTransactionsTransaction.VariationDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// 1309Avoid1349Transaction.VariationGetItemTransactionsItem.Variations.VariationDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetMyeBayBuyingLostListWatchListWonListDeletedFromWonListDeletedFromLostListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingActiveListScheduledListSoldListUnsoldListDetailLevel: none, ReturnAllConditionally
    /// GetSellerEventsDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						<br>
    /// 						A list of name/value pairs that uniquely identify the variation within
    /// 						the listing. All variations must specify the same set of Item Specific names, but
    /// 						each variation must provide a unique combination of values for those
    /// 						Item Specific names. For example, if the items vary by color and size, then every
    /// 						variation must specify 'Color' and 'Size' as Item Specific names, but no two
    /// 						variations can specify the same combination of 'Color' and 'Size' values.<br>
    /// 						<br>
    /// 						When you revise a listing that includes variations, you can
    /// 						change names of <b>Variationpecifics</b> by using the <b>Variations.ModifyNameList</b> container. You can also add, delete, or replace individual variations as needed to match your
    /// 						current inventory. Use the <b>Variation.Delete</b> field to delete a variation that has no sales (order line items). If the variation has
    /// 						sales, then set the Quantity to 0.<br>
    /// 						<br>
    /// 						<b>For GetSellerEvents</b> To keep the <b>GetSellerEvents</b>
    /// 						response smaller, <b>Variationpecifics</b> are not returned if the
    /// 						variation has a SKU. If the variation has no SKU, then
    /// 						<b>Variationpecifics</b> are returned instead. Optionally, you can pass
    /// 						<b>IncludeVariationSpecifics</b> as <code>true</code> in the request to force
    /// 						<b>Variationpecifics</b> to be returned, even when the SKU is returned.
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> The <b>Item.Variations</b> container and its child fields will stop being returned in <b>GetItemTransactions</b> on January 31, 2024. 
    /// 						</span>
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("NameValueList", IsNullable = false)]

	public System.Collections.Generic.List<NameValueListType> VariationSpecifics { get; set; }
    /// <summary>
    /// GetItemConditionally
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetMyeBaySellingActiveListScheduledListSoldListUnsoldListDetailLevel: none, ReturnAllConditionally
    /// GetSellerEventsDetailLevel: none, ReturnAllConditionally
    /// 1309Avoid1349Transaction.VariationGetItemTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllVariations.VariationConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Contains the variation's quantity sold. Always returned when variations are present.
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> The <b>Item.Variations</b> container and its child fields will stop being returned in <b>GetItemTransactions</b> on January 31, 2024. 
    /// 						</span>
    /// 					
    /// </remarks>

	public SellingStatusType SellingStatus { get; set; }
    /// <summary>
    /// 120
    /// GetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// GetItemTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllTransaction.VariationConditionally
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// GetMyeBaySellingActiveListScheduledListSoldListUnsoldListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The title of the variation. This is a concatenation of the listing
    /// 						title plus the values (no names) from <b>Variationpecifics</b>.
    /// 						For example, if the Title is "Polo Shirt" and the variation is
    /// 						for a medium pink shirt, the variation title could be
    /// 						"Polo Shirt[Pink,M].
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> The <b>Item.Variations</b> container and its child fields will stop being returned in <b>GetItemTransactions</b> on January 31, 2024. 
    /// 						</span>
    /// 					
    /// </remarks>

	public string VariationTitle { get; set; }
    /// <summary>
    /// GetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// GetItemTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllTransaction.VariationConditionally
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						URL for the variation on eBay. This links to eBay's View Item page,
    /// 						with the page configured to show details of the specified variation.
    /// 						The syntax of this URL is similar to Item.ViewItemURL (not optimized
    /// 						for natural search).
    /// 					
    /// </remarks>

	public string VariationViewItemURL { get; set; }
    /// <summary>
    /// ReviseFixedPriceItemRelistFixedPriceItemConditionally
    /// false
    /// </summary>
    /// <remarks>
    /// 
    /// 						If this field is included and set to <b>true</b>, the corresponding variation is deleted from the listing with a successful call. In general,
    /// 						a listing with variations must have at least one
    /// 						variation with a non-zero quantity in order to remain active.
    /// 						Additional deletion rules depend
    /// 						on whether you are revising or relisting.<br>
    /// 						<br>
    /// 						<b>For ReviseFixedPriceItem only</b>:
    /// 						This boolean field can now be used in a Revise call to delete a variation even if the variation still has quantity and/or has had one or more previous sales during the life of the listing. Previously, if a variation had any purchases, you could not delete the variation, but only set its quantity to zero.
    /// 						<br>
    /// 						<br>
    /// 						To replace a varation, you can delete it and add the new
    /// 						or corrected one.
    /// 						However, you can't specify the same SKU twice in the
    /// 						same request (because the intent would be ambiguous).
    /// 						So, either use a new SKU for the newer variation,
    /// 						or use the call twice (once to delete the variation, and
    /// 						once to add the new variation with the same SKU).<br>
    /// 						<br>
    /// 						<b>For RelistFixedPriceItem only</b>:
    /// 						You can delete any variation, as long as the relisted listing
    /// 						includes at least 1 variation with a non-zero quantity.
    /// 						(That is, when you relist, you could delete all but one variation,
    /// 						or you could delete all existing variations and add a new one.)
    /// 					
    /// </remarks>

	public bool? Delete { get; set; }
    /// <summary>
    /// GetMyeBaySellingActiveListScheduledListSoldListUnsoldListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The number of watches placed on this variation by eBay users.
    /// 					
    /// </remarks>

	public long? WatchCount { get; set; }
    /// <summary>
    /// GetMyeBaySellingActiveListScheduledListUnsoldListDetailLevel: none, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						A note a user makes on an item with variations in My eBay.
    /// 						<br>
    /// 						<br>
    /// 						For eBay.com, only GetMyeBaySelling (not GetItem) returns this
    /// 						field, and only if you pass IncludeNotes in the request.
    /// 						Only visible to the user who created the note.<br>
    /// 						<br>
    /// 						Not supported as input in ReviseFixedPriceItem.
    /// 						Use SetUserNotes instead.<br>
    /// 						<br>
    /// 						In SoldList, notes for variations are only returned at the
    /// 						Item level, not the variation level.
    /// 					
    /// </remarks>

	public string PrivateNotes { get; set; }
    /// <summary>
    /// Discount pricinghttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/discount-pricing.html
    /// AddFixedPriceItemAddItemRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddFixedPriceItemVerifyAddItemVerifyRelistItemNo
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container provides information for a single variation (within a multiple-variation listing) that has a Strikethrough Price (STP) or a Minimum Advertised Price (MAP) discount pricing treatment. For a multiple-variation listing, the discount pricing information should be set at the variation level and not at the item level (e.g. <b>Item.DiscountPriceInfo</b>).   STP and MAP apply only to fixed-price listings. STP is available on the US, eBay Motors, UK, Germany, Canada (English and French), France, Italy, Spain, and Ireland sites, while MAP is available only on the US site.
    /// 						<br><br>
    /// 						Discount pricing is available to qualified sellers (and their associated developers) who participate in the Discount Pricing Program. Once qualified, sellers receive a 'special account flag' (SAF) that allows them to apply Discount Pricing to both single-variation and multi-variation items. STP is intended for eBay partners and their sellers only.
    /// 						<br><br>
    /// 						As a seller listing Discount Price items, you are required to maintain records of your discount pricing in the event you are called upon to substantiate your item pricing.
    /// 					
    /// </remarks>

	public DiscountPriceInfoType DiscountPriceInfo { get; set; }
    /// <summary>
    /// AddFixedPriceItemReviseFixedPriceItemRelistFixedPriceItemVerifyAddFixedPriceItemNo
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetSellerEventsConditionallyDetailLevel: none, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container is used to provide one or more product identifiers for a product variation within a multiple-variation, fixed-price listing. The same product identifier type(s) must be used for all product variations within the listing. For instance, if one product variation uses ISBNs, all product variations must use ISBN values.
    /// 						<br>
    /// 						<br>
    /// 						When you include the  <b>VariationProductListingDetails</b> container in a call, you must specify at least one GTIN or ePID. If an ePID is provided, a matching eBay catalog product must exist for the value that is passed in.
    /// 						<br>
    /// 						<br>
    /// 						<b>For ReviseItem and RelistItem only:</b> When you revise a
    /// 						listing, if it ends within 12 hours, you cannot change the
    /// 						product identifier and you cannot remove existing product variation listing details data.
    /// 					
    /// </remarks>

	public VariationProductListingDetailsType VariationProductListingDetails { get; set; }
    /// <summary>
    /// AddFixedPriceItemReviseFixedPriceItemRelistFixedPriceItemVerifyAddFixedPriceItemAddItemReviseItemRelistItemVerifyAddItemVerifyRelistItemNo
    /// GetItemDetailLevel: none, ItemReturnDescription, ItemReturnAttributes, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container defines variation-specific Extended Producer Responsibility information, specifically the <strong>EcoParticipationFee</strong>. <br/><br/>For <b>GetItem</b> calls, this container is only returned to the listing owner, if the container is available.
    /// 					
    /// </remarks>

	public VariationExtendedProducerResponsibilityType VariationExtendedProducerResponsibility { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Defines the multi-variation listing feature. If the field is present, 
/// 				the  corresponding feature applies to the site. The field is returned as 
/// 				an empty element (e.g., a boolean value is not returned).<br>
/// 				<br>
/// 				Multi-variation listings contain items that are logically the same 
/// 				product, but that vary in their manufacturing details or packaging. 
/// 				For example, a particular brand and style of shirt could be 
/// 				available in different sizes and colors, such as "large blue" and 
/// 				"medium black" variations.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class VariationsEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Variations are multiple similar (but not identical) items in a
/// 				fixed-price listing.
/// 				For example, a single listing could contain multiple items of the
/// 				same brand and model that vary by color and size (like "Blue, Large" and "Black, Medium"). Each variation can have its own quantity and
/// 				price. For example, a listing could include 10 "Blue, Large"
/// 				variations and 20 "Black, Medium" variations.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class VariationsType {

#region 属性
    /// <summary>
    /// Multiple-variation listingshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/variations.html
    /// AddFixedPriceItemReviseFixedPriceItemRelistFixedPriceItemVerifyAddFixedPriceItemConditionally1120
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// GetSellerListDetailLevel: ItemReturnDescription, ReturnAllConditionally
    /// GetMyeBayBuyingLostListWatchListWonListDeletedFromWonListDeletedFromLostListDetailLevel: none, ReturnAllConditionally
    /// GetMyeBaySellingActiveListScheduledListSoldListUnsoldListDetailLevel: none, ReturnAllConditionally
    /// GetSellerEventsDetailLevel: none, ReturnAllConditionally
    /// 1309Avoid1349Transactions.VariationGetItemTransactionsItemDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						<br>
    /// 						Contains data that distinguishes one item variation from another.
    /// 						For example, if an item varies by color and size, each <b>Variation</b>
    /// 						node specifies a combination of one of those colors and
    /// 						sizes.<br>
    /// 						<br>
    /// 						When listing or relisting an item, you are allowed to create a
    /// 						listing with only one item variation, and you might have a plan to add more item variations to the listing in the future. However, if you don't plan to add other item variations in the future, we recommend that you avoid listing with only one variation, so that you avoid confusing buyers.
    /// 						<br> <br>
    /// 						If you specify multiple <b>Variation</b> containers in an add/revise/relist/verify add call to define multiple item variations, the <b>Variation</b> containers must be contiguous or an error will occur. This means that you would not want to input a <b>Pictures</b> or a <b>VariationSpecificsSet</b> container in between <b>Variation</b> containers in an API call.
    /// 						<br> <br>
    /// 						When you modify an item variation with a <b>ReviseFixedPriceItem</b> call, the best practice is to include all applicable fields under the <b>Variation</b> container, even if some of the values/settings are not being modified. The <b>StartPrice</b> and <b>VariationSpecifics</b> must be included when modifying an existing item variation, even if these values are not being changed. If a SKU value is defined for the item variation, it is strongly recommended that you include the <b>SKU</b> field, regardless of whether the SKU value is changing or not. If the <b>SKU</b> field is not included, any existing SKU value will be removed from the item variation. It is also strongly recommended that you include the <b>Quantity</b> field and input an accurate value, because if the <b>Quantity</b> field is omitted in the API call, the quantity for the item variation is set to  <code>0</code>.
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> The <b>Item.Variations</b> container and its child fields will stop being returned in <b>GetItemTransactions</b> on January 31, 2024. 
    /// 						</span>
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("Variation")]

	public System.Collections.Generic.List<VariationType> Variation { get; set; }
    /// <summary>
    /// 1
    /// Include pictures for variationshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/variations.html#pix
    /// AddFixedPriceItemReviseFixedPriceItemRelistFixedPriceItemVerifyAddFixedPriceItemNo
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 						Contains a set of pictures that correspond to one of the
    /// 						variation specifics, such as Color. For example, if a listing
    /// 						has blue and black color variations, you could choose Color
    /// 						for all the pictures, and then include a set of pictures
    /// 						for the blue variations and another set of pictures for the black
    /// 						variations.<br>
    /// 						<br>
    /// 						We strongly recommend that you also include shared pictures
    /// 						in Item.PictureDetails, as this results in a better experience
    /// 						for buyers.<br>
    /// 						<br>
    /// 						<b>For ReviseFixedPriceItem only:</b> To replace
    /// 						or delete individual pictures, pass in the entire Pictures
    /// 						node with the complete set of variation pictures that you
    /// 						want in the listing. If the applicable variations have purchases
    /// 						or the listing ends in less than 12 hours, you can add
    /// 						pictures, but you can't remove existing pictures.<br>
    /// 						<br>
    /// 						Variation, Pictures, or ModifyNameList (or all) need to be
    /// 						specified when the Variations node is specified in listing requests<br>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						Only one Pictures node is allowed for a listing.
    /// 						However, the node has been defined as unbounded (repeatable) in
    /// 						the schema to allow for different use cases for some calls or sites
    /// 						in the future.</span>
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("Pictures")]

	public System.Collections.Generic.List<PicturesType> Pictures { get; set; }
    /// <summary>
    /// Configure variation-selection widgets for buyers (View Item)https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/variations.html#widgets
    /// AddFixedPriceItemVerifyAddFixedPriceItemConditionally
    /// ReviseFixedPriceItemRelistFixedPriceItemConditionally
    /// GetItemConditionallyDetailLevel: none, ItemReturnDescription,
    /// 							ItemReturnAttributes, ReturnAll
    /// </summary>
    /// <remarks>
    /// 
    /// 					The set of all variation specific names and values that can be
    /// 					applicable to the listing (at any time in its life cycle).
    /// 					This must include all names and values specified in the
    /// 					VariationSpecifics nodes.<br>
    /// 					<br>
    /// 					Required when Variations are specified in a new listing, and when you
    /// 					modify the name of a variation by using ModifyNameList.
    /// 					When you modify variation specific names, VariationSpecificsSet  must
    /// 					include the new names plus the names that are not changing (but omit the old names), <br>
    /// 					<br>
    /// 					This set configures variation selection widgets
    /// 					that appear on eBay's  View Item page.
    /// 					For example, if you specify Color and Size names in the set,
    /// 					eBay's View Item page displays Color and Size drop-down lists
    /// 					to enable a buyer to choose a variation of interest.<br>
    /// 					<br>
    /// 					The order in which you specify the names and values also
    /// 					controls the order in which the selection widgets appear on
    /// 					the View Item page.
    /// 					For example, if you specify "Color", then "Size", and then
    /// 					"Sleeve Style" as names, the View Item page shows drop-down lists
    /// 					with those labels in that order. For "Size", if you specify
    /// 					"S", "M", and "L" as values, the View Item page
    /// 					shows the values in that order in the Size drop-down list.<br>
    /// 					<br>
    /// 					Use the <a href="/api-docs/commerce/taxonomy/resources/category_tree/methods/getItemAspectsForCategory" target="_blank">getItemAspectsForCategory</a> method of the Taxonomy API to  retrieve recommendations for names and values.<br>
    /// 					<br>
    /// 					Required when Variations are specified in a new listing
    /// 					(e.g., in AddFixedPriceItem). Also required when you change
    /// 					variation specific names or values in ReviseFixedPriceItem and
    /// 					RelistFixedPriceItem.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("NameValueList", IsNullable = false)]

	public System.Collections.Generic.List<NameValueListType> VariationSpecificsSet { get; set; }
    /// <summary>
    /// Revise and relist with variationshttps://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/update-variations.html
    /// RelistFixedPriceItemReviseFixedPriceItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Modifies variation specific names when you revise or
    /// 						relist items.<br>
    /// 						<br>
    /// 						You can modify a variation specific name regardless of the quantity sold (i.e., no restrictions on whether the item has orders or order line items (transactions)).<br>
    /// 						<br>
    /// 						(Use VariationSpecifics to modify variation specific values.)<br>
    /// 						<br>
    /// 						You are not required to specify SKU, VariationSpecifics, and other variation details in the request when you are only modifying a variation specific name.
    /// 						<br>
    /// 						<br>
    /// 						Variation, Pictures, VariationSpecificsSet, or ModifyNameList (or all) need to be specified when the Variations node is specified in listing requests.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlArrayItem("ModifyName", IsNullable = false)]

	public System.Collections.Generic.List<ModifyNameType> ModifyNameList { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is used by the <b>ReportItem</b> container. A <b>ReportItem</b> container is required for each eBay item that the product owner is reporting as violating the product owner's copyright, trademark, or intellectual property rights.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class VeROReportItemType {

#region 属性
    /// <summary>
    /// VeROReportItemsYes
    /// </summary>
    /// <remarks>
    /// 
    /// 						The unique identifier for the listing being reported for the alleged infringement, which is specified in the <b>VeROReasonCodeID</b> field.
    /// 					
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// 
    /// 
    /// VeROReportItemsYes
    /// </summary>
    /// <remarks>
    /// 
    /// 						The unique identifier for the type of claimed infringement. The
    /// 						<b>GetVeROReasonCodeDetails</b> call can be used to retrieve a list of reason codes for a given eBay site.
    /// 					
    /// </remarks>

	public long? VeROReasonCodeID { get; set; }
    /// <summary>
    /// 1000
    /// VeROReportItemsNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						This field is used by the VeRO Program member to provide more details to the seller about why the item is being reported as violating copyright, trademark, or intellectual property rights.
    /// 					
    /// </remarks>

	public string MessageToSeller { get; set; }
    /// <summary>
    /// true
    /// VeROReportItemsNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						If the VeRO Program member wants a copy of the Notice of Claimed Infringement (NOCI) document sent to their email address, this field should be included in the request and set to <code>true</code>. This same document is automatically sent to the seller of the reported item.
    /// 					
    /// </remarks>

	public bool? CopyEmailToRightsOwner { get; set; }
    /// <summary>
    /// VeROReportItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						If the infringement type stated in the <b>VeROReasonCodeID</b> has anything to do about which geographical region the item is shipped to, each region that would trigger this infringement type should be specified in its own <b>Region</b> field. Supported values for <b>Region</b> are found in <b>ShippingRegionCodeType</b>.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("Region")]

	public System.Collections.Generic.List<ShippingRegionCodeType> Region { get; set; }
    /// <summary>
    /// VeROReportItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								If the infringement type stated in the <b>VeROReasonCodeID</b> has anything to do about which country the item is shipped to, each country that would trigger this infringement type should be specified in its own <b>Country</b> field. Supported values for <b>Country</b> are found in <b>CountryCodeType</b>.
    /// 								<br><br>
    /// 								This field is required when the <b>VeROReasonCodeID</b>
    /// 								is 9037 (Item(s) is unlawful importation of product bearing trademark).
    /// 							
    /// </remarks>
[System.Xml.Serialization.XmlElement("Country")]

	public System.Collections.Generic.List<CountryCodeType> Country { get; set; }
    /// <summary>
    /// 15VeROReportItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 								This string field is used to specify the number of a product patent that is being violated.
    /// 								<br><br>
    /// 								This field is required when the <b>VeROReasonCodeID</b> is 9048 (Item(s) infringes a valid patent).
    /// 							
    /// </remarks>

	public string Patent { get; set; }
    /// <summary>
    /// 50VeROReportItemsNo
    /// </summary>
    /// <remarks>
    /// 
    /// 						The brand name of the item being reported for VeRO violation.
    /// 					
    /// </remarks>

	public string Brand { get; set; }
    /// <summary>
    /// 1000
    /// VeROReportItemsConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Explanatory text from the VeRO Program member. This field is conditionally required when the
    /// 						<b>VeROReasonCodeID</b> is <code>Others</code>. Note that there is a 1000-character restriction on this text field when the items are being reported with the <code>Others</code> reason code.
    /// 					
    /// </remarks>

	public string DetailedMessage { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>ReportedItem</b> container which is returned in the
/// 				<b>GetVeROReportStatus</b> response. The <b>ReportedItem</b>
/// 				container consists of the <b>ItemID</b> of the item that has infringed
/// 				upon the seller's copyright, trademark, or intellectual property rights, as well as the
/// 				submission status of the VeRO Report.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class VeROReportedItemType {

#region 属性
    /// <summary>
    /// GetVeROReportStatusConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						The unique identifier (<b>ItemID</b>) of the listing reported for
    /// 						copyright, trademark, or intellectual property right infringment.
    /// 						<br><br>
    /// 						This field is always returned with the <b>ReportedItem</b> container.
    /// 					
    /// </remarks>

	public string ItemID { get; set; }
    /// <summary>
    /// GetVeROReportStatusConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This value indicates the current submission status of the VeRO Report.
    /// 						<br><br>
    /// 						This field is always returned with the <b>ReportedItem</b> container.
    /// 					
    /// </remarks>

	public VeROItemStatusCodeType? ItemStatus { get; set; }
    /// <summary>
    /// GetVeROReportStatusConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						This text explanation is submitted by eBay when the submission of an VeRO Report
    /// 						has failed or was blocked.
    /// 						<br><br>
    /// 						This field is only returned with the <b>ReportedItem</b> container if
    /// 						the <b>ItemStatus</b> value is <b>SubmissionFailed</b> or
    /// 						<b>ClarificationRequired</b>.
    /// 					
    /// </remarks>

	public string ItemReasonForFailure { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type used by the <b>VeROSiteDetailType</b> container, which is returned in <b>GetVeROReasonCodeDetails</b>. Each <b>VeROSiteDetailType</b> container will contain one or more reasons how an eBay listing could possibly infringe upon the intellectual property rights of a product owner.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class VeROSiteDetailType {

#region 属性
    /// <summary>
    /// GetVeROReasonCodeDetailsAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						This enumeration value indicates the eBay site for which reason code details are returned.
    /// 					
    /// </remarks>

	public SiteCodeType? Site { get; set; }
    /// <summary>
    /// GetVeROReasonCodeDetailsAlways
    /// </summary>
    /// <remarks>
    /// 
    /// 						This container includes brief and detailed text descriptions for the VeRO program intellectual property right infringement reason. There can be multiple <b>ReasonCodeDetail</b> containers returned for each eBay site. This container also consists of a <b>codeID</b> attribute, which is the unique identifier of the reason code.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("ReasonCodeDetail")]

	public System.Collections.Generic.List<ReasonCodeDetailType> ReasonCodeDetail { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is used by the Add/Revise/Relist calls to add a video to a listing. Videos can be added to listings using the <a href="/api-docs/commerce/media/overview.html" target="_blank">Media API</a>. See the <a href="/api-docs/commerce/media/overview.html" target="_blank">Media API</a> reference documentation for all of the necessary details to upload videos to eBay.
/// 				<br/><br/>
/// 				The <b>GetItem</b> call will return the <b>VideoDetails</b> container if the listing contains a video, and the seller of the item is the one making the <b>GetItem</b> call.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class VideoDetailsType {

#region 属性
    /// <summary>
    /// AddFixedPriceItemAddItemAddItemsRelistFixedPriceItemRelistItemReviseFixedPriceItemReviseItemVerifyAddItemVerifyAddFixedPriceItemVerifyRelistItemNo
    /// GetItemConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						Unique identifier of a video. This identifier is automatically created by eBay once a seller successfully uploads a video to eBay. Videos can be added using the <a href="/api-docs/commerce/media/resources/video/methods/uploadVideo" target="_blank">uploadVideo</a> method of the <a href="/api-docs/commerce/media/overview.html" target="_blank">Media API</a>.
    /// 						<br/><br/>
    /// 						In an Add/Revise/Relist call, passing in the ID for the video will add the video to the listing. Although a video can be added to a listing before it is in the <code>LIVE</code> state, the video won't be available for viewing in the listing until it does reach this state. The status of an uploaded video can be retrieved with the <a href="/api-docs/commerce/media/resources/video/methods/getVideo" target="_blank">getVideo</a> method and seen in the <a href=" /api-docs/commerce/media/resources/video/methods/getVideo#response.status" target="_blank">status</a> field of the response.
    /// 						<br/><br/>
    /// 						To replace a video already attached to the listing, the seller could make a Revise or Relist call and just send in a different <b>VideoID</b> value. As long as the <b>VideoID</b> value was valid, the specified video would replace the existing video in the listing.
    /// 						<br/><br/>
    /// 						To remove a video from a listing (and not replace it) using a Revise or Relist call, the seller can include a <b>DeletedField</b> tag in the request and set its value to <code>Item.VideoDetails.VideoID</code>. If the call is successful, the video will be removed from the listing.
    /// 						<br/><br/>
    /// 						<span class="tablenote"><b>Note: </b> eBay will perform a validation check on each specified <b>VideoID</b> value to verify that the video belongs to, and was uploaded by the seller.
    /// 						</span>
    /// 						<br/>
    /// 						The <b>GetItem</b> call can be used by the seller to see which video (if any) is attached to the listing. The <b>VideoDetails</b> container will be returned if the listing contains a video. The <b>VideoDetails</b> container will only be returned to the seller of the item and no one else.
    /// 					
    /// </remarks>
[System.Xml.Serialization.XmlElement("VideoID")]

	public System.Collections.Generic.List<string> VideoID { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>eBayMotorsProAdFormatEnabled</b> field that is returned under the <b>FeatureDefinitions</b> container if <code>eBayMotorsProAdFormatEnabled</code> is used as a <b>FeatureID</b> value in the request, or if no <b>FeatureID</b> values are used in the request. This field is returned as an empty element (a boolean value is not returned) if one or more eBay API-enabled sites support Classified Ad listings for eBay Motors Pro users.
/// 				<br/><br/>
/// 				To verify if a specific eBay site supports Classified Ad listings for eBay Motors Pro users (for most categories), look for a <code>true</code> value in the <b>SiteDefaults.eBayMotorsProAdFormatEnabled</b> field.
/// 				<br/><br/>
/// 				To verify if a specific category on a specific eBay site supports Classified Ad listings for eBay Motors Pro users, pass in a <b>CategoryID</b> value in the request, and then look for a <code>true</code> value in the <b>eBayMotorsProAdFormatEnabled</b> field of the corresponding <b>Category</b> node (match up the <b>CategoryID</b> values if more than one Category IDs were passed in the request).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class eBayMotorsProAdFormatEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>eBayMotorsProAutoAcceptEnabled</b> field that is returned under the <b>FeatureDefinitions</b> container if <code>eBayMotorsProAutoAcceptEnabled</code> is used as a <b>FeatureID</b> value in the request, or if no <b>FeatureID</b> values are used in the request. This field is returned as an empty element (a boolean value is not returned) if one or more eBay API-enabled sites support the Best Offer Auto-Accept feature for eBay Motors Classified Ad listings. Only eBay Motors Pro users are eligible to use eBay Motors Classified Ad listings.
/// 				<br/><br/>
/// 				To verify if a specific eBay site supports the Best Offer Auto-Accept feature for eBay Motors Classified Ad listings (for most categories), look for a <code>true</code> value in the <b>SiteDefaults.eBayMotorsProAutoAcceptEnabled</b> field.
/// 				<br/><br/>
/// 				To verify if a specific category on a specific eBay site supports the Best Offer Auto-Accept feature for eBay Motors Classified Ad listings, pass in a <b>CategoryID</b> value in the request, and then look for a <code>true</code> value in the <b>eBayMotorsProAutoAcceptEnabled</b> field of the corresponding <b>Category</b> node (match up the <b>CategoryID</b> values if more than one Category IDs were passed in the request).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class eBayMotorsProAutoAcceptEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>eBayMotorsProAutoAcceptEnabled</b> field that is returned under the <b>FeatureDefinitions</b> container if <code>eBayMotorsProAutoDeclineEnabled</code> is used as a <b>FeatureID</b> value in the request, or if no <b>FeatureID</b> values are used in the request. This field is returned as an empty element (a boolean value is not returned) if one or more eBay API-enabled sites support the Best Offer Auto-Decline feature for eBay Motors Classified Ad listings. Only eBay Motors Pro users are eligible to use eBay Motors Classified Ad listings.
/// 				<br/><br/>
/// 				To verify if a specific eBay site supports the Best Offer Auto-Decline feature for eBay Motors Classified Ad listings (for most categories), look for a <code>true</code> value in the <b>SiteDefaults.eBayMotorsProAutoDeclineEnabled</b> field.
/// 				<br/><br/>
/// 				To verify if a specific category on a specific eBay site supports the Best Offer Auto-Decline feature for eBay Motors Classified Ad listings, pass in a <b>CategoryID</b> value in the request, and then look for a <code>true</code> value in the <b>eBayMotorsProAutoDeclineEnabled</b> field of the corresponding <b>Category</b> node (match up the <b>CategoryID</b> values if more than one Category IDs were passed in the request).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class eBayMotorsProAutoDeclineEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>eBayMotorsProBestOfferEnabled</b> field that is returned under the <b>FeatureDefinitions</b> container if <code>eBayMotorsProBestOfferEnabled</code> is used as a <b>FeatureID</b> value in the request, or if no <b>FeatureID</b> values are used in the request. This field is returned as an empty element (a boolean value is not returned) if one or more eBay API-enabled sites support the Best Offer feature for eBay Motors Classified Ad listings. Only eBay Motors Pro users are eligible to use eBay Motors Classified Ad listings.
/// 				<br/><br/>
/// 				To verify if a specific eBay site supports the Best Offer feature for eBay Motors Classified Ad listings (for most categories), look for a <code>true</code> value in the <b>SiteDefaults.eBayMotorsProBestOfferEnabled</b> field.
/// 				<br/><br/>
/// 				To verify if a specific category on a specific eBay site supports the Best Offer feature for eBay Motors Classified Ad listings, pass in a <b>CategoryID</b> value in the request, and then look for a <code>true</code> value in the <b>eBayMotorsProBestOfferEnabled</b> field of the corresponding <b>Category</b> node (match up the <b>CategoryID</b> values if more than one Category IDs were passed in the request).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class eBayMotorsProBestOfferEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Indicates whether the site supports the use of a company name
/// 				when contacting the seller about eBay Motors Classified Ad listings.
/// 				This feature is only applicable for eBay Motors Pro users.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class eBayMotorsProCompanyNameEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Indicates whether the site supports the use of a company address when contacting the
/// 				seller about eBay Motors Classified Ad listings. This feature is only
/// 				applicable for eBay Motors Pro users.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class eBayMotorsProContactByAddressEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Indicates whether the site supports the use of an email address when contacting the
/// 				seller about eBay Motors Classified Ad listings. This feature is only
/// 				applicable for eBay Motors Pro users.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class eBayMotorsProContactByEmailEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Indicates whether the site supports the use of a phone number when contacting the
/// 				seller about eBay Motors Classified Ad listings. This feature is only
/// 				applicable for eBay Motors Pro users.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class eBayMotorsProContactByPhoneEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>eBayMotorsProCounterOfferEnabled</b> field that is returned under the <b>FeatureDefinitions</b> container if <code>eBayMotorsProCounterOfferEnabled</code> is used as a <b>FeatureID</b> value in the request, or if no <b>FeatureID</b> values are used in the request. This field is returned as an empty element (a boolean value is not returned) if one or more eBay API-enabled sites support counter offers to Best Offers for eBay Motors Classified Ad listings. Only eBay Motors Pro users are eligible to use eBay Motors Classified Ad listings.
/// 				<br/><br/>
/// 				To verify if a specific eBay site supports counter offers to Best Offers for eBay Motors Classified Ad listings (for most categories), look for a <code>true</code> value in the <b>SiteDefaults.eBayMotorsProCounterOfferEnabled</b> field.
/// 				<br/><br/>
/// 				To verify if a specific category on a specific eBay site supports counter offers to Best Offers for eBay Motors Classified Ad listings, pass in a <b>CategoryID</b> value in the request, and then look for a <code>true</code> value in the <b>eBayMotorsProCounterOfferEnabled</b> field of the corresponding <b>Category</b> node (match up the <b>CategoryID</b> values if more than one Category IDs were passed in the request).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class eBayMotorsProCounterOfferEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type defining the <b>eBayMotorsProPaymentMethodCheckOutEnabled</b> field that is returned under the <b>FeatureDefinitions</b> container if <code>eBayMotorsProPaymentMethodCheckOutEnabled</code> is used as a <b>FeatureID</b> value in the request, or if no <b>FeatureID</b> values are used in the request. This field is returned as an empty element (a boolean value is not returned) if one or more eBay API-enabled sites support the display of accepted payment methods for eBay Motors Classified Ad listings. Only eBay Motors Pro users are eligible to use eBay Motors Classified Ad listings.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class eBayMotorsProPaymentMethodCheckOutEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Indicates which phone option the site supports 
/// 				for contacting the seller about Classified Ad format listings.
/// 				Added for EbayMotors Pro users.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class eBayMotorsProPhoneCountDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This field is returned (as an empty element) if the site supports contacting 
/// 				the seller for a Classified Ad listings. 
/// 				This is for EbayMotors Pro users only.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class eBayMotorsProSellerContactDetailsEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Indicates if the site supports shipping options for 
/// 				Classified Ad format listings.
/// 				Added for EbayMotors Pro users.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class eBayMotorsProShippingMethodEnabledDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Indicates which address option the site supports for 
/// 				Classified Ad format listings.
/// 				Added for EbayMotors Pro users.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class eBayMotorsProStreetCountDefinitionType {

#region 属性
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Contains information about a country where a specified seller is eligible to offer eBay Plus on listings, as well as the seller's opt-in status and listing preference for that country.
/// 				<br/><br/>
/// 				eBay Plus is a premium account option for buyers, which provides benefits such as fast free domestic shipping and free returns on selected items. Top Rated eBay sellers must opt in to eBay Plus to be able offer the program on qualifying listings. Sellers must commit to next-day delivery of those items.
/// 				<br/><br/>
/// 				<span class="tablenote">
/// 				<strong>Note:</strong> Currently, eBay Plus is available only to buyers in Germany and Australia. In Australia, the seller has no control/responsibility over setting the eBay Plus feature for a listing. Instead, eBay will evaluate/determine whether a listing is eligible for eBay Plus.
/// 				</span>
/// 				For more details about eBay Plus, see <a href="/api-docs/user-guides/static/trading-user-guide/ebay-plus.html">eBay Plus</a>.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class EBayPLUSPreferenceType {

#region 属性
    /// <summary>
    /// GetUserPreferencesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						An ISO 3166 standard two-letter code that identifies a country where the seller is eligible to offer eBay Plus on fixed price listings.
    /// 						<br/><br/>
    /// 						<span class="tablenote">
    /// 						<strong>Note:</strong> Currently, eBay Plus is available only to buyers in Germany and Australia.
    /// 						</span>
    /// 					
    /// </remarks>

	public CountryCodeType? Country { get; set; }
    /// <summary>
    /// GetUserPreferencesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						A value of <code>true</code> indicates that the seller has opted in to eBay Plus for listings in the specified country.
    /// 					
    /// </remarks>

	public bool? OptInStatus { get; set; }
    /// <summary>
    /// GetUserPreferencesConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 						A value of <code>true</code> indicates that if <strong>OptInStatus</strong> is also <code>true</code>, the seller will offer eBay Plus by default for new listings in the specified country. If this field's value is <code>false</code> (and <strong>OptInStatus</strong> is <code>true</code>), the seller will offer eBay Plus on a listing by listing basis in the specified country.
    /// 					
    /// </remarks>

	public bool? ListingPreference { get; set; }
[System.Xml.Serialization.XmlAnyElement()]

	public System.Xml.XmlElement[] Any { get; set; }
#endregion

#region 方法
#endregion
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is used to indicate the type of tax identifier that is appearing in the <b>eBayReference</b> field. The tax identifier type which will vary by country/region.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
//[System.Diagnostics.DebuggerStepThrough()]
[System.ComponentModel.DesignerCategory("code")]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public partial class eBayTaxReferenceValue {

#region 属性
[System.Xml.Serialization.XmlText(DataType="string")]

	public string Value { get; set; }
    /// <summary>
    /// GetOrdersDetailLevel: none, ReturnAllConditionally
    /// OrderReportDetailLevel: none, ReturnAllConditionally
    /// GetItemTransactionsGetSellerTransactionsDetailLevel: none, ItemReturnDescription, ReturnAllConditionally
    /// </summary>
    /// <remarks>
    /// 
    /// 							This attribute value is returned to indicate the VAT tax type or tax number, which will vary by country/region. This string value will be one of the following:<br/>
    /// 							<ul>
    /// 								<li><code>ABN</code>: if this string is returned, the ID in the field is an eBay Australia tax number</li>
    /// 								<li><code>GST</code>: if this string is returned, the ID in the field is an eBay Jersey tax number</li>
    /// 								<li><code>IOSS</code>: if this string is returned, the ID in the field is an eBay EU or UK IOSS number, or if the country is Kazakhstan it is an eBay Kazakhstan VAT (reference value of '<code>-</code>',no VAT Number or taxNum) </li>
    /// 								<li><code>IRD</code>: if this string is returned, the ID in the field is an eBay New Zealand tax number</li>
    /// 								<li><code>OSS</code>: if this string is returned, the ID in the field is an eBay Germany VAT ID, or if the country is Kazakhstan it is an eBay Kazakhstan VAT (reference value of '<code>-</code>', no VAT Number or taxNum) </li>
    /// 								<li><code>SST</code>: if this string is returned, the ID in the field is an eBay Malaysia tax number, or if the country is Kazakhstan it is an eBay Kazakhstan VAT (reference value of '<code>-</code>', no VAT Number or taxNum) </li>
    /// 								<li><code>DDG</code>: if this string is returned, the ID in the field is an eBay Malaysia tax number, or if the country is Belarus, the ID in the field is an eBay Belarus tax number, or if the country is Kazakhstan it is an eBay Kazakhstan VAT (reference value of '<code>-</code>', no VAT Number or taxNum) </li>
    /// 								<li><code>VOEC</code>: if this string is returned, the ID in the field is an eBay Norway tax number</li>
    /// 								<li><code>VAT</code>: if this string is returned, the ID in the field is an eBay Belarus tax number</li>
    /// 								<li><code>VAT_ID</code>: if this string is returned, the ID in the field is an eBay France VAT ID</li>
    /// 							</ul>
    /// 						
    /// </remarks>
[System.Xml.Serialization.XmlAttribute(DataType="string")]

	public string name { get; set; }
#endregion

#region 方法
#endregion
}

}
namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumerated type identifies the possible values that can be returned in the  <b>Ack</b> field in call responses. The <b>Ack</b> value  will indicate if the call was completely successful, if the called failed, or if the call was partially successful, but with minor errors or warnings.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum AckCodeType
{
    /// <remarks>
    /// 
    /// 					 This value indicates that the call request was processed successfully without any issues.
    /// 					
    /// </remarks>

    Success, 
    /// <remarks>
    /// 
    /// 					  This value indicates that the call request processing failed.
    /// 					
    /// </remarks>

    Failure, 
    /// <remarks>
    /// 
    /// 						This value indicates that the call request was successful, but processing was not without any issues. These issues can be checked in the <b>Errors</b> container, that will also be returned when one or more known issues occur with the call request.
    /// 					
    /// </remarks>

    Warning, 
    /// <remarks>
    /// 
    /// 						This value indicates that the call request partially failed. One or more  issues that may be responsible for this partial failure can be checked in the <b>Errors</b> container, that will also be returned when one or more known issues occur with the call request.
    /// 					 
    /// </remarks>

    PartialFailure, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// CashOnPickup, MOCC, PersonalCheck, CustomCode
/// </summary>
/// <remarks>
/// 
/// 				This enumerated type defines different payment methods that can be used by buyers to pay sellers for purchases. Supported payment methods vary by eBay marketplace, by eBay Category, and even by listing format. If a seller is listing, revising, or relisting an item with a Trading API call, the seller should use one of the following metadata calls to see which payment methods are supported at the site and category level:
/// 				<ul>
/// 					<li><b>GeteBayDetails</b>: through <b>PaymentOptionDetails</b> containers in the response, this call will show the seller all of the payment methods that are available for the specified marketplace. To retrieve this metadata, the seller should include the <b>DetailName</b> field in the request, and set its value to <code>PaymentOptionDetails</code></li>
/// 					<li><b>GetCategoryFeatures</b>: through <b>PaymentMethod</b> fields that are returned under the <b>SiteDefaults</b> container or under one or more <b>Category</b> containers in the response, this call will show the seller all of the payment methods that are available for the specified marketplace, including any category exceptions. To retrieve this metadata, the seller should include the <b>FeatureID</b> field in the request, and set its value to <code>PaymentMethods</code>. Note that <b>Category</b> containers will only be returned for categories that differ from Site Defaults as far as supported payment methods are concerned. </li>
/// 				</ul>
/// 				<br>
/// 				<span class="tablenote"><b>Note: </b>
/// 					As eBay now controls all of the online payment methods available to buyers, sellers will only specify offline payment methods for listings that require/support offline payment. 
/// 				</span>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum BuyerPaymentMethodCodeType
{
    /// <remarks>
    /// 
    /// 						This enumeration value is deprecated, and should no longer be used in listing flows.
    /// 					
    /// </remarks>

    None, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that a money order or cashiers check is accepted for payment. This value is only applicable for offline payments and is not supported on all marketplaces.
    /// 					
    /// </remarks>

    MOCC, 
    /// <remarks>
    /// 
    /// 						This enumeration value is deprecated, and should no longer be used in listing flows.
    /// 					
    /// </remarks>

    AmEx, 
    /// <remarks>
    /// 
    /// 						This enumeration value is deprecated, and should no longer be used in listing flows.
    /// 					
    /// </remarks>

    PaymentSeeDescription, 
    /// <remarks>
    /// 
    /// 						This enumeration value is deprecated, and should no longer be used in listing flows.
    /// 					
    /// </remarks>

    CCAccepted, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that a personal check is accepted for payment. This value is only applicable for offline payments and is not supported on all marketplaces.
    /// 					
    /// </remarks>

    PersonalCheck, 
    /// <remarks>
    /// 
    /// 						This enumeration value is deprecated, and should no longer be used in listing flows.
    /// 					
    /// </remarks>

    VisaMC, 
    /// <remarks>
    /// 
    /// 						This payment method is deprecated.
    /// 					
    /// </remarks>

    PaisaPayAccepted, 
    /// <remarks>
    /// 
    /// 						This enumeration value is deprecated, and should no longer be used in listing flows.
    /// 					
    /// </remarks>

    Other, 
    /// <remarks>
    /// 
    /// 						This enumeration value is deprecated, and should no longer be used in listing flows.
    /// 					
    /// </remarks>

    PayPal, 
    /// <remarks>
    /// 
    /// 						This enumeration value is deprecated, and should no longer be used in listing flows.
    /// 					
    /// </remarks>

    Discover, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that cash on pickup is accepted for payment. This value is only applicable for offline payments.
    /// 					
    /// </remarks>

    CashOnPickup, 
    /// <remarks>
    /// 
    /// 						This enumeration value is deprecated, and should no longer be used in listing flows.
    /// 					
    /// </remarks>

    MoneyXferAccepted, 
    /// <remarks>
    /// 
    /// 						This enumeration value is deprecated, and should no longer be used in listing flows.
    /// 					
    /// </remarks>

    MoneyXferAcceptedInCheckout, 
    /// <remarks>
    /// 
    /// 						This enumeration value is deprecated, and should no longer be used in listing flows.
    /// 					
    /// </remarks>

    OtherOnlinePayments, 
    /// <remarks>
    /// 
    /// 						This enumeration value is deprecated, and should no longer be used in listing flows.
    /// 					
    /// </remarks>

    Escrow, 
    /// <remarks>
    /// 
    /// 						This enumeration value is deprecated, and should no longer be used in listing flows.
    /// 					
    /// </remarks>

    PrePayDelivery, 
    /// <remarks>
    /// 
    /// 						This enumeration value is deprecated, and should no longer be used in listing flows.
    /// 					
    /// </remarks>

    CODPrePayDelivery, 
    /// <remarks>
    /// 
    /// 						This enumeration value is deprecated, and should no longer be used in listing flows.
    /// 					
    /// </remarks>

    PostalTransfer, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode, 
    /// <remarks>
    /// 
    /// 						This enumeration value is deprecated, and should no longer be used in listing flows.
    /// 					
    /// </remarks>

    LoanCheck, 
    /// <remarks>
    /// 
    /// 						This enumeration value is deprecated, and should no longer be used in listing flows.
    /// 					
    /// </remarks>

    CashInPerson, 
    /// <summary>
    /// 579
    /// NoOp
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// 						This enumeration value is deprecated, and should no longer be used in listing flows.
    /// 						
    /// </remarks>

    ELV, 
    /// <remarks>
    /// 
    /// 						This payment type is no longer applicable since eBay India is no longer a functioning site.
    /// 					
    /// </remarks>

    PaisaPayEscrow, 
    /// <remarks>
    /// 
    /// 						This payment type is no longer applicable since eBay India is no longer a functioning site.
    /// 					
    /// </remarks>

    PaisaPayEscrowEMI, 
    /// <remarks>
    /// 
    /// 						This payment method is deprecated.
    /// 					
    /// </remarks>

    IntegratedMerchantCreditCard, 
    /// <remarks>
    /// 
    /// 						This payment method is deprecated.
    /// 					
    /// </remarks>

    Moneybookers, 
    /// <remarks>
    /// 
    /// 						This payment method is deprecated.
    /// 					
    /// </remarks>

    Paymate, 
    /// <remarks>
    /// 
    /// 						This payment method is deprecated.
    /// 					
    /// </remarks>

    ProPay, 
    /// <remarks>
    /// 
    /// 						This enumeration value is deprecated, and should no longer be used in listing flows.
    /// 					
    /// </remarks>

    PayOnPickup, 
    /// <remarks>
    /// 
    /// 						This enumeration value is deprecated, and should no longer be used in listing flows.
    /// 					
    /// </remarks>

    Diners, 
    /// <remarks>
    /// 
    /// 						This enumeration value is deprecated, and should no longer be used in listing flows.
    /// 					
    /// </remarks>

    StandardPayment, 
    /// <remarks>
    /// 
    /// 						This payment method is deprecated.
    /// 					
    /// </remarks>

    DirectDebit, 
    /// <remarks>
    /// 
    /// 						This enumeration value is deprecated, and should no longer be used in listing flows.
    /// 					
    /// </remarks>

    CreditCard, 
    /// <remarks>
    /// 
    /// 						This enumeration value is deprecated, and should no longer be used in listing flows.
    /// 					
    /// </remarks>

    PayUponInvoice, 
    /// <remarks>
    /// 
    /// 					This payment method is deprecated.
    /// 				
    /// </remarks>

    QIWI, 
    /// <remarks>
    /// 
    /// 					This payment method is deprecated.
    /// 				
    /// </remarks>

    PayPalCredit
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Specifies standard subsets of data to return for each result
/// 				within the set of results in the response payload. If no
/// 				detail level is specified, a base set of data is returned.
/// 				The base set of data varies per call.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum DetailLevelCodeType
{
    /// <remarks>
    /// 
    /// 						Returns all available data.
    /// 						With <b>GetSellerList</b> and other calls that retrieve large data sets,
    /// 						please avoid using <b>ReturnAll</b> when possible. For example, if you use
    /// 						<b>GetSellerList</b>, use a <b>GranularityLevel</b> or use the
    /// 						<b>GetSellerEvents</b> call instead. If you use <b>ReturnAll</b> with <b>GetSellerList</b>,
    /// 						use a small <b>EntriesPerPage</b> value and a short
    /// 						<b>EndTimeFrom</b>/<b>EndTimeTo</b> range for better performance.
    /// 					
    /// </remarks>

    ReturnAll, 
    /// <remarks>
    /// 
    /// 						 Returns the description, plus the
    /// 						<b>ListingDesigner</b> node and some additional information if applicable
    /// 					
    /// </remarks>

    ItemReturnDescription, 
    /// <remarks>
    /// 
    /// 						 For <b>GetItem</b>, returns Item Specifics and
    /// 						Pre-filled Item Information, if any.
    /// 						Also see the description of
    /// 						<b>Item.ProductListingDetails</b> for <b>GetItem</b>.
    /// 					
    /// </remarks>

    ItemReturnAttributes, 
    /// <remarks>
    /// 
    /// 						 If this value is used, the primary category and, if applicable, the secondary category is returned.
    /// 					
    /// </remarks>

    ItemReturnCategories, 
    /// <remarks>
    /// 
    /// 						 Returns the summary data.
    /// 						For <b>GetMyMessages</b>, this detail level returns the same data
    /// 						whether or not you include <b>MessageIDs</b> in the
    /// 						request. Returns up to 10 <b>FolderID</b> and <b>FolderName</b> values.
    /// 						Currently, this detail level is the only way to retrieve
    /// 						<b>FolderID</b> and <b>FolderName</b> values. See <b>GetMyMessages</b>
    /// 						 for a code sample that demonstrates
    /// 						this.
    /// 					
    /// </remarks>

    ReturnSummary, 
    /// <remarks>
    /// 
    /// 						 Returns message headers.
    /// 						For <b>GetMyMessages</b>, if you include <b>MessageIDs</b> in
    /// 						the request, this detail level returns header information,
    /// 						without body text, for the specified message ID or alert ID
    /// 						values. If you include a <b>FolderID</b>, header information is
    /// 						returned only for the messages and alerts in the specified
    /// 						folder.<br/><br/>
    /// 						If you do not include <b>MessageIDs</b>, this detail
    /// 						level returns header information for Alerts and Messages as follows:
    /// 						<ul>
    /// 						   <li>If all the Alerts have been read, they are sorted in date order,
    /// 						with the most recent first.</li>
    /// 						   <li>If one of the Alerts has not been read, the Read Alerts come first,
    /// 						sorted most recent first, followed by the Unread Alert(s).</li>
    /// 						   <li>All messages in ascending order by date received with the
    /// 						  oldest messages first.</li>
    /// 						 </ul>
    /// 						  <br/>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						Even when restricted by this detail level to return only header information, <b>GetMyMessages</b> may return a high volume of data.
    /// 						</span>
    /// 					
    /// </remarks>

    ReturnHeaders, 
    /// <remarks>
    /// 
    /// 						 Returns full message information.
    /// 						For <b>GetMyMessages</b>, if you include <b>MessageIDs</b> in
    /// 						the request, this detail level returns message information
    /// 						for the specified message ID or alert ID values. If you
    /// 						include a <b>FolderID</b>, message information is returned only for
    /// 						the messages and alerts in the specified folder.
    /// 					
    /// </remarks>

    ReturnMessages
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum ErrorClassificationCodeType
{
    /// <remarks>
    /// 
    /// 						An error has occurred either as a result of a problem in the sending
    /// 						application or because the application's end-user has attempted to submit
    /// 						invalid data (or missing data). In these cases, do not retry the request. The
    /// 						problem must be corrected before the request can be made again. If the problem
    /// 						is due to something in the application (such as a missing required field), the
    /// 						application must be changed. If the problem is a result of end-user data, the
    /// 						application must alert the end-user to the problem and provide the means for
    /// 						the end-user to correct the data. Once the problem in the application or data
    /// 						is resolved, resend the request to eBay with the corrected data.
    /// 					
    /// </remarks>

    RequestError, 
    /// <remarks>
    /// 
    /// 						Indicates that an error has occurred on the eBay system side, such as a
    /// 						database or server down. An application can retry the request as-is a
    /// 						reasonable number of times (eBay recommends twice). If the error persists,
    /// 						contact Developer Technical Support. Once the problem has been resolved, the
    /// 						request may be resent in its original form.
    /// 					
    /// </remarks>

    SystemError, 
    /// <remarks>
    /// 
    /// 						(out) Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Preferences that specify how eBay should handle certain requests that contain
/// 				invalid data or that could partially fail. These preferences give you some control
/// 				over whether eBay returns warnings or errors in response to invalid data and how
/// 				eBay handles listing requests when such data is passed in. For example, these
/// 				preferences are applicable to <b>AddItem</b> and related calls when Item Specifics are
/// 				specified, and to <b>CompleteSale</b>. See <a href="https://developer.ebay.com/api-docs/user-guides/static/make-a-call/error-handling.html">Error handling</a>
/// 				for details about these preferences and their effects.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum ErrorHandlingCodeType
{
    /// <remarks>
    /// 
    /// 						Apply validation rules that were in effect prior to the time
    /// 						the call started supporting <b>ErrorHandling</b>.
    /// 					
    /// </remarks>

    Legacy, 
    /// <remarks>
    /// 
    /// 						Drop the invalid data, continue processing the request with the
    /// 						valid data. If dropping the invalid data leaves the request in a
    /// 						state where required data is missing, reject the request.<br>
    /// 						<br>
    /// 						If <b>BestEffort</b> is specified for <b>CompleteSale</b>, the Ack field in the
    /// 						response could return PartialFailure if one change fails but
    /// 						another succeeds. For example, if the seller attempts to
    /// 						leave feedback twice for the same order line item, the feedback changes
    /// 						would fail but any paid or shipped status changes would succeed.
    /// 					
    /// </remarks>

    BestEffort, 
    /// <remarks>
    /// 
    /// 						If any of the item specifics data is invalid, drop all the data and
    /// 						proceed with listing the item. If the category has required item specifics
    /// 						and the data was dropped, reject the listing.
    /// 					
    /// </remarks>

    AllOrNothing, 
    /// <remarks>
    /// 
    /// 						If any data is invalid, reject the request.
    /// 					
    /// </remarks>

    FailOnError
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum InvocationStatusType
{

    InProgress, 

    Success, 

    Failure, 

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumerated type defines the two measurement systems that are used globally.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum MeasurementSystemCodeType
{
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the English system of measurement is being used. Also known as the Imperial System of Measurement. Weights in this system are expressed as pounds and ounces, and package dimensions are expressed as feet or inches.
    /// 					
    /// </remarks>

    English, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the English system of measurement is being used. Weights in this system are expressed as kilograms and grams, and package dimensions are expressed as meters or centimeters.
    /// 					
    /// </remarks>

    Metric
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// SeverityCodeType - Type declaration to be used by other schema.
/// This code identifies the severity of an API error. A code indicates
/// whether there is an API-level error or warning that needs to be
/// communicated to the client.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum SeverityCodeType
{
    /// <remarks>
    /// 
    /// 					   The request was processed successfully, but something occurred that may affect your application or the user. For example, eBay may have changed a value the user sent in. In this case, eBay returns a normal, successful response and also returns the warning.
    /// 							<br/><br/>
    /// 						 When a warning occurs, the error is returned in addition to the business data. In this case, you do not need to retry the request (as the original request was successful). However, depending on the cause or nature of the warning, you might need to contact either the end user or eBay to effect a long term solution to the problem to prevent it from reoccurring in the future.
    /// 				   
    /// </remarks>

    Warning, 
    /// <remarks>
    /// 
    /// 					   The request that triggered the error was not processed successfully. When a serious application-level error occurs, the error is returned instead of the business data.
    /// 						 <br/><br/>
    /// 						 If the source of the problem is within the application (such as a missing required element), change the application before you retry the request.
    /// 						 <ul>
    /// 						 <li>If the problem is due to end-user input data, please alert the end-user to the problem and provide the means for them to correct the data. Once the problem in the application or data is resolved, you can attempt to re-send the request to eBay.
    /// 						 </li>
    /// 						 <li>If the source of the problem is on eBay's side, An application can retry the request as-is a reasonable number of times (eBay recommends twice). If the error persists, contact Developer Technical Support. Once the problem has been resolved, the request may be resent in its original form.
    /// 						 </li>
    /// 						 </ul>
    /// 						 <br/><br/>
    /// 						 See the <a href="https://developer.ebay.com/api-docs/user-guides/static/make-a-call/error-handling.html">Error handling</a> section of the
    /// 						 Making a Trading API call guide for more information.
    /// 					
    /// </remarks>

    Error, 
    /// <remarks>
    /// 
    /// 						  Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumerated type contains the list of values that can be passed in through the <b>WarningLevel</b> field of a call request.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum WarningLevelCodeType
{
    /// <remarks>
    /// 
    /// 					The <b>WarningLevel</b> value is set to <code>Low</code> if the user does not wish to receive warnings when the application passes
    /// 					unrecognized or deprecated elements in an API call request.
    /// 					This is the default value if <b>WarningLevel</b> is not specified in the call request.
    ///  					
    /// </remarks>

    Low, 
    /// <remarks>
    /// 
    /// 						The <b>WarningLevel</b> value is set to <code>High</code> if the user wishes to receive warnings when the application passes unrecognized or deprecated elements in an API call request. Setting the <b>WarningLevel</b> value to <code>High</code>  is not recommended in a production environment. Instead, it should only be used during the development/debugging stage.
    /// 					
    /// </remarks>

    High
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// CreditPromotedListingFeature, FeePromotedListingFeature, PictureManagerSubscriptionFee, PictureManagerSubscriptionFeeCredit, StoresSuccessfulListingFee, StoresSuccessfulListingFeeCredit, StoresReferralFee, StoresReferralCredit, eBayStoreInventorySubscriptionCredit, FeeGiftIcon, CreditGiftIcon, FeeHighlight, CreditHighlight, TradingLimitOverrideOn, TradingLimitOverrideOff, AutoTraderOn, AutoTraderOff, PaperInvoiceOn, PaperInvoiceOff, LACatalogFee, LAExtraItem, LACatalogItemFeeRefund, LACatalogInsertionRefund, LAFinalValueFee, LAFinalValueFeeRefund, LABuyerPremiumPercentageFee, LABuyerPremiumPercentageFeeRefund, LAAudioVideoFee, LAAudioVideoFeeRefund, SubscriptionAABasic, SubscriptionAAPro, CreditAABasic, CreditAAPro, FeePicturePack, CreditPicturePackPartial, CreditPicturePackFull, ElectronicInvoiceOn, ElectronicInvoiceOff, ExtendedAuctionFee, ExtendedAcutionCredit, BonusPointsAddition, BonusPointsReduction, BonusPointsPaymentAutomatic, BonusPointsPaymentManual, BonusPointsPaymentReversal, BonusPointsCashPayout, AutoPmntReqExempt, AutoPmntReqRein, SellerReportsBasicFee, SellerReportsBasicCredit, SellerReportsPlusFee, SellerReportsPlusCredit, BorderFee, BorderFeeCredit, FeeSearchableMobileDE, CreditSearchableMobileDE, EmailMarketingFee, EmailMarketingCredit, FeePictureShow, BasicUpgradePackBundleFee, BasicUpgradePackBundleFeeCredit, BasicBundleFee, BasicBundleFeeCredit, ImmoProFee, CreditImmoProFee, ImmoProFeatureFee, CreditImmoProFeatureFee, RealEstateProFee, CreditRealEstateProFee, RealEstateProFeatureFee, CreditRealEstateProFeatureFee, ListingDesignerFee, ListingDesignerCredit, PayPalOTPSucc, PayPalOTPPend, PayPalFailed, PayPalChargeBack, PayPalRefund, SMProListingDesignerFee, SMProListingDesignerCredit, PaypalOnFile, PaypalOnFileByCSR, PaypalOffFile, DepositProcessingFixedFee, DepositProcessingFixedFeeCredit
/// </summary>
/// <remarks>
/// 
/// 			  Enumerated type that defines the fee/charge and credit transactions that occur on an eBay user's account. These values are returned in the <b>AccountEntry.AccountDetailsEntryType</b> output field of the <b>GetAccount</b> call.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum AccountDetailEntryCodeType
{
    /// <remarks>
    /// 
    /// 					 This enumeration value indicates that the account transaction type is unknown. Sometimes this value will get returned, but the corresponding <b>Description</b> field may provide more details, and the corresponding <b>GrossDetailAmount</b> field will indicate whether the transaction was a charge or a credit (indicated with a negative dollar value).
    /// 					
    /// </remarks>

    Unknown, 
    /// <remarks>
    /// 
    /// 					 This enumeration value indicates that the account entry is an insertion fee for a listing.
    /// 					
    /// </remarks>

    FeeInsertion, 
    /// <remarks>
    /// 
    /// 					 This enumeration value indicates that the account entry is a listing upgrade fee for a listing title in boldface font.
    /// 					
    /// </remarks>

    FeeBold, 
    /// <remarks>
    /// 
    /// 					  This enumeration value indicates that the account entry is a listing upgrade fee for featuring the listing on an eBay marketplace's home page.
    /// 					  <br>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						This feature is no longer available to most marketplaces and sellers.
    /// 						</span>
    /// 					
    /// </remarks>

    FeeFeatured, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a listing upgrade fee for featuring the listing on an eBay category page relevant to the item.
    /// 						<br>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						This feature is no longer available to most marketplaces and sellers.
    /// 						</span>
    /// 					
    /// </remarks>

    FeeCategoryFeatured, 
    /// <remarks>
    /// 
    /// 					 This enumeration value indicates that the account entry is a final value fee for a sale on the listing. This fee is charged when a listed item sells, and is a percentage of the final sale price. This fee does not take in account any shipping costs. The final value fee associated with shipping costs is returned in <b>FeeFinalValueShipping</b> entry.
    /// 					
    /// </remarks>

    FeeFinalValue, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a payment by check made by a user to eBay.
    /// 					
    /// </remarks>

    PaymentCheck, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a payment by credit card made by a user to eBay.
    /// 					
    /// </remarks>

    PaymentCC, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a courtesy credit issued by eBay to the user.
    /// 					
    /// </remarks>

    CreditCourtesy, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit issued by eBay to the user due to no sale.
    /// 					
    /// </remarks>

    CreditNoSale, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit issued by eBay to the user due to a partial sale.
    /// 					
    /// </remarks>

    CreditPartialSale, 
    /// <remarks>
    /// 
    /// 					 This enumeration value indicates that the account entry is a refund to a user's credit card issued by eBay.
    /// 					
    /// </remarks>

    RefundCC, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a refund check to a user issued by eBay.
    /// 					
    /// </remarks>

    RefundCheck, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a finance charge to the user's account. A finance charge may be applicable if the user's monthly invoice balance is not paid in full by the due date.
    /// 					
    /// </remarks>

    FinanceCharge, 
    /// <remarks>
    /// 
    /// 						This value is no longer applicable, and should not be returned.
    /// 					
    /// </remarks>

    AWDebit, 
    /// <remarks>
    /// 
    /// 						This value is no longer applicable, and should not be returned.
    /// 					
    /// </remarks>

    AWCredit, 
    /// <remarks>
    /// 
    /// 						This value is no longer applicable, and should not be returned.
    /// 					
    /// </remarks>

    AWMemo, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit issued to the seller for any listing fees for a duplicate listing that was removed by eBay.
    /// 					
    /// </remarks>

    CreditDuplicateListing, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a fee charged by eBay for a partial sale.
    /// 					
    /// </remarks>

    FeePartialSale, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a reversal of an electronic transfer payment.
    /// 					
    /// </remarks>

    PaymentElectronicTransferReversal, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a one-time payment made by a credit card.
    /// 					
    /// </remarks>

    PaymentCCOnce, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a fee charged by eBay for a returned check.
    /// 					
    /// </remarks>

    FeeReturnedCheck, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a fee charged by eBay when a check must be redeposited to collect funds.
    /// 					
    /// </remarks>

    FeeRedepositCheck, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a cash payment made on the user's account.
    /// 					
    /// </remarks>

    PaymentCash, 
    /// <remarks>
    /// 
    /// 					This enumeration value indicates that the account entry is an insertion fee credit issued by eBay to the seller.
    /// 					
    /// </remarks>

    CreditInsertion, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit for a Bold title listing upgrade.
    /// 					
    /// </remarks>

    CreditBold, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit for a  listing upgrade fee for featuring the listing on an eBay marketplace's home page.
    /// 						<br>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						This feature is no longer available to most marketplaces and sellers.
    /// 						</span>
    /// 					
    /// </remarks>

    CreditFeatured, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit for a  listing upgrade fee for featuring the listing on an eBay category page relevant to the item.
    /// 						<br>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						This feature is no longer available to most marketplaces and sellers.
    /// 						</span>
    /// 					
    /// </remarks>

    CreditCategoryFeatured, 
    /// <remarks>
    /// 
    /// 					This enumeration value indicates that the account entry is a credit for a final value fee for a sale on the listing. A final value fee may be credited back to a seller's account if the buyer never pays for the line item, or if the buyer cancels the order.
    /// 					
    /// </remarks>

    CreditFinalValue, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a fee charged by eBay when the seller's check does not clear due to insufficient funds.
    /// 					
    /// </remarks>

    FeeNSFCheck, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a fee charged by eBay when the seller's check does not clear because the account has been closed.
    /// 					
    /// </remarks>

    FeeReturnCheckClose, 
    /// <remarks>
    /// 
    /// 						This enumeration value may be returned if the account entry is just a memo/note, or if the account entry cannot be properly classified. The corresponding <b>Description</b> field may provide more details, and the corresponding <b>GrossDetailAmount</b> field will indicate whether the transaction was a charge or a credit (indicate with a negative dollar value).
    /// 					
    /// </remarks>

    Memo, 
    /// <remarks>
    /// 
    /// 						This enumeration value may be returned if the account entry is a payment made to the account by money order.
    /// 					
    /// </remarks>

    PaymentMoneyOrder, 
    /// <remarks>
    /// 
    /// 						This enumeration value may be returned if the account entry is an automatic monthly charge of the seller's invoice amount made by eBay to a credit card the seller has placed on file.
    /// 					
    /// </remarks>

    CreditCardOnFile, 
    /// <remarks>
    /// 
    /// 						This enumeration value may be returned if the account entry is a one-time payment made with a user's credit card that is not on file with eBay for automatic monthly payments.
    /// 					
    /// </remarks>

    CreditCardNotOnFile, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the user has been invoiced.
    /// 					
    /// </remarks>

    Invoiced, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the user has been invoiced and that the balance will be charged to the credit card on file on the due date.
    /// 					
    /// </remarks>

    InvoicedCreditCard, 
    /// <remarks>
    /// 
    /// 						This enumeration value may be returned if the account entry is a credit transferred from another account to this account.
    /// 					
    /// </remarks>

    CreditTransferFrom, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a debit transferred from this account to another account.
    /// 					
    /// </remarks>

    DebitTransferTo, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit balance for an account's invoice period, meaning that the seller should not pay.
    /// 					
    /// </remarks>

    InvoiceCreditBalance, 
    /// <remarks>
    /// 
    /// 						This enumeration value may be returned for debits issued by eBay that are manually applied to the user's account, and not necessarily tied to a specific listing/line item.
    /// 					
    /// </remarks>

    eBayDebit, 
    /// <remarks>
    /// 
    /// 						This enumeration value may be returned for credits issued by eBay that are manually applied to the user's account, and not necessarily tied to a specific listing/line item.
    /// 					
    /// </remarks>

    eBayCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a promotional credit issued by eBay.
    /// 					
    /// </remarks>

    PromotionalCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value may be returned as a note that the user's credit card is not with eBay.
    /// 					
    /// </remarks>

    CCNotOnFilePerCustReq, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is an insertion
    /// 						fee credit. If a listed item does not sell or results in an Unpaid Item case, the seller can relist the item with no additional charge.
    /// 					
    /// </remarks>

    CreditInsertionFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value may be returned as a note if a user's credit card payment is rejected.
    /// 					
    /// </remarks>

    CCPaymentRejected, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable and should not be returned since gift services and the gift icon are no longer supported in any eBay marketplaces.
    /// 					
    /// </remarks>

    FeeGiftIcon, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable and should not be returned since gift services and the gift icon are no longer supported in any eBay marketplaces.
    /// 					
    /// </remarks>

    CreditGiftIcon, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a fee charged by eBay for listing an item in the Picture Gallery. A buyer sees a picture of the item when browsing a category, before moving to the item's listing page.
    /// 					
    /// </remarks>

    FeeGallery, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a fee charged by eBay for listing an item in the Featured section at the top of the Picture Gallery page.
    /// 					
    /// </remarks>

    FeeFeaturedGallery, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit issued by eBay for the Gallery fee charged when the item was listed.
    /// 					
    /// </remarks>

    CreditGallery, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit issued by eBay for the Featured Gallery fee charged when the item was listed.
    /// 					
    /// </remarks>

    CreditFeaturedGallery, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a fee for moving the item.
    /// 					
    /// </remarks>

    ItemMoveFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit that may be issued by eBay when listings are not available due to system downtime. The downtime can be a title search outage or a hard outage.
    /// 					
    /// </remarks>

    OutageCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit for a PSA payment.
    /// 					
    /// </remarks>

    CreditPSA, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit for a PCGS fee.
    /// 					
    /// </remarks>

    CreditPCGS, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a fee charged by eBay when the seller sets a reserve price for an auction listing.
    /// 					
    /// </remarks>

    FeeReserve, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit refunded to the seller for a reserve price that was set for an auction listing.
    /// 					
    /// </remarks>

    CreditReserve, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit issued by eBay to the user's Visa credit card.
    /// 					
    /// </remarks>

    eBayVISACredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit issued administratively.
    /// 					
    /// </remarks>

    BBAdminCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a charge issued administratively.
    /// 					
    /// </remarks>

    BBAdminDebit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit issued by eBay to a Store owner who has promoted items outside of eBay.
    /// 					
    /// </remarks>

    ReferrerCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a charge issued by eBay to a Store owner who has promoted items outside of eBay.
    /// 					
    /// </remarks>

    ReferrerDebit, 
    /// <remarks>
    /// 
    /// 						This enumeration value may be returned as a note about switching from one billing currency to another.
    /// 					
    /// </remarks>

    SwitchCurrency, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a payment made to the account by a gift certificate.
    /// 					
    /// </remarks>

    PaymentGiftCertificate, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a payment made to the account by wire transfer.
    /// 					
    /// </remarks>

    PaymentWireTransfer, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a payment made to the account through home bank.
    /// 					
    /// </remarks>

    PaymentHomeBanking, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a one-time payment made to the account by electronic transfer.
    /// 					
    /// </remarks>

    PaymentElectronicTransfer, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit made by eBay to the seller's account when a payment needs to be adjusted.
    /// 					
    /// </remarks>

    PaymentAdjustmentCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a debit (deduction) made by eBay to the seller's account when a payment needs to be adjusted.
    /// 					
    /// </remarks>

    PaymentAdjustmentDebit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is an eBay write-off of an account charge.
    /// 					
    /// </remarks>

    Chargeoff, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is the recovery of an  eBay write-off of an acccount charge.
    /// 					
    /// </remarks>

    ChargeoffRecovery, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is an eBay write-off of the account charges by eBay due to the seller declaring bankruptcy.
    /// 					
    /// </remarks>

    ChargeoffBankruptcy, 
    /// <remarks>
    /// 
    /// 						This enumeration value may be returned as a note that the eBay write-off of an account charge has been suspended.
    /// 					
    /// </remarks>

    ChargeoffSuspended, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is an eBay write-off of the account charges by eBay due to the decease of the seller.
    /// 					
    /// </remarks>

    ChargeoffDeceased, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is an eBay write-off of the account charges by eBay due to the decease of the seller.
    /// 					
    /// </remarks>

    ChargeoffOther, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is an eBay write-off of the account charges by eBay due to the wackiness of the seller.
    /// 					
    /// </remarks>

    ChargeoffWacko, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a reversal of the finance charge to the user's account. A finance charge may be applicable if the user's monthly invoice balance is not paid in full by the due date.
    /// 					
    /// </remarks>

    FinanceChargeReversal, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a reversal of a Final Value Fee credit, resulting in the fee again being charged to the seller.
    /// 					
    /// </remarks>

    FVFCreditReversal, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a fee charged for currency conversion.
    /// 					
    /// </remarks>

    ForeignFundsConvert, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a reversal of a check payment made with foreign funds.
    /// 					
    /// </remarks>

    ForeignFundsCheckReversal, 
    /// <remarks>
    /// 
    /// 						This enumeration value may be returned to act as a note that there is an 'End of the Month' restriction for account activity.
    /// 					
    /// </remarks>

    EOMRestriction, 
    /// <remarks>
    /// 
    /// 						This enumeration value may be returned if eBay is issuing a credit to the seller for multiple listing fees.
    /// 					
    /// </remarks>

    AllFeesCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value may be returned to act as a note that the user's account is on hold.
    /// 					
    /// </remarks>

    SetOnHold, 
    /// <remarks>
    /// 
    /// 						This enumeration value may be returned to act as a note to indicate that the state of the user's account has been reverted.
    /// 					
    /// </remarks>

    RevertUserState, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a monthly payment made by automatic direct debit to the seller's checking account, when the account information is on file.
    /// 					
    /// </remarks>

    DirectDebitOnFile, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a one-time payment made by direct debit to the seller's checking account, when the account information is not on file, but is provided for this payment.
    /// 					
    /// </remarks>

    DirectDebitNotOnFile, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a payment made by direct debit from the seller's checking account when the seller has requested automatic monthly invoice payments.
    /// 					
    /// </remarks>

    PaymentDirectDebit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a reversal of a payment made by direct debit from the seller's checking account.
    /// 					
    /// </remarks>

    DirectDebitReversal, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a reversal of a payment made by direct debit from a seller's checking account when an item is returned by the buyer.
    /// 					
    /// </remarks>

    DirectDebitReturnedItem, 
    /// <remarks>
    /// 
    /// 					 This enumeration value indicates that the account entry is a fee charged by eBay for adding a colored band to emphasize a listing.
    /// 					 <br>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						This feature is no longer available to most marketplaces and sellers.
    /// 						</span>
    /// 					
    /// </remarks>

    FeeHighlight, 
    /// <remarks>
    /// 
    /// 						 This enumeration value indicates that the account entry is a credit issued to the seller by eBay for adding a colored band to emphasize a listing.
    /// 						 <br>
    /// 							<br>
    /// 							<span class="tablenote"><b>Note:</b>
    /// 							This feature is no longer available to most marketplaces and sellers.
    /// 						</span>
    /// 					
    /// </remarks>

    CreditHighlight, 
    /// <remarks>
    /// 
    /// 						This enumeration value may be returned to act as a note to indicate that the user's account has been suspended as part of a bulk suspension initiated by eBay.
    /// 					
    /// </remarks>

    BulkUserSuspension, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a fee charged for a 30-day classified ad listing in a Real Estate category.
    /// 					
    /// </remarks>

    FeeRealEstate30DaysListing, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit issue to a seller for a 30-day classified ad listing in a Real Estate category.
    /// 					
    /// </remarks>

    CreditRealEstate30DaysListing, 
    /// <remarks>
    /// 
    /// 						This enumeration value is only used internally.
    /// 					
    /// </remarks>

    TradingLimitOverrideOn, 
    /// <remarks>
    /// 
    /// 						This enumeration value is only used internally.
    /// 					
    /// </remarks>

    TradingLimitOverrideOff, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a fee charged to a seller who did not provide a credit card or checking account number to verify identify.
    /// 					
    /// </remarks>

    EquifaxRealtimeFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit issued to a seller who was charged an Equifax fee.
    /// 					
    /// </remarks>

    CreditEquifaxRealtimeFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a payment made by the seller for an Equifax fee.
    /// 					
    /// </remarks>

    PaymentEquifaxDebit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit issued by eBay to the seller for a payment made on an Equifax fee.
    /// 					
    /// </remarks>

    PaymentEquifaxCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value may be returned to act as a note to indicate that the user's two accounts (same owner, but different user IDs) have been merged into one account.
    /// 					
    /// </remarks>

    Merged, 
    /// <remarks>
    /// 
    /// 						The Auto Trader feature is no longer available for motor vehicle listings.
    /// 					
    /// </remarks>

    AutoTraderOn, 
    /// <remarks>
    /// 
    /// 						The Auto Trader feature is no longer available for motor vehicle listings.
    /// 					
    /// </remarks>

    AutoTraderOff, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable as paper invoices are no longer available. Users must download their invoices from My eBay.
    /// 					
    /// </remarks>

    PaperInvoiceOn, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable as paper invoices are no longer available. Users must download their invoices from My eBay.
    /// 					
    /// </remarks>

    PaperInvoiceOff, 
    /// <remarks>
    /// 
    /// 						This enumeration value may be returned to act as a note to indicate that there has been a change in the status of the user's account.
    /// 					
    /// </remarks>

    AccountStateSwitch, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is an automatic reversal of a Final Value Fee credit.
    /// 					
    /// </remarks>

    FVFCreditReversalAutomatic, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit issued by eBay to the seller if a title search outage of one hour or longer occurs on the site.
    /// 					
    /// </remarks>

    CreditSoftOutage, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable as Live Auction listings are no longer available on any eBay marketplace.
    /// 					
    /// </remarks>

    LACatalogFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable as Live Auction listings are no longer available on any eBay marketplace.
    /// 					
    /// </remarks>

    LAExtraItem, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable as Live Auction listings are no longer available on any eBay marketplace.
    /// 					
    /// </remarks>

    LACatalogItemFeeRefund, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable as Live Auction listings are no longer available on any eBay marketplace.
    /// 					
    /// </remarks>

    LACatalogInsertionRefund, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable as Live Auction listings are no longer available on any eBay marketplace.
    /// 					
    /// </remarks>

    LAFinalValueFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable as Live Auction listings are no longer available on any eBay marketplace.
    /// 					
    /// </remarks>

    LAFinalValueFeeRefund, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable as Live Auction listings are no longer available on any eBay marketplace.
    /// 					
    /// </remarks>

    LABuyerPremiumPercentageFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable as Live Auction listings are no longer available on any eBay marketplace.
    /// 					
    /// </remarks>

    LABuyerPremiumPercentageFeeRefund, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable as Live Auction listings are no longer available on any eBay marketplace.
    /// 					
    /// </remarks>

    LAAudioVideoFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable as Live Auction listings are no longer available on any eBay marketplace.
    /// 					
    /// </remarks>

    LAAudioVideoFeeRefund, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable as the iPix photo feature is  no longer available on any eBay marketplace.
    /// 					
    /// </remarks>

    FeeIPIXPhoto, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable as the iPix photo feature is  no longer available on any eBay marketplace.
    /// 					
    /// </remarks>

    FeeIPIXSlideShow, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable as the iPix photo feature is  no longer available on any eBay marketplace.
    /// 					
    /// </remarks>

    CreditIPIXPhoto, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable as the iPix photo feature is  no longer available on any eBay marketplace.
    /// 					
    /// </remarks>

    CreditIPIXSlideShow, 
    /// <remarks>
    /// 
    /// 					A fee charged for listing an item for 10 days, rather than one, three, five, or seven days.
    /// 					
    /// </remarks>

    FeeTenDayAuction, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit issued to a seller for a 10-day auction listing.
    /// 					
    /// </remarks>

    CreditTenDayAuction, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a temporary credit from eBay to the user.
    /// 					
    /// </remarks>

    TemporaryCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is the reversal of a temporary credit from eBay to the user.
    /// 					
    /// </remarks>

    TemporaryCreditReversal, 
    /// <remarks>
    /// 
    /// 				     This enumeration value is no longer applicable as the Auction Assistant feature is no longer available on any eBay marketplace.
    /// 					
    /// </remarks>

    SubscriptionAABasic, 
    /// <remarks>
    /// 
    /// 				    This enumeration value is no longer applicable as the Auction Assistant feature is no longer available on any eBay marketplace.
    /// 					
    /// </remarks>

    SubscriptionAAPro, 
    /// <remarks>
    /// 
    /// 				     This enumeration value is no longer applicable as the Auction Assistant feature is no longer available on any eBay marketplace.
    /// 					
    /// </remarks>

    CreditAABasic, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable as the Auction Assistant feature is no longer available on any eBay marketplace.
    /// 					
    /// </remarks>

    CreditAAPro, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a fee charged by eBay for a super-sized picture in a listing.
    /// 					
    /// </remarks>

    FeeLargePicture, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit issued by eBay to the seller for a super-sized picture in a listing.
    /// 					
    /// </remarks>

    CreditLargePicture, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable as eBay no longer charges a fee for adding photos to listings.
    /// 					
    /// </remarks>

    FeePicturePack, 
    /// <remarks>
    /// 
    /// 					 This enumeration value is no longer applicable as eBay no longer charges a fee for adding photos to listings.
    /// 					
    /// </remarks>

    CreditPicturePackPartial, 
    /// <remarks>
    /// 
    /// 					 This enumeration value is no longer applicable as eBay no longer charges a fee for adding photos to listings.
    /// 					
    /// </remarks>

    CreditPicturePackFull, 
    /// <remarks>
    /// 
    /// 					 This enumeration value indicates that the account entry is a monthly subscription fee charged for the user's eBay Store.
    /// 					
    /// </remarks>

    SubscriptioneBayStores, 
    /// <remarks>
    /// 
    /// 					 This enumeration value indicates that the account entry is a credit toward the user's eBay Store subscription fee.
    /// 					
    /// </remarks>

    CrediteBayStores, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is an insertion fee for a fixed-price listing.
    /// 					
    /// </remarks>

    FeeInsertionFixedPrice, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is an insertion
    /// 						fee credit for a fixed-price listing. 
    /// 					
    /// </remarks>

    CreditInsertionFixedPrice, 
    /// <remarks>
    /// 
    /// 					 This enumeration value indicates that the account entry is a final value fee for a sale on the fixed-price listing. This fee is charged when a listed item sells, and is a percentage of the final sale price.
    /// 					
    /// </remarks>

    FeeFinalValueFixedPrice, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit for a final value fee for a sale on the fixed-price listing. A final value fee may be credited back to a seller's account if the buyer never pays for the line item, or if the buyer cancels the order.
    /// 					
    /// </remarks>

    CreditFinalValueFixedPrice, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable since paper invoices are no longer available, so electronic invoices are the only option. Users must download their invoices from My eBay.
    /// 					
    /// </remarks>

    ElectronicInvoiceOn, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable since paper invoices are no longer available, so electronic invoices are the only option. Users must download their invoices from My eBay.
    /// 					
    /// </remarks>

    ElectronicInvoiceOff, 
    /// <remarks>
    /// 
    /// 						This enumeration value acts as a note to indicate that a direct debit payment is pending.
    /// 					
    /// </remarks>

    FlagDDDDPending, 
    /// <remarks>
    /// 
    /// 						This enumeration value acts as a note to indicate that a direct debit payment is confirmed.
    /// 					
    /// </remarks>

    FlagDDPaymentConfirmed, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a fee charged by eBay for creating a fixed-price listing with a 10-day duration.
    /// 						 <br>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 							This charge may only be applicable to motor vehicle listings on eBay Motors, eBay Canada (English and French versions), eBay UK, and eBay Italy. For all non-motor vehicle categories, the only available listing duration is 'GTC', or 'Good 'til Cancelled'.
    /// 						</span>
    /// 					
    /// </remarks>

    FixedPriceDurationFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit issued by eBay to the seller for creating a fixed-price listing with a 10-day duration.
    /// 						 <br>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 							The 10-day duration fee is only applicable to motor vehicle listings on eBay Motors, eBay Canada (English and French versions), eBay UK, and eBay Italy. For all non-motor vehicle categories, the only available listing duration is 'GTC', or 'Good 'til Cancelled'.
    /// 						</span>
    /// 					
    /// </remarks>

    FixedPriceDurationCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a fee charged by eBay if the seller uses the 'Buy It Now' feature on an auction listing.
    /// 					
    /// </remarks>

    BuyItNowFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit issued by eBay if the seller uses the 'Buy It Now' feature on an auction listing.
    /// 					
    /// </remarks>

    BuyItNowCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a fee charged by eBay if the seller uses the scheduled listing feature for a listing. With scheduled listings, the seller schedules a listing to start at some later time (up to 3 weeks after) instead of immediately.
    /// 					
    /// </remarks>

    FeeSchedule, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit issued by eBay to the seller if the seller needs to be refunded for a scheduled listing. With scheduled listings, the seller schedules a listing to start at some later time (up to 3 weeks after) instead of immediately.
    /// 					
    /// </remarks>

    CreditSchedule, 
    /// <remarks>
    /// 
    /// 					 	This enumeration value indicates that the account entry is the monthly subscription fee charged for the basic version of Selling Manager. For most eBay marketplaces and sellers, there is no subscription charge to use the basic version of Selling Manager.
    /// 					
    /// </remarks>

    SubscriptionSMBasic, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is the monthly subscription fee charged for using the Selling Manager Pro product.
    /// 					
    /// </remarks>

    SubscriptionSMBasicPro, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit for the monthly subscription fee charged for the basic version of Selling Manager. For most eBay marketplaces and sellers, there is no subscription charge to use the basic version of Selling Manager.
    /// 					
    /// </remarks>

    CreditSMBasic, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit for the monthly subscription fee charged for using the Selling Manager Pro product.
    /// 					
    /// </remarks>

    CreditSMBasicPro, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a fee charged to the seller when a 'Good 'til Cancelled', fixed-price listing automatically renews after each month (as long as inventory is still available or 'out-of-stock' feature is on). This fee is similar to an insertion fee when a listing is first created. 'GTC' listings automatically renew each month, and these renewed listings may incur insertion fees unless the seller has 'zero insertion fee' credits. eBay sellers with stores get more 'zero insertion fee' credits than other sellers.
    /// 					
    /// </remarks>

    StoresGTCFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit issued by eBay to refund the seller for a 'Good 'til Cancelled' listing renewal/insertion fee. 'GTC' listings automatically renew each, and these renewed listings may incur insertion fees unless the seller has 'zero insertion fee' credits. eBay sellers with stores get more 'zero insertion fee' credits than other sellers.
    /// 					
    /// </remarks>

    StoresGTCCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer appplicable as sellers are no longer able to use Listing Designer templates when they create or revise listings.
    /// 					
    /// </remarks>

    ListingDesignerFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer appplicable as sellers are no longer able to use Listing Designer templates when they create or revise listings.
    /// 					
    /// </remarks>

    ListingDesignerCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable as there is no additional fee charged to the seller for creating a 10-day auction listing.
    /// 					
    /// </remarks>

    ExtendedAuctionFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable as there is no additional fee charged to the seller for creating a 10-day auction listing.
    /// 					
    /// </remarks>

    ExtendedAcutionCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable.
    /// 					
    /// </remarks>

    PayPalOTPSucc, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable.
    /// 					
    /// </remarks>

    PayPalOTPPend, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable.
    /// 					
    /// </remarks>

    PayPalFailed, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable.
    /// 					
    /// </remarks>

    PayPalChargeBack, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a charge back.
    /// 					
    /// </remarks>

    ChargeBack, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is the reversal of a charge back.
    /// 					
    /// </remarks>

    ChargeBackReversal, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable.
    /// 					
    /// </remarks>

    PayPalRefund, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable as the 'Anything Points' program is no longer available.
    /// 					
    /// </remarks>

    BonusPointsAddition, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable as the 'Anything Points' program is no longer available.
    /// 					
    /// </remarks>

    BonusPointsReduction, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable as the 'Anything Points' program is no longer available.
    /// 					
    /// </remarks>

    BonusPointsPaymentAutomatic, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable as the 'Anything Points' program is no longer available.
    /// 					
    /// </remarks>

    BonusPointsPaymentManual, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable as the 'Anything Points' program is no longer available.
    /// 					
    /// </remarks>

    BonusPointsPaymentReversal, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable as the 'Anything Points' program is no longer available.
    /// 					
    /// </remarks>

    BonusPointsCashPayout, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit to the seller's account for Value-Added Tax (VAT) previously paid by the seller.
    /// 					
    /// </remarks>

    VATCredit, 
    /// <remarks>
    /// 
    /// 					 This enumeration value indicates that the account entry is a debit to the seller's account for a Value-Added Tax (VAT) charge.
    /// 					
    /// </remarks>

    VATDebit, 
    /// <remarks>
    /// 
    /// 						This enumeration value acts as a note to indicate that a VAT status change to the seller's account is pending.
    /// 					
    /// </remarks>

    VATStatusChangePending, 
    /// <remarks>
    /// 
    /// 						This enumeration value acts as a note to indicate that a VAT status change to the seller's account is approved.
    /// 					
    /// </remarks>

    VATStatusChangeApproved, 
    /// <remarks>
    /// 
    /// 						This enumeration value acts as a note to indicate that a VAT status change to the seller's account was denied.
    /// 					
    /// </remarks>

    VATStatusChange_Denied, 
    /// <remarks>
    /// 
    /// 						This enumeration value acts as a note to indicate that a VAT status change to the seller's account was cancelled by an eBay customer support representative.
    /// 					
    /// </remarks>

    VATStatusDeletedByCSR, 
    /// <remarks>
    /// 
    /// 						This enumeration value acts as a note to indicate that a VAT status change to the seller's account was cancelled by the user.
    /// 					
    /// </remarks>

    VATStatusDeletedByUser, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer appplicable as sellers are no longer able to use Listing Designer templates when they create or revise listings.
    /// 					
    /// </remarks>

    SMProListingDesignerFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer appplicable as sellers are no longer able to use Listing Designer templates when they create or revise listings.
    /// 					
    /// </remarks>

    SMProListingDesignerCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable as <code>StoresFixedPrice</code> is no longer a valid listing type.
    /// 					
    /// </remarks>

    StoresSuccessfulListingFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable as <code>StoresFixedPrice</code> is no longer a valid listing type.
    /// 					
    /// </remarks>

    StoresSuccessfulListingFeeCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable as there is no longer a referral fee charged to sellers when buyers are routed to their store through printed materials or emails.
    /// 					
    /// </remarks>

    StoresReferralFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable as there is no longer a referral fee charged to sellers when buyers are routed to their store through printed materials or emails.
    /// 					
    /// </remarks>

    StoresReferralCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates the account entry is a fee charged to the seller for adding a subtitle to a listing. Subtitles allow sellers to provide more keywords and/or descriptive information, and may increase buyers' interest.
    /// 					
    /// </remarks>

    SubtitleFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates the account entry is a credit issued from eBay to compensate the seller for a subtitle fee charged to their account.
    /// 					
    /// </remarks>

    SubtitleFeeCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable as <code>StoresFixedPrice</code> is no longer a valid listing type.
    /// 					
    /// </remarks>

    eBayStoreInventorySubscriptionCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable.
    /// 					
    /// </remarks>

    AutoPmntReqExempt, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable.
    /// 					
    /// </remarks>

    AutoPmntReqRein, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable as the Picture Manager feature is no longer available.
    /// 					
    /// </remarks>

    PictureManagerSubscriptionFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable as the Picture Manager feature is no longer available.
    /// 					
    /// </remarks>

    PictureManagerSubscriptionFeeCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable as the Seller Reports feature is no longer available.
    /// 					
    /// </remarks>

    SellerReportsBasicFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable as the Seller Reports feature is no longer available.
    /// 					
    /// </remarks>

    SellerReportsBasicCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable as the Seller Reports feature is no longer available.
    /// 					
    /// </remarks>

    SellerReportsPlusFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable as the Seller Reports feature is no longer available.
    /// 					
    /// </remarks>

    SellerReportsPlusCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable.
    /// 					
    /// </remarks>

    PaypalOnFile, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable.
    /// 					
    /// </remarks>

    PaypalOnFileByCSR, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable.
    /// 					
    /// </remarks>

    PaypalOffFile, 
    /// <remarks>
    /// 
    /// 					 This enumeration value is no longer applicable as borders around listing photos are no longer supported on any eBay marketplace.
    /// 					
    /// </remarks>

    BorderFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable as borders around listing photos are no longer supported on any eBay marketplace.
    /// 					
    /// </remarks>

    BorderFeeCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable since placing eBay Germany motor vehicle listings on the mobile.de site is no longer supported.
    /// 					
    /// </remarks>

    FeeSearchableMobileDE, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates the account entry is a monthly subscription fee charged for Sales Reports Plus.
    /// 					
    /// </remarks>

    SalesReportsPlusFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates the account entry is a credit to the seller applied towards the monthly subscription fee charged for Sales Reports Plus.
    /// 					
    /// </remarks>

    SalesReportsPlusCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable since placing eBay Germany motor vehicle listings on the mobile.de site is no longer supported.
    /// 					
    /// </remarks>

    CreditSearchableMobileDE, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable since this eBay Stores marketing feature is no longer supported.
    /// 					
    /// </remarks>

    EmailMarketingFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable since this eBay Stores marketing feature is no longer supported.
    /// 					
    /// </remarks>

    EmailMarketingCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable since the picture slide show feature is no longer available.
    /// 					
    /// </remarks>

    FeePictureShow, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable since the picture slide show feature is no longer available.
    /// 					
    /// </remarks>

    CreditPictureShow, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates the account entry is a fee charged to the seller for using the Pro Pack Bundle feature pack (currently available to US and Canada eBay motor vehicle sellers).
    /// 					
    /// </remarks>

    ProPackBundleFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates the account entry is a credit towards the fee charged to the seller for using the Pro Pack Bundle feature pack (currently available to US and Canada eBay motor vehicle sellers).
    /// 					
    /// </remarks>

    ProPackBundleFeeCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable since this bundle pack is no longer available on any eBay marketplaces.
    /// 					
    /// </remarks>

    BasicUpgradePackBundleFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable since this bundle pack is no longer available on any eBay marketplaces.
    /// 					
    /// </remarks>

    BasicUpgradePackBundleFeeCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates the account entry is a fee charged by eBay to the seller for using the Value Pack Bundle feature pack.
    /// 					
    /// </remarks>

    ValuePackBundleFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates the account entry is a credit towards the fee charged to the seller for using the Value Pack Bundle feature pack.
    /// 					
    /// </remarks>

    ValuePackBundleFeeCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates the account entry is a fee charged by eBay to the seller for using the Pro Pack Plus Bundle feature pack.
    /// 					
    /// </remarks>

    ProPackPlusBundleFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates the account entry is a credit towards the fee charged by eBay to the seller for using the Pro Pack Plus Bundle feature pack.
    /// 					
    /// </remarks>

    ProPackPlusBundleFeeCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates the account entry is the final entry in a user's account before it is closed or merged with another account.
    /// 					
    /// </remarks>

    FinalEntry, 
    /// <remarks>
    /// 
    /// 						This enumeration value is Reserved for future use.
    /// 					
    /// </remarks>

    CustomCode, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a fee charged to the seller for using an extended listing duration.
    /// 					
    /// </remarks>

    ExtendedDurationFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit towards a fee charged to the seller for using an extended listing duration.
    /// 					
    /// </remarks>

    ExtendedDurationFeeCredit, 
    /// <remarks>
    /// 
    /// 					  This enumeration value indicates that the account entry is a 'cross-border trade' fee, where the seller pays an additional listing fee to have his/her listing surface in the search on another eBay marketplace.
    /// 					
    /// </remarks>

    InternationalListingFee, 
    /// <remarks>
    /// 
    /// 					  This enumeration value indicates that the account entry is a credit towards a 'cross-border trade' fee, where the seller pays an additional listing fee to have his/her listing surface in the search on another eBay marketplace.
    /// 					
    /// </remarks>

    InternationalListingCredit, 
    /// <remarks>
    /// 
    /// 					  This enumeration value indicates that the account entry is a fee for an expired Terapeak Research subscription.
    /// 					
    /// </remarks>

    MarketplaceResearchExpiredSubscriptionFee, 
    /// <remarks>
    /// 
    /// 					  This enumeration value indicates that the account entry is a credit towards a fee for an expired Terapeak Research subscription.
    /// 					
    /// </remarks>

    MarketplaceResearchExpiredSubscriptionFeeCredit, 
    /// <remarks>
    /// 
    /// 					  This enumeration value indicates that the account entry is a fee for a Terapeak Research basic subscription.
    /// 					
    /// </remarks>

    MarketplaceResearchBasicSubscriptionFee, 
    /// <remarks>
    /// 
    /// 					  This enumeration value indicates that the account entry is a credit towards a  fee for a Terapeak Research basic subscription.
    /// 					
    /// </remarks>

    MarketplaceResearchBasicSubscriptionFeeCredit, 
    /// <remarks>
    /// 
    /// 					 This enumeration value indicates that the account entry is a fee for a Terapeak Research pro subscription.
    /// 					
    /// </remarks>

    MarketplaceResearchProSubscriptionFee, 
    /// <remarks>
    /// 
    /// 					  This enumeration value is no longer applicable since a basic bundle pack is no longer available on any eBay marketplace.
    /// 					
    /// </remarks>

    BasicBundleFee, 
    /// <remarks>
    /// 
    /// 					  This enumeration value is no longer applicable since a basic bundle pack is no longer available on any eBay marketplace.
    /// 					
    /// </remarks>

    BasicBundleFeeCredit, 
    /// <remarks>
    /// 
    /// 					  This enumeration value indicates that the account entry is a credit towards a  fee for a Terapeak Research pro subscription.
    /// 					
    /// </remarks>

    MarketplaceResearchProSubscriptionFeeCredit, 
    /// <remarks>
    /// 
    /// 					  This enumeration value is no longer applicable as there are no longer any subscription fees to sell motor vehicles through Motors local listings.
    /// 					
    /// </remarks>

    VehicleLocalSubscriptionFee, 
    /// <remarks>
    /// 
    /// 					  This enumeration value is no longer applicable as there are no longer any subscription fees to sell motor vehicles through Motors local listings.
    /// 					
    /// </remarks>

    VehicleLocalSubscriptionFeeCredit, 
    /// <remarks>
    /// 
    /// 					  This enumeration value indicates that the account entry is an insertion fee for a Motors local listing.
    /// 					
    /// </remarks>

    VehicleLocalInsertionFee, 
    /// <remarks>
    /// 
    /// 					  This enumeration value indicates that the account entry is a credit towards an insertion fee for a Motors local listing.
    /// 					
    /// </remarks>

    VehicleLocalInsertionFeeCredit, 
    /// <remarks>
    /// 
    /// 					  This enumeration value indicates that the account entry is a final value fee for the sale of a motor vehicle through a Motors local listing.
    /// 					
    /// </remarks>

    VehicleLocalFinalValueFee, 
    /// <remarks>
    /// 
    /// 					  This enumeration value indicates that the account entry is credit towards a final value fee for the sale of a motor vehicle through a Motors local listing.
    /// 					
    /// </remarks>

    VehicleLocalFinalValueFeeCredit, 
    /// <remarks>
    /// 
    /// 					  This enumeration value indicates that the account entry is a 'GTC' duration listing fee for a Motors local listing.
    /// 					
    /// </remarks>

    VehicleLocalGTCFee, 
    /// <remarks>
    /// 
    /// 					   This enumeration value indicates that the account entry is a credit towards a 'GTC' duration listing fee for a Motors local listing.
    /// 					
    /// </remarks>

    VehicleLocalGTCFeeCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is an eBay Motors Pro fee. Applies to eBay Motors Pro registered dealers only.
    /// 					
    /// </remarks>

    eBayMotorsProFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit towards an eBay Motors Pro fee. Applies to eBay Motors Pro registered dealers only.
    /// 					
    /// </remarks>

    CrediteBayMotorsProFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is an eBay Motors Pro fee for a Feature pack. Applies to eBay Motors Pro registered dealers only.
    /// 					
    /// </remarks>

    eBayMotorsProFeatureFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit towards an eBay Motors Pro fee for a Feature pack. Applies to eBay Motors Pro registered dealers only.
    /// 					
    /// </remarks>

    CrediteBayMotorsProFeatureFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a fee charged by eBay for listing an item with the Gallery Plus feature.
    /// 					
    /// </remarks>

    FeeGalleryPlus, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit towards a fee charged by eBay for listing an item with the Gallery Plus feature.
    /// 					
    /// </remarks>

    CreditGalleryPlus, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a fee for a private listing. With a private listing, bidders/buyers remain anonymous to other eBay users (besides the seller).
    /// 					
    /// </remarks>

    PrivateListing, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a fee for a private listing. With a private listing, bidders/buyers remain anonymous to other eBay users (besides the seller).
    /// 					
    /// </remarks>

    CreditPrivateListing, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable, and should not be returned.
    /// 					
    /// </remarks>

    ImmoProFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable, and should not be returned.
    /// 					
    /// </remarks>

    CreditImmoProFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable, and should not be returned.
    /// 					
    /// </remarks>

    ImmoProFeatureFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable, and should not be returned.
    /// 					
    /// </remarks>

    CreditImmoProFeatureFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable, and should not be returned.
    /// 					
    /// </remarks>

    RealEstateProFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable, and should not be returned.
    /// 					
    /// </remarks>

    CreditRealEstateProFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable, and should not be returned.
    /// 					
    /// </remarks>

    RealEstateProFeatureFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable, and should not be returned.
    /// 					
    /// </remarks>

    CreditRealEstateProFeatureFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a seller discount against a final value fee, an insertion fee, a subscription fee, or other fee. See the corresponding <b>Description</b> and/or <b>Memo</b> fields for more information on the type of discount.
    /// 					
    /// </remarks>

    Discount, 
    /// <remarks>
    /// 
    /// 						 This enumeration value indicates that the account entry is a credit towards a  final value fee for the shipping cost of an order. This fee is charged when a listed item sells, and is a percentage of the shipping cost. The final value fee associated with the final sale price is returned in a <b>FeeFinalValue</b> entry.
    /// 					
    /// </remarks>

    CreditFinalValueShipping, 
    /// <remarks>
    /// 
    /// 					 This enumeration value indicates that the account entry is a final value fee for the shipping cost of an order. This fee is charged when a listed item sells, and is a percentage of the shipping cost. The final value fee associated with the final sale price is returned in a <b>FeeFinalValue</b> entry.
    /// 					
    /// </remarks>

    FeeFinalValueShipping, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a return shipping fee if an item is returned by the buyer.
    /// 					
    /// </remarks>

    FeeReturnShipping, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit toward a return shipping fee if an item is returned by the buyer.
    /// 					
    /// </remarks>

    CreditReturnShipping, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a fee charged by eBay if the seller is using the Global Shipping Program to ship an item internationally.
    /// 					
    /// </remarks>

    FeeGlobalShippingProgram, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit towards a fee charged by eBay if the seller is using the Global Shipping Program to ship an item internationally.
    /// 					
    /// </remarks>

    CreditGlobalShippingProgram, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a fee charged to the seller's account if the seller ends an auction (with bids) early.
    /// 					
    /// </remarks>

    FeeAuctionEndEarly, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit issued by eBay to the seller's account if a duplicate auction listing is ended administratively by eBay. A seller is only eligible for this credit if the auction listing had zero bids and was never surfaced in Search.
    /// 					
    /// </remarks>

    CreditAuctionEndEarly, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a fee charged to the seller for printing out and using a FedEx shipping label from eBay.
    /// 					
    /// </remarks>

    FeeFedExShippingLabel, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit issued by eBay to reimburse the seller for a FedEx shipping label. In some cases, this credit may be issued to the seller as a result of an Unpaid Item case that the seller has won against a buyer.
    /// 					
    /// </remarks>

    CreditFedExShippingLabel, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a fee charged to the seller's account if eBay refunds the buyer in a case where the buyer has used the eBay returns process and return shipped the item to the seller, but the seller has not issued a refund to the buyer within seven business days after receiving the returned item. 
    /// 					
    /// </remarks>

    FeeReturnRefund, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit issued to the buyer's account by eBay in a case where the buyer has used the eBay returns process and return shipped the item to the seller, but the seller has not issued a refund to the buyer within seven business days after receiving the returned item. The buyer credit amounts to the total purchase price plus any shipping costs if the item was 'not as described'. 
    /// 					
    /// </remarks>

    CreditReturnRefund, 
    /// <remarks>
    /// 
    /// 					 This enumeration value indicates that the account entry is a fee charged for early termination of an eBay Stores subscription.
    /// 					
    /// </remarks>

    FeeStoresSubscriptionEarlyTermination, 
    /// <remarks>
    /// 
    /// 					 This enumeration value indicates that the account entry is a credit toward a fee charged for early termination of an eBay Stores subscription.
    /// 					
    /// </remarks>

    CreditStoresSubscriptionEarlyTermination, 
    /// <remarks>
    /// 
    /// 					 This enumeration value indicates that the account entry is a fee charged for early termination of a National Vehicle subscription.
    /// 					
    /// </remarks>

    FeeVehicleSubscriptionEarlyTermination, 
    /// <remarks>
    /// 
    /// 					  This enumeration value indicates that the account entry is a credit toward a fee charged for early termination of a National Vehicle subscription.
    /// 					
    /// </remarks>

    CreditVehicleSubscriptionEarlyTermination, 
    /// <remarks>
    /// 
    /// 					  This enumeration value indicates that the account entry is a monthly subscription fee charged for a National Vehicle subscription.
    /// 					
    /// </remarks>

    FeeVehicleSubscription, 
    /// <remarks>
    /// 
    /// 					  This enumeration value indicates that the account entry is a credit toward a monthly subscription fee charged for a National Vehicle subscription.
    /// 					
    /// </remarks>

    CreditVehicleSubscription, 
    /// <remarks>
    /// 
    /// 					 This enumeration value indicates that the account entry is a fee charged to the seller for printing out and using an Australia Post shipping label from eBay.
    /// 					
    /// </remarks>

    FeeAUPostShippingLabel, 
    /// <remarks>
    /// 
    /// 					 This enumeration value indicates that the account entry is a credit toward a fee charged to the seller for printing out and using an Australia Post shipping label from eBay. In some cases, this credit may be issued to the seller as a result of an Unpaid Item case that the seller has won against a buyer.
    /// 					
    /// </remarks>

    CreditAUPostShippingLabel, 
    /// <remarks>
    /// 
    /// 					 This enumeration value indicates that the account entry is a fee charged to the seller for printing out and using an FedEx shipping label from eBay in the Asia-Pacific geographical region.
    /// 					
    /// </remarks>

    FeeAPACFedExShippingLabel, 
    /// <remarks>
    /// 
    /// 					  This enumeration value indicates that the account entry is a credit toward a fee charged to the seller for printing out and using an FedEx shipping label from eBay in the Asia-Pacific geographical region. In some cases, this credit may be issued to the seller as a result of an Unpaid Item case that the seller has won against a buyer.
    /// 					
    /// </remarks>

    CreditAPACFedExShippingLabel, 
    /// <remarks>
    /// 
    /// 					  This enumeration value indicates that the account entry is a fee charged to the seller for printing out and using an Track & Trace (TNT) shipping label from eBay in the Asia-Pacific geographical region.
    /// 					
    /// </remarks>

    FeeAPACTNTShippingLabel, 
    /// <remarks>
    /// 
    /// 					 This enumeration value indicates that the account entry is a credit toward a fee charged to the seller for printing out and using an Track & Trace (TNT) shipping label from eBay in the Asia-Pacific geographical region.In some cases, this credit may be issued to the seller as a result of an Unpaid Item case that the seller has won against a buyer.
    /// 					
    /// </remarks>

    CreditAPACTNTShippingLabel, 
    /// <remarks>
    /// 
    /// 					 This enumeration value indicates that the account entry is a fee charged for eBay Money Back Guarantee reimbursement.
    /// 					
    /// </remarks>

    FeeEBPReimbursement, 
    /// <remarks>
    /// 
    /// 					 This enumeration value indicates that the account entry is a credit toward a fee charged for eBay Money Back Guarantee reimbursement.
    /// 					
    /// </remarks>

    CreditEBPReimbursement, 
    /// <remarks>
    /// 
    /// 					 This value is deprecated. Instead, Promoted Listing fees are returned as <code>FeeAd</code> for a Standard Promoted Listing ad on eBay or <code>AdFeePremium</code> for an Advanced Promoted Listing ad on eBay.
    /// 					
    /// </remarks>

    FeePromotedListingFeature, 
    /// <remarks>
    /// 
    /// 						This value is deprecated. Instead, Promoted Listing credits are returned as <code>CreditAd</code> for a Standard Promoted Listing ad on eBay or <code>AdFeePremiumCredit</code> for an Advanced Promoted Listing ad on eBay.
    /// 					
    /// </remarks>

    CreditPromotedListingFeature, 
    /// <remarks>
    /// 
    /// 					  This enumeration value indicates that the account entry is a fee charged for a Standard Promoted Listing ad on eBay. With Standard Promoted Listings, the seller is charged a fee when a buyer clicks on the ad and then goes on to purchase that same item within 30 days of that click. The seller chooses the bid percentage for the ad, and this rate is applied toward the total purchase price.
    /// 					
    /// </remarks>

    FeeAd, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit issued toward a Standard Promoted Listing ad fee.
    /// 					
    /// </remarks>

    CreditAd, 
    /// <remarks>
    /// 
    /// 					 This enumeration value indicates that the account entry is a fee charged to the seller for printing out and using a Universal Business Integration (UBI) shipping label from eBay.
    /// 					
    /// </remarks>

    FeeUBIShippingLabel, 
    /// <remarks>
    /// 
    /// 					 This enumeration value indicates that the account entry is a credit issued by eBay to reimburse the seller for a Universal Business Integration (UBI) shipping label. In some cases, this credit may be issued to the seller as a result of an Unpaid Item case that the seller has won against a buyer.
    /// 					
    /// </remarks>

    CreditUBIShippingLabel, 
    /// <remarks>
    /// 
    /// 					 This enumeration value indicates that the account entry is an annual subscription fee charged for an eBay Plus subscription.
    /// 					
    /// </remarks>

    FeeeBayPlusSubscription, 
    /// <remarks>
    /// 
    /// 					 This enumeration value indicates that the account entry is a credit toward an annual subscription fee charged for an eBay Plus subscription.
    /// 					
    /// </remarks>

    CrediteBayPlusSubscription, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the charge is a payment processing fee for the order. This fee is only applied at the order level, and the amount of the fee will be the same, regardless of how many line items are in the order or on the total cost of the order. Typically, this fee is $0.30. 
    /// 					
    /// </remarks>

    PaymentIntermediationFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the credit is for a payment processing fee for the order. 
    /// 					
    /// </remarks>

    PaymentIntermediationFeeCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the charge is a payment processing fee for the order. This fee is only applied at the order level, and the amount of the fee will be the same, regardless of how many line items are in the order or on the total cost of the order. Typically, this fee is $0.30. 
    /// 					
    /// </remarks>

    FeePaymentIntermediationRVI, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates the credit is a seller reimbursement for an eBay payment intermediation fee.
    /// 					
    /// </remarks>

    FeePaymentIntermediationChargeback, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates the invoice credit is a seller reimbursement for an eBay payment intermediation fee.
    /// 					
    /// </remarks>

    FeePaymentIntermediationChargebackRVI, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates the invoice charge is a Final Value Fee (for item cost) charged to the seller's account after a buyer creates and wins a 'significantly not as described' (SNAD) case against the seller.
    /// 					
    /// </remarks>

    SnadOutlierFinalValueFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates the invoice charge is a Final Value Fee (for shipping cost) charged to the seller's account after a buyer creates and wins a 'significantly not as described' (SNAD) case against the seller.
    /// 					
    /// </remarks>

    SnadOutlierFinalValueFeeOnShipping, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates the invoice charge is for a 'Highline Search' fee, which is a capability that allows sellers to advertise multiple products at the same time, with ads appearing prominently on top of eBay's search results.
    /// 					
    /// </remarks>

    HighlineSearchFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates the invoice credit is for a 'Highline Search' fee that was charged to the seller's account. The 'Highline Search' capability allows sellers to advertise multiple products at the same time, with ads appearing prominently on top of eBay's search results.
    /// 					
    /// </remarks>

    HighlineSearchFeeCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates the invoice credit is for a Final Value Fee (for item cost) that was charged to the seller's account after a buyer created a 'significantly not as described' (SNAD) case against the seller, but the seller won the case.
    /// 					
    /// </remarks>

    SnadOutlierFinalValueFeeCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates the invoice credit is for a Final Value Fee (for shipping cost) that was charged to the seller's account after a buyer created a 'significantly not as described' (SNAD) case against the seller, but the seller won the case.
    /// 					
    /// </remarks>

    SnadOutlierFinalValueFeeOnShippingCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a fee charged for a Advanced Promoted Listing ad on eBay. With Advanced Promoted Listings, the seller uses keywords to promote the listing, and if buyers find the listing based on a keyword defined in the seller's Promoted Listings campaign, the seller is charged a fee each time the ad is clicked. The seller chooses the bid percentage rate for the ad, and this rate is charged for each click on the ad.
    /// 					
    /// </remarks>

    AdFeePremium, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that a credit was issued toward an Advanced Promoted Listing ad fee.
    /// 					
    /// </remarks>

    AdFeePremiumCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable, and should not be returned. Instead, the payment processing fee for all orders is represented with the <code>FinalValueFeeFixedFeePerOrder</code> value. 
    /// 					
    /// </remarks>

    PerListingPaymentsFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable, and should not be returned. Instead, any credit for a payment processing fee is represented with the <code>FinalValueFeeFixedFeePerOrderCredit</code> value. 
    /// 					
    /// </remarks>

    PerListingPaymentsFeeCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates the invoice charge is for a Vehicles Listing Basic Package fee.
    /// 					
    /// </remarks>

    VehiclesListingBasicPackageFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that a credit was issued for a Vehicles Listing Basic Package fee charge.
    /// 					
    /// </remarks>

    VehiclesListingBasicPackageCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates the invoice charge is for a Vehicles Listing Plus Package fee.
    /// 					
    /// </remarks>

    VehiclesListingPlusPackageFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that a credit was issued for a Vehicles Listing Plus Package fee charge.
    /// 					
    /// </remarks>

    VehiclesListingPlusPackageCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates the invoice charge is for a Vehicles Listing Premium Package fee.
    /// 					
    /// </remarks>

    VehiclesListingPremiumPackageFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that a credit was issued for a Vehicles Listing Premium Package fee charge.
    /// 					
    /// </remarks>

    VehiclesListingPremiumPackageCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates the invoice charge is for a Send Label fee.
    /// 					
    /// </remarks>

    SendLabelFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that a credit was issued for a Send Label fee charge.
    /// 					
    /// </remarks>

    SendLabelFeeCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates the invoice charge is for a UPS Label fee.
    /// 					
    /// </remarks>

    UpsLabelFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that a credit was issued for a UPS Label fee charge.
    /// 					
    /// </remarks>

    UpsLabelFeeCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates the invoice charge is for a Canada Post Label fee.
    /// 					
    /// </remarks>

    CanadaPostLabelFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that a credit was issued for a Canada Post Label fee charge.
    /// 					
    /// </remarks>

    CanadaPostLabelFeeCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates the invoice charge is for eBay having to resend/regenerate a shipping label for a seller. Sellers typically have 24 hours to reprint a shipping label 24 hours after the purchase of the shipping label. If a seller tries to reprint a purchased shipping label after this time, a small fee may apply.
    /// 					
    /// </remarks>

    EbaySendLabelFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that a credit was issued for the fee charged by eBay to resend/regenerate a shipping label for the seller.
    /// 					
    /// </remarks>

    EbaySendLabelFeeCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value is deprecated.
    /// 					
    /// </remarks>

    USInternetSalesTax, 
    /// <remarks>
    /// 
    /// 						This enumeration value is deprecated.
    /// 					
    /// </remarks>

    USInternetSalesTaxCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value is deprecated.
    /// 					
    /// </remarks>

    NewZealandGST, 
    /// <remarks>
    /// 
    /// 						This enumeration value is deprecated.
    /// 					
    /// </remarks>

    NewZealandGSTCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value is deprecated.
    /// 					
    /// </remarks>

    AustraliaGST, 
    /// <remarks>
    /// 
    /// 						This enumeration value is deprecated.
    /// 					
    /// </remarks>

    AustraliaGSTCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that eBay is billing the seller for a USPS shipping label that was purchased through the seller's eBay account.
    /// 					
    /// </remarks>

    UspsLabelFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that eBay is giving a credit to the seller for a USPS shipping label that was purchased through the seller's eBay account.
    /// 					
    /// </remarks>

    UspsLabelFeeCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that eBay is billing the seller for shipping insurance (such as ShipCover through USPS) that was purchased through the seller's eBay account.
    /// 					
    /// </remarks>

    ShippingInsuranceFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that eBay is giving a credit to the seller for shipping insurance (such as ShipCover through USPS) that was purchased through the seller's eBay account.
    /// 					
    /// </remarks>

    ShippingInsuranceFeeCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that eBay is billing the seller for underpayment for a USPS shipping label that was purchased through the seller's eBay account. Underpayment may occur if the seller paid for a shipping label based on specific package weight and dimensions, but either or both package weight and dimensions were not accurate, hence the seller owes more money to USPS for postage.
    /// 					
    /// </remarks>

    UspsShortpaidFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that eBay is giving credit to the seller for underpayment for a USPS shipping label that was purchased through the seller's eBay account. Underpayment may occur if the seller paid for a shipping label based on specific package weight and dimensions, but either or both package weight and dimensions were not accurate, hence the seller owes more money to USPS for postage.
    /// 					
    /// </remarks>

    UspsShortpaidFeeCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that eBay is billing the seller for a co-funding charge.
    /// 					
    /// </remarks>

    CoFundingCharge, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that eBay is giving credit to the seller for a co-funding charge.
    /// 					
    /// </remarks>

    CoFundingChargeCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a final value fee, which is a fee that is calculated as a percentage of the total amount of the order, including the purchase price and any shipping and handling charges. This fee is always deducted directly from the seller payout associated with the order. 
    /// 						<br><br>
    /// 						For more information about how transaction fees are handled, see the <a href="https://www.ebay.com/help/selling/fees-credits-invoices/selling-fees?id=4822#section2" target="_blank">Selling fees</a> help page.
    /// 						</span>
    /// 					
    /// </remarks>

    FinalValueFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit towards a final value fee calculated for an order. The seller may get this credit for different reasons, including if the buyer cancels the order, or the buyer doesn't pay for the order and the seller files and wins an Unpaid Item case.
    /// 					
    /// </remarks>

    FinalValueFeeCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is an international fee, which is a fee that is calculated as a percentage of the total amount of the order, and is applicable for international buyers. This fee is always deducted directly from the seller payout associated with the order.
    /// 						<br><br>
    /// 						<span class="tablenote"><b>Note: </b>
    /// 						For more information about this international fee, see the <a href="https://www.ebay.com/help/selling/fees-credits-invoices/selling-fees?id=4822#section8" target="_blank">Selling fees</a> help page.
    /// 						</span>
    /// 					
    /// </remarks>

    InternationalFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit towards an international fee calculated for an order. The seller may get this credit for different reasons, including if the buyer cancels the order, or the buyer doesn't pay for the order and the seller files and wins an Unpaid Item case.
    /// 					
    /// </remarks>

    InternationalFeeCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a payment processing fee, which is a fixed fee that is charged for all orders. This fixed fee may vary by country, but it is currently $0.30 in the US. This fee is always deducted directly from the seller payout associated with the order. 
    /// 						<br><br>
    /// 						<span class="tablenote"><b>Note: </b>
    /// 						For more information about how transaction fees are handled, see the <a href="https://www.ebay.com/help/selling/fees-credits-invoices/selling-fees?id=4822#section2" target="_blank">Selling fees</a> help page.
    /// 						</span>
    /// 					
    /// </remarks>

    FinalValueFeeFixedFeePerOrder, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit against a payment processing fee. Except for perhaps a very unlikely and unusual situation, the payment processing fee will generally not be refunded to the seller.
    /// 					
    /// </remarks>

    FinalValueFeeFixedFeePerOrderCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is an additional final value fee for a Below Standard seller. Typically, this fee will be an additional 5 percent (on top of standard final value fee) of the total amount of the order, including the purchase price and any shipping and handling charges. It is possible that this fee may also be charged to an Above Standard or Top-rated seller if that seller is having an issue with 'item not as described' return requests. This fee is always deducted directly from the seller payout associated with the order.
    /// 						<br><br>
    /// 						<span class="tablenote"><b>Note: </b>
    /// 						For more information about this additional final value fee for sellers, see the <a href="https://www.ebay.com/help/selling/fees-credits-invoices/selling-fees?id=4822#section6" target="_blank">Selling fees</a> help page.
    /// 						</span>
    /// 					
    /// </remarks>

    FinalValueFeeBelowStandard, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit against an additional final value fee for a Below Standard seller.
    /// 					
    /// </remarks>

    FinalValueFeeBelowStandardCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a Promoted Listing Express fee.
    /// 					
    /// </remarks>

    AdFeeExpress, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit applied against a Promoted Listing Express fee.
    /// 					
    /// </remarks>

    AdFeeExpressCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a Motor Vehicles Deposit processing fee. eBay charges the seller a 2.8 percent processing fee (against the required deposit amount) when they sell their vehicle through a listing that required that the buyer make an initial deposit for the vehicle.
    /// 					
    /// </remarks>

    DepositProcessingFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the account entry is a credit applied against a Motor Vehicles Deposit processing fee.
    /// 					
    /// </remarks>

    DepositProcessingFeeCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value is deprecated. All Motor Vehicles Deposit processing fees are indicated with the <code>DepositProcessingFee</code> value.
    /// 					
    /// </remarks>

    DepositProcessingFixedFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value is deprecated. All credits against Motor Vehicles Deposit processing fees are indicated with the <code>DepositProcessingFeeCredit</code> value.
    /// 					
    /// </remarks>

    DepositProcessingFixedFeeCredit, 
    /// <remarks>
    /// 
    /// 					This enumeration value indicates that the seller was charged a fee for a FedEx return shipping label.
    /// 				 
    /// </remarks>

    FedExReturnLabelFee, 
    /// <remarks>
    /// 
    /// 					This enumeration value indicates that the seller received a credit against a fee for a FedEx return shipping label.
    /// 				 
    /// </remarks>

    FedExReturnLabelFeeCredit, 
    /// <remarks>
    /// 
    /// 					This enumeration value indicates that the seller was charged a fee for an Australia Post return shipping label.
    /// 				 
    /// </remarks>

    AUPostReturnLabelFee, 
    /// <remarks>
    /// 
    /// 					This enumeration value indicates that the seller received a credit against a fee for an Australia Post return shipping label.
    /// 				 
    /// </remarks>

    AUPostReturnLabelFeeCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the seller was charged a fee for a UPS Canada shipping label.
    /// 					
    /// </remarks>

    UpsCaLabelFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the seller received a credit against a fee for a UPS Canada shipping label.
    /// 					
    /// </remarks>

    UpsCaLabelFeeCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the seller was charged a fee for a FedEx Canada shipping label.
    /// 					
    /// </remarks>

    FedExCaLabelFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the seller received a credit against a fee for a FedEx Canada shipping label.
    /// 					
    /// </remarks>

    FedExCaLabelFeeCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the seller was charged a fee for a Hubbed return shipping label.
    /// 					
    /// </remarks>

    HubbedReturnLabelFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the seller received a credit against a fee for a Hubbed return shipping label.
    /// 					
    /// </remarks>

    HubbedReturnLabelFeeCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the seller was charged a fee for a Royal Mail return shipping label.
    /// 					
    /// </remarks>

    RoyalMailReturnLabelFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the seller received a credit against a fee for a Royal Mail return shipping label.
    /// 					
    /// </remarks>

    RoyalMailReturnLabelFeeCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the seller was charged a fee for a Parcel Force Post return shipping label.
    /// 					
    /// </remarks>

    ParcelForcePostReturnLabelFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the seller received a credit against a fee for a Parcel Force Post return shipping label.
    /// 					
    /// </remarks>

    ParcelForcePostReturnLabelFeeCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the seller was charged a fee for offsite ad clicks for a Promoted Listing Advanced campaign.
    /// 					
    /// </remarks>

    OffsiteAdsFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the seller was issued a credit against a fee for offsite ad clicks for a Promoted Listing Advanced campaign.
    /// 					
    /// </remarks>

    OffsiteAdsFeeCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the seller was charged a fee for Promoted Display.
    /// 					
    /// </remarks>

    PromotedDisplayFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the seller was issued a credit against a fee for Promoted Display.
    /// 					
    /// </remarks>

    PromotedDisplayFeeCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that US Federal tax was witheld and deducted from the seller's payout funds.
    /// 					
    /// </remarks>

    USWHTFederal, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the seller was issued a credit against US Federal tax that was witheld and deducted from the seller's payout funds.
    /// 					
    /// </remarks>

    USWHTFederalCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that US State tax was witheld and deducted from the seller's payout funds.
    /// 					
    /// </remarks>

    USWHTState, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the seller was issued a credit against US State tax that was witheld and deducted from the seller's payout funds.
    /// 					
    /// </remarks>

    USWHTStateCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the seller was charged an Eco Participation fee.
    /// 					
    /// </remarks>

    EPRFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the seller was issued a credit against an Eco Participation fee.
    /// 					
    /// </remarks>

    EPRFeeCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the seller was charged a fee for a Canadian Post return shipping label.
    /// 					
    /// </remarks>

    CAPostReturnLabelFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the seller was issued a credit against a fee for a Canadian Post return shipping label.
    /// 					
    /// </remarks>

    CAPostReturnLabelFeeCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the seller was charged a fee for a Hermes return shipping label.
    /// 					
    /// </remarks>

    HermesReturnLabelFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the seller was issued a credit against a fee for a Hermes return shipping label.
    /// 					
    /// </remarks>

    HermesReturnLabelFeeCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the seller was charged a fee for a payout to their bank account.
    /// 						<br>
    /// 						<span class="tablenote"><b>Note:</b> This fee is for future use, and will initially only apply to sellers based in mainland China if they choose to receive payout funds through a bank account instead of through their Payoneer account. </span>
    /// 					
    /// </remarks>

    BankPayoutFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the seller was issued a credit against a fee for a payout to their bank account.
    /// 					
    /// </remarks>

    BankPayoutFeeCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the seller donated a portion of their sale proceeds to a charitable organization.
    /// 					
    /// </remarks>

    CharityDonation, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the seller was issued a credit against a donation to a charitable organization.
    /// 					
    /// </remarks>

    CharityDonationCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates the fee charged by eBay when a seller requests a payout through a debit card.
    /// 					
    /// </remarks>

    ExpressPayoutFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the fee charged to the seller for a direct payout failed and the fee will be credited back to the seller's debit card.
    /// 					
    /// </remarks>

    ExpressPayoutFeeCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates the seller was charged a fee for a Hermes return shipping label and any applicable tax. Return shipping labels are subject to tax, which is payable by the seller.
    /// 					
    /// </remarks>

    HermesReturnLblSellerPaidShpFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the seller was issued a credit against a fee for a Hermes return shipping label.
    /// 					
    /// </remarks>

    HermesReturnLblSellerPaidShpFeeCr, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates the seller was charged a fee for a DHL return shipping label and any applicable tax. Return shipping labels are subject to tax, which is payable by the seller.
    /// 					
    /// </remarks>

    DHLReturnLblShippingFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the seller was issued a credit against a fee for a DHL return shipping label.
    /// 					
    /// </remarks>

    DHLReturnLblShippingFeeCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that a fee is charged by eBay to cover the costs associated with complying with regulatory requirements in specific marketplaces.
    /// 						<br>
    /// 						<span class="tablenote"><b>Note:</b> Currently, this fee is only applicable in the following marketplaces: United Kingdom, Italy, France, Spain, Austria, Belgium (Dutch), Belgium (French), Poland, Ireland, and Switzerland. </span>
    /// 					
    /// </remarks>

    RegulatoryOperatingFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that a credit against a fee to cover the costs associated with complying with regulatory requirements in specific marketplaces was issued.
    /// 						<br>
    /// 						<span class="tablenote"><b>Note:</b> Currently, this fee is only applicable in the following marketplaces: United Kingdom, Italy, France, Spain, Austria, Belgium (Dutch), Belgium (French), Poland, Ireland, and Switzerland. </span>						
    /// 					
    /// </remarks>

    RegulatoryOperatingFeeCredit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the seller was charged a fee for DHL processing.
    /// 						<br>
    /// 						<span class="tablenote"><b>Note:</b> Currently, this fee is only applicable in the German marketplace. </span>
    /// 					
    /// </remarks>

    DHLPaymentProcessingFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the seller was issued a credit against a fee charged a fee for DHL processing.
    /// 						<span class="tablenote"><b>Note:</b> Currently, this fee is only applicable in the German marketplace. </span>
    /// 					
    /// </remarks>

    DHLPaymentProcessingFeeCredit
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 			  Enumerated type defining the possible values that can be used in the <b>AccountEntrySortType</b> field of the <b>GetAccount</b> request to sort account entries returned in the response.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum AccountEntrySortTypeCodeType
{
    /// <remarks>
    /// 
    /// 					 This is the default value. With this value set, account entries in the <b>GetAccount</b> response are sorted by transaction date (see <b>AccountEntry.Date</b> field) in ascending order (oldest transaction to most recent transaction). This value will produce the same results as the  <b>AccountEntryCreatedTimeAscending</b> value.
    /// 					
    /// </remarks>

    None, 
    /// <remarks>
    /// 
    /// 					 With this value set, account entries in the <b>GetAccount</b> response are sorted by transaction date (see <b>AccountEntry.Date</b> field) in ascending order (oldest transaction to most recent transaction). This value will produce the same results as the  <b>None</b> value.
    /// 					
    /// </remarks>

    AccountEntryCreatedTimeAscending, 
    /// <remarks>
    /// 
    /// 						With this value set, account entries in the <b>GetAccount</b> response are sorted by transaction date (see <b>AccountEntry.Date</b> field) in descending order (most recent transaction to oldest transaction).
    /// 					
    /// </remarks>

    AccountEntryCreatedTimeDescending, 
    /// <remarks>
    /// 
    /// 						With this value set, account entries in the <b>GetAccount</b> response are sorted by Item ID value (see <b>AccountEntry.ItemID</b> field) in ascending order (oldest eBay listing to most recent eBay listing).
    /// 					
    /// </remarks>

    AccountEntryItemNumberAscending, 
    /// <remarks>
    /// 
    /// 						With this value set, account entries in the <b>GetAccount</b> response are sorted by Item ID value (see <b>AccountEntry.ItemID</b> field) in descending order (most recent eBay listing to oldest eBay listing).
    /// 					
    /// </remarks>

    AccountEntryItemNumberDescending, 
    /// <remarks>
    /// 
    /// 						With this value set, account entries in the <b>GetAccount</b> response are sorted in alphabetical order according to each entry's <b>AccountEntry.Description</b> value. When account entries are sorted according to fee type, the secondary sort criterion is transaction date, and for account entries with identical fee types, the oldest account entries will appear first in the response.
    /// 					
    /// </remarks>

    AccountEntryFeeTypeAscending, 
    /// <remarks>
    /// 
    /// 					With this value set, account entries in the <b>GetAccount</b> response are sorted in reverse alphabetical order according to each entry's <b>AccountEntry.Description</b> value. When account entries are sorted according to fee type, the secondary sort criterion is transaction date, and for account entries with identical fee types, the oldest account entries will appear first in the response.
    /// 					
    /// </remarks>

    AccountEntryFeeTypeDescending, 
    /// <remarks>
    /// 
    /// 						(out) Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// SpecifiedInvoice
/// </summary>
/// <remarks>
/// 
/// 				This enumerated type contains the suppported values that may be used in the <b>AccountHistorySelection</b> field to control the account entries that are returned in a <b>GetAccount</b> response.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum AccountHistorySelectionCodeType
{
    /// <remarks>
    /// 
    /// 						This value should be used if the eBay user wants to see the account entries posted to the last invoice that was sent to the user by eBay. If this value is used, the <b>InvoiceDate</b>, <b>BeginDate</b>, and <b>EndDate</b> fields of the <b>GetAccount</b> request are no longer applicable and will be ignored if they are included in the call request.
    /// 					
    /// </remarks>

    LastInvoice, 
    /// <remarks>
    /// 
    /// 						This value is no longer applicable or supported, and an error occurs if it is used. As an alternative, users can use <code>BetweenSpecifiedDates</code> instead.
    /// 					
    /// </remarks>

    SpecifiedInvoice, 
    /// <remarks>
    /// 
    /// 						This value should be used if the eBay user wants to see account entries for a customized date range that can overlap multiple formal eBay invoices. If this value is used, then you also must specify <b>BeginDate</b> and <b>EndDate</b> to set the date range for which to retrieve account entries. If this value is used, then <b>InvoiceDate</b> is no longer applicable and will be ignored if it is included in the call request.
    /// 					
    /// </remarks>

    BetweenSpecifiedDates, 
    /// <remarks>
    /// 
    /// 						This value should be used if the eBay user wants to see the account entries related to a specific eBay order. If this value is used, the user must also include the <b>OrderID</b> field and sets its value to the identifier of the order for which they wish to retrieve account entries.
    /// 					
    /// </remarks>

    OrderId, 
    /// <remarks>
    /// 
    /// 						 (out) Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Enumerated type that lists the possible states of an eBay user account.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum AccountStateCodeType
{
    /// <remarks>
    /// 
    /// 						This value indicates that the eBay user account is active.
    /// 					
    /// </remarks>

    Active, 
    /// <remarks>
    /// 
    /// 						This value indicates that the eBay user account has been created, but is not yet active, pending additional information or processing by eBay.
    /// 					
    /// </remarks>

    Pending, 
    /// <remarks>
    /// 
    /// 						This value indicates that the eBay user account is inactive. No new seller account entries would be posted by eBay to the account.
    /// 					
    /// </remarks>

    Inactive, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumerated type contains a list of values that will indicate whether or not an Ad Format listing type is enabled for an eBay site or for an eBay category.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum AdFormatEnabledCodeType
{
    /// <remarks>
    /// 
    /// 						This value indicates that the Classified Ad format feature is disabled for the site or category.
    /// 					
    /// </remarks>

    Disabled, 
    /// <remarks>
    /// 
    /// 						This value indicates that the Classified Ad format feature is enabled for the site or category.
    /// 					
    /// </remarks>

    Enabled, 
    /// <remarks>
    /// 
    /// 						This value indicates that the Classified Ad format is the only listing type supported by the eBay category. This value is not applicable at the eBay site level.
    /// 					
    /// </remarks>

    Only, 
    /// <remarks>
    /// 
    /// 						This value indicates that the lead-generation Classified Ad format feature is enabled for the site or category.
    /// 				  
    /// </remarks>

    ClassifiedAdEnabled, 
    /// <remarks>
    /// 
    /// 						This value indicates that the lead-generation Classified Ad format is the only listing type supported by the eBay category. This value is not applicable at the eBay site level.
    /// 				  
    /// </remarks>

    ClassifiedAdOnly, 
    /// <remarks>
    /// 
    /// 						This value indicates that eBay Motors Local Market listings are enabled for the site or category.
    /// 				  
    /// </remarks>

    LocalMarketBestOfferOnly, 
    /// <remarks>
    /// 
    /// 						(out) Reserved for internal or future use.
    /// 				  
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Enumerated type that indicates to the owner of a classified ad whether or not an email correspondence from a prospective buyer has been answered.  
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum AdFormatLeadStatusCodeType
{
    /// <remarks>
    /// 
    /// 						This value will appear in the response if there is a new message from a prospective buyer that the seller has not yet responded to.
    /// 					
    /// </remarks>

    New, 
    /// <remarks>
    /// 
    /// 						This value will appear in the response if the seller has already responded to the prospective buyer's message.
    /// 					
    /// </remarks>

    Responded, 
    /// <remarks>
    /// 
    /// 						(out) Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumerated type contains the possible values that can be returned in the <b>type</b> attribute of the <b>AddressAttribute</b> field. Currently, this type only contains one enumeration value, but in the future, other address attributes may be created for this type.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum AddressAttributeCodeType
{
    /// <remarks>
    /// 
    /// 						This value indicates that the value returned in the <b>AddressAttribute</b> field is the reference ID for a "Click and Collect" order.
    /// 					
    /// </remarks>

    ReferenceNumber, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// PayPal
/// </summary>
/// <remarks>
/// 
/// 				Enumerated type used by the <b>ShippingAddress.AddressOwner</b> field in order management calls to indicate the owner of the shipping address on file.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum AddressOwnerCodeType
{
    /// <remarks>
    /// 
    /// 						This value is deprecated.
    /// 					
    /// </remarks>

    PayPal, 
    /// <remarks>
    /// 
    /// 						This value indicates that the buyer's shipping address being referenced is on file with eBay.
    /// 					
    /// </remarks>

    eBay, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumerated type is deprecated.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum AddressRecordTypeCodeType
{
    /// <remarks>
    /// 
    /// 						This value is not used.
    /// 					
    /// </remarks>

    Residential, 
    /// <remarks>
    /// 
    /// 						This value is not used.
    /// 					
    /// </remarks>

    Business, 
    /// <remarks>
    /// 
    /// 						This value is not used.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumerated type is deprecated.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum AddressStatusCodeType
{
    /// <remarks>
    /// 
    /// 						This value is not used.
    /// 					
    /// </remarks>

    None, 
    /// <remarks>
    /// 
    /// 						This value is not used.
    /// 					
    /// </remarks>

    Confirmed, 
    /// <remarks>
    /// 
    /// 						This value is not used.
    /// 					
    /// </remarks>

    Unconfirmed, 
    /// <remarks>
    /// 
    /// 						This value is not used.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Part of the mechanism for eBay to control which announcement messages are
/// 				to be made available to the user.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum AnnouncementMessageCodeType
{
    /// <remarks>
    /// 
    /// 						No message is to be made available.
    /// 					
    /// </remarks>

    None, 
    /// <remarks>
    /// 
    /// 						A deprecation message is to be made available,
    /// 						but only if today's date is between <b>AnnouncementMessageType.AnnouncementStartTime</b>
    /// 						and <b>AnnouncementMessageType.EventTime</b>.
    /// 					
    /// </remarks>

    Deprecation, 
    /// <remarks>
    /// 
    /// 						A mapping message is to be made available,
    /// 						but only if today's date is after <b>AnnouncementMessageType.EventTime</b>.
    /// 					
    /// </remarks>

    Mapping, 
    /// <remarks>
    /// 
    /// 						Both "Deprecation" and "Mapping" enumerations are to apply.
    /// 					
    /// </remarks>

    DeprecationAndMapping, 
    /// <remarks>
    /// 
    /// 						Reserved for future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumerated type list the possible devices that may be running a affiliate user's application. The affiliate must mark the type of device that is running their application when the <b>PlaceOffer</b> call is made.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum ApplicationDeviceTypeCodeType
{
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the user's application is running in a browser.
    /// 					
    /// </remarks>

    Browser, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the user's application is a wireless application.
    /// 					
    /// </remarks>

    Wireless, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the user's application is a desktop application.
    /// 					
    /// </remarks>

    Desktop, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the user's application is running through a television set-top box.
    /// 					
    /// </remarks>

    SetTopTVBox, 
    /// <remarks>
    /// 
    /// 						Reserved for future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumerated type is deprecated.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum AttributeConversionEnabledCodeType
{
    /// <remarks>
    /// 
    /// 						This value is not used.
    /// 					
    /// </remarks>

    NotApplicable, 
    /// <remarks>
    /// 
    /// 						This value is not used.
    /// 					
    /// </remarks>

    Enabled, 
    /// <remarks>
    /// 
    /// 						This value is not used.
    /// 					
    /// </remarks>

    Disabled, 
    /// <remarks>
    /// 
    /// 						This value is not used.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Enumerated type that defines the possible values that can be passed in to the <b>Action</b> field in a <b>RespondToBestOffer</b> request.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum BestOfferActionCodeType
{
    /// <remarks>
    /// 
    /// 						This value should be passed in to the <b>Action</b> field to accept the Best Offer identified in the <b>BestOfferID</b> field. Note that only one Best Offer may be accepted in a single <b>RespondToBestOffer</b> call.
    /// 					
    /// </remarks>

    Accept, 
    /// <remarks>
    /// 
    /// 						This value should be passed in to the <b>Action</b> field to decline one or more Best Offers identified by one or more <b>BestOfferID</b> fields. Note that multiple Best Offers may be declined in a single <b>RespondToBestOffer</b> call.
    /// 					
    /// </remarks>

    Decline, 
    /// <remarks>
    /// 
    /// 						This value should be passed in to the <b>Action</b> field to counter a buyer's Best Offer or Counter Offer. Note that a seller may only counter one Best Offer in a single <b>RespondToBestOffer</b> call. If a seller is using the <b>RespondToBestOffer</b> call to counter a Best Offer, the counter offer price must be specified in the <b>CounterOfferPrice</b> field, and the quantity of items in the Best Offer must be specified in the <b>CounterOfferQuantity</b> field. 
    /// 					
    /// </remarks>

    Counter, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Enumerated type that defines the possible values for the status of a Best Offer or a buyer's/seller's counter offer.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum BestOfferStatusCodeType
{
    /// <remarks>
    /// 
    /// 						This value indicates that the buyer's Best Offer on an item is awaiting the
    /// 						seller's response (accept, decline, counter offer). A buyer's Best Offer expires
    /// 						after 48 hours without a seller's response.
    /// 					
    /// </remarks>

    Pending, 
    /// <remarks>
    /// 
    /// 						Depending on context, this value can indicate that the buyer's Best Offer was
    /// 						accepted by the seller, or that the seller's or buyer's counter offer was accepted by the other party.
    /// 					
    /// </remarks>

    Accepted, 
    /// <remarks>
    /// 
    /// 						Depending on context, this value can indicate that the buyer's Best Offer was
    /// 						declined by the seller, or that the seller's or buyer's counter offer was declined by the other party.
    /// 					
    /// </remarks>

    Declined, 
    /// <remarks>
    /// 
    /// 						Depending on context, this value can indicate that the buyer's Best Offer expired due to the passing of 48 hours with no seller response (accept, decline, counter offer), or that the seller's or buyer's counter offer expired due to the passing of 48 hours with no response from other party.
    /// 					
    /// </remarks>

    Expired, 
    /// <remarks>
    /// 
    /// 						Depending on context, this value can indicate that the buyer has retracted the Best Offer, or that the seller's or buyer's counter offer has been retracted.
    /// 					
    /// </remarks>

    Retracted, 
    /// <remarks>
    /// 
    /// 						This value indicates that the Best Offer was ended by an eBay administrator.
    /// 					
    /// </remarks>

    AdminEnded, 
    /// <remarks>
    /// 
    /// 						Depending on context, this value can indicate that a buyer's Best Offer or that the seller's or buyer's counter offer is in the active state. The <code>Active</code> value can also be used in the <b>GetBestOffers</b> request to retrieve only active Best Offers.
    /// 					
    /// </remarks>

    Active, 
    /// <remarks>
    /// 
    /// 						Depending on context, this value can indicate that a buyer's Best Offer has been countered by the seller, or that the seller's or buyer's counter offer has been countered by the other party.
    /// 					
    /// </remarks>

    Countered, 
    /// <remarks>
    /// 
    /// 						This value is used in the <b>GetBestOffers</b> request to retrieve all Best Offers in all states. This value is only applicable to the <b>GetBestOffers</b> call.
    /// 					
    /// </remarks>

    All, 
    /// <remarks>
    /// 
    /// 						This value indicates that the buyer and seller have come to agreement on a Best Offer price, but the seller is still waiting for payment from the buyer. If the buyer does not pay within 48 hours, the Best Offer will expire.
    /// 					
    /// </remarks>

    PendingBuyerPayment, 
    /// <remarks>
    /// 
    /// 						This value indicates that the seller is waiting on the buyer to commit to buying the item at the counter offer price.
    /// 					
    /// </remarks>

    PendingBuyerConfirmation, 
    /// <remarks>
    /// 
    /// 						(out) Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Enumerated type that defines the possible offer types for the Best Offer feature.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum BestOfferTypeCodeType
{
    /// <remarks>
    /// 
    /// 						This value indicates that the offer is an original Best Offer made by a prospective buyer to the seller.
    /// 					
    /// </remarks>

    BuyerBestOffer, 
    /// <remarks>
    /// 
    /// 						This value indicates that the offer is a prospective buyer's counter offer against the seller's counter offer.
    /// 					
    /// </remarks>

    BuyerCounterOffer, 
    /// <remarks>
    /// 
    /// 						This value indicates that the offer is a seller's counter offer against the seller's original Best Offer.
    /// 					
    /// </remarks>

    SellerCounterOffer, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// NotUsed
/// </summary>
/// <remarks>
/// 
/// 				This enumerated type lists the possible actions that can be made on a listing or Best Offer and the possible states of a bid or Best Offer.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum BidActionCodeType
{
    /// <remarks>
    /// 
    /// 						This value indicates that the action or state is unknown.
    /// 					
    /// </remarks>

    Unknown, 
    /// <remarks>
    /// 
    /// 						This value is used in a <b>PlaceOffer</b> call if the buyer wants to bid on an auction listing. If this value is used, the prospective buyer must also include the <b>Offer.MaxBid</b> field in the <b>PlaceOffer</b> call and specify the maximum amount that they are willing to bid in an attempt to win the auction. eBay will automatically rebid on behalf of the buyer each time the buyer is outbid up until the time when their <b>Offer.MaxBid</b> value threshold is met. The <b>GetAllBidders</b> call will return this value as well if the buyer has set up automatic bidding using a maximum bid threshold.
    /// 					
    /// </remarks>

    Bid, 
    /// <remarks>
    /// 
    /// 						This value is no longer applicable.
    /// 					
    /// </remarks>

    NotUsed, 
    /// <remarks>
    /// 
    /// 						This value indicates that a buyer's Best Offer or a seller's or buyer's counter offer was retracted. This value cannot be used with the <b>PlaceOffer</b> call.
    /// 					
    /// </remarks>

    Retraction, 
    /// <remarks>
    /// 
    /// 						This value indicates that a buyer's Best Offer or a seller's or buyer's counter offer was automatically retracted. This value cannot be used with the <b>PlaceOffer</b> call.
    /// 					
    /// </remarks>

    AutoRetraction, 
    /// <remarks>
    /// 
    /// 						This value indicates that a buyer's Best Offer or a seller's or buyer's counter offer was cancelled. This value cannot be used with the <b>PlaceOffer</b> call.
    /// 					
    /// </remarks>

    Cancelled, 
    /// <remarks>
    /// 
    /// 						This value indicates that a buyer's Best Offer or a seller's or buyer's counter offer was automatically cancelled. This value cannot be used with the <b>PlaceOffer</b> call.
    /// 					
    /// </remarks>

    AutoCancel, 
    /// <remarks>
    /// 
    /// 						This value is returned in the <b>GetAllBidders</b> call if an absentee bid was made, which means that eBay made a bid on the auction listing on behalf of the buyer, who has set a maximum bid threshold. This value is not applicable for the <b>PlaceOffer</b> call, as the buyer would use the <code>Bid</code> value instead, as well as setting a <b>Offer.MaxBid</b> value that would specify the maxium amount that the buyer is willing to bid in an attempt to win the auction.
    /// 					
    /// </remarks>

    Absentee, 
    /// <remarks>
    /// 
    /// 						This value is returned in the <b>GetAllBidders</b> call if the buyer purchased an item in an auction listing using the Buy It Now feature. This value is not applicable for the <b>PlaceOffer</b> call, as the buyer would use the <code>Purchase</code> value instead.
    /// 					
    /// </remarks>

    BuyItNow, 
    /// <remarks>
    /// 
    /// 						This value is used in a <b>PlaceOffer</b> call if the buyer wants to purchase a fixed-price item or purchase an auction item enabled with the Buy It Now feature. Note that this call cannot be used to purchase items that require immediate payment.  The <b>GetAllBidders</b> call will return this value as well if the buyer purchased the item. For items requiring immediate payment, the <b>PlaceOffer</b> call cannot be used for purchase.
    /// 					
    /// </remarks>

    Purchase, 
    /// <remarks>
    /// 
    /// 						Reserved for future or internal use.
    /// 					
    /// </remarks>

    CustomCode, 
    /// <remarks>
    /// 
    /// 						This value is used in a <b>PlaceOffer</b> call if the buyer is proposing a Best Offer to the seller. The <b>GetAllBidders</b> call will return this value as well if the buyer proposed a Best Offer to the seller.
    /// 					
    /// </remarks>

    Offer, 
    /// <remarks>
    /// 
    /// 						This value is used in a <b>PlaceOffer</b> call if the buyer is proposing a counter offer to the seller's proposed counter offer. The <b>GetAllBidders</b> call will return this value as well if the buyer proposed a counter offer to the seller's counter offer.
    /// 					
    /// </remarks>

    Counter, 
    /// <remarks>
    /// 
    /// 						This value is used in a <b>PlaceOffer</b> call if the buyer is accepting a counter offer proposed by the seller. The <b>GetAllBidders</b> call will return this value as well if the buyer accepted a counter offer.
    /// 					
    /// </remarks>

    Accept, 
    /// <remarks>
    /// 
    /// 						This value is used in a <b>PlaceOffer</b> call if the buyer is declining a counter offer proposed by the seller. The <b>GetAllBidders</b> call will return this value as well if the buyer declined a counter offer.
    /// 					
    /// </remarks>

    Decline
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumerated type contains the possible values that can be returned in the <b>ListingFeatureDetails.BoldTitle</b> field to indicate whether or not bold listing titles are supported by the eBay site specified in the <b>GeteBayDetails</b> call request.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum BoldTitleCodeType
{
    /// <remarks>
    /// 
    /// 						This value indicates that bold listing titles are enabled for the eBay site specified in the <b>GeteBayDetails</b> call request.
    /// 					
    /// </remarks>

    Enabled, 
    /// <remarks>
    /// 
    /// 						This value indicates that bold listing titles are disabled for the eBay site specified in the <b>GeteBayDetails</b> call request.
    /// 					
    /// </remarks>

    Disabled, 
    /// <remarks>
    /// 
    /// 						Reserved for future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				<span class="tablenote"><b>Note: </b> This enumerated type is deprecated as the Picture Border feature is no longer available on any eBay Marketplace sites.
/// 				</span>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum BorderCodeType
{
    /// <remarks>
    /// 
    /// 						This value indicates that picture borders are enabled for the eBay site specified in the <b>GeteBayDetails</b> call request.
    /// 					
    /// </remarks>

    Enabled, 
    /// <remarks>
    /// 
    /// 						This value indicates that picture borders are disabled for the eBay site specified in the <b>GeteBayDetails</b> call request.
    /// 					
    /// </remarks>

    Disabled, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Enumerated type that defines the eBay user's account type.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum BusinessRoleType
{
    /// <remarks>
    /// 
    /// 						This value indicates that the eBay user's account is a Partially Provisioned Account
    /// 						without buying and selling privileges on eBay.
    /// 					
    /// </remarks>

    Shopper, 
    /// <remarks>
    /// 
    /// 						This value indicates that the eBay user's account is a fully provisioned account with buying
    /// 						and selling privileges on eBay.
    /// 					
    /// </remarks>

    FullMarketPlaceParticipant
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumerated type identifies all of the payment methods supported for the 'Pay Upon Invoice' feature. The 'Pay Upon Invoice' feature is only available through the eBay Germany marketplace.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum BuyerPaymentInstrumentCodeType
{
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that no payment method was specified by the seller.
    /// 					
    /// </remarks>

    None, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that a credit card was used to pay for the order.
    /// 					
    /// </remarks>

    CreditCard, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that a bank debit card was used to pay for the order.
    /// 					
    /// </remarks>

    BankDirectDebit, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that PayPal was used to pay for the order.
    /// 					
    /// </remarks>

    PayPal, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that Elektronisches Lastschriftverfahren (direct debit) was used to pay for the order.
    /// 					
    /// </remarks>

    ELV, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that an unknown credit card was used to pay for the order.
    /// 					
    /// </remarks>

    LocalPaymentCreditCardOther, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that Elektronisches Lastschriftverfahren (direct debit) was used locally to pay for the order.
    /// 					
    /// </remarks>

    LocalPaymentELV, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that a Master Card credit card was used to pay for the order.
    /// 					
    /// </remarks>

    LocalPaymentMasterCard, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that an American Express credit card was used to pay for the order.
    /// 					
    /// </remarks>

    LocalPaymentAMEX, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that a Visa credit card was used to pay for the order.
    /// 					
    /// </remarks>

    LocalPaymentVISA, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that a Discover credit card was used to pay for the order.
    /// 					
    /// </remarks>

    LocalPaymentDiscover, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that a Diners Club credit card was used to pay for the order.
    /// 					
    /// </remarks>

    LocalPaymentDinersclub, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that a JCB credit card was used to pay for the order.
    /// 					
    /// </remarks>

    LocalPaymentJCB, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that a Switch debit card was used to pay for the order.
    /// 					
    /// </remarks>

    LocalPaymentSWITCH, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that a Solo debit card was used to pay for the order.
    /// 					
    /// </remarks>

    LocalPaymentSOLO, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that Giropay was used to pay for the order.
    /// 					
    /// </remarks>

    GIROPAY, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that BML was used to pay for the order.
    /// 					
    /// </remarks>

    BML, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the 'Pay Upon Invoice' option was offered to the buyer on the Germany site.
    /// 					
    /// </remarks>

    PayUponInvoice, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumeration type indicates the item's eligibility status for eBay's Money Back Guarantee program.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum BuyerProtectionCodeType
{
    /// <remarks>
    /// 
    /// 						This value indicates that the item is ineligible for buyer protection. In many
    /// 						cases, the item is ineligible for buyer protection due to the listing category.
    /// 					
    /// </remarks>

    ItemIneligible, 
    /// <remarks>
    /// 
    /// 						This value indicates that the item is eligible for buyer protection.
    /// 					
    /// </remarks>

    ItemEligible, 
    /// <remarks>
    /// 
    /// 						This value indicates that customer support has marked the item as
    /// 						ineligible per special criteria (e.g., seller's account closed).
    /// 					
    /// </remarks>

    ItemMarkedIneligible, 
    /// <remarks>
    /// 
    /// 						This value indicates that customer support has marked the item as
    /// 						eligible per special criteria.
    /// 					
    /// </remarks>

    ItemMarkedEligible, 
    /// <remarks>
    /// 
    /// 						This value indicates that the item is ineligible for coverage under any buyer
    /// 						protection program.
    /// 					
    /// </remarks>

    NoCoverage, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// PayPal
/// </summary>
/// <remarks>
/// 
/// 				This enumeration type indicates the applicable buyer protection program that the item is eligible to be covered under.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum BuyerProtectionSourceCodeType
{
    /// <remarks>
    /// 
    /// 						This value indicates that the item is possibly eligible for buyer protection under the eBay Money Back Guarantee program.
    /// 					
    /// </remarks>

    eBay, 
    /// <remarks>
    /// 
    /// 						This value is deprecated.
    /// 					
    /// </remarks>

    PayPal, 
    /// <remarks>
    /// 
    /// 						 Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// BuyerCancelOrAddressIssue, BuyerNoShow, BuyerNotSchedule, BuyerRefused, ValetDeliveryIssues, ValetUnavailable
/// </summary>
/// <remarks>
/// 
/// 				Enumerated type that defines all possible reasons why an eBay order can be cancelled.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum CancelReasonCodeType
{
    /// <remarks>
    /// 
    /// 						This value indicates that the eBay order was cancelled by the seller due to the fact that one or more order line items were out-of-stock. This reason given by the seller will result in a seller defect.
    /// 					
    /// </remarks>

    OutOfStock, 
    /// <remarks>
    /// 
    /// 						This value indicates that the eBay Scheduled Delivery order was cancelled due to the fact that the buyer was not at the expected delivery location to receive the order. This value is only applicable to eBay Scheduled Delivery orders, a service that is currently only available in the London area (UK).
    /// 					
    /// </remarks>

    BuyerNoShow, 
    /// <remarks>
    /// 
    /// 						This value indicates that the eBay Scheduled Delivery order was cancelled due to the fact that the buyer refused to accept the order. This value is only applicable to eBay Scheduled Delivery orders, a service that is currently only available in the London area (UK).
    /// 					
    /// </remarks>

    BuyerRefused, 
    /// <remarks>
    /// 
    /// 						This value indicates that the eBay Scheduled Delivery order was cancelled due to the fact that the buyer did not successfully schedule the delivery of the order. This value is only applicable to eBay Scheduled Delivery orders, a service that is currently only available in the London area (UK).
    /// 					
    /// </remarks>

    BuyerNotSchedule, 
    /// <remarks>
    /// 
    /// 						This value indicates that the seller initiated the cancellation of the order but at the request of the buyer. This is a cancel reason that the seller gives to avoid a seller defect for the cancellation.
    /// 					
    /// </remarks>

    BuyerCancelOrder, 
    /// <remarks>
    /// 
    /// 						This value indicates that the eBay Scheduled Delivery order was cancelled due to the fact that the delivery person had an issue delivering the order to the buyer. This value is only applicable to eBay Scheduled Delivery orders, a service that is currently only available in the London area (UK).
    /// 					
    /// </remarks>

    ValetDeliveryIssues, 
    /// <remarks>
    /// 
    /// 						This value indicates that the eBay Scheduled Delivery order was cancelled due to the fact that no delivery person was available to deliver the order to the buyer. This value is only applicable to eBay Scheduled Delivery orders, a service that is currently only available in the London area (UK).
    /// 					
    /// </remarks>

    ValetUnavailable, 
    /// <remarks>
    /// 
    /// 						This value indicates that the cancellation of the eBay order was initiated by the buyer because the order was placed by mistake.
    /// 					
    /// </remarks>

    OrderPlacedByMistake, 
    /// <remarks>
    /// 
    /// 							This value indicates that the cancellation of the eBay order was initiated by the buyer because the buyer decided that the price for the item was too high.
    /// 						
    /// </remarks>

    PriceTooHigh, 
    /// <remarks>
    /// 
    /// 						This value indicates that the cancellation of the eBay order was initiated by the buyer because the buyer found the same item somewhere else at a cheaper price.
    /// 					
    /// </remarks>

    FoundCheaperPrice, 
    /// <remarks>
    /// 
    /// 						This value indicates that the cancellation of the eBay order was initiated by the buyer because the buyer realized that the order will not arrive soon enough.
    /// 					
    /// </remarks>

    WontArriveInTime, 
    /// <remarks>
    /// 
    /// 						THIS ENUMERATION VALUE IS DEPRECATED. This value indicates that the seller initiated the cancellation of the order but at the request of the buyer, or if the buyer supplied a bad/incorrect address at purchase time. This is a cancel reason that the seller can give to avoid a seller defect for the cancellation. Replacement values are AddressIssues and BuyerCancelOrder.
    /// 					
    /// </remarks>

    BuyerCancelOrAddressIssue, 
    /// <remarks>
    /// 
    /// 						This value indicates that the eBay order was cancelled by the seller due to the fact that one or more order line items were out-of-stock, or due to another reason why the seller was unable to fulfill the order. This reason given by the seller will result in a seller defect.
    /// 					
    /// </remarks>

    OutOfStockOrCannotFulfill, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the seller initiated the order cancellation request because there are issues with the destination address supplied by the buyer.
    /// 						<br/><br/>
    /// 						This cancellation reason can only be given by the seller and not the buyer.
    /// 					
    /// </remarks>

    AddressIssues, 
    /// <remarks>
    /// 
    /// 						This value is reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Enumerated type that defines the possible states of an eBay order cancellation.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum CancelStatusCodeType
{
    /// <remarks>
    /// 
    /// 						This value indicates that the order cancellation request is invalid.
    /// 					
    /// </remarks>

    Invalid, 
    /// <remarks>
    /// 
    /// 						This value indicates that the order cancellation request is not applicable.
    /// 					
    /// </remarks>

    NotApplicable, 
    /// <remarks>
    /// 
    /// 						This value indicates that the buyer has initiated the cancellation of the eBay order. It will be up to the seller to decide to approve or reject the cancellation request.
    /// 					
    /// </remarks>

    CancelRequested, 
    /// <remarks>
    /// 
    /// 						This value indicates that the cancellation of the eBay order has been initiated by the buyer and approved by the seller, but the cancellation request has yet to be completed.
    /// 					
    /// </remarks>

    CancelPending, 
    /// <remarks>
    /// 
    /// 						This value indicates that the cancellation of the eBay order initiated by the buyer has been rejected by the seller.
    /// 					
    /// </remarks>

    CancelRejected, 
    /// <remarks>
    /// 
    /// 						This value indicates that the order cancellation request has been closed, with no refund issued to the buyer.
    /// 					
    /// </remarks>

    CancelClosedNoRefund, 
    /// <remarks>
    /// 
    /// 						This value indicates that the order cancellation request has been closed, with a refund issued to the buyer.
    /// 					
    /// </remarks>

    CancelClosedWithRefund, 
    /// <remarks>
    /// 
    /// 						This value indicates that the order cancellation request has been closed, and it is unknown whether or not a refund was issued to the buyer.
    /// 					
    /// </remarks>

    CancelClosedUnknownRefund, 
    /// <remarks>
    /// 
    /// 						This value indicates that since the buyer committed to buying the item but did not pay for it, the cancellation succeeded and no refund is needed.
    /// 					
    /// </remarks>

    CancelClosedForCommitment, 
    /// <remarks>
    /// 
    /// 						This value indicates that the cancellation of the eBay order has been completed.
    /// 					
    /// </remarks>

    CancelComplete, 
    /// <remarks>
    /// 
    /// 						This value indicates that the cancellation of the eBay order has failed.
    /// 					
    /// </remarks>

    CancelFailed, 
    /// <remarks>
    /// 
    /// 						This value is reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is deprecated. Use <b>DetailLevelCodeType</b> instead.
/// 				
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum CategoryFeatureDetailLevelCodeType
{
    /// <remarks>
    /// 
    /// 					  Return all available data.
    /// 					
    /// </remarks>

    ReturnAll, 
    /// <remarks>
    /// 
    /// 					  Return the category feature definitions only.
    /// 					
    /// </remarks>

    ReturnFeatureDefinitions, 
    /// <remarks>
    /// 
    /// 						(out) Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 			 This enumeration type defines the possible values that can be returned for the <b>CharityAffiliationDetail.AffiliationType</b> field in the <b>GetUser</b> response.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum CharityAffiliationTypeCodeType
{
    /// <remarks>
    /// 
    /// 					  This enumeration value indicates that the eBay user is just selling on the behalf of the nonprofit organization, and is not directly affiliated with the organization.
    /// 					
    /// </remarks>

    Community, 
    /// <remarks>
    /// 
    /// 					  This enumeration value indicates that the eBay user is directly affiliated with or represents the nonprofit organization, or the eBay user has been added as a Direct Seller by the same nonprofit organization.
    /// 					
    /// </remarks>

    Direct, 
    /// <remarks>
    /// 
    /// 					  This enumeration value may be returned if the nonprofit organization has recently unregistered as an eBay for Charity organization, or it may be returned if the eBay user has recently removed the charity feature from a listing.
    /// 					
    /// </remarks>

    Remove, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// RegisteredNoCreditCard, DirectDebitRejected
/// </summary>
/// <remarks>
/// 
/// 			  Enumerated type defining the possible states for a seller's charity seller account.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum CharitySellerStatusCodeType
{
    /// <remarks>
    /// 
    /// 					  The seller's charity seller account is suspended.
    /// 					
    /// </remarks>

    Suspended, 
    /// <remarks>
    /// 
    /// 					  The seller is a registered charity seller.
    /// 					
    /// </remarks>

    Registered, 
    /// <remarks>
    /// 
    /// 					  The seller is no longer a registered charity seller. The account with the PayPal Giving Fund is closed.
    /// 					
    /// </remarks>

    Closed, 
    /// <remarks>
    /// 
    /// 					  The credit card associated with a seller's charity seller account has expired.
    /// 					
    /// </remarks>

    CreditCardExpired, 
    /// <remarks>
    /// 
    /// 					  The token associated with a seller's charity seller account has expired.
    /// 					
    /// </remarks>

    TokenExpired, 
    /// <remarks>
    /// 
    /// 					  The credit card associated with a seller's charity seller account will expire in 15 (or fewer) days.
    /// 					
    /// </remarks>

    CreditCardAboutToExpire, 

    RegisteredNoCreditCard, 
    /// <remarks>
    /// 
    /// 					  The seller is no longer a registered charity seller and has lost direct seller status.
    /// 					
    /// </remarks>

    NotRegisteredLostDirectSellerStatus, 

    DirectDebitRejected, 
    /// <remarks>
    /// 
    /// 					  The seller is a registered direct seller, but has no credit card associated with the charity seller account.
    /// 					
    /// </remarks>

    RegisteredDirectSeller, 
    /// <remarks>
    /// 
    /// 					  The seller is a registered charity seller with no donation payment method on file.
    /// 					
    /// </remarks>

    RegisteredNoPaymentMethod, 
    /// <remarks>
    /// 
    /// 						  Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 			    Enumerated type defining the possible states for a nonprofit charity organization registered with the PayPal Giving Fund.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum CharityStatusCodeType
{
    /// <remarks>
    /// 
    /// 					  The specified nonprofit charity organization is a valid nonprofit charity organization according to the requirements of the PayPal Giving Fund.
    /// 					
    /// </remarks>

    Valid, 
    /// <remarks>
    /// 
    /// 					  The specified nonprofit charity organization is no longer a valid nonprofit charity organization according to the requirements of the PayPal Giving Fund.
    /// 					
    /// </remarks>

    NoLongerValid, 
    /// <remarks>
    /// 
    /// 						(out) Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Enumerated type that lists the possible checkout states of an order line item. 
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum CheckoutStatusCodeType
{
    /// <remarks>
    /// 
    /// 						This value indicates that the buyer has paid and checkout is complete.
    /// 					
    /// </remarks>

    CheckoutComplete, 
    /// <remarks>
    /// 
    /// 						This value indicates that checkout is incomplete, generally because the buyer has not paid yet.
    /// 					
    /// </remarks>

    CheckoutIncomplete, 
    /// <remarks>
    /// 
    /// 						This value indicates that the buyer wants to confirm the total price of the order line item before making a payment.
    /// 					
    /// </remarks>

    BuyerRequestsTotal, 
    /// <remarks>
    /// 
    /// 						This value indicates that the seller has just responded to the buyer concerning the total price of the order line item.
    /// 					
    /// </remarks>

    SellerResponded, 
    /// <remarks>
    /// 
    /// 						Reserved for future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Enumerated type that defines the values used to indicate whether Best Offers for the Classified Ad listing format are enabled/disabled for all/most of a site's categories (<b>SiteDefaults.ClassifiedAdBestOfferEnabled</b>), or enabled/required/disabled for a specific eBay category (<b>Category.ClassifiedAdBestOfferEnabled</b>).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum ClassifiedAdBestOfferEnabledCodeType
{
    /// <remarks>
    /// 
    /// 						This value indicates that Classified Ad Best Offer feature is disabled for all/most of a site's categories (if returned in the <b>SiteDefaults.ClassifiedAdBestOfferEnabled</b> field), or disabled for a specific category (if returned in the <b>Category.ClassifiedAdBestOfferEnabled</b> field).
    /// 					
    /// </remarks>

    Disabled, 
    /// <remarks>
    /// 
    /// 						This value indicates that Classified Ad Best Offer feature is enabled for all/most of a site's categories (if returned in the <b>SiteDefaults.ClassifiedAdBestOfferEnabled</b> field), or enabled for a specific category (if returned in the <b>Category.ClassifiedAdBestOfferEnabled</b> field).
    /// 					
    /// </remarks>

    Enabled, 
    /// <remarks>
    /// 
    /// 						This value indicates that Classified Ad Best Offer feature is required for a specific category (if returned in the <b>Category.ClassifiedAdBestOfferEnabled</b> field). This value is not applicable at the site level (<b>SiteDefaults</b> container).
    /// 					
    /// </remarks>

    Required, 
    /// <remarks>
    /// 
    /// 						(out) Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Used to indicate whether the payment method will be displayed for a category 
/// 				belonging to the Lead Generation Format.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum ClassifiedAdPaymentMethodEnabledCodeType
{
    /// <remarks>
    /// 
    /// 						Display the payment method and permit checkout.
    /// 					
    /// </remarks>

    EnabledWithCheckout, 
    /// <remarks>
    /// 
    /// 						Display the payment method and suppress checkout.
    /// 					
    /// </remarks>

    EnabledWithoutCheckout, 
    /// <remarks>
    /// 
    /// 						Do not display the payment method.
    /// 					
    /// </remarks>

    NotSupported, 
    /// <remarks>
    /// 
    /// 						(out) Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// INVOICE
/// </summary>
/// <remarks>
/// 
/// 				This enumerated type defines the collection methods that are used to collect either 'Collect and Remit' sales tax in the US, or 'Good and Services' tax in Australia and New Zealand.
/// 				<br>
/// 				<br>
/// 				<span class="tablenote"><b>Note: </b> Although the <b>CollectionMethod</b> field is returned for orders subject to 'Collect and Remit' sales tax or 'Good and Services' tax, the <b>CollectionMethod</b> field and <b>CollectionMethodCodeType</b> are currently not applicable.
/// 				</span>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum CollectionMethodCodeType
{
    /// <remarks>
    /// 
    /// 						<span class="tablenote"><b>Note: </b> This value is for future use.
    /// 						</span>
    /// 					
    /// </remarks>

    INVOICE, 
    /// <remarks>
    /// 
    /// 						This value is always returned, but because the <b>CollectionMethod</b> field and <b>CollectionMethodCodeType</b> are not currently applicable, this value does not have any purpose at this time.
    /// 					
    /// </remarks>

    NET
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 			Enumerated type that defines the seller's preference for allowing
/// 			<a href="https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/manage-fulfill-combine-invoices.html">Combined Invoice</a>
///       orders that pass on a shipping discounts to the buyer.
/// 		
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum CombinedPaymentOptionCodeType
{
    /// <remarks>
    /// 
    /// 					This value indicates that the seller does not allow Combined Invoice orders. In
    /// 					other words, the buyer must pay for each order line item separately, and cannot
    /// 					combine multiple single line item orders into one Combined Invoice order and make
    /// 					one payment for that order.
    /// 				
    /// </remarks>

    NoCombinedPayment, 
    /// <remarks>
    /// 
    /// 					This value indicates that the seller allows Combined Invoice orders, and that the
    /// 					seller has one or more shipping discount rules (Flat, Calculated, or Promotional)
    /// 					that can be applied at the listing level.
    /// 				
    /// </remarks>

    DiscountSpecified, 
    /// <remarks>
    /// 
    /// 					This value indicates that the seller allows Combined Invoice orders, and that the
    /// 					seller will apply any shipping discounts after the creation of the Combined Invoice
    /// 					order.
    /// 				
    /// </remarks>

    SpecifyDiscountLater, 
    /// <remarks>
    /// 
    /// 					Reserved for internal or future use.
    /// 				
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumerated type contains the list of values that can be used by the seller to set
/// 				the number of days after item purchase that an unpaid order can be combined with one
/// 				or more other mutual (same buyer and same seller) unpaid orders into one
/// 				<a href="https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/manage-fulfill-combine-invoices.html">Combined Invoice</a>
/// 				order. Either the buyer or the seller can initiate the Combined Invoice
/// 				process. Sellers can offer buyers shipping discounts through Combined Invoice orders,
/// 				and buyers only have to make one payment for multiple orders as opposed to a payment
/// 				for each order.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum CombinedPaymentPeriodCodeType
{
    /// <remarks>
    /// 
    /// 						This value indicates that an unpaid order can be combined into a Combined Invoice
    /// 						order within three days after purchase (creation of order).
    /// 					
    /// </remarks>

    Days_3, 
    /// <remarks>
    /// 
    /// 						This value indicates that an unpaid order can be combined into a Combined Invoice
    /// 						order within five days after purchase (creation of order).
    /// 					
    /// </remarks>

    Days_5, 
    /// <remarks>
    /// 
    /// 						This value indicates that an unpaid order can be combined into a Combined Invoice
    /// 						order within seven days after purchase (creation of order).
    /// 					
    /// </remarks>

    Days_7, 
    /// <remarks>
    /// 
    /// 						This value indicates that an unpaid order can be combined into a Combined Invoice
    /// 						order within 14 days after purchase (creation of order).
    /// 					
    /// </remarks>

    Days_14, 
    /// <remarks>
    /// 
    /// 						This value indicates that an unpaid order can be combined into a Combined Invoice
    /// 						order within 30 days after purchase (creation of order).
    /// 					
    /// </remarks>

    Days_30, 
    /// <remarks>
    /// 
    /// 						This value indicates that an order is not eligible to be combined into a Combined
    /// 						Payment order.
    /// 					
    /// </remarks>

    Ineligible, 
    /// <remarks>
    /// 
    /// 						This value is reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumerated type list the Feedback ratings that can be left by one eBay user for 
/// 				another user regarding that user's experience with the another user during the 
/// 				purchase/checkout flow of an order line item.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum CommentTypeCodeType
{
    /// <remarks>
    /// 
    /// 						This value indicates that the submitting user's experience with the other user
    /// 						(receiving feedback) was rated as a "Positive" experience. If an eBay user receives
    /// 						a Positive rating for an order line item from a Verified User, their overall 
    /// 						Feedback score increases by a value of 1.
    /// 					
    /// </remarks>

    Positive, 
    /// <remarks>
    /// 
    /// 						This value indicates that the submitting user's experience with the other user
    /// 						(receiving feedback) was rated as a "Neutral" experience. If an eBay user receives
    /// 						a Neutral rating for an order line item from a Verified User, their overall 
    /// 						Feedback score remains the same.
    /// 					
    /// </remarks>

    Neutral, 
    /// <remarks>
    /// 
    /// 						This value indicates that the submitting user's experience with the other user
    /// 						(receiving feedback) was rated as a "Negative" experience. If an eBay user receives
    /// 						a Negative rating for an order line item from a Verified User, their overall 
    /// 						Feedback score decreases by a value of 1.
    /// 					
    /// </remarks>

    Negative, 
    /// <remarks>
    /// 
    /// 						This value indicates that a submitted Feedback entry was withdrawn. If a Feedback
    /// 						entry is withdrawn, the effect of that entry on the overall Feedback score is 
    /// 						nullified. However, Feedback comments from the withdrawn entry are still visible.
    /// 					
    /// </remarks>

    Withdrawn, 
    /// <remarks>
    /// 
    /// 						This value indicates that a submitted Feedback entry was withdrawn based on the 
    /// 						decision of a third-party (such as eBay). If a Feedback
    /// 						entry is withdrawn, the effect of that entry on the overall Feedback score is 
    /// 						nullified.
    /// 						<br><br>
    /// 						This value is only applicable to the eBay Motors site only.
    /// 					
    /// </remarks>

    IndependentlyWithdrawn, 
    /// <remarks>
    /// 
    /// 						This value is reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Enumerated type that contains values which indicate whether an order or order line item is complete, incomplete, or pending.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum CompleteStatusCodeType
{
    /// <remarks>
    /// 
    /// 						This value indicates that the order or order line item is in the incomplete state. Generally speaking, an order or order line item is considered incomplete when payment from the buyer has yet to be initiated.
    /// 					
    /// </remarks>

    Incomplete, 
    /// <remarks>
    /// 
    /// 						This value indicates that the order or order line item is complete. Generally speaking, an order or order line item is complete when payment from the buyer has been initiated and has been processed.
    /// 						<br><br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						If the <b>PaymentMethodUsed</b> is <code>CashOnPickup</code>,
    /// 						the <b>CheckoutStatus.Status</b> value in <b>GetOrders</b> will be
    /// 						<code>Complete</code> at checkout time, even though the seller may not have been officially paid
    /// 						yet. The <b>CheckoutStatus.Status</b> value in <b>GetOrders</b> will
    /// 						remain as <code>Complete</code> even if the seller
    /// 						changes the checkout status to Pending. However, the <b>eBayPaymentStatus</b>
    /// 						value in <b>GetOrders</b> will change from <code>NoPaymentFailure</code> to
    /// 						<code>PaymentInProcess</code>.
    /// 						</span>
    /// 					
    /// </remarks>

    Complete, 
    /// <remarks>
    /// 
    /// 						This value indicates that the order or order line item is in the pending state. Generally speaking, an order is considered pending when payment
    /// 						from the buyer has been initiated but has yet to be fully processed.
    /// 						<br><br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						If the payment method is <code>CashOnPickup</code>, the
    /// 						<b>CheckoutStatus.Status</b> value in <b>GetOrders</b> will read <code>Complete</code> at checkout time,
    /// 						even though the seller may not have been officially paid yet. The
    /// 						<b>CheckoutStatus.Status</b> value in <b>GetOrders</b> will remain as <code>Complete</code> even if the
    /// 						seller changes the checkout status to Pending.
    /// 						However, the <b>eBayPaymentStatus</b> value in <b>GetOrders</b> will change from
    /// 						<code>NoPaymentFailure</code> to <code>PaymentInProcess</code>.
    /// 						</span>
    /// 					
    /// </remarks>

    Pending, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Enumerated type that defines the values used to indicate whether Condition IDs are enabled/disabled for all/most of a site's categories (<b>SiteDefaults.ConditionEnabled</b>), or enabled/required/disabled for a specific eBay category (<b>Category.ConditionEnabled</b>).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum ConditionEnabledCodeType
{
    /// <remarks>
    /// 
    /// 						This value indicates that Condition IDs are disabled for all/most of a site's categories (if returned in the <b>SiteDefaults.ConditionEnabled</b> field), or disabled for a specific category (if returned in the <b>Category.ConditionEnabled</b> field).
    /// 					
    /// </remarks>

    Disabled, 
    /// <remarks>
    /// 
    /// 					This value indicates that Condition IDs are enabled for all/most of a site's categories (if returned in the <b>SiteDefaults.ConditionEnabled</b> field), or enabled for a specific category (if returned in the <b>Category.ConditionEnabled</b> field).
    /// 					
    /// </remarks>

    Enabled, 
    /// <remarks>
    /// 
    /// 						This value indicates that Condition IDs are required for a specific category (if returned in the <b>Category.ConditionEnabled</b> field). This value is not applicable at the site level (<b>SiteDefaults</b> container).
    /// 					
    /// </remarks>

    Required, 
    /// <remarks>
    /// 
    /// 						(out) Reserved for internal or future use.
    /// 				  
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumerated type is used to indicate which flat-rate shipping cost group that a shipping service option belongs to.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum CostGroupFlatCodeType
{
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the shipping service option belongs to flat-rate shipping cost group 1.
    /// 					
    /// </remarks>

    Group1MaxFlatShippingCost, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the shipping service option belongs to flat-rate shipping cost group 2.
    /// 					
    /// </remarks>

    Group2MaxFlatShippingCost, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the shipping service option belongs to flat-rate shipping cost group 3.
    /// 					
    /// </remarks>

    Group3MaxFlatShippingCost, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// QP
/// </summary>
/// <remarks>
/// 
/// 				This enumerated type contains a partial list of ISO 3166 standard two-letter codes that represent countries around the world.
/// 				<br><br>
/// 				It is recommended that users use the <b>GeteBayDetails</b> call to see the full list of currently supported country codes,
/// 				and the English names associated with each code (e.g., KY="Cayman Islands"). Call 
/// 				<b>GeteBayDetails</b> with <b>DetailName</b> set to <b>Country</b>, and then look for <b>CountryDetails.Country</b> fields in the response.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum CountryCodeType
{
    /// <remarks>
    /// 
    /// 						Afghanistan.
    /// 					
    /// </remarks>

    AF, 
    /// <remarks>
    /// 
    /// 						Albania.
    /// 					
    /// </remarks>

    AL, 
    /// <remarks>
    /// 
    /// 						Algeria.
    /// 					
    /// </remarks>

    DZ, 
    /// <remarks>
    /// 
    /// 						American Samoa.
    /// 					
    /// </remarks>

    AS, 
    /// <remarks>
    /// 
    /// 						Andorra.
    /// 					
    /// </remarks>

    AD, 
    /// <remarks>
    /// 
    /// 						Angola.
    /// 					
    /// </remarks>

    AO, 
    /// <remarks>
    /// 
    /// 						Anguilla.
    /// 					
    /// </remarks>

    AI, 
    /// <remarks>
    /// 
    /// 						Antarctica.
    /// 					
    /// </remarks>

    AQ, 
    /// <remarks>
    /// 
    /// 						Antigua and Barbuda.
    /// 					
    /// </remarks>

    AG, 
    /// <remarks>
    /// 
    /// 						Argentina.
    /// 					
    /// </remarks>

    AR, 
    /// <remarks>
    /// 
    /// 						Armenia.
    /// 					
    /// </remarks>

    AM, 
    /// <remarks>
    /// 
    /// 						Aruba.
    /// 					
    /// </remarks>

    AW, 
    /// <remarks>
    /// 
    /// 						Australia.
    /// 					
    /// </remarks>

    AU, 
    /// <remarks>
    /// 
    /// 						Austria.
    /// 					
    /// </remarks>

    AT, 
    /// <remarks>
    /// 
    /// 						Azerbaijan.
    /// 					
    /// </remarks>

    AZ, 
    /// <remarks>
    /// 
    /// 						Bahamas.
    /// 					
    /// </remarks>

    BS, 
    /// <remarks>
    /// 
    /// 						Bahrain.
    /// 					
    /// </remarks>

    BH, 
    /// <remarks>
    /// 
    /// 						Bangladesh.
    /// 					
    /// </remarks>

    BD, 
    /// <remarks>
    /// 
    /// 						Barbados.
    /// 					
    /// </remarks>

    BB, 
    /// <remarks>
    /// 
    /// 						Belarus.
    /// 					
    /// </remarks>

    BY, 
    /// <remarks>
    /// 
    /// 						Belgium.
    /// 					
    /// </remarks>

    BE, 
    /// <remarks>
    /// 
    /// 						Belize.
    /// 					
    /// </remarks>

    BZ, 
    /// <remarks>
    /// 
    /// 						Benin.
    /// 					
    /// </remarks>

    BJ, 
    /// <remarks>
    /// 
    /// 						Bermuda.
    /// 					
    /// </remarks>

    BM, 
    /// <remarks>
    /// 
    /// 						Bhutan.
    /// 					
    /// </remarks>

    BT, 
    /// <remarks>
    /// 
    /// 						Bolivia.
    /// 					
    /// </remarks>

    BO, 
    /// <remarks>
    /// 
    /// 						Bosnia and Herzegovina.
    /// 					
    /// </remarks>

    BA, 
    /// <remarks>
    /// 
    /// 						Botswana.
    /// 					
    /// </remarks>

    BW, 
    /// <remarks>
    /// 
    /// 						Bouvet Island.
    /// 					
    /// </remarks>

    BV, 
    /// <remarks>
    /// 
    /// 						Brazil.
    /// 					
    /// </remarks>

    BR, 
    /// <remarks>
    /// 
    /// 						British Indian Ocean Territory.
    /// 					
    /// </remarks>

    IO, 
    /// <remarks>
    /// 
    /// 						Brunei Darussalam.
    /// 					
    /// </remarks>

    BN, 
    /// <remarks>
    /// 
    /// 						Bulgaria.
    /// 					
    /// </remarks>

    BG, 
    /// <remarks>
    /// 
    /// 						Burkina Faso.
    /// 					
    /// </remarks>

    BF, 
    /// <remarks>
    /// 
    /// 						Burundi.
    /// 					
    /// </remarks>

    BI, 
    /// <remarks>
    /// 
    /// 						Cambodia.
    /// 					
    /// </remarks>

    KH, 
    /// <remarks>
    /// 
    /// 						Cameroon.
    /// 					
    /// </remarks>

    CM, 
    /// <remarks>
    /// 
    /// 						Canada.
    /// 					
    /// </remarks>

    CA, 
    /// <remarks>
    /// 
    /// 						Cape Verde.
    /// 					
    /// </remarks>

    CV, 
    /// <remarks>
    /// 
    /// 						Cayman Islands.
    /// 					
    /// </remarks>

    KY, 
    /// <remarks>
    /// 
    /// 						Central African Republic.
    /// 					
    /// </remarks>

    CF, 
    /// <remarks>
    /// 
    /// 						Chad.
    /// 					
    /// </remarks>

    TD, 
    /// <remarks>
    /// 
    /// 						Chile.
    /// 					
    /// </remarks>

    CL, 
    /// <remarks>
    /// 
    /// 						China.
    /// 					
    /// </remarks>

    CN, 
    /// <remarks>
    /// 
    /// 						Christmas Island.
    /// 					
    /// </remarks>

    CX, 
    /// <remarks>
    /// 
    /// 						Cocos (Keeling) Islands.
    /// 					
    /// </remarks>

    CC, 
    /// <remarks>
    /// 
    /// 						Colombia.
    /// 					
    /// </remarks>

    CO, 
    /// <remarks>
    /// 
    /// 						Comoros.
    /// 					
    /// </remarks>

    KM, 
    /// <remarks>
    /// 
    /// 						Congo.
    /// 					
    /// </remarks>

    CG, 
    /// <remarks>
    /// 
    /// 						Congo, The Democratic Republic of the.
    /// 					
    /// </remarks>

    CD, 
    /// <remarks>
    /// 
    /// 						Cook Islands.
    /// 					
    /// </remarks>

    CK, 
    /// <remarks>
    /// 
    /// 						Costa Rica.
    /// 					
    /// </remarks>

    CR, 
    /// <remarks>
    /// 
    /// 						Cote d'Ivoire.
    /// 					
    /// </remarks>

    CI, 
    /// <remarks>
    /// 
    /// 						Croatia.
    /// 					
    /// </remarks>

    HR, 
    /// <remarks>
    /// 
    /// 						Cuba.
    /// 					
    /// </remarks>

    CU, 
    /// <remarks>
    /// 
    /// 						Cyprus.
    /// 					
    /// </remarks>

    CY, 
    /// <remarks>
    /// 
    /// 						Czech Republic.
    /// 					
    /// </remarks>

    CZ, 
    /// <remarks>
    /// 
    /// 						Denmark.
    /// 					
    /// </remarks>

    DK, 
    /// <remarks>
    /// 
    /// 						Djibouti.
    /// 					
    /// </remarks>

    DJ, 
    /// <remarks>
    /// 
    /// 						Dominica.
    /// 					
    /// </remarks>

    DM, 
    /// <remarks>
    /// 
    /// 						Dominican Republic.
    /// 					
    /// </remarks>

    DO, 
    /// <remarks>
    /// 
    /// 						No longer in use.
    /// 					
    /// </remarks>

    TP, 
    /// <remarks>
    /// 
    /// 						Ecuador.
    /// 					
    /// </remarks>

    EC, 
    /// <remarks>
    /// 
    /// 						Egypt.
    /// 					
    /// </remarks>

    EG, 
    /// <remarks>
    /// 
    /// 						El Salvador.
    /// 					
    /// </remarks>

    SV, 
    /// <remarks>
    /// 
    /// 						Equatorial Guinea.
    /// 					
    /// </remarks>

    GQ, 
    /// <remarks>
    /// 
    /// 						Eritrea.
    /// 					
    /// </remarks>

    ER, 
    /// <remarks>
    /// 
    /// 						Estonia.
    /// 					
    /// </remarks>

    EE, 
    /// <remarks>
    /// 
    /// 						Ethiopia.
    /// 					
    /// </remarks>

    ET, 
    /// <remarks>
    /// 
    /// 						Falkland Islands (Malvinas).
    /// 					
    /// </remarks>

    FK, 
    /// <remarks>
    /// 
    /// 						Faroe Islands.
    /// 					
    /// </remarks>

    FO, 
    /// <remarks>
    /// 
    /// 						Fiji.
    /// 					
    /// </remarks>

    FJ, 
    /// <remarks>
    /// 
    /// 						Finland.
    /// 					
    /// </remarks>

    FI, 
    /// <remarks>
    /// 
    /// 						France.
    /// 					
    /// </remarks>

    FR, 
    /// <remarks>
    /// 
    /// 						French Guiana.
    /// 					
    /// </remarks>

    GF, 
    /// <remarks>
    /// 
    /// 						French Polynesia. Includes Tahiti.
    /// 					
    /// </remarks>

    PF, 
    /// <remarks>
    /// 
    /// 						French Southern Territories.
    /// 					
    /// </remarks>

    TF, 
    /// <remarks>
    /// 
    /// 						Gabon.
    /// 					
    /// </remarks>

    GA, 
    /// <remarks>
    /// 
    /// 						Gambia.
    /// 					
    /// </remarks>

    GM, 
    /// <remarks>
    /// 
    /// 						Georgia.
    /// 					
    /// </remarks>

    GE, 
    /// <remarks>
    /// 
    /// 						Germany.
    /// 					
    /// </remarks>

    DE, 
    /// <remarks>
    /// 
    /// 						Ghana.
    /// 					
    /// </remarks>

    GH, 
    /// <remarks>
    /// 
    /// 						Gibraltar.
    /// 					
    /// </remarks>

    GI, 
    /// <remarks>
    /// 
    /// 						Greece.
    /// 					
    /// </remarks>

    GR, 
    /// <remarks>
    /// 
    /// 						Greenland.
    /// 					
    /// </remarks>

    GL, 
    /// <remarks>
    /// 
    /// 						Grenada.
    /// 					
    /// </remarks>

    GD, 
    /// <remarks>
    /// 
    /// 						Guadeloupe.
    /// 					
    /// </remarks>

    GP, 
    /// <remarks>
    /// 
    /// 						Guam.
    /// 					
    /// </remarks>

    GU, 
    /// <remarks>
    /// 
    /// 						Guatemala.
    /// 					
    /// </remarks>

    GT, 
    /// <remarks>
    /// 
    /// 						Guinea.
    /// 					
    /// </remarks>

    GN, 
    /// <remarks>
    /// 
    /// 						Guinea-Bissau.
    /// 					
    /// </remarks>

    GW, 
    /// <remarks>
    /// 
    /// 						Guyana.
    /// 					
    /// </remarks>

    GY, 
    /// <remarks>
    /// 
    /// 						Haiti.
    /// 					
    /// </remarks>

    HT, 
    /// <remarks>
    /// 
    /// 						Heard Island and McDonald Islands.
    /// 					
    /// </remarks>

    HM, 
    /// <remarks>
    /// 
    /// 						Holy See (Vatican City state).
    /// 					
    /// </remarks>

    VA, 
    /// <remarks>
    /// 
    /// 						Honduras.
    /// 					
    /// </remarks>

    HN, 
    /// <remarks>
    /// 
    /// 						Hong Kong.
    /// 					
    /// </remarks>

    HK, 
    /// <remarks>
    /// 
    /// 						Hungary.
    /// 					
    /// </remarks>

    HU, 
    /// <remarks>
    /// 
    /// 						Iceland.
    /// 					
    /// </remarks>

    IS, 
    /// <remarks>
    /// 
    /// 						India.
    /// 					
    /// </remarks>

    IN, 
    /// <remarks>
    /// 
    /// 						Indonesia.
    /// 					
    /// </remarks>

    ID, 
    /// <remarks>
    /// 
    /// 						Islamic Republic of Iran.
    /// 					
    /// </remarks>

    IR, 
    /// <remarks>
    /// 
    /// 						Iraq.
    /// 					
    /// </remarks>

    IQ, 
    /// <remarks>
    /// 
    /// 						Ireland.
    /// 					
    /// </remarks>

    IE, 
    /// <remarks>
    /// 
    /// 						Israel.
    /// 					
    /// </remarks>

    IL, 
    /// <remarks>
    /// 
    /// 						Italy.
    /// 					
    /// </remarks>

    IT, 
    /// <remarks>
    /// 
    /// 						Jamaica.
    /// 					
    /// </remarks>

    JM, 
    /// <remarks>
    /// 
    /// 						Japan.
    /// 					
    /// </remarks>

    JP, 
    /// <remarks>
    /// 
    /// 						Jordan.
    /// 					
    /// </remarks>

    JO, 
    /// <remarks>
    /// 
    /// 						Kazakhstan.
    /// 					
    /// </remarks>

    KZ, 
    /// <remarks>
    /// 
    /// 						Kenya.
    /// 					
    /// </remarks>

    KE, 
    /// <remarks>
    /// 
    /// 						Kiribati.
    /// 					
    /// </remarks>

    KI, 
    /// <remarks>
    /// 
    /// 						Democratic People's Republic of Korea.
    /// 					
    /// </remarks>

    KP, 
    /// <remarks>
    /// 
    /// 						Republic of Korea.
    /// 					
    /// </remarks>

    KR, 
    /// <remarks>
    /// 
    /// 						Kuwait.
    /// 					
    /// </remarks>

    KW, 
    /// <remarks>
    /// 
    /// 						Kyrgyzstan.
    /// 					
    /// </remarks>

    KG, 
    /// <remarks>
    /// 
    /// 						Lao People's Democratic Republic.
    /// 					
    /// </remarks>

    LA, 
    /// <remarks>
    /// 
    /// 						Latvia.
    /// 					
    /// </remarks>

    LV, 
    /// <remarks>
    /// 
    /// 						Lebanon.
    /// 					
    /// </remarks>

    LB, 
    /// <remarks>
    /// 
    /// 						Lesotho.
    /// 					
    /// </remarks>

    LS, 
    /// <remarks>
    /// 
    /// 						Liberia.
    /// 					
    /// </remarks>

    LR, 
    /// <remarks>
    /// 
    /// 						Libyan Arab Jamahiriya.
    /// 					
    /// </remarks>

    LY, 
    /// <remarks>
    /// 
    /// 						Liechtenstein.
    /// 					
    /// </remarks>

    LI, 
    /// <remarks>
    /// 
    /// 						Lithuania.
    /// 					
    /// </remarks>

    LT, 
    /// <remarks>
    /// 
    /// 						Luxembourg.
    /// 					
    /// </remarks>

    LU, 
    /// <remarks>
    /// 
    /// 						Macao.
    /// 					
    /// </remarks>

    MO, 
    /// <remarks>
    /// 
    /// 						The Former Yugoslav Republic of Macedonia.
    /// 					
    /// </remarks>

    MK, 
    /// <remarks>
    /// 
    /// 						Madagascar.
    /// 					
    /// </remarks>

    MG, 
    /// <remarks>
    /// 
    /// 						Malawi.
    /// 					
    /// </remarks>

    MW, 
    /// <remarks>
    /// 
    /// 						Malaysia.
    /// 					
    /// </remarks>

    MY, 
    /// <remarks>
    /// 
    /// 						Maldives.
    /// 					
    /// </remarks>

    MV, 
    /// <remarks>
    /// 
    /// 						Mali.
    /// 					
    /// </remarks>

    ML, 
    /// <remarks>
    /// 
    /// 						Malta.
    /// 					
    /// </remarks>

    MT, 
    /// <remarks>
    /// 
    /// 						Marshall Islands.
    /// 					
    /// </remarks>

    MH, 
    /// <remarks>
    /// 
    /// 						Martinique.
    /// 					
    /// </remarks>

    MQ, 
    /// <remarks>
    /// 
    /// 						Mauritania.
    /// 					
    /// </remarks>

    MR, 
    /// <remarks>
    /// 
    /// 						Mauritius.
    /// 					
    /// </remarks>

    MU, 
    /// <remarks>
    /// 
    /// 						Mayotte.
    /// 					
    /// </remarks>

    YT, 
    /// <remarks>
    /// 
    /// 						Mexico.
    /// 					
    /// </remarks>

    MX, 
    /// <remarks>
    /// 
    /// 						Federated States of Micronesia.
    /// 					
    /// </remarks>

    FM, 
    /// <remarks>
    /// 
    /// 						Republic of Moldova.
    /// 					
    /// </remarks>

    MD, 
    /// <remarks>
    /// 
    /// 						Monaco.
    /// 					
    /// </remarks>

    MC, 
    /// <remarks>
    /// 
    /// 						Mongolia.
    /// 					
    /// </remarks>

    MN, 
    /// <remarks>
    /// 
    /// 						Montserrat.
    /// 					
    /// </remarks>

    MS, 
    /// <remarks>
    /// 
    /// 						Morocco.
    /// 					
    /// </remarks>

    MA, 
    /// <remarks>
    /// 
    /// 						Mozambique.
    /// 					
    /// </remarks>

    MZ, 
    /// <remarks>
    /// 
    /// 						Myanmar.
    /// 					
    /// </remarks>

    MM, 
    /// <remarks>
    /// 
    /// 						Namibia.
    /// 					
    /// </remarks>

    NA, 
    /// <remarks>
    /// 
    /// 						Nauru.
    /// 					
    /// </remarks>

    NR, 
    /// <remarks>
    /// 
    /// 						Nepal.
    /// 					
    /// </remarks>

    NP, 
    /// <remarks>
    /// 
    /// 						Netherlands.
    /// 					
    /// </remarks>

    NL, 
    /// <remarks>
    /// 
    /// 						Netherlands Antilles.
    /// 					
    /// </remarks>

    AN, 
    /// <remarks>
    /// 
    /// 						New Caledonia.
    /// 					
    /// </remarks>

    NC, 
    /// <remarks>
    /// 
    /// 						New Zealand.
    /// 					
    /// </remarks>

    NZ, 
    /// <remarks>
    /// 
    /// 						Nicaragua.
    /// 					
    /// </remarks>

    NI, 
    /// <remarks>
    /// 
    /// 						Niger.
    /// 					
    /// </remarks>

    NE, 
    /// <remarks>
    /// 
    /// 						Nigeria.
    /// 					
    /// </remarks>

    NG, 
    /// <remarks>
    /// 
    /// 						Niue.
    /// 					
    /// </remarks>

    NU, 
    /// <remarks>
    /// 
    /// 						Norfolk Island.
    /// 					
    /// </remarks>

    NF, 
    /// <remarks>
    /// 
    /// 						Northern Mariana Islands.
    /// 					
    /// </remarks>

    MP, 
    /// <remarks>
    /// 
    /// 						Norway.
    /// 					
    /// </remarks>

    NO, 
    /// <remarks>
    /// 
    /// 						Oman.
    /// 					
    /// </remarks>

    OM, 
    /// <remarks>
    /// 
    /// 						Pakistan.
    /// 					
    /// </remarks>

    PK, 
    /// <remarks>
    /// 
    /// 						Palau.
    /// 					
    /// </remarks>

    PW, 
    /// <remarks>
    /// 
    /// 						Palestinian territory, Occupied.
    /// 					
    /// </remarks>

    PS, 
    /// <remarks>
    /// 
    /// 						Panama.
    /// 					
    /// </remarks>

    PA, 
    /// <remarks>
    /// 
    /// 						Papua New Guinea.
    /// 					
    /// </remarks>

    PG, 
    /// <remarks>
    /// 
    /// 						Paraguay.
    /// 					
    /// </remarks>

    PY, 
    /// <remarks>
    /// 
    /// 						Peru.
    /// 					
    /// </remarks>

    PE, 
    /// <remarks>
    /// 
    /// 						Philippines.
    /// 					
    /// </remarks>

    PH, 
    /// <remarks>
    /// 
    /// 						Pitcairn.
    /// 					
    /// </remarks>

    PN, 
    /// <remarks>
    /// 
    /// 						Poland.
    /// 					
    /// </remarks>

    PL, 
    /// <remarks>
    /// 
    /// 						Portugal.
    /// 					
    /// </remarks>

    PT, 
    /// <remarks>
    /// 
    /// 						Puerto Rico.
    /// 					
    /// </remarks>

    PR, 
    /// <remarks>
    /// 
    /// 						Qatar.
    /// 					
    /// </remarks>

    QA, 
    /// <remarks>
    /// 
    /// 						Reunion.
    /// 					
    /// </remarks>

    RE, 
    /// <remarks>
    /// 
    /// 						Romania.
    /// 					
    /// </remarks>

    RO, 
    /// <remarks>
    /// 
    /// 						Russian Federation.
    /// 					
    /// </remarks>

    RU, 
    /// <remarks>
    /// 
    /// 						Rwanda.
    /// 					
    /// </remarks>

    RW, 
    /// <remarks>
    /// 
    /// 						Saint Helena.
    /// 					
    /// </remarks>

    SH, 
    /// <remarks>
    /// 
    /// 						Saint Kitts and Nevis.
    /// 					
    /// </remarks>

    KN, 
    /// <remarks>
    /// 
    /// 						Saint Lucia.
    /// 					
    /// </remarks>

    LC, 
    /// <remarks>
    /// 
    /// 						Saint Pierre and Miquelon.
    /// 					
    /// </remarks>

    PM, 
    /// <remarks>
    /// 
    /// 						Saint Vincent and the Grenadines.
    /// 					
    /// </remarks>

    VC, 
    /// <remarks>
    /// 
    /// 						Samoa.
    /// 					
    /// </remarks>

    WS, 
    /// <remarks>
    /// 
    /// 						San Marino.
    /// 					
    /// </remarks>

    SM, 
    /// <remarks>
    /// 
    /// 						Sao Tome and Principe.
    /// 					
    /// </remarks>

    ST, 
    /// <remarks>
    /// 
    /// 						Saudi Arabia.
    /// 					
    /// </remarks>

    SA, 
    /// <remarks>
    /// 
    /// 						Senegal.
    /// 					
    /// </remarks>

    SN, 
    /// <remarks>
    /// 
    /// 						Seychelles.
    /// 					
    /// </remarks>

    SC, 
    /// <remarks>
    /// 
    /// 						Sierra Leone.
    /// 					
    /// </remarks>

    SL, 
    /// <remarks>
    /// 
    /// 						Singapore.
    /// 					
    /// </remarks>

    SG, 
    /// <remarks>
    /// 
    /// 						Slovakia.
    /// 					
    /// </remarks>

    SK, 
    /// <remarks>
    /// 
    /// 						Slovenia.
    /// 					
    /// </remarks>

    SI, 
    /// <remarks>
    /// 
    /// 						Solomon Islands.
    /// 					
    /// </remarks>

    SB, 
    /// <remarks>
    /// 
    /// 						Somalia.
    /// 					
    /// </remarks>

    SO, 
    /// <remarks>
    /// 
    /// 						South Africa.
    /// 					
    /// </remarks>

    ZA, 
    /// <remarks>
    /// 
    /// 						South Georgia and the South Sandwich Islands.
    /// 					
    /// </remarks>

    GS, 
    /// <remarks>
    /// 
    /// 						Spain.
    /// 					
    /// </remarks>

    ES, 
    /// <remarks>
    /// 
    /// 						Sri Lanka.
    /// 					
    /// </remarks>

    LK, 
    /// <remarks>
    /// 
    /// 						Sudan.
    /// 					
    /// </remarks>

    SD, 
    /// <remarks>
    /// 
    /// 						Suriname.
    /// 					
    /// </remarks>

    SR, 
    /// <remarks>
    /// 
    /// 						Svalbard and Jan Mayen.
    /// 					
    /// </remarks>

    SJ, 
    /// <remarks>
    /// 
    /// 						Swaziland.
    /// 					
    /// </remarks>

    SZ, 
    /// <remarks>
    /// 
    /// 						Sweden.
    /// 					
    /// </remarks>

    SE, 
    /// <remarks>
    /// 
    /// 						Switzerland.
    /// 					
    /// </remarks>

    CH, 
    /// <remarks>
    /// 
    /// 						Syrian Arab Republic.
    /// 					
    /// </remarks>

    SY, 
    /// <remarks>
    /// 
    /// 						Taiwan, Province of China.
    /// 					
    /// </remarks>

    TW, 
    /// <remarks>
    /// 
    /// 						Tajikistan.
    /// 					
    /// </remarks>

    TJ, 
    /// <remarks>
    /// 
    /// 						Tanzania, United Republic of.
    /// 					
    /// </remarks>

    TZ, 
    /// <remarks>
    /// 
    /// 						Thailand.
    /// 					
    /// </remarks>

    TH, 
    /// <remarks>
    /// 
    /// 						Togo.
    /// 					
    /// </remarks>

    TG, 
    /// <remarks>
    /// 
    /// 						Tokelau.
    /// 					
    /// </remarks>

    TK, 
    /// <remarks>
    /// 
    /// 						Tonga.
    /// 					
    /// </remarks>

    TO, 
    /// <remarks>
    /// 
    /// 						Trinidad and Tobago.
    /// 					
    /// </remarks>

    TT, 
    /// <remarks>
    /// 
    /// 						Tunisia.
    /// 					
    /// </remarks>

    TN, 
    /// <remarks>
    /// 
    /// 						Turkey.
    /// 					
    /// </remarks>

    TR, 
    /// <remarks>
    /// 
    /// 						Turkmenistan.
    /// 					
    /// </remarks>

    TM, 
    /// <remarks>
    /// 
    /// 						Turks and Caicos Islands.
    /// 					
    /// </remarks>

    TC, 
    /// <remarks>
    /// 
    /// 						Tuvalu.
    /// 					
    /// </remarks>

    TV, 
    /// <remarks>
    /// 
    /// 						Uganda.
    /// 					
    /// </remarks>

    UG, 
    /// <remarks>
    /// 
    /// 						Ukraine.
    /// 					
    /// </remarks>

    UA, 
    /// <remarks>
    /// 
    /// 						United Arab Emirates.
    /// 					
    /// </remarks>

    AE, 
    /// <remarks>
    /// 
    /// 						United Kingdom.
    /// 					
    /// </remarks>

    GB, 
    /// <remarks>
    /// 
    /// 						United States.
    /// 					
    /// </remarks>

    US, 
    /// <remarks>
    /// 
    /// 						NOTE: United States Minor Outlying Islands was
    /// 						defined in the eBay list previously
    /// 						but is no longer a viable option. This country
    /// 						will remain on eBay country list for backward
    /// 						compatibility. Use 'US' instead.
    /// 					
    /// </remarks>

    UM, 
    /// <remarks>
    /// 
    /// 						Uruguay.
    /// 					
    /// </remarks>

    UY, 
    /// <remarks>
    /// 
    /// 						Uzbekistan.
    /// 					
    /// </remarks>

    UZ, 
    /// <remarks>
    /// 
    /// 						Vanuatu.
    /// 					
    /// </remarks>

    VU, 
    /// <remarks>
    /// 
    /// 						Venezuela.
    /// 					
    /// </remarks>

    VE, 
    /// <remarks>
    /// 
    /// 						Vietnam.
    /// 					
    /// </remarks>

    VN, 
    /// <remarks>
    /// 
    /// 						Virgin Islands, British.
    /// 					
    /// </remarks>

    VG, 
    /// <remarks>
    /// 
    /// 						Virgin Islands, U.S.
    /// 					
    /// </remarks>

    VI, 
    /// <remarks>
    /// 
    /// 						Wallis and Futuna.
    /// 					
    /// </remarks>

    WF, 
    /// <remarks>
    /// 
    /// 						Western Sahara.
    /// 					
    /// </remarks>

    EH, 
    /// <remarks>
    /// 
    /// 						Yemen.
    /// 					
    /// </remarks>

    YE, 
    /// <remarks>
    /// 
    /// 						No longer in use. See RS for Serbia and ME for Montenegro.
    /// 					
    /// </remarks>

    YU, 
    /// <remarks>
    /// 
    /// 						Zambia.
    /// 					
    /// </remarks>

    ZM, 
    /// <remarks>
    /// 
    /// 						Zimbabwe.
    /// 					
    /// </remarks>

    ZW, 
    /// <remarks>
    /// 
    /// 						NOTE: APO/FPO was defined in eBay list previously
    /// 						but they are not defined in ISO 3166. This country
    /// 						will remain on eBay country code list for backward
    /// 						compatibility.
    /// 					
    /// </remarks>

    AA, 
    /// <remarks>
    /// 
    /// 						NOTE	: Guernsey was defined in eBay list previously
    /// 						but they are not defined in ISO 3166. This country
    /// 						will remain on eBay country list for backward
    /// 						compatibility.
    /// 					
    /// </remarks>

    QM, 
    /// <remarks>
    /// 
    /// 						NOTE: Jan Mayen was defined in eBay list previously
    /// 						but they are not defined in ISO 3166. This country
    /// 						will remain on eBay country list for backward
    /// 						compatibility.
    /// 					
    /// </remarks>

    QN, 
    /// <remarks>
    /// 
    /// 						NOTE: Jersey was defined in eBay list previously
    /// 						but they are not defined in ISO 3166. This country
    /// 						will remain on eBay country list for backward
    /// 						compatibility.
    /// 					
    /// </remarks>

    QO, 

    QP, 
    /// <remarks>
    /// 
    /// 						Jersey
    /// 					
    /// </remarks>

    JE, 
    /// <remarks>
    /// 
    /// 						Guernsey
    /// 					
    /// </remarks>

    GG, 
    /// <remarks>
    /// 
    /// 						Unknown country
    /// 					
    /// </remarks>

    ZZ, 
    /// <remarks>
    /// 
    /// 						Serbia
    /// 					
    /// </remarks>

    RS, 
    /// <remarks>
    /// 
    /// 						Montenegro.
    /// 					
    /// </remarks>

    ME, 
    /// <remarks>
    /// 
    /// 						(out) Reserved for internal or future use
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumeration type contains a list of standard 3-digit ISO 4217 currency codes for
/// 				currency used in countries around the world.
/// 				<br/><br/>
/// 				When adding an item through <b>AddItem</b> (or related API call), the
/// 				<b>Item.Currency</b> value will default to the currency used on the listing
/// 				site. Otherwise, only the following currency types may be specified through an
/// 				Add/Revise/Relist call, since these are the currencies of all the countries where
/// 				the Trading API is supported:
/// 				<ul>
/// 				<li>USD - US Dollar</li>
/// 				<li>CAD - Canadian Dollar</li>
/// 				<li>GBP - British Pound</li>
/// 				<li>AUD - Australian Dollar</li>
/// 				<li>EUR - Euro</li>
/// 				<li>CHF - Swiss Franc</li>
/// 				<li>CNY - Chinese Renminbi</li>
/// 				<li>HKD - Hong Kong Dollar</li>
/// 				<li>PHP - Philippines Peso</li>
/// 				<li>PLN - Polish Zloty</li>
/// 				<li>SEK - Sweden Krona</li>
/// 				<li>SGD - Singapore Dollar</li>
/// 				<li>TWD - Taiwanese Dollar</li>
/// 				<li>MYR - Malaysian Ringgit</li>
/// 				</ul>
/// 				<br/>
/// 				Other currency codes in this enumerated type may be returned in
/// 				<b>GetItem</b> (and other calls) based on the buyer's and/or seller's
/// 				registration country. However, only the values listed above will be returned if you
/// 				call <b>GeteBayDetails</b> with <b>DetailName</b> set to
/// 				<b>CurrencyDetails</b>.
/// 				http://www.xe.com/iso4217.htm
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum CurrencyCodeType
{
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for an Afghan afghani, a currency used in Afghanistan.
    /// 					
    /// </remarks>

    AFA, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for an Albanian lek, a currency used in Albania.
    /// 					
    /// </remarks>

    ALL, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for an Algerian dinar, a currency used in Algeria.
    /// 					
    /// </remarks>

    DZD, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for an Andorran peseta, a currency used in Andorra.
    /// 					
    /// </remarks>

    ADP, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for an Angolan kwanza, a currency used in Angola.
    /// 					
    /// </remarks>

    AOA, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for an Argentine peso, a currency used in Argentina.
    /// 					
    /// </remarks>

    ARS, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for an Armenian dram, a currency used in Armenia.
    /// 					
    /// </remarks>

    AMD, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for an Aruban florin, a currency used in Aruba.
    /// 					
    /// </remarks>

    AWG, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for an Azerbaijani manat, a currency used in Azerbaijan.
    /// 					
    /// </remarks>

    AZM, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Bahamian dollar, a currency used in the Bahamas.
    /// 					
    /// </remarks>

    BSD, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Bahraini dinar, a currency used in the Bahrain.
    /// 					
    /// </remarks>

    BHD, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Bangladeshi taka, a currency used in Bangladesh.
    /// 					
    /// </remarks>

    BDT, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Barbados dollar, a currency used in Barbados.
    /// 					
    /// </remarks>

    BBD, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Belarusian ruble, a currency used in Belarus.
    /// 					
    /// </remarks>

    BYR, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Belize dollar, a currency used in Belize.
    /// 					
    /// </remarks>

    BZD, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Bermudian dollar, a currency used in Bermuda.
    /// 					
    /// </remarks>

    BMD, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Bhutanese ngultrum, a currency used in Bhutan.
    /// 					
    /// </remarks>

    BTN, 
    /// <remarks>
    /// 
    /// 					This value is a 3-digit code for an Indian rupee, a currency used in India.
    /// 					
    /// </remarks>

    INR, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Bolivian Mvdol, a currency used in Bolivia.
    /// 					
    /// </remarks>

    BOV, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Boliviano, a currency used in Bolivia.
    /// 					
    /// </remarks>

    BOB, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Bosnia and Herzegovina convertible mark, a
    /// 						currency used in Bosnia and Herzegovina.
    /// 					
    /// </remarks>

    BAM, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Botswana pula, a currency used in Botswana.
    /// 					
    /// </remarks>

    BWP, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Brazilian real, a currency used in Brazil.
    /// 					
    /// </remarks>

    BRL, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Brunei dollar, a currency used in Brunei and
    /// 						Singapore.
    /// 					
    /// </remarks>

    BND, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for the old Bulgarian lev, a currency previously used
    /// 						in Bulgaria. This currency has been replaced by the new Bulgarian lev (3-digit
    /// 						code: BGN).
    /// 					
    /// </remarks>

    BGL, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Bulgarian lev, a currency used in Bulgaria. This
    /// 						currency replaced the old Bulgarian lev (3-digit code: BGL).
    /// 					
    /// </remarks>

    BGN, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Burundian franc, a currency used in Burundi.
    /// 					
    /// </remarks>

    BIF, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Cambodian riel, a currency used in Cambodia.
    /// 					
    /// </remarks>

    KHR, 
    /// <remarks>
    /// 
    /// 					This value is a 3-digit code for a Canadian dollar, a currency used in Canada. This is
    /// 					the value that should be passed in the <b>Item.Currency</b> field by the
    /// 					seller when listing an item on the eBay Canada site (Site ID 2).
    /// 					
    /// </remarks>

    CAD, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Cape Verde escudo, a currency used in Cape
    /// 						Verde.
    /// 					
    /// </remarks>

    CVE, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Cayman Islands dollar, a currency used in
    /// 						the Cayman Islands.
    /// 					
    /// </remarks>

    KYD, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Central African CFA franc, a currency used in
    /// 						Cameroon, Central African Republic, Republic of the Congo, Chad, Equatorial
    /// 						Guinea, and Gabon.
    /// 					
    /// </remarks>

    XAF, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Unidad de Fomento, a currency used in Chile.
    /// 					
    /// </remarks>

    CLF, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Chilean peso, a currency used in Chile.
    /// 					
    /// </remarks>

    CLP, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Chinese yuan (also known as the renminbi), a
    /// 						currency used in China.
    /// 					
    /// </remarks>

    CNY, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Columbian peso, a currency used in Columbia.
    /// 					
    /// </remarks>

    COP, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Comoro franc, a currency used in Comoros.
    /// 					
    /// </remarks>

    KMF, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Congolese franc, a currency used in Democratic
    /// 						Republic of Congo.
    /// 					
    /// </remarks>

    CDF, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Costa Rican colon, a currency used in Costa
    /// 						Rica.
    /// 					
    /// </remarks>

    CRC, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Croatian kuna, a currency used in Croatia.
    /// 					
    /// </remarks>

    HRK, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Cuban peso, a currency used in Cuba.
    /// 					
    /// </remarks>

    CUP, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Cypriot pound, a currency previously used in
    /// 						Cyprus. This currency has been replaced by the Euro (3-digit code: EUR).
    /// 					
    /// </remarks>

    CYP, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Czech koruna, a currency used in the Czech
    /// 						Republic.
    /// 					
    /// </remarks>

    CZK, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Danish krone, a currency used in Denmark,
    /// 						the Faroe Islands, and Greenland.
    /// 					
    /// </remarks>

    DKK, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Djiboutian franc, a currency used in Djibouti.
    /// 					
    /// </remarks>

    DJF, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Dominican peso, a currency used in the Dominican
    /// 						Republic.
    /// 					
    /// </remarks>

    DOP, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Portuguese Timorese escudo, a currency
    /// 						previously used in Portuguese Timor.
    /// 					
    /// </remarks>

    TPE, 
    /// <remarks>
    /// 
    /// 						This value is an old 3-digit code for a Cape Verde escudo, a currency used in
    /// 						Cape Verde. The 'ECV' code has been replaced by 'CVE'.
    /// 					
    /// </remarks>

    ECV, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for an Ecuadorian sucre, a currency previously used in
    /// 						Ecuador. This currency has been replaced by the US Dollar (3-digit code: USD).
    /// 					
    /// </remarks>

    ECS, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for an Egyptian pound, a currency used in Egypt.
    /// 					
    /// </remarks>

    EGP, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Salvadoran colon, a currency previously used in
    /// 						El Salvador. This currency has been replaced by the US Dollar (3-digit code: USD).
    /// 					
    /// </remarks>

    SVC, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for an Eritrean nakfa, a currency used in Eritrea.
    /// 					
    /// </remarks>

    ERN, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for an Estonian kroon, a currency previously used in
    /// 						Estonia. This currency has been replaced by the Euro (3-digit code: EUR).
    /// 					
    /// </remarks>

    EEK, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for an Ethiopian birr, a currency used in Ethiopia.
    /// 					
    /// </remarks>

    ETB, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Falkland Islands pound, a currency used in
    /// 						the Falkland Islands.
    /// 					
    /// </remarks>

    FKP, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Fiji dollar, a currency used in Fiji.
    /// 					
    /// </remarks>

    FJD, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Gambian dalasi, a currency used in Gambia.
    /// 					
    /// </remarks>

    GMD, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Georgian Iari, a currency used in the country of
    /// 						Georgia.
    /// 					
    /// </remarks>

    GEL, 
    /// <remarks>
    /// 
    /// 						This value is an old 3-digit code for a Ghanaian cedi, a currency used in Ghana.
    /// 						The 'GHC' code has been replaced by 'GHS'.
    /// 					
    /// </remarks>

    GHC, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Gibraltar pound, a currency used in Gibraltar.
    /// 					
    /// </remarks>

    GIP, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Guatemalan quetzal, a currency used in
    /// 						Guatemala.
    /// 					
    /// </remarks>

    GTQ, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Guinean franc, a currency used in Guinea.
    /// 					
    /// </remarks>

    GNF, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Guinea-Bissau peso, a currency previously used
    /// 						in Guinea-Bissau. This currency has been replaced by the West African CFA franc
    /// 						(3-digit code: XOF).
    /// 					
    /// </remarks>

    GWP, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Guyanese dollar, a currency used in Guyana.
    /// 					
    /// </remarks>

    GYD, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Haitian gourde, a currency used in Haiti.
    /// 					
    /// </remarks>

    HTG, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Honduran lempira, a currency used in Honduras.
    /// 					
    /// </remarks>

    HNL, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Hong Kong dollar, a currency used in Hong Kong
    /// 						and Macau. This is the value that should be passed in the
    /// 						<b>Item.Currency</b> field by the seller when listing an item on the
    /// 						eBay Hong Kong site (Site ID 201).
    /// 					
    /// </remarks>

    HKD, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Hungarian forint, a currency used in Hungary.
    /// 					
    /// </remarks>

    HUF, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for an Icelandic krona, a currency used in Iceland.
    /// 					
    /// </remarks>

    ISK, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for an Indonesian rupiah, a currency used in
    /// 						Indonesia.
    /// 					
    /// </remarks>

    IDR, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for an Iranian rial, a currency used in Iran.
    /// 					
    /// </remarks>

    IRR, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for an Iraqi dinar, a currency used in Iraq.
    /// 					
    /// </remarks>

    IQD, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for an Israeli new shekel, a currency used in
    /// 						Israel and in the Palestinian territories.
    /// 					
    /// </remarks>

    ILS, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Jamaican dollar, a currency used in Jamaica.
    /// 					
    /// </remarks>

    JMD, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Japanese yen, a currency used in Japan.
    /// 					
    /// </remarks>

    JPY, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Jordanian dinar, a currency used in Jordan.
    /// 					
    /// </remarks>

    JOD, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Kazahhstani tenge, a currency used in
    /// 						Kazakhstan.
    /// 					
    /// </remarks>

    KZT, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Kenyan shilling, a currency used in Kenya.
    /// 					
    /// </remarks>

    KES, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for an Australia dollar, a currency used in Australia.
    /// 						This is the value that should be passed in the <b>Item.Currency</b>
    /// 						field by the seller when listing an item on the eBay Australia site
    /// 						(Site ID 15).
    /// 					
    /// </remarks>

    AUD, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a North Korean won, a currency used in North
    /// 						Korea.
    /// 					
    /// </remarks>

    KPW, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a South Korean won, a currency used in South
    /// 						Korea.
    /// 					
    /// </remarks>

    KRW, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Kuwaiti dollar, a currency used in Kuwait.
    /// 					
    /// </remarks>

    KWD, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Kyrgzstani som, a currency used in Kyrgystan.
    /// 					
    /// </remarks>

    KGS, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Lao kip, a currency used in Laos.
    /// 					
    /// </remarks>

    LAK, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Latvian lats, a currency used in Latvia.
    /// 					
    /// </remarks>

    LVL, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Lebanese pound, a currency used in Lebanon.
    /// 					
    /// </remarks>

    LBP, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Lesotho loti, a currency used in Lesotho.
    /// 					
    /// </remarks>

    LSL, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Liberian dollar, a currency used in Liberia.
    /// 					
    /// </remarks>

    LRD, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Libyan dinar, a currency used in Libya.
    /// 					
    /// </remarks>

    LYD, 
    /// <remarks>
    /// 
    /// 						Swiss Franc.
    /// 						For eBay, you can only specify this currency for listings you submit to the
    /// 						Switzerland site (site ID 193).
    /// 					
    /// </remarks>

    CHF, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Lithuanian litas, a currency used in Lithuania.
    /// 					
    /// </remarks>

    LTL, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Macanese pataca, a currency used in Macao.
    /// 					
    /// </remarks>

    MOP, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Macedonian denar, a currency used in Macedonia.
    /// 					
    /// </remarks>

    MKD, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Malagay franc, a currency previously used
    /// 						in Madagascar. This currency has been replaced by the Malagasy ariary
    /// 						(3-digit code: MGA).
    /// 					
    /// </remarks>

    MGF, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Malawian kwacha, a currency used in Malawi.
    /// 					
    /// </remarks>

    MWK, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Malaysian Ringgit, a currency used in Malaysia.
    /// 						This is the value that should be passed in the <b>Item.Currency</b>
    /// 						field by the seller when listing an item on the eBay Malaysia site
    /// 						(Site ID 207).
    /// 					
    /// </remarks>

    MYR, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Maldivian rufiyaaa, a currency used in the
    /// 						Maldives.
    /// 					
    /// </remarks>

    MVR, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Maltese lira, a currency previously used in
    /// 						Malta. This currency has been replaced by the Euro (3-digit code: EUR).
    /// 					
    /// </remarks>

    MTL, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a EURO, a currency used in Andorra, Austria,
    /// 						Belgium, Cyprus, Estonia, Finland, France, Germany, Greece, Ireland, Italy, Kosovo,
    /// 						Luxembourg, Malta, Monaco, Montenegro, Netherlands, Portugal, San Marino, Slovakia,
    /// 						Slovenia, Spain, and Vatican City. This is the value that should be passed in the
    /// 						<b>Item.Currency</b> field by the seller when listing an item on the
    /// 						following sites: Austria (Site ID 16), Belgium_French (Site ID 23),
    /// 						France (Site ID 71), Germany (Site ID 77), Italy (Site ID 101), Belgium_Dutch (Site
    /// 						ID 123), Netherlands (Site ID 146), Spain (Site ID 186), and Ireland (Site ID 205).
    /// 					
    /// </remarks>

    EUR, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Mauritanian ouguiya, a currency used in
    /// 						Mauritania.
    /// 					
    /// </remarks>

    MRO, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Mauritian rupee, a currency used in
    /// 						Mauritius.
    /// 					
    /// </remarks>

    MUR, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Mexican peso, a currency used in
    /// 						Mexico.
    /// 					
    /// </remarks>

    MXN, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit funds code for a Mexican peso, a currency used in
    /// 						Mexico.
    /// 					
    /// </remarks>

    MXV, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Moldovan leu, a currency used in
    /// 						Moldova.
    /// 					
    /// </remarks>

    MDL, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Mongolian tugrik, a currency used in
    /// 						Mongolia.
    /// 					
    /// </remarks>

    MNT, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for an Easy Caribbean dollar, a currency used in
    /// 						Anguilla, Antigua and Barbuda, Dominica, Grenada, Montserrat, Saint Kitts and
    /// 						Nevis, Saint Lucia, and Saint Vincent and the Grenadines.
    /// 					
    /// </remarks>

    XCD, 
    /// <remarks>
    /// 
    /// 						This value is an old 3-digit code for a Mozambican metical, a currency used in
    /// 						Mozambique. The 'MZM' code has been replaced by 'MZN'.
    /// 					
    /// </remarks>

    MZM, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Myanma kyat, a currency used in
    /// 						Myanmar.
    /// 					
    /// </remarks>

    MMK, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a South African rand, a currency used in
    /// 						South Africa.
    /// 					
    /// </remarks>

    ZAR, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Namibian dollar, a currency used in
    /// 						Namibia.
    /// 					
    /// </remarks>

    NAD, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Nepalese rupee, a currency used in Nepal.
    /// 					
    /// </remarks>

    NPR, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Netherlands Antillean guilder, a currency used
    /// 						in Curacao and Sint Maarten.
    /// 					
    /// </remarks>

    ANG, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a CFP franc, a currency used in French Polynesia,
    /// 						New Caledonia, and Wallis and Futuna.
    /// 					
    /// </remarks>

    XPF, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a New Zealand dollar, a currency used in the
    /// 						Cook Islands, New Zealand, Niue, Pitcairn, and Tokelau, Ross Dependency.
    /// 					
    /// </remarks>

    NZD, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Nicaraguan cordoba, a currency used in
    /// 						Nicaragua.
    /// 					
    /// </remarks>

    NIO, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Nigerian naira, a currency used in Nigeria.
    /// 					
    /// </remarks>

    NGN, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Norwegian kron, a currency used in Norway,
    /// 						Svalbard, Jan Mayen, Bouvet Island, Queen Maud Land, and Peter I Island.
    /// 					
    /// </remarks>

    NOK, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for an Omani rial, a currency used in Oman.
    /// 					
    /// </remarks>

    OMR, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Pakistani rupee, a currency used in Pakistan.
    /// 					
    /// </remarks>

    PKR, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Panamanian balboa, a currency used in Panama.
    /// 					
    /// </remarks>

    PAB, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Papua New Guinea kina, a currency used in
    /// 						Papua New Guinea.
    /// 					
    /// </remarks>

    PGK, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Paraguayan guarani, a currency used in
    /// 						Paraguay.
    /// 					
    /// </remarks>

    PYG, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Peruvian nuevo sol, a currency used in Peru.
    /// 					
    /// </remarks>

    PEN, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Philippine peso, a currency used in the
    /// 						Philippines. This is the value that should be passed in the
    /// 						<b>Item.Currency</b> field by the seller when listing an item on the
    /// 						eBay Philippines site (Site ID 211).
    /// 					
    /// </remarks>

    PHP, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Polish zloty, a currency used in Poland. This
    /// 						is the value that should be passed in the <b>Item.Currency</b> field
    /// 						by the seller when listing an item on the eBay Poland site (Site ID 212).
    /// 					
    /// </remarks>

    PLN, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a US dollar, a currency used in the United
    /// 						States, America Samoa, Barbados, Bermuda, British Indian Ocean Territory, British
    /// 						Virgin Islands, Caribbean Netherlands, Ecuador, El Salvador, Guam, Haiti, Marshall
    /// 						Islands, Federated States of Micronesia, Northern Mariana Islands, Palau, Panama,
    /// 						Puerto Rico, Timor-Leste, Turks and Caicos Islands, US Virgin Islands, and
    /// 						Zimbabwe. This is the value that should be passed in the
    /// 						<b>Item.Currency</b> field by the seller when listing an item on the
    /// 						eBay US or US eBay Motors site (Site ID 0).
    /// 					
    /// </remarks>

    USD, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Qatari riyal, a currency used in Qatar.
    /// 					
    /// </remarks>

    QAR, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for the old Romanian leu, a currency previously used
    /// 						in Romania. This currency has been replaced by the Romanian new leu (3-digit code:
    /// 						RON).
    /// 					
    /// </remarks>

    ROL, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Russian rouble, a currency used in Russia,
    /// 						Abkhazia, and South Ossetia. This value replace the old 3-digit code for the
    /// 						Russian rouble, 'RUR'.
    /// 					
    /// </remarks>

    RUB, 
    /// <remarks>
    /// 
    /// 						This value is the old 3-digit code for a Russian rouble, a currency used in
    /// 						Russia. This value was replaced by the new 3-digit code for the Russian rouble,
    /// 						'RUB'.
    /// 					
    /// </remarks>

    RUR, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Rwandan franc, a currency used in Rwanda.
    /// 					
    /// </remarks>

    RWF, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Saint Helena pound, a currency used in Saint
    /// 						Helena.
    /// 					
    /// </remarks>

    SHP, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Samoan tala, a currency used in Samoa.
    /// 					
    /// </remarks>

    WST, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Sao Tome and Principe dobra, a currency used in
    /// 						Sao Tome and Principe.
    /// 					
    /// </remarks>

    STD, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Saudi riyal, a currency used in Saudi Arabia.
    /// 					
    /// </remarks>

    SAR, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Seychelles rupee, a currency used in Seychelles.
    /// 					
    /// </remarks>

    SCR, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Sierra Leonean leone, a currency used in Sierra
    /// 						Leone.
    /// 					
    /// </remarks>

    SLL, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Singapore dollar, a currency used in Singapore
    /// 						and Brunei. This is the value that should be passed in the
    /// 						<b>Item.Currency</b> field by the seller when listing an item on the
    /// 						eBay Singapore site (Site ID 216).
    /// 					
    /// </remarks>

    SGD, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Slovak koruna, a currency previously used in
    /// 						Slovakia. This currency has been replaced by the Euro (3-digit code: EUR).
    /// 					
    /// </remarks>

    SKK, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Slovenian tolar, a currency previously used in
    /// 						Slovenia. This currency has been replaced by the Euro (3-digit code: EUR).
    /// 					
    /// </remarks>

    SIT, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Solomon Islands dollar, a currency used in
    /// 						the Solomon Islands.
    /// 					
    /// </remarks>

    SBD, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Somali shilling, a currency used in Somalia.
    /// 					
    /// </remarks>

    SOS, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Sri Lankan rupee, a currency used in Sri Lanka.
    /// 					
    /// </remarks>

    LKR, 
    /// <remarks>
    /// 
    /// 						This value is the 3-digit code for a Sudanese dinar, a currency previously used in
    /// 						Sudan. The Sudanese dinar was replaced by the Sudanese pound, which has a 3-digit
    /// 						code of 'SDG'.
    /// 					
    /// </remarks>

    SDD, 
    /// <remarks>
    /// 
    /// 						This value is the 3-digit code for a Suriname guilder, a currency previously used
    /// 						in Suriname. The Surinam guilder was replaced by the Surinamese dollar, which has
    /// 						a 3-digit code of 'SRD'.
    /// 					
    /// </remarks>

    SRG, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Swazi lilangeni, a currency used in Swaziland.
    /// 					
    /// </remarks>

    SZL, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Swedish krona, a currency used in Swedn. This
    /// 						is the value that should be passed in the <b>Item.Currency</b> field
    /// 						by the seller when listing an item on the eBay Sweden site (Site ID 218).
    /// 					
    /// </remarks>

    SEK, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Syrian pound, a currency used in Syria.
    /// 					
    /// </remarks>

    SYP, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for the New Taiwan dollar, a currency used in Taiwan.
    /// 					
    /// </remarks>

    TWD, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Tajikistani somoni, a currency used in
    /// 						Tajikistan.
    /// 					
    /// </remarks>

    TJS, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Tanzanian shilling, a currency used in
    /// 						Tanzania.
    /// 					
    /// </remarks>

    TZS, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Thai baht, a currency used in Thailand.
    /// 					
    /// </remarks>

    THB, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a West African CFA franc, a currency used in
    /// 						Benin, Burkina Faso, Cote d'Ivoire, Guinea-Bissau, Mali, Niger, Senegal, and
    /// 						Togo.
    /// 					
    /// </remarks>

    XOF, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Tongan pa'anga, a currency used in Tonga.
    /// 					
    /// </remarks>

    TOP, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Trinidad and Tobago dollar, a currency used in
    /// 						Trinidad and Tobago.
    /// 					
    /// </remarks>

    TTD, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Tunisian dinar, a currency used in Tunisia.
    /// 					
    /// </remarks>

    TND, 
    /// <remarks>
    /// 
    /// 						This value is the old 3-digit code for a Turkish lira, a currency used in Turkey
    /// 						and Northern Cyprus. This value was replaced by the new 3-digit code for the
    /// 						Turkish lira, 'TRY'.
    /// 					
    /// </remarks>

    TRL, 
    /// <remarks>
    /// 
    /// 						This value is the old 3-digit code for a Turkmenistani manat, a currency used in
    /// 						Turkmenistan. This value was replaced by the new 3-digit code for
    /// 						the Turkmenistani manat, 'TMT'.
    /// 					
    /// </remarks>

    TMM, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Ugandan shilling, a currency used in Uganda.
    /// 					
    /// </remarks>

    UGX, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Ukrainian hryvnia, a currency used in the
    /// 						Ukraine.
    /// 					
    /// </remarks>

    UAH, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for an United Arab Emirates dirham, a currency used
    /// 						in the United Arab Emirates.
    /// 					
    /// </remarks>

    AED, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Pound sterling, a currency used in the United
    /// 						Kingdom and British Crown dependencies. This is the value that should be passed in
    /// 						the <b>Item.Currency</b> field by the seller when listing an item on
    /// 						the eBay UK site (Site ID 3).
    /// 					
    /// </remarks>

    GBP, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a same-day transaction involving US dollars.
    /// 					
    /// </remarks>

    USS, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a next-day transaction involving US dollars.
    /// 					
    /// </remarks>

    USN, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Uruguayan peso, a currency used in Uruguay.
    /// 					
    /// </remarks>

    UYU, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Uzbekistan som, a currency used in the
    /// 						Uzbekistan.
    /// 					
    /// </remarks>

    UZS, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Vanuatu vatu, a currency used in Vanuatu.
    /// 					
    /// </remarks>

    VUV, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Venezuelan bolivar, a currency previously used
    /// 						in Venezuela. The Venezuela bolivar was replaced by the Venezuelan bolivar
    /// 						fuerte, which has a 3-digit code of 'VEF'.
    /// 					
    /// </remarks>

    VEB, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Vietnamese dong, a currency used in Vietnam.
    /// 					
    /// </remarks>

    VND, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Moroccan dirham, a currency used in Morocco.
    /// 					
    /// </remarks>

    MAD, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Yemeni rial, a currency used in Yemen.
    /// 					
    /// </remarks>

    YER, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for a Yugoslav dinar, a currency previously used in
    /// 						Yugoslavia. The Yugoslav dinar was replaced by the Serbian dinar, which has a 3-
    /// 						digit code of 'RSD'.
    /// 					
    /// </remarks>

    YUM, 
    /// <remarks>
    /// 
    /// 						This value is the old 3-digit code for a Zambian kwacha, a currency used in
    /// 						Zambia. The 'ZMK' code has been replaced by 'ZMW'.
    /// 					
    /// </remarks>

    ZMK, 
    /// <remarks>
    /// 
    /// 						This value is the old 3-digit code for a Zimbabwean dollar, a currency previously
    /// 						used in Zimbabwe. The US dollar replaced the Zimbabwean dollar as the official
    /// 						currency in Zimbabwe.
    /// 					
    /// </remarks>

    ZWD, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for an Austrian schilling, a currency previously used
    /// 						in Austria. This currency has been replaced by the Euro (3-digit code: EUR).
    /// 					
    /// </remarks>

    ATS, 
    /// <remarks>
    /// 
    /// 						This value is a 3-digit code for the new Romanian leu, a currency used in Romania.
    /// 					
    /// </remarks>

    RON, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Specifies the range of days the seller can be contacted. 
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum DaysCodeType
{
    /// <remarks>
    /// 
    /// 						Seller does not want to be contacted. Contact hours will not be supported for 
    /// 						any days. If contact hours are specified, they will be ignored.
    /// 					
    /// </remarks>

    None, 
    /// <remarks>
    /// 
    /// 						Seller can be contacted any day during the specified contact hours. 
    /// 					
    /// </remarks>

    EveryDay, 
    /// <remarks>
    /// 
    /// 						Seller can be contacted Monday through Friday during the specified 
    /// 						contact hours.
    /// 					
    /// </remarks>

    Weekdays, 
    /// <remarks>
    /// 
    /// 						Seller can  be contacted Saturday or Sunday during the specified 
    /// 						contact hours.
    /// 					
    /// </remarks>

    Weekends, 
    /// <remarks>
    /// 
    /// 						(out) Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumeration type lists the possible delivery methods of a digital gift card. Currently, the only supported delivery method is by email.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum DeliveryMethodCodeType
{
    /// <remarks>
    /// 
    /// 						This value indicates that the link to download the digital gift card will be delivered to the recipient by email.
    /// 					
    /// </remarks>

    Email, 
    /// <remarks>
    /// 
    /// 						This value is reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumeration type lists the possible delivery status values of a digital gift card. Currently, the only supported delivery status value is 'Notified', which indicates that the link to download the digital gift card has been sent to the recipient by email.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum DeliveryStatusEmailCodeType
{
    /// <remarks>
    /// 
    /// 						This value indicates that the link to download the digital gift card has been sent to the recipient by email.
    /// 					
    /// </remarks>

    Notified, 
    /// <remarks>
    /// 
    /// 						This value is reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// FastDeposit
/// </summary>
/// <remarks>
/// 
/// 				This enumerated type is a list of applicable values that indicate how a motor vehicle deposit should be paid.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum DepositTypeCodeType
{
    /// <remarks>
    /// 
    /// 					  This value indicates that no deposit is required.
    /// 					
    /// </remarks>

    None, 
    /// <remarks>
    /// 
    /// 					  This value indicates that a deposit is required from the buyer when purchasing a motor vehicle. Deposits for a motor vehicle are either due in 24, 48, or 72 hours after commitment to purchase. Or, in the case of a motor vehicle listing that is requiring immediate payment, the deposit it due immediately after commitment to purchase.
    /// 					  <br><br>
    /// 					  This value should be used in an Add/Revise call if the seller is requiring a deposit for a motor vehicle listing.
    /// 					
    /// </remarks>

    OtherMethod, 
    /// <remarks>
    /// 
    /// 					   (out) No longer used.
    /// 					
    /// </remarks>

    FastDeposit, 
    /// <remarks>
    /// 
    /// 					  (out) Reserved for internal or future use
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Enumerated type containing the list of values that can be used when revising the 
/// 				item description of an active listing through the Revise API calls.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum DescriptionReviseModeCodeType
{
    /// <remarks>
    /// 
    /// 						Use this value in the <b>Item.DescriptionReviseMode</b> field if you want
    /// 						to completely replace (overwrite) the item description of the active listing.
    /// 					
    /// </remarks>

    Replace, 
    /// <remarks>
    /// 
    /// 						Use this value in the <b>Item.DescriptionReviseMode</b> field if you want
    /// 						to prepend text to the item description of the active listing.
    /// 					
    /// </remarks>

    Prepend, 
    /// <remarks>
    /// 
    /// 						Use this value in the <b>Item.DescriptionReviseMode</b> field if you want
    /// 						to append text to the item description of the active listing.
    /// 					
    /// </remarks>

    Append, 
    /// <remarks>
    /// 
    /// 						This value is reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Enumerated type that defines Listing Designer template types.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum DescriptionTemplateCodeType
{
    /// <remarks>
    /// 
    /// 						This value indicates that the Listing Designer template is a layout template that controls how pictures and description text are
    /// 						positioned on the View Item page.
    /// 					
    /// </remarks>

    Layout, 
    /// <remarks>
    /// 
    /// 						This value indicates that the Listing Designer template is a theme template that determines which eBay-provided theme (e.g. Valentine's Day) is to be applied for presenting pictures and description text.
    /// 					
    /// </remarks>

    Theme, 
    /// <remarks>
    /// 
    /// 						Reserved for future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// UnitOfMeasurementDetails
/// </summary>
/// <remarks>
/// 
/// 				This enumerated type contains all data filters that can be used to control which metadata is returned in the response of a <b>GeteBayDetails</b> call. The user can use as little or as many values as desired. If none of these data filters are used, all applicable metadata will be returned.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum DetailNameCodeType
{
    /// <remarks>
    /// 
    /// 						This enumeration value can be included in a <b>DetailName</b> field if the user wishes to retrieve the two-digit country codes for all countries of the world. Among other things, the two-digit country codes can be used when a seller is creating a 'ship-to' and/or an 'exclude ship-to' location list.
    /// 						<br/><br/>
    /// 						The same <b>CountryDetails</b> metadata will be returned regardless of the value that is passed into the <b>X-EBAY-API-SITEID</b> request header.
    /// 					
    /// </remarks>

    CountryDetails, 
    /// <remarks>
    /// 
    /// 						This enumeration value can be included in a <b>DetailName</b> field if the user wishes to retrieve the three-digit currency codes for each country where the Trading API is supported. These three-digit currency codes are used when a seller is expressing a dollar value in Trading API calls. For example, the <b>currencyID</b> attribute value in the <b>StartPrice</b> field of an <b>AddItem</b> call.
    /// 						<br/><br/>
    /// 						The same <b>CurrencyDetails</b> metadata will be returned regardless of the value that is passed into the <b>X-EBAY-API-SITEID</b> request header.
    /// 					
    /// </remarks>

    CurrencyDetails, 
    /// <remarks>
    /// 
    /// 						This enumeration value can be included in a <b>DetailName</b> field if the user wishes to retrieve all payment methods that are accepted on the specified eBay site. Note that the accepted payment methods within an eBay site can vary by category and/or by listing format, so a user may also want to make a <b>GetCategoryFeatures</b> call to retrieve category-level payment method metadata. To retrieve the accepted payment methods for a specific category on a specific site with <b>GetCategoryFeatures</b>, the user specifies the listing category ID through the <b>CategoryID</b>, and sets the <b>FeatureID</b> value to <code>PaymentMethods</code>.
    /// 					
    /// </remarks>

    PaymentOptionDetails, 
    /// <remarks>
    /// 
    /// 						This enumeration value can be included in a <b>DetailName</b> field if the user wishes to retrieve the local regions within the specified country.
    /// 					
    /// </remarks>

    RegionDetails, 
    /// <remarks>
    /// 
    /// 						This enumeration value can be included in a <b>DetailName</b> field if the user wishes to retrieve the geographical regions and country codes that can be used when creating a 'ship-to' location list.
    /// 					
    /// </remarks>

    ShippingLocationDetails, 
    /// <remarks>
    /// 
    /// 						This enumeration value can be included in a <b>DetailName</b> field if the user wishes to retrieve the domestic and international shipping service options available on the specified eBay site. The returned metadata on each available shipping service will include the full name of the shipping service option (including carrier name), the actual shipping service enumeration value that will be used in an <b>AddItem</b> call, the expected shipping time range, the package types that can be used for that shipping service, and whether the shipping service is for domestic or international shipping. In addition to this information, the seller will have to look for a value of <code>true</code> in the <b>ValidForSellingFlow</b> field. If the value in this field is <code>false</code>, it indicates that the shipping service is no longer available for shipping.
    /// 					
    /// </remarks>

    ShippingServiceDetails, 
    /// <remarks>
    /// 
    /// 						This enumeration value can be included in a <b>DetailName</b> field if the user wishes to retrieve the eBay sites that are supported in Trading API calls. The <b>SiteID</b> values that are returned for each country are specified as an HTTP header if the seller wants to see site metadata returned for that particular site.
    /// 						<br/><br/>
    /// 						The same <b>SiteDetails</b> metadata will be returned regardless of the value that is passed into the <b>X-EBAY-API-SITEID</b> request header.
    /// 					
    /// </remarks>

    SiteDetails, 
    /// <remarks>
    /// 
    /// 						This enumeration value can be included in a <b>DetailName</b> field if the user wishes to retrieve the different tax jurisdictions (such as states or provinces) within the specified eBay site. The two-digit <b>JurisdictionID</b> codes that are returned are used when a seller is setting/configuring sales tax rates in a Sales Tax Table, or when creating a listing. For example, the <b>SalesTax.SalesTaxState</b> field of an <b>AddItem</b> call.
    /// 						<br/><br/>
    /// 						Sales tax jurisdictions are only applicable to the US and Canada, so the <b>TaxJurisdiction</b> metadata will only be returned for these sites:
    /// 						<ul>
    /// 						<li><b>eBay US<b>: <b>SiteID</b> <code>0</code></li>
    /// 						<li><b>eBay Motors (US)<b>: <b>SiteID</b> <code>100</code></li>
    /// 						<li><b>eBay Canada (English language)<b>: <b>SiteID</b> <code>2</code></li>
    /// 						<li><b>eBay Canada (French language)<b>: <b>SiteID</b> <code>210</code></li>
    /// 						</ul>
    /// 					
    /// </remarks>

    TaxJurisdiction, 
    /// <remarks>
    /// 
    /// 						This enumeration value can be included in a <b>DetailName</b> field if the user wishes to retrieve the different eBay URLs associated with the specified eBay site.
    /// 					
    /// </remarks>

    URLDetails, 
    /// <remarks>
    /// 
    /// 						This enumeration value can be included in a <b>DetailName</b> field if the user wishes to retrieve the names of the different global time zones. The returned information includes the number of hours that each time zone is either ahead or behind UTC time, and it also indicates if the time zone participates in 'Daylight Savings'.
    /// 						<br/><br/>
    /// 						The same <b>TimeZoneDetails</b> metadata will be returned regardless of the value that is passed into the <b>X-EBAY-API-SITEID</b> request header, although the metadata text will be localized for that site's language.
    /// 					
    /// </remarks>

    TimeZoneDetails, 
    /// <remarks>
    /// 
    /// 						This enumeration value can be included in a <b>DetailName</b> field if the user wishes to retrieve the international regions and individual countries.
    /// 						<br/><br/>
    /// 						The same <b>RegionOfOriginDetails</b> metadata will be returned regardless of the value that is passed into the <b>X-EBAY-API-SITEID</b> request header.
    /// 					
    /// </remarks>

    RegionOfOriginDetails, 
    /// <remarks>
    /// 
    /// 						This enumeration value can be included in a <b>DetailName</b> field if the user wishes to retrieve the handling time values (in number of business days) that the seller can set on a listing. The seller must ship an order line item within this time or risk getting a seller defect. For the US, the supported handling times are 0-3 days. Some listing categories support 'extended handling' time, and if this is the case, the handling times will be longer, and the <b>ExtendedHandling</b> field will be returned as <code>true</code>.
    /// 					
    /// </remarks>

    DispatchTimeMaxDetails, 
    /// <remarks>
    /// 
    /// 						This enumeration value can be included in a <b>DetailName</b> field if the user wishes to retrieve the maximum thresholds for Item Specifics in listings. These thresholds include the maximum number of item specifics that can be used for an item (or item variation), as well as the maximum number of characters that can be used for Item Specific names and values.
    /// 					
    /// </remarks>

    ItemSpecificDetails, 
    /// <remarks>
    /// 
    /// 					This enumeration value is no longer applicable, and should not be used.
    /// 					
    /// </remarks>

    UnitOfMeasurementDetails, 
    /// <remarks>
    /// 
    /// 						This enumeration value can be included in a <b>DetailName</b> field if the user wishes to retrieve the shipping package types that are supported by the specified eBay site. A seller can also just use the <b>ShippingServiceDetails</b> filter, and the supported shipping package types for each shipping service option will be returned.
    /// 					
    /// </remarks>

    ShippingPackageDetails, 
    /// <remarks>
    /// 
    /// 						Reserved for future use.
    /// 					
    /// </remarks>

    CustomCode, 
    /// <remarks>
    /// 
    /// 						This enumeration value can be included in a <b>DetailName</b> field if the user wishes to retrieve the shipping carriers supported by the specified eBay site for domestic and international shipping.
    /// 					
    /// </remarks>

    ShippingCarrierDetails, 
    /// <remarks>
    /// 
    /// 						This enumeration value can be included in a <b>DetailName</b> field if the user wishes to retrieve the minimum starting prices for each applicable listing format for the specified eBay site. The price input into the <b>StartPrice</b> field of an <b>AddItem</b> call must be at or above this minimum threshold value or the listing will be blocked.
    /// 					
    /// </remarks>

    ListingStartPriceDetails, 
    /// <remarks>
    /// 
    /// 						This enumeration value can be included in a <b>DetailName</b> field if the user wishes to retrieve the return policy values that can be passed in through the <b>ReturnPolicy</b> container of an Add/Revise/Relist API call (or in a Return business policy). These values include the return period, the 'Money back' options that the seller can make available to the buyers, and who pays for return shipping (Buyer or Seller).
    /// 						<br><br>
    /// 						<span class="tablenote"><b>Note:</b> As of September 2018, the <b>GetCategoryFeatures</b> call started returning category-level metadata for both domestic and international return policies. Due to this update, developers may want to consider using that call for return policy metadata instead, as the <b>GeteBayDetails</b> call only retrieves site-level metadata, and does not distinguish between domestic and international metadata.</span>
    /// 					
    /// </remarks>

    ReturnPolicyDetails, 
    /// <remarks>
    /// 
    /// 						This enumeration value can be included in a <b>DetailName</b> field if the user wishes to retrieve the Buyer Requirement values that can be passed in through the <b>BuyerRequirementDetails</b> container of an Add/Revise/Relist API call.
    /// 					
    /// </remarks>

    BuyerRequirementDetails, 
    /// <remarks>
    /// 
    /// 						This enumeration value can be included in a <b>DetailName</b> field if the user wishes to retrieve the listing features/upgrades that are enabled or disabled for the specified site.
    /// 					
    /// </remarks>

    ListingFeatureDetails, 
    /// <remarks>
    /// 
    /// 						This enumeration value can be included in a <b>DetailName</b> field if the user wishes to retrieve the maximum thresholds when using multiple-variation listings.
    /// 					
    /// </remarks>

    VariationDetails, 
    /// <remarks>
    /// 
    /// 						This enumeration value can be included in a <b>DetailName</b> field if the user wishes to retrieve the geographical regions and individual countries that can be passed in to the <b>ShippingDetails.ExcludeShipToLocation</b> field in an Add/Revise/Relist API call. Multiple <b>ShippingDetails.ExcludeShipToLocation</b> can be used, and any region or country value that is passed in to one of these fields will exclude that region or country as a "ship-to" location.
    /// 					
    /// </remarks>

    ExcludeShippingLocationDetails, 
    /// <remarks>
    /// 
    /// 						This enumeration value can be included in a <b>DetailName</b> field if the user wishes to retrieve details on a site's recoupment policy.
    /// 					
    /// </remarks>

    RecoupmentPolicyDetails, 
    /// <remarks>
    /// 
    /// 						This enumeration value can be included in a <b>DetailName</b> field if the user wishes to retrieve the shipping service categories (Standard, Expedited, Economy, etc.) supported for the site.
    /// 					
    /// </remarks>

    ShippingCategoryDetails, 
    /// <remarks>
    /// 
    /// 						This enumeration value can be included in a <b>DetailName</b> field if the user wishes to retrieve the appropriate text to insert into a product identifier field (EAN, ISBN, UPC, MPN/Brand) if eBay is prompting/expecting one of these fields in the call request, but the identifiers do not exist/apply for the product. The <b>ProductDetails.ProductIdentifierUnavailableText</b> field that is returned in the response will contain the actual text that should be passed into the relevant product identification fields when creating a listing.
    /// 					
    /// </remarks>

    ProductDetails
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumerated type is a list of the systems used to deliver buyer/seller notifications.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum DeviceTypeCodeType
{
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that buyer/seller notifications will be delivered through the Platform Notifications system.
    /// 					
    /// </remarks>

    Platform, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that buyer/seller notifications will be delivered through the SMS system to a wireless device.
    /// 					
    /// </remarks>

    SMS, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that buyer/seller notifications will be delivered through the Client Alerts system.
    /// 					
    /// </remarks>

    ClientAlerts, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumeration type lists the possible states of a purchased digital delivery card.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum DigitalStatusCodeType
{
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the digital gift card has yet to be activated by the buyer or recipient of gift card.
    /// 					
    /// </remarks>

    Inactive, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the digital gift card has been activated by the buyer or recipient of gift card.
    /// 					
    /// </remarks>

    Activated, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the digital gift card has been downloaded by the buyer or recipient of gift card. The next step would be to activate the gift card.
    /// 					
    /// </remarks>

    Downloaded, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the digital gift card has been deactivated.
    /// 					
    /// </remarks>

    Deactivated, 
    /// <remarks>
    /// 
    /// 						This value is reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumerated type is used by the seller to set the shipping discount type. Some of these shipping discount types apply to flat-rate shipping and others apply to calculated shipping.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum DiscountNameCodeType
{
    /// <remarks>
    /// 
    /// 						The cost to ship each item beyond the first item (where the item with the
    /// 						highest shipping cost is selected by eBay as the first item).
    /// 						Let's say the buyer purchases three items, each set to ship for $8, and
    /// 						the seller set EachAdditionalAmount to $6.  The cost to ship three items would
    /// 						normally be $24, but since the seller specified $6, the total shipping
    /// 						cost would be $8 + $6 + $6, or $20.
    /// 						For flat shipping discount profile only.
    /// 					
    /// </remarks>

    EachAdditionalAmount, 
    /// <remarks>
    /// 
    /// 						The amount by which to reduce the cost to ship each item beyond the
    /// 						first item (where the item with the highest shipping cost is selected by eBay
    /// 						as the first item).
    /// 						Let's say the buyer purchases three items, each set to ship for $8, and
    /// 						the seller set EachAdditionalAmountOff to $2.  The cost to ship three items would
    /// 						normally be $24, but since the seller specified $2, the total shipping
    /// 						cost would be $24 - (two additional items x $2), or $20.
    /// 						For flat shipping discount profile only.
    /// 					
    /// </remarks>

    EachAdditionalAmountOff, 
    /// <remarks>
    /// 
    /// 						The percentage by which to reduce the cost to ship each item beyond
    /// 						the first item (where the item with the highest shipping cost is selected by
    /// 						eBay as the first item).
    /// 						Let's say the buyer purchases three items, each set to ship for $8, and
    /// 						the seller set EachAdditionalPercentOff to 0.25.  The cost to ship three items would
    /// 						normally be $24, but since the seller specified 0.25 ($2 out of 8), the total shipping
    /// 						cost would be $24 - (two additional items x $2), or $20.
    /// 						For flat rate shipping discount profile only.
    /// 					
    /// </remarks>

    EachAdditionalPercentOff, 
    /// <remarks>
    /// 
    /// 						Shipping cost is the total of what it would cost to ship each item individually.
    /// 						This is simply a way to define how shipping is to be calculated--there is no
    /// 						discount for the buyer with this selection.
    /// 						For calculated shipping discount profile only.
    /// 					
    /// </remarks>

    IndividualItemWeight, 
    /// <remarks>
    /// 
    /// 						Shipping cost is based on the total weight of all individual items.
    /// 						This is simply a way to define how shipping is to be calculated--there is no
    /// 						discount for the buyer with this selection.
    /// 						For calculated shipping discount profile only.
    /// 					
    /// </remarks>

    CombinedItemWeight, 
    /// <remarks>
    /// 
    /// 						The amount of weight to subtract for each item beyond the first item
    /// 						before shipping costs are calculated. For example, there may be less packing
    /// 						material when the items are combined in one box than if they were shipped
    /// 						individually. Let's say the buyer purchases three items, each 10 oz. in weight, and
    /// 						the seller set WeightOff to 2 oz.  The combined weight would be 30 oz., but since
    /// 						the seller specified 2 oz. off, the total weight for shipping cost calculation
    /// 						would be 30 oz. - (two additional items x 2 oz.), or 26 oz.
    /// 						For calculated shipping discount profile only.
    /// 					
    /// </remarks>

    WeightOff, 
    /// <remarks>
    /// 
    /// 						Shipping cost X applies if the total cost of items purchased is Y.
    /// 						For promotional discount only.
    /// 					
    /// </remarks>

    ShippingCostXForAmountY, 
    /// <remarks>
    /// 
    /// 						Shipping cost X applies if the total number of items purchased is N.
    /// 						For promotional discount only.
    /// 					
    /// </remarks>

    ShippingCostXForItemCountN, 
    /// <remarks>
    /// 
    /// 						The shipping cost will not exceed this.
    /// 						For promotional discount only.
    /// 					
    /// </remarks>

    MaximumShippingCostPerOrder, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumerated type is used in the response of Add/Revise/Relist item calls to indicate if eBay has applied a Special offer or Promotional discount to the order line item.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum DiscountReasonCodeType
{
    /// <remarks>
    /// 
    /// 						An offer that applies to a limited number of listings during the offering
    /// 						period. Example:  "There is no insertion fee for up to 5 auctions when
    /// 						listing between 12/1 and 12/10."
    /// 					
    /// </remarks>

    SpecialOffer, 
    /// <remarks>
    /// 
    /// 						An offer that applies to an unlimited number of listings during the offering
    /// 						period. Example:  "Get subtitle for $0.10 in Tech category when listing between
    /// 						12/25 and 12/28.  No limit to the number of items listed during this period."
    /// 					
    /// </remarks>

    Promotion, 
    /// <remarks>
    /// 
    /// 						Reserved for future use
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumerated type is deprecated, as the seller no longer has control over  the 'Buy It Now' button displayed on a listing.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum DisplayPayNowButtonCodeType
{
    /// <remarks>
    /// 
    /// 						This enumeration value was formerly used to display the "Pay Now" button regardless of the buyer's  payment method.
    /// 					
    /// </remarks>

    ShowPayNowButtonForAllPaymentMethods, 
    /// <remarks>
    /// 
    /// 						This enumeration value is deprecated.
    /// 					
    /// </remarks>

    ShowPayNowButtonForPayPalOnly, 
    /// <remarks>
    /// 
    /// 						 Reserved for internal or future use
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// PictureManagerLevel1, PictureManagerLevel2, PictureManagerLevel3, PictureManagerLevel4, PictureManagerLevel5, PictureManagerLevel6, PictureManagerLevel7, SellerAssistant, SellerAssistantPro, SellerReportsBasic, SellingManager, SellingManagerPro
/// </summary>
/// <remarks>
/// 
/// 				This enumerated type contains a list of eBay subscriptions that an eBay user may be subscribed to.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum EBaySubscriptionTypeCodeType
{
    /// <remarks>
    /// 
    /// 						This eBay subscription is no longer available.
    /// 				  
    /// </remarks>

    SellerAssistant, 
    /// <remarks>
    /// 
    /// 						This eBay subscription is no longer available.
    /// 					
    /// </remarks>

    SellerAssistantPro, 
    /// <remarks>
    /// 
    /// 						This value indicates that the user has a Basic eBay Store membership. See the <a href="http://pages.ebay.com/sellerinformation/stores/Subscriptions.html" target="_blank">Welcome to eBay Stores</a> help page for more information on eBay Store subscriptions.
    /// 					
    /// </remarks>

    EBayStoreBasic, 
    /// <remarks>
    /// 
    /// 						This value indicates that the user has a Premium eBay Store membership. See the <a href="http://pages.ebay.com/sellerinformation/stores/Subscriptions.html" target="_blank">Welcome to eBay Stores</a> help page for more information on eBay Store subscriptions.
    /// 					
    /// </remarks>

    EBayStoreFeatured, 
    /// <remarks>
    /// 
    /// 						This value indicates that the user has a Anchor eBay Store membership. See the <a href="http://pages.ebay.com/sellerinformation/stores/Subscriptions.html" target="_blank">Welcome to eBay Stores</a> help page for more information on eBay Store subscriptions.
    /// 					
    /// </remarks>

    EBayStoreAnchor, 
    /// <remarks>
    /// 
    /// 						This enumeration value is deprecated.
    /// 					 
    /// </remarks>

    SellingManager, 
    /// <remarks>
    /// 
    /// 						This enumeration value is deprecated.
    /// 					 
    /// </remarks>

    SellingManagerPro, 
    /// <remarks>
    /// 
    /// 					  This value is no longer applicable because Picture Manager has been EOLed.
    /// 					 
    /// </remarks>

    PictureManagerLevel1, 
    /// <remarks>
    /// 
    /// 					  This value is no longer applicable because Picture Manager has been EOLed.
    /// 					 
    /// </remarks>

    PictureManagerLevel2, 
    /// <remarks>
    /// 
    /// 					  This value is no longer applicable because Picture Manager has been EOLed.
    /// 					 
    /// </remarks>

    PictureManagerLevel3, 
    /// <remarks>
    /// 
    /// 					  This value is no longer applicable because Picture Manager has been EOLed.
    /// 					 
    /// </remarks>

    PictureManagerLevel4, 
    /// <remarks>
    /// 
    /// 					  This value is no longer applicable because Picture Manager has been EOLed.
    /// 					 
    /// </remarks>

    PictureManagerLevel5, 
    /// <remarks>
    /// 
    /// 					  This value is no longer applicable because Picture Manager has been EOLed.
    /// 					 
    /// </remarks>

    PictureManagerLevel6, 
    /// <remarks>
    /// 
    /// 			  This value is no longer applicable because Picture Manager has been EOLed.
    /// 					 
    /// </remarks>

    PictureManagerLevel7, 
    /// <remarks>
    /// 
    /// 						Basic Sales Reports are no longer available. Sellers should subscribe to Sales Reports Plus instead.
    /// 					 
    /// </remarks>

    SellerReportsBasic, 
    /// <remarks>
    /// 
    /// 						This value indicates that the user has a Sales Reports Plus subscription. A user can subscribe to Sales Report Plus through the <b>Subscriptions</b> section of My eBay.
    /// 					 
    /// </remarks>

    SellerReportsPlus, 
    /// <remarks>
    /// 
    /// 						This value indicates that the user has opted in to Seller Hub Reports (formerly known as File Exchange). Users can opt in to Seller Hub Reports through the <b>Reports</b> section on Seller Hub. See the <a href="https://www.ebay.com/help/selling/selling-tools/file-exchange?id=4096" target="_blank">Seller Hub Reports</a> help page for more information.
    /// 					 
    /// </remarks>

    FileExchange, 
    /// <remarks>
    /// 
    /// 						This value indicates that the Motors Dealer has a Local Market Specialty subscription. This type of account is used to sell in the Motorcycles, Powersports, and Other Vehicles and Trailers categories. Not Cars and Trucks.
    /// 					 
    /// </remarks>

    LocalMarketSpecialty, 
    /// <remarks>
    /// 
    /// 						This value indicates that the Motors Dealer has a Local Market Regular  subscription. This type of account is used to sell in all eBay Motors categories.
    /// 					 
    /// </remarks>

    LocalMarketRegular, 
    /// <remarks>
    /// 
    /// 						This value indicates that the Motors Dealer has a Local Market Premium  subscription. This type of account is used to sell in all eBay Motors categories.
    /// 					
    /// </remarks>

    LocalMarketPremium, 

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumeration type is used to indicate whether an application/URL/device is enabled to receive notifications, or to indicate whether a specific notification event is enabled.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum EnableCodeType
{
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that an application/URL/device is enabled to receive notifications, or to indicate that a specific notification event is enabled.
    /// 					
    /// </remarks>

    Enable, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that an application/URL/device is disabled, or being blocked from receiving notifications, or to indicate that a specific notification event is disabled.
    /// 					
    /// </remarks>

    Disable, 
    /// <remarks>
    /// 
    /// 						Reserved for future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 			This enumeration type is used to indicate the type of logo that will be included in the customized email that will be sent by the seller to the winning bidder in an auction listing.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum EndOfAuctionLogoTypeCodeType
{
    /// <remarks>
    /// 
    /// 					 This enumeration value indicates that the Winning Bidder Notice logo will be used in the end of auction email to winning bidder.
    /// 					
    /// </remarks>

    WinningBidderNotice, 
    /// <remarks>
    /// 
    /// 					 This enumeration value indicates that the eBay seller's Store logo will be used in the end of auction email to winning bidder.
    /// 					
    /// </remarks>

    Store, 
    /// <remarks>
    /// 
    /// 					 This enumeration value indicates that a custom logo will be used in the end of auction email to winning bidder. The location (URL) of this custom logo can be given through the <b>LogoURL</b> field of the <b>SetUserPreferences</b> call. Just like any URL that is provided through eBay API calls, the URL for the custom logo must use 'https' (and not 'http').
    /// 					
    /// </remarks>

    Customized, 
    /// <remarks>
    /// 
    /// 					  Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that no logo will be used in the end of auction email to winning bidder.
    /// 					
    /// </remarks>

    None
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type defines the reasons that a seller can end an item listing early. This value is required if the seller ends a listing early. This can be on an item that hasn't
/// 				sold and has no bids or on an item that has bids and the seller wants to sell the item to the high bidder now.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum EndReasonCodeType
{
    /// <remarks>
    /// 
    /// 						Use this enumeration value in an End listing call if the seller is ending a listing because the item was lost or is broken.
    /// 					
    /// </remarks>

    LostOrBroken, 
    /// <remarks>
    /// 
    /// 						Use this enumeration value in an End listing call if the seller is ending a listing because the item is no longer available for sale.
    /// 					
    /// </remarks>

    NotAvailable, 
    /// <remarks>
    /// 
    /// 						Use this enumeration value in an End listing call if the seller is ending a listing because the start price or reserve price is incorrect.
    /// 					
    /// </remarks>

    Incorrect, 
    /// <remarks>
    /// 
    /// 						Use this enumeration value in an End listing call if the seller is ending a listing because the listing contained an error (other than start price or reserve price).
    /// 					
    /// </remarks>

    OtherListingError, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode, 
    /// <remarks>
    /// 
    /// 					  Use this enumeration value in an End listing call if the seller is ending a listing because they want to sell an auction item to the current high bidder. A seller can end a listing early in order to sell to the current high bidder when the listing has qualifying bids (i.e., there is a current high bid that,
    /// 					  when applicable, meets the minimum reserve price) and there is more than 12 hours before the listing ends.
    /// 					  <br>
    /// 					  <b>Note</b>: In the last 12 hours of an item listing, you cannot end an item early if it has bids.
    /// 					
    /// </remarks>

    SellToHighBidder, 
    /// <remarks>
    /// 
    /// 						The vehicle was sold. Applies to local classified listings for vehicles only.
    /// 					
    /// </remarks>

    Sold, 
    /// <remarks>
    /// 
    /// 						For internal use only. This enumeration value cannot be used by the seller in an End listing call, but it will get returned in <b>GetItem</b> if a listing was administratively ended by eBay if the item in a listing becomes unpurchasable due to the eBay Catalog product associated with the listing being removed from the catalog.
    /// 					
    /// </remarks>

    ProductDeleted
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// DutchBINEnabled, DigitalDeliveryEnabled, BasicUpgradePack, ExpressEnabled, ExpressPicturesRequired, ExpressConditionRequired, TransactionConfirmationRequestEnabled, StoreInventoryEnabled, MaximumBestOffersAllowed, ClassifiedAdMaximumBestOffersAllowed, ClassifiedAdContactByEmailAvailable, ClassifiedAdPayPerLeadEnabled, ISBNIdentifierEnabled, UPCIdentifierEnabled, EANIdentifierEnabled, CombinedFixedPriceTreatment, PayPalRequiredForStoreOwner, AttributeConversionEnabled, PaymentOptionsGroup, VINSupported, VRMSupported, DepositSupported, SkypeMeTransactionalEnabled, SkypeMeNonTransactionalEnabled, PaisaPayFullEscrowEnabled, INEscrowWorkflowTimeline, UserConsentRequired, SafePaymentRequired, PayPalBuyerProtectionEnabled, BuyerGuaranteeEnabled, PayPalRequired, SpecialitySubscription, RegularSubscription, PremiumSubscription, NonSubscription, IntangibleEnabled, ProductCreationEnabled, GalleryFeaturedDurations, Group1MaxFlatShippingCost, Group2MaxFlatShippingCost, Group3MaxFlatShippingCost, HomePageFeaturedEnabled, ProductRequiredEnabled, ProPack, ProPackPlus, StoreOwnerExtendedListingDurations, StoreOwnerExtendedListingDurationsEnabled, ValuePack
/// </summary>
/// <remarks>
/// 
/// 				Enumerated type that lists all possible values that can be passed into the <b>FeatureID</b> field in a <b>GetCategoryFeatures</b> call. The <b>FeatureID</b> field is to used to check if specific listing features are enabled at the site or category level. Multiple <b>FeatureID</b> fields can be used in the request. If no <b>FeatureID</b> fields are used, the call retrieves data for all features defined within this enumerated type.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum FeatureIDCodeType
{
    /// <remarks>
    /// 
    /// 						If this value is specified, supported site-default and category-specific listing durations values for each listing type are returned in the <b>SiteDefaults.ListingDuration</b> and <b>Category.ListingDuration</b> fields of the <b>GetCategoryFeatures</b> response.
    /// 					
    /// </remarks>

    ListingDurations, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.BestOfferEnabled</b> and <b>Category.BestOfferEnabled</b> boolean fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site supports the Best Offer feature, and which categories allow the Best Offer feature.
    /// 					
    /// </remarks>

    BestOfferEnabled, 
    /// <remarks>
    /// 
    /// 						This value is <b>deprecated</b>, as Dutch-style auctions are no longer available on any eBay sites.
    /// 					
    /// </remarks>

    DutchBINEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.ShippingTermsRequired</b> and <b>Category.ShippingTermsRequired</b> boolean fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site, and individual categories on that site, require at least one domestic shipping service option (with cost) to be specified before an item is listed.
    /// 					
    /// </remarks>

    ShippingTermsRequired, 
    /// <remarks>
    /// 
    /// 						This value is deprecated and should not be used.
    /// 					
    /// </remarks>

    UserConsentRequired, 
    /// <remarks>
    /// 
    /// 						The feature associated with this value is deprecated, so specifying this value as a <b>FeatureID</b> value has no practical use.
    /// 					
    /// </remarks>

    HomePageFeaturedEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.AdFormatEnabled</b> and <b>Category.AdFormatEnabled</b> fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site and individual categories support Classified Ad listings.
    /// 					
    /// </remarks>

    AdFormatEnabled, 
    /// <remarks>
    /// 
    /// 						This value is <b>deprecated</b> and should no longer be used.
    /// 					
    /// </remarks>

    DigitalDeliveryEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.BestOfferCounterEnabled</b> and <b>Category.BestOfferCounterEnabled</b> boolean fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site supports the Best Offer counter offers, and which categories allow the Best Offer counter offers.
    /// 					
    /// </remarks>

    BestOfferCounterEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.BestOfferAutoDeclineEnabled</b> and <b>Category.BestOfferAutoDeclineEnabled</b> boolean fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site and individual categories support the Best Offer auto decline feature. With the Best Offer auto decline feature, the seller sets a price threshold, and all Best Offers and counter offers below this price value are automatically declined without any seller action.
    /// 					
    /// </remarks>

    BestOfferAutoDeclineEnabled, 
    /// <remarks>
    /// 
    /// 						The feature associated with this value is deprecated, so specifying this value as a <b>FeatureID</b> value has no practical use.
    /// 					
    /// </remarks>

    ProPack, 
    /// <remarks>
    /// 
    /// 						This value is <b>deprecated</b> and should no longer be used.
    /// 					
    /// </remarks>

    BasicUpgradePack, 
    /// <remarks>
    /// 
    /// 						The feature associated with this value is deprecated, so specifying this value as a <b>FeatureID</b> value has no practical use.
    /// 					
    /// </remarks>

    ValuePack, 
    /// <remarks>
    /// 
    /// 						The feature associated with this value is deprecated, so specifying this value as a <b>FeatureID</b> value has no practical use.
    /// 					
    /// </remarks>

    ProPackPlus, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.LocalMarketSpecialitySubscription</b> boolean field in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site supports Local Market listings for sellers with a specialty subscription to Local Market for Vehicles.
    /// 					
    /// </remarks>

    LocalMarketSpecialitySubscription, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.LocalMarketRegularSubscription</b> boolean field in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site supports Local Market listings for sellers with a regular subscription to Local Market for Vehicles.
    /// 					
    /// </remarks>

    LocalMarketRegularSubscription, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.LocalMarketPremiumSubscription</b> boolean field in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site supports Local Market listings for sellers with a premium subscription to Local Market for Vehicles.
    /// 					
    /// </remarks>

    LocalMarketPremiumSubscription, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.LocalMarketNonSubscription</b> boolean field in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site supports Local Market listings for sellers without a subscription to Local Market for Vehicles.
    /// 					
    /// </remarks>

    LocalMarketNonSubscription, 
    /// <remarks>
    /// 
    /// 						This value is <b>deprecated</b> and should no longer be used.
    /// 					
    /// </remarks>

    ExpressEnabled, 
    /// <remarks>
    /// 
    /// 						This value is <b>deprecated</b> and should no longer be used.
    /// 					
    /// </remarks>

    ExpressPicturesRequired, 
    /// <remarks>
    /// 
    /// 						This value is <b>deprecated</b> and should no longer be used.
    /// 					
    /// </remarks>

    ExpressConditionRequired, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.SellerContactDetailsEnabled</b> and <b>Category.SellerContactDetailsEnabled</b> boolean fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site and individual categories allow the seller to provide contact information within a Classified Ad listing. This feature is only applicable to Classified Ad listings.
    /// 					
    /// </remarks>

    SellerContactDetailsEnabled, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.MinimumReservePrice</b> and <b>Category.MinimumReservePrice</b> fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site and individual categories require a minimum Reserve Price for auction listings. This feature is only applicable to Auction listings and only if the seller decides to set a Reserve Price for the auction.
    /// 					
    /// </remarks>

    MinimumReservePrice, 
    /// <remarks>
    /// 
    /// 						This value is <b>deprecated</b> and should no longer be used.
    /// 					
    /// </remarks>

    TransactionConfirmationRequestEnabled, 
    /// <remarks>
    /// 
    /// 					This value is <b>deprecated</b> and should no longer be used.
    /// 					
    /// </remarks>

    StoreInventoryEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the integer values in the <b>LocalListingDistancesRegular</b>, <b>LocalListingDistancesSpecialty</b>, and <b>LocalListingDistancesNonSubscription</b> fields in the <b>GetCategoryFeatures</b> response will indicate the radius (in miles) of the selling area for Local Market Vehicle listings, based on Local Market subscription status of the motor vehicle seller (specialty subscription, regular subscription, or no subscription).
    /// 					
    /// </remarks>

    LocalListingDistances, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable, as Skype communication between eBay members is no longer supported.
    /// 					
    /// </remarks>

    SkypeMeTransactionalEnabled, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable, as Skype communication between eBay members is no longer supported.
    /// 					
    /// </remarks>

    SkypeMeNonTransactionalEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.ClassifiedAdPaymentMethodEnabled</b> and <b>Category.ClassifiedAdPaymentMethodEnabled</b> fields in the <b>GetCategoryFeatures</b> response will indicate whether or not (and when) accepted payment methods are displayed to buyers for the specified eBay site and for individual categories. This feature is only applicable for Classified Ad listings.
    /// 					
    /// </remarks>

    ClassifiedAdPaymentMethodEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.ClassifiedAdShippingMethodEnabled</b> and <b>Category.ClassifiedAdShippingMethodEnabled</b> boolean fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site and individual categories support the display of available shipping methods to buyers. This feature is only applicable for Classified Ad listings.
    /// 					
    /// </remarks>

    ClassifiedAdShippingMethodEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.ClassifiedAdBestOfferEnabled</b> and <b>Category.ClassifiedAdBestOfferEnabled</b> boolean fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site and individual categories support the Best Offer feature for Classified Ad listings.
    /// 					
    /// </remarks>

    ClassifiedAdBestOfferEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.ClassifiedAdCounterOfferEnabled</b> and <b>Category.ClassifiedAdCounterOfferEnabled</b> boolean fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site and individual categories support Best Offer counter offers for Classified Ad listings. This feature is only applicable for Classified Ad listings.
    /// 					
    /// </remarks>

    ClassifiedAdCounterOfferEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.ClassifiedAdAutoDeclineEnabled</b> and <b>Category.ClassifiedAdAutoDeclineEnabled</b> boolean fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site and individual categories support the Best Offer auto decline feature for Classified Ad listings. With the Best Offer auto decline feature, the seller sets a price threshold, and all Best Offers and counter offers below this price value are automatically declined without any seller action. This feature is only applicable for Classified Ad listings.
    /// 					
    /// </remarks>

    ClassifiedAdAutoDeclineEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.ClassifiedAdContactByEmailEnabled</b> and <b>Category.ClassifiedAdContactByEmailEnabled</b> boolean fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site and individual categories allow the seller to provide a contact email address within a Classified Ad listing. This feature is only applicable to Classified Ad listings.
    /// 					
    /// </remarks>

    ClassifiedAdContactByEmailEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.ClassifiedAdContactByPhoneEnabled</b> and <b>Category.ClassifiedAdContactByPhoneEnabled</b> boolean fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site and individual categories allow the seller to provide a contact phone number within a Classified Ad listing. This feature is only applicable to Classified Ad listings.
    /// 					
    /// </remarks>

    ClassifiedAdContactByPhoneEnabled, 
    /// <remarks>
    /// 
    /// 						This value is deprecated and should not be used.
    /// 					
    /// </remarks>

    SafePaymentRequired, 
    /// <remarks>
    /// 
    /// 						This value is <b>deprecated</b> and should no longer be used.
    /// 					
    /// </remarks>

    MaximumBestOffersAllowed, 
    /// <remarks>
    /// 
    /// 						This value is <b>deprecated</b> and should no longer be used.
    /// 					
    /// </remarks>

    ClassifiedAdMaximumBestOffersAllowed, 
    /// <remarks>
    /// 
    /// 						This value is <b>deprecated</b> and should no longer be used. To verify if the seller's contact information can be shared with prospective buyers in the listing, use the <b>SellerContactDetailsEnabled</b> enumeration value instead.
    /// 					
    /// </remarks>

    ClassifiedAdContactByEmailAvailable, 
    /// <remarks>
    /// 
    /// 						This value is <b>deprecated</b> and should no longer be used.
    /// 					
    /// </remarks>

    ClassifiedAdPayPerLeadEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.ItemSpecificsEnabled</b> and <b>Category.ItemSpecificsEnabled</b> fields in the <b>GetCategoryFeatures</b> response will indicate if the eBay site and individual categories support the use of Item Specifics in listings.
    /// 					
    /// </remarks>

    ItemSpecificsEnabled, 
    /// <remarks>
    /// 
    /// 						This value is deprecated and should not be used.
    /// 					
    /// </remarks>

    PaisaPayFullEscrowEnabled, 
    /// <remarks>
    /// 
    /// 						This value is deprecated and should no longer be used. Use <b>ISBNEnabled</b> instead.
    /// 					
    /// </remarks>

    ISBNIdentifierEnabled, 
    /// <remarks>
    /// 
    /// 						This value is deprecated and should no longer be used. Use <b>UPCEnabled</b> instead.
    /// 					
    /// </remarks>

    UPCIdentifierEnabled, 
    /// <remarks>
    /// 
    /// 						This value is deprecated and should no longer be used. Use <b>EANEnabled</b> instead.
    /// 					
    /// </remarks>

    EANIdentifierEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>Category.BrandMPNIdentifierEnabled</b> boolean field in the <b>GetCategoryFeatures</b> response will indicate whether or not individual categories on the specified site support the ability of a seller to identify a product through a Brand/Manufacturer Part Number (MPN) combination.
    /// 					
    /// </remarks>

    BrandMPNIdentifierEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.ClassifiedAdAutoAcceptEnabled</b> and <b>Category.ClassifiedAdAutoAcceptEnabled</b> boolean fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site and individual categories support the Best Offer auto accept feature for Classified Ad listings. With the Best Offer auto accept feature, the seller sets a price threshold, and all Best Offers and counter offers at or above this price value are automatically accepted without any seller action. This feature is only applicable for Classified Ad listings.
    /// 					
    /// </remarks>

    ClassifiedAdAutoAcceptEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.BestOfferAutoAcceptEnabled</b> and <b>Category.BestOfferAutoAcceptEnabled</b> boolean fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site and individual categories support the Best Offer auto accept feature. With the Best Offer auto accept feature, the seller sets a price threshold, and all Best Offers and counter offers at or above this price value are automatically accepted without any seller action.
    /// 					
    /// </remarks>

    BestOfferAutoAcceptEnabled, 
    /// <remarks>
    /// 
    /// 							If this value is specified, the <b>CrossBorderTradeNorthAmericaEnabled</b>, <b>CrossBorderTradeGBEnabled</b>, and <b>CrossBorderTradeAustraliaEnabled</b> fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site and individual categories support the International Site Visibility (Cross-Border Trade) feature, and on which sites. With the International Site Visibility feature, the seller is able to create a listing and make this listing available on multiple eBay sites (not just their domestic eBay site).
    /// 						
    /// </remarks>

    CrossBorderTradeEnabled, 
    /// <remarks>
    /// 
    /// 						This value is deprecated and should not be used.
    /// 					
    /// </remarks>

    PayPalBuyerProtectionEnabled, 
    /// <remarks>
    /// 
    /// 						This value is deprecated and should not be used.
    /// 					
    /// </remarks>

    BuyerGuaranteeEnabled, 
    /// <remarks>
    /// 
    /// 						This value is deprecated since it is only applicable to the eBay India site, and this marketplace is no longer available.
    /// 					
    /// </remarks>

    INEscrowWorkflowTimeline, 
    /// <remarks>
    /// 
    /// 						This value is <b>deprecated</b> and should no longer be used.
    /// 					
    /// </remarks>

    CombinedFixedPriceTreatment, 
    /// <remarks>
    /// 
    /// 						The Featured Gallery feature is deprecated, so specifying this value as a <b>FeatureID</b> value has no practical use.
    /// 					
    /// </remarks>

    GalleryFeaturedDurations, 
    /// <remarks>
    /// 
    /// 						This value is deprecated and should not be used.
    /// 					
    /// </remarks>

    PayPalRequired, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.eBayMotorsProAdFormatEnabled</b> and <b>Category.eBayMotorsProAdFormatEnabled</b> boolean fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site and individual categories allow motor vehicles to be sold through Classified Ads. This value is only applicable for eBay Motors Pro users.
    /// 					
    /// </remarks>

    eBayMotorsProAdFormatEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.eBayMotorsProContactByPhoneEnabled</b> and <b>Category.eBayMotorsProContactByPhoneEnabled</b> boolean fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site and individual categories allow eBay Motors Pro users to provide contact phone numbers within a Motor Vehicles Classified Ad listing. The <b>Category.eBayMotorsProPhoneCount</b> field indicates how many contact phone numbers are supported in each listing. This feature is only applicable to Motor Vehicles Classified Ad listings.
    /// 					
    /// </remarks>

    eBayMotorsProContactByPhoneEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.eBayMotorsProContactByAddressEnabled</b> and <b>Category.eBayMotorsProContactByAddressEnabled</b> boolean fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site and individual categories allow eBay Motors Pro users to provide contact street addresses within a Motor Vehicles Classified Ad listing. The <b>Category.eBayMotorsProStreetCount</b> field indicates how many contact street addresses are supported in each listing. This feature is only applicable to Motor Vehicles Classified Ad listings.
    /// 					
    /// </remarks>

    eBayMotorsProContactByAddressEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.eBayMotorsProCompanyNameEnabled</b> and <b>Category.eBayMotorsProCompanyNameEnabled</b> boolean fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site and individual categories allow eBay Motors Pro users to provide a company name within a Motor Vehicles Classified Ad listing. This feature is only applicable to Motor Vehicles Classified Ad listings.
    /// 					
    /// </remarks>

    eBayMotorsProCompanyNameEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.eBayMotorsProContactByEmailEnabled</b> and <b>Category.eBayMotorsProContactByEmailEnabled</b> boolean fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site and individual categories allow eBay Motors Pro users to provide a contact email address within a Motor Vehicles Classified Ad listing. This feature is only applicable to Motor Vehicles Classified Ad listings.
    /// 					
    /// </remarks>

    eBayMotorsProContactByEmailEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.eBayMotorsProBestOfferEnabled</b> and <b>Category.eBayMotorsProBestOfferEnabled</b> boolean fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site and individual categories support the Best Offer feature for Motor Vehicles Classified Ad listings.
    /// 					
    /// </remarks>

    eBayMotorsProBestOfferEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.eBayMotorsProAutoAcceptEnabled</b> and <b>Category.eBayMotorsProAutoAcceptEnabled</b> boolean fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site and individual categories support the Best Offer auto accept feature for Motor Vehicles Classified Ad listings. With the Best Offer auto accept feature, the seller sets a price threshold, and all Best Offers and counter offers at or above this price value are automatically accepted without any seller action. This feature is only applicable for Motor Vehicles Classified Ad listings, and is only available to eBay Motors Pro users.
    /// 					
    /// </remarks>

    eBayMotorsProAutoAcceptEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.eBayMotorsProAutoDeclineEnabled</b> and <b>Category.eBayMotorsProAutoDeclineEnabled</b> boolean fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site and individual categories support the Best Offer auto decline feature for Motor Vehicles Classified Ad listings. With the Best Offer auto decline feature, the seller sets a price threshold, and all Best Offers and counter offers below this price value are automatically declined without any seller action. This feature is only applicable for Motor Vehicles Classified Ad listings, and is only available to eBay Motors Pro users.
    /// 					
    /// </remarks>

    eBayMotorsProAutoDeclineEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.eBayMotorsProPaymentMethodCheckOutEnabled</b> and <b>Category.eBayMotorsProPaymentMethodCheckOutEnabled</b> fields in the <b>GetCategoryFeatures</b> response will indicate whether or not (and when) accepted payment methods are displayed to buyers for the specified eBay site and for individual categories. This feature is only applicable for Motor Vehicles Classified Ad listings, and is only available to eBay Motors Pro users.
    /// 					
    /// </remarks>

    eBayMotorsProPaymentMethodCheckOutEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.eBayMotorsProShippingMethodEnabled</b> and <b>Category.eBayMotorsProShippingMethodEnabled</b> boolean fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site and individual categories support the display of available shipping methods to buyers. This feature is only applicable for Motor Vehicles Classified Ad listings, and is only available to eBay Motors Pro users.
    /// 					
    /// </remarks>

    eBayMotorsProShippingMethodEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.eBayMotorsProCounterOfferEnabled</b> and <b>Category.eBayMotorsProCounterOfferEnabled</b> boolean fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site and individual categories support Best Offer counter offers for Motor Vehicles Classified Ad listings. This feature is only applicable for Motor Vehicles Classified Ad listings, and is only available to eBay Motors Pro users.
    /// 					
    /// </remarks>

    eBayMotorsProCounterOfferEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.eBayMotorsProSellerContactDetailsEnabled</b> and <b>Category.eBayMotorsProSellerContactDetailsEnabled</b> boolean fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site and individual categories allow the seller to provide contact information within a Motor Vehicles Classified Ad listing. This feature is only applicable for Motor Vehicles Classified Ad listings, and is only available to eBay Motors Pro users.
    /// 					
    /// </remarks>

    eBayMotorsProSellerContactDetailsEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.LocalMarketAdFormatEnabled</b> and <b>Category.LocalMarketAdFormatEnabled</b> fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site and individual categories allow motor vehicles to be sold through Local Market Classified Ads. Motors Local Market listings are only available to eBay sellers who are Licensed Vehicle Dealers on eBay.
    /// 					
    /// </remarks>

    LocalMarketAdFormatEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.LocalMarketContactByPhoneEnabled</b> and <b>Category.LocalMarketContactByPhoneEnabled</b> boolean fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site and individual categories allow eBay Licensed Vehicle Dealers to provide contact phone numbers within a Motors Local Market listing. The <b>Category.LocalMarketPhoneCount</b> field indicates how many contact phone numbers are supported in each listing. This feature is only applicable to Motors Local Market listings.
    /// 					
    /// </remarks>

    LocalMarketContactByPhoneEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.LocalMarketContactByAddressEnabled</b> and <b>Category.LocalMarketContactByAddressEnabled</b> boolean fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site and individual categories allow eBay Licensed Vehicle Dealers to provide contact street addresses within a Motors Local Market listing. This feature is only applicable to Motors Local Market listings.
    /// 					
    /// </remarks>

    LocalMarketContactByAddressEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.LocalMarketCompanyNameEnabled</b> and <b>Category.LocalMarketCompanyNameEnabled</b> boolean fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site and individual categories allow eBay Licensed Vehicle Dealers to provide a company name within a Motors Local Market listing. This feature is only applicable to Motors Local Market listings.
    /// 					
    /// </remarks>

    LocalMarketCompanyNameEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.LocalMarketContactByEmailEnabled</b> and <b>Category.LocalMarketContactByEmailEnabled</b> boolean fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site and individual categories allow eBay Licensed Vehicle Dealers to provide contact email addresses within a Motors Local Market listing. This feature is only applicable to Motors Local Market listings.
    /// 					
    /// </remarks>

    LocalMarketContactByEmailEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.LocalMarketBestOfferEnabled</b> and <b>Category.LocalMarketBestOfferEnabled</b> boolean fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site and individual categories support the Best Offer feature for Motors Local Market listings.
    /// 					
    /// </remarks>

    LocalMarketBestOfferEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.LocalMarketAutoAcceptEnabled</b> and <b>Category.LocalMarketAutoAcceptEnabled</b> boolean fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site and individual categories support the Best Offer auto accept feature for Motors Local Market listings. With the Best Offer auto accept feature, the seller sets a price threshold, and all Best Offers and counter offers at or above this price value are automatically accepted without any seller action. This feature is only applicable for Motors Local Market listings, and is only available to eBay Licensed Vehicle Dealers.
    /// 					
    /// </remarks>

    LocalMarketAutoAcceptEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.LocalMarketAutoDeclineEnabled</b> and <b>Category.LocalMarketAutoDeclineEnabled</b> boolean fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site and individual categories support the Best Offer auto decline feature for Motors Local Market listings. With the Best Offer auto decline feature, the seller sets a price threshold, and all Best Offers and counter offers below this price value are automatically declined without any seller action. This feature is only applicable for Motors Local Market listings, and is only available to eBay Licensed Vehicle Dealers.
    /// 					
    /// </remarks>

    LocalMarketAutoDeclineEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.LocalMarketPaymentMethodCheckOutEnabled</b> and <b>Category.LocalMarketPaymentMethodCheckOutEnabled</b> fields in the <b>GetCategoryFeatures</b> response will indicate whether or not (and when) accepted payment methods are displayed to buyers for the specified eBay site and for individual categories. This feature is only applicable for Motors Local Market listings, and is only available to eBay Licensed Vehicle Dealers.
    /// 					
    /// </remarks>

    LocalMarketPaymentMethodCheckOutEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.LocalMarketShippingMethodEnabled</b> and <b>Category.LocalMarketShippingMethodEnabled</b> boolean fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site and individual categories support the display of available shipping methods to buyers. This feature is only applicable for Motors Local Market listings, and is only available to eBay Licensed Vehicle Dealers.
    /// 					
    /// </remarks>

    LocalMarketShippingMethodEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.LocalMarketCounterOfferEnabled</b> and <b>Category.LocalMarketCounterOfferEnabled</b> boolean fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site and individual categories support Best Offer counter offers for Motors Local Market listings. This feature is only applicable for Motors Local Market listings, and is only available to eBay Licensed Vehicle Dealers.
    /// 					
    /// </remarks>

    LocalMarketCounterOfferEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.LocalMarketSellerContactDetailsEnabled</b> and <b>Category.LocalMarketSellerContactDetailsEnabled</b> boolean fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site and individual categories allow the seller to provide contact information within a Motors Local Market listing. This feature is only applicable for Motors Local Market listings, and is only available to eBay Licensed Vehicle Dealers.
    /// 					
    /// </remarks>

    LocalMarketSellerContactDetailsEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.ClassifiedAdContactByAddressEnabled</b> and <b>Category.ClassifiedAdContactByAddressEnabled</b> boolean fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site and individual categories allow sellers to provide contact street addresses within a Classified Ad listing. The <b>Category.ClassifiedAdStreetCount</b> field indicates how many street addresses are allowed in each listing. This feature is only applicable to Classified Ad listings.
    /// 					
    /// </remarks>

    ClassifiedAdContactByAddressEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.ClassifiedAdCompanyNameEnabled</b> and <b>Category.ClassifiedAdCompanyNameEnabled</b> boolean fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site and individual categories allow sellers to provide a company name within a Classified Ad listing. This feature is only applicable to Classified Ad listings.
    /// 					
    /// </remarks>

    ClassifiedAdCompanyNameEnabled, 
    /// <remarks>
    /// 
    /// 						This value is <b>deprecated</b> and should no longer be used.
    /// 					
    /// </remarks>

    SpecialitySubscription, 
    /// <remarks>
    /// 
    /// 						This value is <b>deprecated</b> and should no longer be used.
    /// 					
    /// </remarks>

    RegularSubscription, 
    /// <remarks>
    /// 
    /// 						This value is <b>deprecated</b> and should no longer be used.
    /// 					
    /// </remarks>

    PremiumSubscription, 
    /// <remarks>
    /// 
    /// 						This value is <b>deprecated</b> and should no longer be used.
    /// 					
    /// </remarks>

    NonSubscription, 
    /// <remarks>
    /// 
    /// 						This value is <b>deprecated</b> and should no longer be used.
    /// 					
    /// </remarks>

    IntangibleEnabled, 
    /// <remarks>
    /// 
    /// 						This value is <b>deprecated</b> and should no longer be used.
    /// 					
    /// </remarks>

    PayPalRequiredForStoreOwner, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.ReviseQuantityAllowed</b> and <b>Category.ReviseQuantityAllowed</b> boolean fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site and individual categories allow sellers to revise quantity in a multi-quantity, fixed-price listing while the listing is in a semi- or fully-restricted mode (such as when the listing already has sales or when the listing is scheduled to end within 12 hours). This value is only applicable to fixed-price listings.
    /// 					
    /// </remarks>

    ReviseQuantityAllowed, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.RevisePriceAllowed</b> and <b>Category.RevisePriceAllowed</b> boolean fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site and individual categories allow sellers to revise the price in a fixed-price listing while the listing is in a semi- or fully-restricted mode (such as when the listing already has sales or when the listing is scheduled to end within 12 hours). This value is only applicable to fixed-price listings.
    /// 					
    /// </remarks>

    RevisePriceAllowed, 
    /// <remarks>
    /// 
    /// 						The feature associated with this value is deprecated, so specifying this value as a <b>FeatureID</b> value has no practical use.
    /// 					
    /// </remarks>

    StoreOwnerExtendedListingDurationsEnabled, 
    /// <remarks>
    /// 
    /// 						The feature associated with this value is deprecated, so specifying this value as a <b>FeatureID</b> value has no practical use.
    /// 					
    /// </remarks>

    StoreOwnerExtendedListingDurations, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.ReturnPolicyEnabled</b> and <b>Category.ReturnPolicyEnabled</b> boolean fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site and individual categories allow eBay sellers to create a return policy for the listing.
    /// 					
    /// </remarks>

    ReturnPolicyEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.HandlingTimeEnabled</b> and <b>Category.HandlingTimeEnabled</b> boolean fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site and individual categories require eBay sellers to set a handling time for products sold within the listing. The handling time is the maximum number of business days the seller commits to for preparing an item to be shipped after receiving a cleared payment. The seller's handling time does not include the shipping time (the carrier's transit time).
    /// 					
    /// </remarks>

    HandlingTimeEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.PaymentMethod</b> and <b>SiteDefaults.PaymentMethod</b> fields in the <b>GetCategoryFeatures</b> response will indicate the accepted payment methods at the eBay site level and within the individual categories.
    /// 					
    /// </remarks>

    PaymentMethods, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>Category.MaxFlatShippingCost</b> fields in the <b>GetCategoryFeatures</b> response will indicate the maximum flat-rate shipping costs that the seller may charge the buyer to ship one item domestically. At least one available shipping service option has to be under this value. Handling cost (if any) goes toward this maximum cost threshold.
    /// 					
    /// </remarks>

    MaxFlatShippingCost, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.MaxFlatShippingCostCBTExempt</b> boolean field in the <b>GetCategoryFeatures</b> response will indicate whether or not sellers, who sell items to domestic buyers, but are shipping the item from another country, are exempt from the <b>MaxFlatShippingCost</b> threshold.
    /// 					
    /// </remarks>

    MaxFlatShippingCostCBTExempt, 
    /// <remarks>
    /// 
    /// 						The feature associated with this value is deprecated, so specifying this value as a <b>FeatureID</b> value has no practical use.
    /// 					
    /// </remarks>

    Group1MaxFlatShippingCost, 
    /// <remarks>
    /// 
    /// 						The feature associated with this value is deprecated, so specifying this value as a <b>FeatureID</b> value has no practical use.
    /// 					 
    /// </remarks>

    Group2MaxFlatShippingCost, 
    /// <remarks>
    /// 
    /// 						The feature associated with this value is deprecated, so specifying this value as a <b>FeatureID</b> value has no practical use.
    /// 					
    /// </remarks>

    Group3MaxFlatShippingCost, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.VariationsEnabled</b> and <b>Category.VariationsEnabled</b> boolean fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site and individual categories support multi-variation listings. Variations are items within the same listing that are logically the same product, but differ slightly in size, color, or other aspect.
    /// 					
    /// </remarks>

    VariationsEnabled, 
    /// <remarks>
    /// 
    /// 						This value is <b>deprecated</b> and should no longer be used.
    /// 					
    /// </remarks>

    AttributeConversionEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.FreeGalleryPlusEnabled</b> and <b>Category.FreeGalleryPlusEnabled</b> boolean fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site and individual categories support a free Gallery Plus upgrade. The Gallery Plus feature includes the picture zoom-in option (when you hover the mouse over the picture) and the ability to enlarge the photo by clicking a link.
    /// 					
    /// </remarks>

    FreeGalleryPlusEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.FreePicturePackEnabled</b> and <b>Category.FreePicturePackEnabled</b> boolean fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site and individual categories support a free Picture Pack upgrade. The Picture Pack feature is only available for eBay Motors vehicle listings. The Picture Pack feature includes up to 12 supersized photos with the zoom-in feature enabled for each one.
    /// 					
    /// </remarks>

    FreePicturePackEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.ItemCompatibilityEnabled</b> and <b>Category.ItemCompatibilityEnabled</b> fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site and individual categories support the Parts Compatibility feature, and if so, the mode of compatibility that is used (by application or by specification). The Parts Compatibility feature allows sellers to list their motor vehicles parts and accessories items with parts compatibility name-value pairs specific to motor vehicles, and allows potential buyers to search for these items using parts compatibility search fields.
    /// 					
    /// </remarks>

    CompatibilityEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the  <b>Category.MinCompatibleApplications</b> fields in the <b>GetCategoryFeatures</b> response will indicate the minimum number of compatible applications that must be specified when listing a motor vehicle part or accessory in the given category.
    /// 					
    /// </remarks>

    MinCompatibleApplications, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the  <b>Category.MaxCompatibleApplications</b> fields in the <b>GetCategoryFeatures</b> response will indicate the maximum number of compatible applications that can be specified when listing a motor vehicle part or accessory in the given category.
    /// 					
    /// </remarks>

    MaxCompatibleApplications, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>Category.ConditionEnabled</b> fields in the <b>GetCategoryFeatures</b> response will indicate which individual categories support (and even require) the use of <b>ConditionID</b> values to specify the condition of an item within a listing.
    /// 					
    /// </remarks>

    ConditionEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the  <b>Category.Condition</b> containers in the <b>GetCategoryFeatures</b> response will include Condition ID values and item conditions like 'Very Good', 'Acceptable', 'Used', etc. for all categories that support the use of Condition ID values.
    /// 					
    /// </remarks>

    ConditionValues, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the  <b>Category.ValueCategory</b> boolean fields in the <b>GetCategoryFeatures</b> response will indicate the categories that are considered by eBay to be 'Value Categories'. 'Value Categories' are generally categories where buyers can find good deals on items. If sellers decide to list within a value category, only this category may be used, and a secondary category is not supported.
    /// 					
    /// </remarks>

    ValueCategory, 
    /// <remarks>
    /// 
    /// 						This value is <b>deprecated</b> and should no longer be used.
    /// 					
    /// </remarks>

    ProductCreationEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>Category.EANEnabled</b> fields in the <b>GetCategoryFeatures</b> response will indicate whether or not items listed in the corresponding category may utilize EANs to identify a product. A value of <code>Disabled</code> indicates that EANs cannot be used for the category, a value of <code>Enabled</code> indicates that EANs can be used for the category, and a value of <code>Required</code> indicates that an EAN is required when listing a product in this category.
    /// 					
    /// </remarks>

    EANEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>Category.ISBNEnabled</b> fields in the <b>GetCategoryFeatures</b> response will indicate whether or not items listed in the corresponding category may utilize ISBNs to identify a product. A value of <code>Disabled</code> indicates that ISBNs cannot be used for the category, a value of <code>Enabled</code> indicates that ISBNs can be used for the category, and a value of <code>Required</code> indicates that an ISBN is required when listing a product in this category.
    /// 					
    /// </remarks>

    ISBNEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>Category.UPCEnabled</b> fields in the <b>GetCategoryFeatures</b> response will indicate whether or not items listed in the corresponding category may utilize UPCs to identify a product. A value of <code>Disabled</code> indicates that UPCs cannot be used for the category, a value of <code>Enabled</code> indicates that UPCs can be used for the category, and a value of <code>Required</code> indicates that a UPC is required when listing a product in this category.
    /// 					
    /// </remarks>

    UPCEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>Category.MaxGranularFitmentCount</b> fields in the <b>GetCategoryFeatures</b> response will indicate how many Parts Compatibility name-value pairs may be passed in for each motor vehicle aspect (Year, Make, and Model) in a motor vehicle parts and accessory listing. granularity. This field is only applicable to motor vehicle parts and accessory listings.
    /// 					
    /// </remarks>

    MaxGranularFitmentCount, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>Category.CompatibleVehicleType</b> fields in the <b>GetCategoryFeatures</b> response will indicate the type of vehicle that parts compatibility name-value pairs in a listing will be referring to, such as 'cars and trucks', 'all-terrain vehicles (ATV)', 'boats', and 'motorcycles'. This field is only applicable to motor vehicle parts and accessory listings.
    /// 					
    /// </remarks>

    CompatibleVehicleType, 
    /// <remarks>
    /// 
    /// 						This value is <b>deprecated</b> and should no longer be used.
    /// 					
    /// </remarks>

    PaymentOptionsGroup, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>Category.ShippingProfileCategoryGroup</b> fields in the <b>GetCategoryFeatures</b> response will indicate which shipping business policy category group that each category will inherit as the default category group. Currently, there are only two Business Policies category groups - 'MOTORS_VEHICLE' covers all motor-vehicle related categories, and 'ALL' covers all other categories.
    /// 					
    /// </remarks>

    ShippingProfileCategoryGroup, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>Category.PaymentProfileCategoryGroup</b> fields in the <b>GetCategoryFeatures</b> response will indicate which payment business policy category group that each category will inherit as the default category group. Currently, there are only two Business Policies category groups - 'MOTORS_VEHICLE' covers all motor-vehicle related categories, and 'ALL' covers all other categories.
    /// 					
    /// </remarks>

    PaymentProfileCategoryGroup, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>Category.ReturnPolicyProfileCategoryGroup</b> fields in the <b>GetCategoryFeatures</b> response will indicate which return policy business policy category group that each category will inherit as the default category group. Currently, there are only two Business Policies category groups - 'MOTORS_VEHICLE' covers all motor-vehicle related categories, and 'ALL' covers all other categories.
    /// 					
    /// </remarks>

    ReturnPolicyProfileCategoryGroup, 
    /// <remarks>
    /// 
    /// 						This value is <b>deprecated</b> and should no longer be used.
    /// 					
    /// </remarks>

    VINSupported, 
    /// <remarks>
    /// 
    /// 						This value is <b>deprecated</b> and should no longer be used.
    /// 					
    /// </remarks>

    VRMSupported, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.SellerProvidedTitleSupported</b> and <b>Category.SellerProvidedTitleSupported</b> fields in the <b>GetCategoryFeatures</b> response will indicate if the eBay site and individual categories support the use of a seller-provided title for a motor vehicle listing on the US or Canada Motors marketplaces. A seller-provided title is a descriptive title, given by the seller, that appears below eBay's pre-filled listing title for the motor vehicle.
    /// 					
    /// </remarks>

    SellerProvidedTitleSupported, 
    /// <remarks>
    /// 
    /// 						This value is <b>deprecated</b> and should no longer be used.
    /// 					
    /// </remarks>

    DepositSupported, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.GlobalShippingEnabled</b> and <b>Category.GlobalShippingEnabled</b> fields in the <b>GetCategoryFeatures</b> response will indicate if the eBay site and individual categories support the Global Shipping Program (GSP) as a means for shipping items internationally. The GSP feature is only applicable to shipping items internationally.
    /// 					
    /// </remarks>

    GlobalShippingEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>SiteDefaults.AdditionalCompatibilityEnabled</b> and <b>Category.AdditionalCompatibilityEnabled</b> fields in the <b>GetCategoryFeatures</b> response will indicate whether or not the specified eBay site and individual categories support the second-generation Parts Compatibility feature where parts-compatibility name-value pairs can be passed in for boats, motorcycles, and other vehicles instead of just cars and trucks. This feature is only applicable to motor vehicle parts and accessory listings.
    /// 					
    /// </remarks>

    AdditionalCompatibilityEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>Category.PickupDropOffEnabled</b> fields in the <b>GetCategoryFeatures</b> response will indicate that items listed in the corresponding category may be enabled with the 'Click and Collect' feature. With the 'Click and Collect' feature, a buyer can purchase certain items on the eBay site and collect them at a local store. Buyers are notified by eBay once their items are available. A <code>false</code> value in this field indicates that items listed in the category are not eligible for the 'Click and Collect' feature.
    /// 						<br/><br/>
    /// 						The 'Click and Collect' feature is only available to large merchants on the eBay UK (site ID - 3), eBay Australia (Site ID - 15), and eBay Germany (Site ID - 77) sites.
    /// 					
    /// </remarks>

    PickupDropOffEnabled, 
    /// <remarks>
    /// 
    /// 						If this value is specified, the <b>Category.DigitalGoodDeliveryEnabled</b> fields in the <b>GetCategoryFeatures</b> response will indicate that digital gift cards can be listed in the corresponding category. A <code>false</code> value in this field indicates that digital gift cards may not be listed in the category.
    /// 						<br/><br/>
    /// 						Digital gift cards are currently only supported on the US site. There are some restrictions when it comes to selling gift cards, including the following:
    /// 						
    /// 
    /// 
    /// 						<ul>
    /// 						<li>Each seller can only have one gift card listing at any given time;</li>
    /// 						<li>The maximum dollar value of the gift card may not exceed 500.00; and</li>
    /// 						<li>prepaid credit cards from American Express, Discover, MasterCard, or Visa are not allowed.</li>
    /// 						</ul>
    /// 						For more information on eBay's Gift Card policy, see the <a href="http://pages.ebay.com/help/policies/gift.html">Gift cards policy</a> Help page.
    /// 					
    /// </remarks>

    DigitalGoodDeliveryEnabled, 
    /// <remarks>
    /// 
    /// 						This value is used to see if an eBay Product ID (e.g. ePID) can be used in an Add/Revise/Relist API call to identify which motorcycles and/or scooters are compatible with a motor vehicle part or accessory is supported. ePIDs can only be used to identify motorcycles and scooters on the Germany and UK sites.
    /// 						<br/><br/>
    ///             For more information on using an ePID to identify a compatible motorcycle or scooter through an Add/Revise/Relist API call on the Germany or UK site, see the documentation for the <a href="
    ///             https://developer.ebay.com/Devzone/XML/docs/Reference/eBay/AddItem.html#Request.Item.ItemCompatibilityList.Compatibility.NameValueList">Compatibility.NameValueList</a> container.
    /// 					
    /// </remarks>

    EpidSupported, 
    /// <remarks>
    /// 
    /// 						This value is used to see if a K Type vehicle number in an Add/Revise/Relist API call to identify which cars and/or trucks are compatible with a motor vehicle part or accessory is supported. K type vehicle numbers can only be used to identify cars and trucks on the Germany site.
    /// 						<br/><br/>
    ///             For more information on using a K Type vehicle number to identify a compatible car or truck through an Add/Revise/Relist API call on the Germany site, see the documentation for the <a href="
    ///             https://developer.ebay.com/Devzone/XML/docs/Reference/eBay/AddItem.html#Request.Item.ItemCompatibilityList.Compatibility.NameValueList">Compatibility.NameValueList</a> container.
    /// 					
    /// </remarks>

    KTypeSupported, 
    /// <remarks>
    /// 
    /// 						The feature associated with this value is deprecated, so specifying this value as a <b>FeatureID</b> value has no practical use.
    /// 					
    /// </remarks>

    ProductRequiredEnabled, 
    /// <remarks>
    /// 
    /// 						Use this ID to return the values you can specify for whether or not a seller accepts domestic returns.
    ///             <br><br>
    ///             The values returned in this field are pertinent only if <b>ReturnPolicyEnabled</b> in GetCategoryFeatures is set to <code>true</code> for the associated marketplace and category.
    ///             <br><br>
    /// 						<span class="tablenote"><b>Note:</b> 
    /// 							Sellers have the option of using the same return policy settings for both domestic and international returns, or different settings for domestic and international return policies. To see the supported returns accepted options for international returns, the <b>InternationalReturnsAcceptedValues</b> enum should be used.
    /// 						</span>
    /// 					
    /// </remarks>

    DomesticReturnsAcceptedValues, 
    /// <remarks>
    /// 
    /// 						Use this ID to return the values you can specify for whether or not a seller accepts international returns.
    ///             <br><br>
    ///             The values returned in this field are pertinent only if <b>ReturnPolicyEnabled</b> in GetCategoryFeatures is set to <code>true</code> for the associated marketplace and category.
    ///             <br><br>
    /// 						<span class="tablenote"><b>Note:</b> 
    /// 							Sellers have the option of using the same return policy settings for both domestic and international returns, or different settings for domestic and international return policies. To see the supported returns accepted options for domestic returns, the <b>DomesticReturnsAcceptedValues</b> enum should be used.
    /// 						</span>
    /// 					
    /// </remarks>

    InternationalReturnsAcceptedValues, 
    /// <remarks>
    /// 
    /// 						Use this ID to return the values you can specify for the return duration for domestic returns.
    ///             <br><br>
    ///             The values returned in this field are pertinent only if <b>ReturnPolicyEnabled</b> in GetCategoryFeatures is set to <code>true</code> for the associated marketplace and category.
    ///             <br><br>
    /// 						<span class="tablenote"><b>Note:</b> 
    /// 							Sellers have the option of using the same return policy settings for both domestic and international returns, or different settings for domestic and international return policies. To see the supported return windows for international returns, the <b>InternationalReturnsDurationValues</b> enum should be used.
    /// 						</span>
    /// 					
    /// </remarks>

    DomesticReturnsDurationValues, 
    /// <remarks>
    /// 
    /// 						Use this ID to return the values you can specify for the return duration for international returns.
    ///             <br><br>
    ///             The values returned in this field are pertinent only if <b>ReturnPolicyEnabled</b> in GetCategoryFeatures is set to <code>true</code> for the associated marketplace and category.
    ///             <br><br>
    /// 						<span class="tablenote"><b>Note:</b> 
    /// 							Sellers have the option of using the same return policy settings for both domestic and international returns, or different settings for domestic and international return policies. To see the supported return windows for domestic returns, the <b>DomesticReturnsDurationValues</b> enum should be used.
    /// 						</span>
    /// 					
    /// </remarks>

    InternationalReturnsDurationValues, 
    /// <remarks>
    /// 
    /// 						Use this ID to return the values you can specify for who pays any return shipping costs for domestic returns.
    ///             <br><br>
    ///             The values returned in this field are pertinent only if <b>ReturnPolicyEnabled</b> in GetCategoryFeatures is set to <code>true</code> for the associated marketplace and category.
    ///             <br><br>
    /// 						<span class="tablenote"><b>Note:</b> 
    /// 							Sellers have the option of using the same return policy settings for both domestic and international returns, or different settings for domestic and international return policies. To see the supported return shipment payee values for international returns, the <b>InternationalReturnsShipmentPayeeValues</b> enum should be used.
    /// 						</span>
    /// 					
    /// </remarks>

    DomesticReturnsShipmentPayeeValues, 
    /// <remarks>
    /// 
    /// 						Use this ID to return the values you can specify for who pays any return shipping costs for international returns.
    ///             <br><br>
    ///             The values returned in this field are pertinent only if <b>ReturnPolicyEnabled</b> in GetCategoryFeatures is set to <code>true</code> for the associated marketplace and category.
    ///             <br><br>
    /// 						<span class="tablenote"><b>Note:</b> 
    /// 							Sellers have the option of using the same return policy settings for both domestic and international returns, or different settings for domestic and international return policies. To see the supported return shipment payee values for domestic returns, the <b>DomesticReturnsShipmentPayeeValues</b> enum should be used.
    /// 						</span>
    /// 					
    /// </remarks>

    InternationalReturnsShipmentPayeeValues, 
    /// <remarks>
    /// 
    /// 						In US, sellers can offer item replacement in addition to offering a money-back refund for domestic returns. Use this ID to return whether or not the seller can offer <code>MoneyBackorReplacement</code> for the specified category.
    ///             <br><br>
    ///             The values returned in this field are pertinent only if <b>ReturnPolicyEnabled</b> in GetCategoryFeatures is set to <code>true</code> for the associated marketplace and category.
    ///             <br><br>
    /// 						<span class="tablenote"><b>Note:</b> 
    /// 							Sellers have the option of using the same return policy settings for both domestic and international returns, or different settings for domestic and international return policies. To see the supported refund method options for international returns, the <b>InternationalRefundMethodValues</b> enum should be used.
    /// 						</span>
    /// 					
    /// </remarks>

    DomesticRefundMethodValues, 
    /// <remarks>
    /// 
    /// 						In US, sellers can offer item replacement in addition to offering a money-back refund for international returns. Use this ID to return whether or not the seller can offer <code>MoneyBackorReplacement</code> for the specified category.
    ///             <br><br>
    ///             The values returned in this field are pertinent only if <b>ReturnPolicyEnabled</b> in GetCategoryFeatures is set to <code>true</code> for the associated marketplace and category.
    ///             <br><br>
    /// 						<span class="tablenote"><b>Note:</b> 
    /// 							Sellers have the option of using the same return policy settings for both domestic and international returns, or different settings for domestic and international return policies. To see the supported refund method options for domestic returns, the <b>DomesticRefundMethodValues</b> enum should be used.
    /// 						</span>
    /// 					
    /// </remarks>

    InternationalRefundMethodValues, 
    /// <remarks>
    /// 
    /// 						In some EU countries, sellers are legally required to describe the return policy they offer. The value returned by this field indicates if sellers can provide such description within the given marketplace and category.
    ///             <br><br>
    ///             The values returned in this field are pertinent only if <b>ReturnPolicyEnabled</b> in GetCategoryFeatures is set to <code>true</code> for the associated marketplace and category.
    /// 					
    /// </remarks>

    ReturnPolicyDescriptionEnabled
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Enumerated type that indicates if the Featured First listing upgrade is enabled for the specified site, and whether it is restricted to a specific seller level.
/// 				<br/><br/>
/// 				<span class="tablenote"><strong>Note:</strong>
/// 					The Featured First listing upgrade can no longer be added for new listings in any eBay marketplace.
/// 				</span>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum FeaturedFirstCodeType
{
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the Featured First listing upgrade is enabled for all sellers on the site.
    /// 					
    /// </remarks>

    Enabled, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the Featured First listing upgrade is not available for any sellers on the site.
    /// 					
    /// </remarks>

    Disabled, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the Featured First listing upgrade is only enabled for Power Sellers on the site.
    /// 					
    /// </remarks>

    PowerSellerOnly, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the Featured First listing upgrade is only enabled for Top-Rated Sellers on the site.
    /// 					
    /// </remarks>

    TopRatedSellerOnly, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Enumerated type that indicates if the Featured Plus listing upgrade is enabled for the specified site, and whether it is restricted to a specific seller level.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum FeaturedPlusCodeType
{
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the Featured Plus listing upgrade is enabled for all sellers on the site.
    /// 					
    /// </remarks>

    Enabled, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the Featured Plus listing upgrade is not available for any sellers on the site.
    /// 					
    /// </remarks>

    Disabled, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the Featured Plus listing upgrade is only enabled for Power Sellers on the site.
    /// 					
    /// </remarks>

    PowerSellerOnly, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the Featured Plus listing upgrade is only enabled for Top-Rated Sellers on the site.
    /// 					
    /// </remarks>

    TopRatedSellerOnly, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumerated type consists of the different Federal Express shipping rates that sellers can offer to buyers. The shipping rates for the major US shipping carriers can be selected in the Shipping rate preferences in My eBay, or through the <b>SetUserPreferences</b> call.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum FedExRateOptionCodeType
{
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the seller offers buyers the standard Federal Express shipping rates.
    /// 					
    /// </remarks>

    FedExStandardList, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the seller offers buyers Federal Express counter rates.
    /// 					
    /// </remarks>

    FedExCounter, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the seller offers buyers discounted Federal Express shipping rates. Buyers will get these discounted shipping rates as long as they use the eBay-generated shipping labels.
    /// 					
    /// </remarks>

    FedExDiscounted, 
    /// <remarks>
    /// 
    /// 						 Reserved for internal or future use
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Applicable to sites that support the Detailed Seller Ratings feature.
/// 				The FeedbackRatingDetailCodeType is the list of areas for detailed seller ratings. When buyers leave an overall Feedback rating (positive, neutral, or negative) for a seller, they also can leave ratings in four areas: item as described, communication, shipping time, and charges for shipping and handling. Users retrieve detailed ratings as averages of the ratings left by buyers.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum FeedbackRatingDetailCodeType
{
    /// <remarks>
    /// 
    /// 						Detailed seller rating in the area of "item as described."
    /// 					
    /// </remarks>

    ItemAsDescribed, 
    /// <remarks>
    /// 
    /// 						Detailed seller rating in the area of "communication."
    /// 					
    /// </remarks>

    Communication, 
    /// <remarks>
    /// 
    /// 						Detailed seller rating in the area of "shipping time." Inapplicable to
    /// 						motor vehicle items.
    /// 					
    /// </remarks>

    ShippingTime, 
    /// <remarks>
    /// 
    /// 						Detailed seller rating in the area of "charges for shipping and handling."
    /// 						Inapplicable to motor vehicle items.
    /// 					
    /// </remarks>

    ShippingAndHandlingCharges, 
    /// <remarks>
    /// 
    /// 						(out) Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				The color of a feedback score star visually denotes the
/// 				range in which the member's summary feedback score falls. The score
/// 				is the net positive feedback minus the net negative feedback left
/// 				for the member.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum FeedbackRatingStarCodeType
{
    /// <remarks>
    /// 
    /// 						No graphic displayed, feedback score 0-9.
    /// 					
    /// </remarks>

    None, 
    /// <remarks>
    /// 
    /// 						Yellow Star, feedback score 10-49.
    /// 					
    /// </remarks>

    Yellow, 
    /// <remarks>
    /// 
    /// 						Blue Star, feedback score 50-99.
    /// 					
    /// </remarks>

    Blue, 
    /// <remarks>
    /// 
    /// 						Turquoise Star, feedback score 100-499.
    /// 					
    /// </remarks>

    Turquoise, 
    /// <remarks>
    /// 
    /// 						Purple Star, feedback score 500-999.
    /// 					
    /// </remarks>

    Purple, 
    /// <remarks>
    /// 
    /// 						Red Star, feedback score 1,000-4,999
    /// 					
    /// </remarks>

    Red, 
    /// <remarks>
    /// 
    /// 						Green Star, feedback score 5,000-9,999.
    /// 					
    /// </remarks>

    Green, 
    /// <remarks>
    /// 
    /// 						Yellow Shooting Star, feedback score 10,000-24,999.
    /// 					
    /// </remarks>

    YellowShooting, 
    /// <remarks>
    /// 
    /// 						Turquoise Shooting Star, feedback score 25,000-49,999.
    /// 					
    /// </remarks>

    TurquoiseShooting, 
    /// <remarks>
    /// 
    /// 						Purple Shooting Star, feedback score 50,000-99,999.
    /// 					
    /// </remarks>

    PurpleShooting, 
    /// <remarks>
    /// 
    /// 						Red Shooting Star, feedback score 100,000-499,999.
    /// 					
    /// </remarks>

    RedShooting, 
    /// <remarks>
    /// 
    /// 						Green Shooting Star, feedback score 500,000-999,999.
    /// 					
    /// </remarks>

    GreenShooting, 
    /// <remarks>
    /// 
    /// 						Silver Shooting Star, feedback score 1,000,000 and above.
    /// 					
    /// </remarks>

    SilverShooting, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumerated type is used to indicate the type of response to a Feedback entry.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum FeedbackResponseCodeType
{
    /// <remarks>
    /// 
    /// 						This enumeration value is used in the <b>ResponseType</b> field of a <b>RespondToFeedback</b> call if the user is replying to a Feedback entry left by another user.
    /// 					
    /// </remarks>

    Reply, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used in the <b>ResponseType</b> field of a <b>RespondToFeedback</b> call if the user is following up on a Feedback entry comment left by another user.
    /// 					
    /// </remarks>

    FollowUp, 
    /// <remarks>
    /// 
    /// 						Reserved for future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumerated type is used to indicate the length of the time period for which Detailed Seller Ratings are evaluated under the <b>AverageRatingSummary</b> container returned in the <b>GetFeedback</b> call.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum FeedbackSummaryPeriodCodeType
{
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the Detailed Seller Rating statistics shown under each <b>AverageRatingDetails</b> container were compiled over the last 30 days.
    /// 					
    /// </remarks>

    ThirtyDays, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the Detailed Seller Rating statistics shown under each <b>AverageRatingDetails</b> container were compiled over the last 52 weeks, or one year.
    /// 					
    /// </remarks>

    FiftyTwoWeeks, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumerated type consists of the values that may be used in the request of a <b>GetFeedback</b> call in order to retrieve a specific type of Feedback.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum FeedbackTypeCodeType
{
    /// <remarks>
    /// 
    /// 						This enumeration value will be used in the <b>FeedbackType</b> field of a <b>GetFeedback</b> call if the user only wants to retrieve the Feedback data that they have received acting as a seller.
    /// 					
    /// </remarks>

    FeedbackReceivedAsSeller, 
    /// <remarks>
    /// 
    /// 						This enumeration value will be used in the <b>FeedbackType</b> field of a <b>GetFeedback</b> call if the user only wants to retrieve the Feedback data that they have received acting as a buyer.
    /// 					
    /// </remarks>

    FeedbackReceivedAsBuyer, 
    /// <remarks>
    /// 
    /// 						This enumeration value will be used in the <b>FeedbackType</b> field of a <b>GetFeedback</b> call if the user wants to retrieve the Feedback data that they have received acting as a seller and buyer.
    /// 					
    /// </remarks>

    FeedbackReceived, 
    /// <remarks>
    /// 
    /// 						This enumeration value will be used in the <b>FeedbackType</b> field of a <b>GetFeedback</b> call if the user wants to retrieve the Feedback they have left for their order partners while acting as a seller or buyer.
    /// 					
    /// </remarks>

    FeedbackLeft, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumerated type contains values that indicate the current status of the seller's account for the fee netting mechanism. With fee netting, some selling fees like final value fee and payment processing fee will be deducted from seller payouts instead of eBay invoicing the seller for the fees.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum FeenettingStatusCodeType
{
    /// <remarks>
    /// 
    /// 						This value indicates that the account is enabled for the fee netting mechanism. If a user sees this value, the <b>GetAccount</b> response will include the <b>AccountSummary.NettedTransactionSummary</b> container and the <b>AccountEntry.Netted</b> boolean field for each account entry.
    /// 					
    /// </remarks>

    Enabled, 
    /// <remarks>
    /// 
    /// 						This value indicates that the account is not enabled for the fee netting mechanism. .
    /// 					
    /// </remarks>

    Disabled, 
    /// <remarks>
    /// 
    /// 						This value indicates that the account is exempted from the fee netting mechanism.
    /// 					
    /// </remarks>

    Exempted
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
///         Enumeration type that returns the status of the gallery image generation. That status returns either a value of 'Success' or a value that indicates why the gallery image has not been generated.
///       
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum GalleryStatusCodeType
{
    /// <remarks>
    /// 
    ///             The Gallery image was successfully generated.
    ///           
    /// </remarks>

    Success, 
    /// <remarks>
    /// 
    ///             The Gallery image has not yet been generated.
    ///           
    /// </remarks>

    Pending, 
    /// <remarks>
    /// 
    ///             The URL for the image file is not valid.
    ///           
    /// </remarks>

    InvalidUrl, 
    /// <remarks>
    /// 
    ///             The URL does not start with <code>http:// </code> or <code>https:// </code>.
    ///           
    /// </remarks>

    InvalidProtocol, 
    /// <remarks>
    /// 
    ///             There is a problem with the image file.
    ///           
    /// </remarks>

    InvalidFile, 
    /// <remarks>
    /// 
    ///             The server containing the image file was unavailable.
    ///           
    /// </remarks>

    ServerDown, 
    /// <remarks>
    /// 
    ///             The image file could not be found.
    ///           
    /// </remarks>

    ImageNonExistent, 
    /// <remarks>
    /// 
    ///             The image file failed to transfer.
    ///           
    /// </remarks>

    ImageReadTimeOut, 
    /// <remarks>
    /// 
    ///             The image file is not in JPG, BMP, GIF, TIF, or PNG format.
    ///           
    /// </remarks>

    InvalidFileFormat, 
    /// <remarks>
    /// 
    ///             We were not able to process the image file.
    ///           
    /// </remarks>

    ImageProcessingError, 
    /// <remarks>
    /// 
    ///             Reserved for internal <b>only</b>.
    ///           
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// Featured
/// </summary>
/// <remarks>
/// 
/// 				Indicates which Gallery image enhancements to apply to the listing.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum GalleryTypeCodeType
{
    /// <remarks>
    /// 
    /// 						Gallery is supported free on all sites. So this field is useful only for removing an existing feature setting when using <b>RelistItem</b>.
    /// 					
    /// </remarks>

    None, 
    /// <remarks>
    /// 
    /// 						Highlights the listing by randomly placing it at the top of the search results.
    /// 						When the Featured First listing upgrade is selected for an item listing, the listing also automatically gets the
    /// 						Gallery and Plus functionality at no extra cost.
    /// 						<br><br>
    /// 						A user can see if a site supports the Featured First listing upgrade by using the <b>GeteBayDetails</b> call and passing in <code>ListingFeatureDetails</code> in the <b>DetailName</b> field. In the response, the value of the <b>ListingFeatureDetails.FeaturedFirst</b> field will show a value other than <code>Disabled</code> if the eBay site supports the Featured First listing upgrade.
    /// 						<br/><br/>
    /// 						<span class="tablenote"><strong>Note:</strong>
    /// 							The Featured First listing upgrade can no longer be used for new listings or revising existing listings in any eBay marketplace. If this value is used in an Add/Revise/Relist call, sellers will get a warning message about this value/feature being deprecated.
    /// 						</span>
    /// 					
    /// </remarks>

    Featured, 
    /// <remarks>
    /// 
    /// 						 This feature, which is free on all sites, adds a Gallery image in the search results. A Gallery image is an image that was uploaded and copied to EPS (eBay Picture Service). This copy is stored  for 30 days or until the image is associated with a listing. Once the image is associated with a listing, the period is extended to 90 days after the item's sale_end date  and is extended again if the item is relisted or used in subsequent listings.  As part of storing a copy, EPS also makes additional sizes available (thumbnail,  main image, supersize,  popup, etc.), which are used by the various Gallery enhancements.
    /// 						 <br/><br/>
    /// 						 All images must comply to the <a href="https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/pictures.html" target="_blank">Picture Requirements.</a>
    /// 					
    /// </remarks>

    Gallery, 
    /// <remarks>
    /// 
    /// 						Adds a Gallery Plus icon to the listing.
    /// 						<br/><br/>
    /// 						When Plus is selected in a request that specifies at least two images (using ItemType.PictureDetailsType.PictureURL), the Gallery Plus feature automatically includes a Gallery Showcase of all the listing's images.
    /// 						<br><br>
    /// 						The Gallery Showcase displays when hovering over or clicking on the listing's Gallery Plus icon in the search results. The Showcase window displays a large (400px x 400px) preview image which is first image specified PictureURL, as well as up to 11 (64 px x 64 px) selectable thumbnails for the remaining EPS images. Clicking on the preview image displays the item's listing page.
    /// 						<br/><br/>
    /// 						If Plus is selected and the request includes only one EPS image or any self-hosted images, the listing includes a Gallery Plus icon that, when hovered over or clicked, displays a large (400px x 400px) preview image of the item. Clicking the image displays the View Item page for that listing.
    /// 						<br><br>
    /// 						When using RelistItem or ReviseItem (item has no bids and more than 12 hours before the listing's end), Plus can be unselected in the request. However, the Plus fee will still apply if a previous request selected Plus. There is at most one Plus fee per listing.
    /// 						<br><br>
    /// 						When "Plus" is included in an item listing, the listing also automatically gets the
    /// 						Gallery functionality at no extra cost. "Gallery" does not need to be specified
    /// 						separately in the listing.
    /// 						<br><br>
    /// 						Listing images that are originally smaller than 400px x 400px are centered in the
    /// 						preview frame. Images that are originally larger than 400px x 400px are scaled down
    /// 						to 400px on their longest side (maintaining their original aspect ratio).
    /// 					
    /// </remarks>

    Plus, 
    /// <remarks>
    /// 
    /// 						Reserved for internal use <b>only</b>.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumerated type is used to indicate if an eBay site or category supports Motors National Listings and/or Motors Local Market listings.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum GeographicExposureCodeType
{
    /// <remarks>
    /// 
    /// 						If this enumeration value is returned, the eBay site or category only supports Motors National Listings for the corresponding Motors dealer subscription level/type.
    /// 					
    /// </remarks>

    National, 
    /// <remarks>
    /// 
    /// 						If this enumeration value is returned, the eBay site or category only supports Motors Local Market Listings for the corresponding Motors dealer subscription level/type.
    /// 					
    /// </remarks>

    LocalOnly, 
    /// <remarks>
    /// 
    /// 						If this enumeration value is returned, the eBay site or category supports Motors National Listings and Motors Local Market listing for the corresponding Motors dealer subscription level/type.
    /// 					
    /// </remarks>

    LocalOptional, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumerated type defines the values that can be used in the <b>CallMode</b> field of the <b>GetAllBidders</b> call request to control which type of auction bidders are returned in the response.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum GetAllBiddersModeCodeType
{
    /// <remarks>
    /// 
    /// 						This enumeration value is used if the user wants to retrieve all bidders on an active or recently-ended auction listing. This value can be used by any user, and it is the default value if the <b>CallMode</b> field is not included in the call request.
    /// 					
    /// </remarks>

    ViewAll, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used if the user wants to retrieve all non-winning bidders for a recently-ended auction listing. This value can be only be used by the seller of the item.
    /// 					
    /// </remarks>

    EndedListing, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used if the user wants to retrieve all non-winning bidders, for a recently-ended auction listing, who are eligible for, and who accept Second Chance Offers. This value can be only be used by the seller of the item.  See <a href="http://pages.ebay.com/help/sell/second_chance_offer.html#when" target="_blank">When to use a Second Chance Offer</a> for more information on Second Chance Offers.
    /// 					
    /// </remarks>

    SecondChanceEligibleEndedListing, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				<span class="tablenote"><b>Note: </b> This enumerated type is deprecated as the Gift Icon feature is no longer available on any eBay Marketplace sites.
/// 				</span>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum GiftIconCodeType
{
    /// <remarks>
    /// 
    /// 						The listing feature is enabled for the site.
    /// 					
    /// </remarks>

    Enabled, 
    /// <remarks>
    /// 
    /// 						The listing feature is disabled for the site.
    /// 					
    /// </remarks>

    Disabled, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Specifies a predefined subset of fields to return. The predefined set of fields
/// 				can vary for different calls. Only applicable to certain calls (see request types
/// 				that include a GranularityLevel property). For calls that support this filter, see
/// 				the <a href="https://developer.ebay.com/api-docs/user-guides/static/make-a-call/tapi-input-data.html#details">Standard input data</a> section of the Making a Trading API call guide for a list of the output fields that are returned for
/// 				each level. Only one level can be specified at a time. For GetSellerList, use
/// 				DetailLevel or GranularityLevel in a given request, but not both. For
/// 				GetSellerList, if GranularityLevel is specified, DetailLevel is ignored.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum GranularityLevelCodeType
{
    /// <remarks>
    /// 
    /// 						(in) For each record in the response, retrieves less data than Medium.
    /// 						See the <a href="https://developer.ebay.com/api-docs/user-guides/static/make-a-call/tapi-input-data.html#details">Standard input data</a> section of the Making a Trading API call guide for a list of the output fields
    /// 						that are returned when this level is specified.
    /// 					
    /// </remarks>

    Coarse, 
    /// <remarks>
    /// 
    /// 						For each record in the response, retrieves more data than Medium.
    /// 						See the <a href="https://developer.ebay.com/api-docs/user-guides/static/make-a-call/tapi-input-data.html#details">Standard input data</a> section of the Making a Trading API call guide for a list of the output fields
    /// 						that are returned when this level is specified.
    /// 					
    /// </remarks>

    Fine, 
    /// <remarks>
    /// 
    /// 						For each record in the response, retrieves more data than Coarse and less data
    /// 						than Fine. See the <a href="https://developer.ebay.com/api-docs/user-guides/static/make-a-call/tapi-input-data.html#details">Standard input data</a> section of the Making a Trading API call guide for a list of the output fields
    /// 						that are returned when this level is specified.
    /// 					
    /// </remarks>

    Medium, 

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				How packaging/handling cost is to be determined for <a href="https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/manage-fulfill-combine-invoices.html">Combined Invoice</a>
/// 				orders.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum HandlingNameCodeType
{
    /// <remarks>
    /// 
    /// 						After eBay assigns the highest packaging/handling cost to the first item, the
    /// 						packaging/handling cost for each additional item is $n.
    /// 					
    /// </remarks>

    EachAdditionalAmount, 
    /// <remarks>
    /// 
    /// 						After eBay assigns the highest packaging/handling cost to the first item, the
    /// 						packaging/handling cost for each additional item is to be reduced by amount N.
    /// 					
    /// </remarks>

    EachAdditionalAmountOff, 
    /// <remarks>
    /// 
    /// 						After eBay assigns the highest packaging/handling cost to the first item, the
    /// 						packaging/handling cost for each additional item is to be reduced by N percent.
    /// 					
    /// </remarks>

    EachAdditionalPercentOff, 
    /// <remarks>
    /// 
    /// 						The total packaging/handling cost is to be the sum of the
    /// 						packaging/handling costs of the individual items.
    /// 					
    /// </remarks>

    IndividualHandlingFee, 
    /// <remarks>
    /// 
    /// 						The packaging/handling cost is to be N for the entire order.
    /// 					
    /// </remarks>

    CombinedHandlingFee, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				<span class="tablenote"><b>Note: </b> This enumerated type is deprecated as the Highlighted listing feature is no longer available on any eBay Marketplace sites.
/// 				</span>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum HighlightCodeType
{
    /// <remarks>
    /// 
    /// 						The listing feature is enabled for the site.
    /// 					
    /// </remarks>

    Enabled, 
    /// <remarks>
    /// 
    /// 						The listing feature is disabled for the site.
    /// 					
    /// </remarks>

    Disabled, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Specifies whether a listing feature is available for the site specified in the request.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum HomePageFeaturedCodeType
{
    /// <remarks>
    /// 
    /// 						The listing feature is enabled for the site.
    /// 					
    /// </remarks>

    Enabled, 
    /// <remarks>
    /// 
    /// 						The listing feature is disabled for the site.
    /// 					
    /// </remarks>

    Disabled, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				<span class="tablenote"><b>Note:</b>
/// 				This enumerated type is deprecated since it is only applicable to the eBay India site, and this marketplace is no longer available.</span>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum INEscrowWorkflowTimelineCodeType
{
    /// <remarks>
    /// 
    /// 						Default Escrow timelines apply.
    /// 					
    /// </remarks>

    Default, 
    /// <remarks>
    /// 
    /// 						Special Escrow timelines for Workflow A applies.
    /// 					
    /// </remarks>

    WorkflowA, 
    /// <remarks>
    /// 
    /// 						Special Escrow timelines for Workflow B applies.
    /// 					
    /// </remarks>

    WorkflowB, 
    /// <remarks>
    /// 
    /// 						(out) Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Enumerated type that defines the possible states of a buyer's Item Not Received (INR) inquiry.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum InquiryStatusCodeType
{
    /// <remarks>
    /// 
    /// 					This value indicates that the INR inquiry is invalid.
    /// 				
    /// </remarks>

    Invalid, 
    /// <remarks>
    /// 
    /// 					This value indicates that the INR inquiry is not applicable.
    /// 				
    /// </remarks>

    NotApplicable, 
    /// <remarks>
    /// 
    /// 					This value indicates that the INR inquiry is pending a response from the buyer.
    /// 				
    /// </remarks>

    TrackInquiryPendingBuyerResponse, 
    /// <remarks>
    /// 
    /// 					This value indicates that the INR inquiry is pending a response from the  seller.
    /// 				
    /// </remarks>

    TrackInquiryPendingSellerResponse, 
    /// <remarks>
    /// 
    /// 					This value indicates that the INR inquiry was closed with a refund issued to the buyer.
    /// 				
    /// </remarks>

    TrackInquiryClosedWithRefund, 
    /// <remarks>
    /// 
    /// 					This value indicates that the INR inquiry was closed with no refund issued to the buyer.
    /// 				
    /// </remarks>

    TrackInquiryClosedNoRefund, 
    /// <remarks>
    /// 
    /// 					This value indicates that the INR inquiry was escalated to an eBay Money Back Guarantee case, and it is pending a response from the buyer.
    /// 				
    /// </remarks>

    TrackInquiryEscalatedPendingBuyer, 
    /// <remarks>
    /// 
    /// 					This value indicates that the INR inquiry was escalated to an eBay Money Back Guarantee case, and it is pending a response from the seller.
    /// 				
    /// </remarks>

    TrackInquiryEscalatedPendingSeller, 
    /// <remarks>
    /// 
    /// 					This value indicates that the INR inquiry was escalated to an eBay Money Back Guarantee case, and it is pending a response from eBay Customer Support.
    /// 				
    /// </remarks>

    TrackInquiryEscalatedPendingCS, 
    /// <remarks>
    /// 
    /// 					This value indicates that the INR inquiry was escalated to an eBay Money Back Guarantee case, but it was closed with a refund issued to the buyer.
    /// 				
    /// </remarks>

    TrackInquiryEscalatedClosedWithRefund, 
    /// <remarks>
    /// 
    /// 					This value indicates that the INR inquiry was escalated to an eBay Money Back Guarantee case, but it was closed with no refund issued to the buyer.
    /// 				
    /// </remarks>

    TrackInquiryEscalatedClosedNoRefund, 
    /// <remarks>
    /// 
    /// 					Reserved for internal or future use.
    /// 				
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 			Defines options to track a listing by the eBay item ID or the seller's SKU.
/// 			In some calls, elements of this type are only returned in the response when
/// 			the value is set to SKU on the item.
/// 		
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum InventoryTrackingMethodCodeType
{
    /// <remarks>
    /// 
    /// 					Indicates the seller prefers to track the listing by its eBay item ID.
    /// 					This is the default for all listings.
    /// 				
    /// </remarks>

    ItemID, 
    /// <remarks>
    /// 
    /// 					Indicates the seller prefers to track the listing by their own SKU.
    /// 					<br/><br/>
    /// 					When you track by SKU, it means you can pass in your SKU instead of
    /// 					the eBay item ID in other calls that support SKU as an input field.
    /// 					If you choose SKU as your tracking preference for a listing,
    /// 					the value in <b>Item.SKU</b> must be unique across your active listings.
    /// 					You cannot create new listings with the same <b>Item.SKU</b> value while
    /// 					the listing is active (that is, until the existing listing with that
    /// 					SKU has ended).
    /// 					<br/><br/>
    /// 					However, you can use <b>ReviseInventoryStatus</b> to update the quantity
    /// 					and/or price for the existing SKU as needed. When revising a listing
    /// 					where the <b>InventoryTrackingMethod</b> was set to SKU, you must pass in both
    /// 					the <b>InventoryTrackingMethod</b> tag (with the value set to SKU) and the SKU
    /// 					tag with the SKU value from your original listing.
    /// 				
    /// </remarks>

    SKU, 
    /// <remarks>
    /// 
    /// 					Reserved for internal or future use.
    /// 				
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// BuyerIndicatedItemArrivedWithinEDDRange, BuyerIndicatedItemNotArrivedWithinEDDRange
/// </summary>
/// <remarks>
/// 
/// 				This enumerated type list the possible status values regarding whether or not a buyer received an order line item within the estimated delivery date timeframe.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum ItemArrivedWithinEDDCodeType
{
    /// <remarks>
    /// 
    /// 						<b>This value is for internal use only.<b>
    /// 						
    /// </remarks>

    EddQuestionWasNotAsked, 
    /// <remarks>
    /// 
    /// 						<b>This value is for internal use only.<b>
    /// 						
    /// </remarks>

    BuyerDidntProvideAnswer, 
    /// <remarks>
    /// 
    /// 						This value indicates that the buyer indicated that the order line item did arrive within the estimated delivery date when they left feedback for the transaction.
    /// 					
    /// </remarks>

    BuyerIndicatedItemArrivedWithinEDDRange, 
    /// <remarks>
    /// 
    /// 						This value indicates that the buyer indicated that the order line item did not arrive within the estimated delivery date when they left feedback for the transaction.
    /// 					
    /// </remarks>

    BuyerIndicatedItemNotArrivedWithinEDDRange, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Used to indicate whether the parts compatibility feature is enabled for a 
/// 				category.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum ItemCompatibilityEnabledCodeType
{
    /// <remarks>
    /// 
    /// 						Parts Compatibility is not supported for the given category.
    /// 					
    /// </remarks>

    Disabled, 
    /// <remarks>
    /// 
    /// 						Parts Compatibility may be entered by application only for the given category.
    /// 						Entering parts compatibility by application specifies the assemblies (e.g., a
    /// 						specific year, make, and model of car) to which the item applies. Parts
    /// 						compatibility by application can be specified by listing with a catalog
    /// 						product that supports parts compatibility or by specifying parts compatibility
    /// 						by application manually (<b> Item.ItemCompatibilityList</b>).
    /// 					
    /// </remarks>

    ByApplication, 
    /// <remarks>
    /// 
    /// 						Parts Compatibility may be entered by specification only for the given
    /// 						category. Entering parts compatibility by specification involves specifying
    /// 						the part's relevant dimensions or characteristics (e.g., Section Width, Aspect
    /// 						Ratio, Rim Diammeter, Load Index, and Speed Rating values for a tire) using
    /// 						attributes.
    /// 					
    /// </remarks>

    BySpecification, 
    /// <remarks>
    /// 
    /// 						(out) Reserved for internal or future use.
    /// 				  
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Specifies a predefined subset of item conditions. The predefined set of fields
/// 				can vary for different calls.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum ItemConditionCodeType
{
    /// <remarks>
    /// 
    /// 						The seller specified the Item Condition as New, or
    /// 						did not specify a condition.
    /// 						(Excludes items that the seller listed as Used.)
    /// 					
    /// </remarks>

    New, 
    /// <remarks>
    /// 
    /// 						The seller specified the Item Condition as Used, or
    /// 						did not specify a condition.
    /// 						(Excludes items that the seller listed as New.)
    /// 					
    /// </remarks>

    Used, 
    /// <remarks>
    /// 
    /// 								(out) Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// ClassifiedAdPayPerLeadFee, ClassifiedAdPayPerLeadFeeDescending, WonPlatform, SoldPlatform, WonPlatformDescending, SoldPlatformDescending
/// </summary>
/// <remarks>
/// 
/// 				This enumerated type contains the possible values that can be used when sorting results in the <b>GetItemsAwaitingFeedback</b>, <b>GetMyeBayBuying</b>, and <b>GetMyeBaySelling</b> calls. Assume that each of sort values can be used in any of the three calls above unless it is specifically called out that a certain enumeration value will not work/is not applicable to a call.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum ItemSortTypeCodeType
{
    /// <remarks>
    /// 
    /// 						This enumeration value is used to sort listings and orders according to Item ID value in ascending order.
    /// 					
    /// </remarks>

    ItemID, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used to sort listings according to item price value in ascending order.
    /// 						<br/><br/>
    /// 						This enumeration value is not applicable to the <b>GetItemsAwaitingFeedback</b> call.
    /// 					
    /// </remarks>

    Price, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used to sort listings or orders according to the starting price value in ascending order.
    /// 						<br/><br/>
    /// 						This enumeration value is not applicable to the <b>GetItemsAwaitingFeedback</b> call.
    /// 					
    /// </remarks>

    StartPrice, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used to sort listings or orders according to listing title in ascending (alphabetical) order.
    /// 					
    /// </remarks>

    Title, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used to sort auction listings according to the number of bids received in ascending order. This enumeration value is only applicable to auction listings, and is not applicable to the <b>GetItemsAwaitingFeedback</b> call.
    /// 					
    /// </remarks>

    BidCount, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used to sort fixed-price listings and orders according to item quantity in ascending order. This enumeration value is only applicable to fixed-price listings, and is not applicable to the <b>GetItemsAwaitingFeedback</b> call.
    /// 					
    /// </remarks>

    Quantity, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used to sort listings and orders according to start time in ascending order.
    /// 						<br/><br/>
    /// 						This enumeration value is not applicable to the <b>GetItemsAwaitingFeedback</b> call.
    /// 					
    /// </remarks>

    StartTime, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used to sort listings and orders according to end time in ascending order.
    /// 					
    /// </remarks>

    EndTime, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used to sort listings and orders according to the seller's user ID in ascending (alphabetical) order.
    /// 						<br/><br/>
    /// 						This enumeration value is not applicable to the <b>GetItemsAwaitingFeedback</b> or <b>GetMyeBaySelling</b> calls.
    /// 					
    /// </remarks>

    SellerUserID, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used to sort active listings and orders according to the time left before listing ends (in ascending order).
    /// 						<br/><br/>
    /// 						This enumeration value is not applicable to the <b>GetItemsAwaitingFeedback</b> call.
    /// 					
    /// </remarks>

    TimeLeft, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used by the <b>GetMyeBaySelling</b> call to sort listings according to the listing duration in ascending order.
    /// 						<br/><br/>
    /// 						This enumeration value is not applicable to the <b>GetItemsAwaitingFeedback</b> or <b>GetMyeBayBuying</b> calls.
    /// 					
    /// </remarks>

    ListingDuration, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used to sort listings and orders according to the listing type in ascending order.
    /// 						<br/><br/>
    /// 						This enumeration value is not applicable to the <b>GetItemsAwaitingFeedback</b> call.
    /// 					
    /// </remarks>

    ListingType, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used to sort listings and orders according to the current/final price in ascending order.
    /// 						<br/><br/>
    /// 						This enumeration value is not applicable to the <b>GetItemsAwaitingFeedback</b> call.
    /// 					
    /// </remarks>

    CurrentPrice, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used to sort auction listings and orders according to the reserve price in ascending order. This enumeration value is only applicable when a seller wants to retrieve information on their own auction listings that have reserve prices set on them. This enumeration is not applicable to the <b>GetItemsAwaitingFeedback</b> or <b>GetMyeBayBuying</b> calls.
    /// 					
    /// </remarks>

    ReservePrice, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used by a buyer to sort auction listings and orders according to the maximum bid price that they placed on an auction listing in ascending order. This enumeration value is only applicable to auction listings, and is not applicable to the <b>GetItemsAwaitingFeedback</b> or <b>GetMyeBaySelling</b> calls.
    /// 					
    /// </remarks>

    MaxBid, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used to sort auction listings according to the number of unique bidders in ascending order. This enumeration value is only applicable to auction listings, and is not applicable to the <b>GetItemsAwaitingFeedback</b> or <b>GetMyeBayBuying</b> calls.
    /// 					
    /// </remarks>

    BidderCount, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used to sort auction listings according to the user ID of the highest bidder in ascending order. This enumeration value is only applicable to auction listings, and is not applicable to the <b>GetItemsAwaitingFeedback</b> or <b>GetMyeBayBuying</b> calls.
    /// 					
    /// </remarks>

    HighBidderUserID, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used by the <b>GetMyeBaySelling</b> call to sort listings according to the buyer's user ID in ascending order.
    /// 						<br/><br/>
    /// 						This enumeration value is not applicable to the <b>GetItemsAwaitingFeedback</b> or <b>GetMyeBayBuying</b> calls.
    /// 					
    /// </remarks>

    BuyerUserID, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used by the <b>GetMyeBaySelling</b> call to sort listings according to the buyer's location in ascending order.
    /// 						<br/><br/>
    /// 						This enumeration value is not applicable to the <b>GetItemsAwaitingFeedback</b> or <b>GetMyeBayBuying</b> calls.
    /// 					
    /// </remarks>

    BuyerPostalCode, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used by the <b>GetMyeBaySelling</b> call to sort listings according to the buyer's email address in ascending order.
    /// 						<br/><br/>
    /// 						This enumeration value is not applicable to the <b>GetItemsAwaitingFeedback</b> or <b>GetMyeBayBuying</b> calls, and a buyer's email address will only be exposed to the seller within two weeks of order purchase.
    /// 					
    /// </remarks>

    BuyerEmail, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used by the <b>GetMyeBayBuying</b> call to sort listings and orders according to the seller's email address in ascending order.
    /// 						<br/><br/>
    /// 						This enumeration value is not applicable to the <b>GetItemsAwaitingFeedback</b> or <b>GetMyeBaySelling</b> calls.
    /// 					
    /// </remarks>

    SellerEmail, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used to sort orders according to item price value in ascending order.
    /// 						<br/><br/>
    /// 						This enumeration value is not applicable to the <b>GetItemsAwaitingFeedback</b> call.
    /// 					
    /// </remarks>

    TotalPrice, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used by the <b>GetMyeBaySelling</b> call to sort listings and orders according to the number of users watching the listing in ascending order.
    /// 						<br/><br/>
    /// 						This enumeration value is not applicable to the <b>GetItemsAwaitingFeedback</b> or <b>GetMyeBayBuying</b> calls.
    /// 					
    /// </remarks>

    WatchCount, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used by the <b>GetMyeBaySelling</b> call to sort active listings according to the number of Best Offers that the listing has received in ascending order.
    /// 						<br/><br/>
    /// 						This enumeration value is not applicable to the <b>GetItemsAwaitingFeedback</b> or <b>GetMyeBayBuying</b> calls.
    /// 					
    /// </remarks>

    BestOfferCount, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used by the <b>GetMyeBaySelling</b> call to sort listings and orders according to the number of questions that the listing has received in ascending order.
    /// 						<br/><br/>
    /// 						This enumeration value is not applicable to the <b>GetItemsAwaitingFeedback</b> or <b>GetMyeBayBuying</b> calls.
    /// 					
    /// </remarks>

    QuestionCount, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used to sort orders according to the cost to ship one unit of the order line item in ascending order.
    /// 						<br/><br/>
    /// 						This enumeration value is not applicable to the <b>GetItemsAwaitingFeedback</b> call.
    /// 					
    /// </remarks>

    ShippingServiceCost, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used to sort orders according to the type of feedback that a user received in ascending order. The Feedback ratings are defined in <b>CommentTypeCodeType</b>.
    /// 					
    /// </remarks>

    FeedbackReceived, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used to sort orders according to the type of feedback that a user left for another user in ascending order. The Feedback ratings are defined in <b>CommentTypeCodeType</b>.
    /// 					
    /// </remarks>

    FeedbackLeft, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used to sort listings and orders according to the eBay user ID of the order partner/owner of listing in ascending order.
    /// 					
    /// </remarks>

    UserID, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used by the <b>GetMyeBaySelling</b> call to sort order line items according to the quantity sold in ascending order.
    /// 						<br/><br/>
    /// 						This enumeration value is not applicable to the <b>GetItemsAwaitingFeedback</b> or <b>GetMyeBayBuying</b> calls.
    /// 					
    /// </remarks>

    QuantitySold, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used by the buyer in a <b>GetMyeBayBuying</b> call to sort all Best Offers made in ascending order according to the dollar amount of the Best Offer. This sort  option is only applicable if the buyer has at least one pending Best Offer on an order line item.
    /// 						<br/><br/>
    /// 						This enumeration value is not applicable to the <b>GetItemsAwaitingFeedback</b> or <b>GetMyeBaySelling</b> calls.
    /// 					
    /// </remarks>

    BestOffer, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used to sort order line items according to quantity available for purchase in ascending order.
    /// 						<br/><br/>
    /// 						This enumeration value is not applicable to the <b>GetItemsAwaitingFeedback</b> call, and it is only relevant to the <b>WatchList</b> container of the <b>GetMyeBayBuying</b> call.
    /// 					
    /// </remarks>

    QuantityAvailable, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used to sort purchased line items according to the quantity purchased by the buyer in ascending order.
    /// 						<br/><br/>
    /// 						This enumeration value is not applicable to the <b>GetItemsAwaitingFeedback</b> call.
    /// 					
    /// </remarks>

    QuantityPurchased, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable as Half.com has been shut down, and eBay marketplace is the only remaining platform.
    /// 					
    /// </remarks>

    WonPlatform, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable as Half.com has been shut down, and eBay marketplace is the only remaining platform.
    /// 					
    /// </remarks>

    SoldPlatform, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used by the <b>GetMyeBaySelling</b> call to sort listings according to the listing duration in descending order.
    /// 						<br/><br/>
    /// 						This enumeration value is not applicable to the <b>GetItemsAwaitingFeedback</b> or <b>GetMyeBayBuying</b> calls.
    /// 					
    /// </remarks>

    ListingDurationDescending, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used to sort listings and orders according to the listing type in descending order.
    /// 						<br/><br/>
    /// 						This enumeration value is not applicable to the <b>GetItemsAwaitingFeedback</b> call.
    /// 					
    /// </remarks>

    ListingTypeDescending, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used to sort listings and orders according to the current/final price in descending order.
    /// 						<br/><br/>
    /// 						This enumeration value is not applicable to the <b>GetItemsAwaitingFeedback</b> call.
    /// 					
    /// </remarks>

    CurrentPriceDescending, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used by the <b>GetMyeBaySelling</b> call to sort auction listings and orders according to the reserve price in descending order. This enumeration value is only applicable when a seller wants to retrieve information on their own auction listings that have reserve prices set on them.
    /// 						<br/><br/>
    /// 						This enumeration is not applicable to the <b>GetItemsAwaitingFeedback</b> or <b>GetMyeBayBuying</b> calls.
    /// 					
    /// </remarks>

    ReservePriceDescending, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used by the <b>GetMyeBayBuying</b> call to sort auction listings and orders according to the maximum bid price that a buyer placed on an auction listing in descending order.
    /// 						<br/><br/>
    /// 						This enumeration value is only applicable to auction listings, and is not applicable to the <b>GetItemsAwaitingFeedback</b> or <b>GetMyeBaySelling</b> calls.
    /// 					
    /// </remarks>

    MaxBidDescending, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used by the <b>GetMyeBaySelling</b> call to sort auction listings according to the number of unique bidders in descending order.
    /// 						<br/><br/>
    /// 						This enumeration value is only applicable to auction listings, and is not applicable to the <b>GetItemsAwaitingFeedback</b> or <b>GetMyeBayBuying</b> calls.
    /// 					
    /// </remarks>

    BidderCountDescending, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used by the <b>GetMyeBaySelling</b> call to sort auction listings according to the user ID of the highest bidder in descending order.
    /// 						<br/><br/>
    /// 						This enumeration value is only applicable to auction listings, and is not applicable to the <b>GetItemsAwaitingFeedback</b> or <b>GetMyeBayBuying</b> calls.
    /// 					
    /// </remarks>

    HighBidderUserIDDescending, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used by the <b>GetMyeBaySelling</b> call to sort listings according to the buyer's user ID in descending order.
    /// 						<br/><br/>
    /// 						This enumeration value is not applicable to the <b>GetItemsAwaitingFeedback</b> or <b>GetMyeBayBuying</b> calls.
    /// 					
    /// </remarks>

    BuyerUserIDDescending, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used by the <b>GetMyeBaySelling</b> call to sort listings according to the buyer's location in descending order.
    /// 						<br/><br/>
    /// 						This enumeration value is not applicable to the <b>GetItemsAwaitingFeedback</b> or <b>GetMyeBayBuying</b> calls.
    /// 					
    /// </remarks>

    BuyerPostalCodeDescending, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used by the <b>GetMyeBaySelling</b> call to sort listings according to the buyer's email address in descending order. A buyer's actual email address will only be exposed to the seller within two weeks of order purchase.
    /// 						<br/><br/>
    /// 						This enumeration value is not applicable to the <b>GetItemsAwaitingFeedback</b> or <b>GetMyeBayBuying</b> calls.
    /// 					
    /// </remarks>

    BuyerEmailDescending, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used by the <b>GetMyeBayBuying</b> call to sort listings and orders according to the seller's email address in descending order.
    /// 						<br/><br/>
    /// 						This enumeration value is not applicable to the <b>GetItemsAwaitingFeedback</b> or <b>GetMyeBaySelling</b> calls.
    /// 					
    /// </remarks>

    SellerEmailDescending, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used to sort orders according to item price value in descending order.
    /// 						<br/><br/>
    /// 						This enumeration value is not applicable to the <b>GetItemsAwaitingFeedback</b> call.
    /// 					
    /// </remarks>

    TotalPriceDescending, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used by the <b>GetMyeBaySelling</b> call to sort listings and orders according to the number of users watching the listing in descending order.
    /// 						<br/><br/>
    /// 						This enumeration value is not applicable to the <b>GetItemsAwaitingFeedback</b> or <b>GetMyeBayBuying</b> calls.
    /// 					
    /// </remarks>

    WatchCountDescending, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used by the <b>GetMyeBaySelling</b> call to sort listings and orders according to the number of questions that the listing has received in descending order.
    /// 						<br/><br/>
    /// 						This enumeration value is not applicable to the <b>GetItemsAwaitingFeedback</b> or <b>GetMyeBayBuying</b> calls.
    /// 					
    /// </remarks>

    QuestionCountDescending, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used to sort orders according to the cost to ship one unit of the order line item in descending order.
    /// 						<br/><br/>
    /// 						This enumeration value is not applicable to the <b>GetItemsAwaitingFeedback</b> call.
    /// 					
    /// </remarks>

    ShippingServiceCostDescending, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used to sort orders according to the type of feedback that a user received in descending order. The Feedback ratings are defined in <b>CommentTypeCodeType</b>.
    /// 					
    /// </remarks>

    FeedbackReceivedDescending, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used to sort orders according to the type of feedback that a user left for another user in descending order. The Feedback ratings are defined in <b>CommentTypeCodeType</b>.
    /// 					
    /// </remarks>

    FeedbackLeftDescending, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used to sort listings and orders according to the eBay user ID of the order partner/owner of listing in descending order.
    /// 					
    /// </remarks>

    UserIDDescending, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used by the <b>GetMyeBaySelling</b> call to sort order line items according to the quantity sold in descending order.
    /// 						<br/><br/>
    /// 						This enumeration value is not applicable to the <b>GetItemsAwaitingFeedback</b> or <b>GetMyeBayBuying</b> calls.
    /// 					
    /// </remarks>

    QuantitySoldDescending, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used by the <b>GetMyeBaySelling</b> call to sort active listings according to the number of Best Offers that the listing has received in descending order.
    /// 						<br/><br/>
    /// 						This enumeration value is not applicable to the <b>GetItemsAwaitingFeedback</b> or <b>GetMyeBayBuying</b> calls.
    /// 					
    /// </remarks>

    BestOfferCountDescending, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used to sort order line items according to quantity available for purchase in descending order.
    /// 						<br/><br/>
    /// 						This enumeration value is not applicable to the <b>GetItemsAwaitingFeedback</b> call, and it is only relevant to the <b>WatchList</b> container of the <b>GetMyeBayBuying</b> call.
    /// 					
    /// </remarks>

    QuantityAvailableDescending, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used to sort purchased line items according to the quantity purchased by the buyer in descending order.
    /// 						<br/><br/>
    /// 						This enumeration value is not applicable to the <b>GetItemsAwaitingFeedback</b> call.
    /// 					
    /// </remarks>

    QuantityPurchasedDescending, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used by the <b>GetMyeBayBuying</b> call to sort all Best Offers made in descending order according to the dollar amount of the Best Offer. This sort option is only applicable if the buyer has at least one pending Best Offer on an order line item.
    /// 						<br/><br/>
    /// 						This enumeration value is not applicable to the <b>GetItemsAwaitingFeedback</b> or <b>GetMyeBaySelling</b> calls.
    /// 					
    /// </remarks>

    BestOfferDescending, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used to sort listings and orders according to Item ID value in descending order.
    /// 					
    /// </remarks>

    ItemIDDescending, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used to sort listings according to item price value in descending order.
    /// 						<br/><br/>
    /// 						This enumeration value is not applicable to the <b>GetItemsAwaitingFeedback</b> call.
    /// 					
    /// </remarks>

    PriceDescending, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used to sort listings or orders according to the starting price value in descending order.
    /// 						<br/><br/>
    /// 						This enumeration value is not applicable to the <b>GetItemsAwaitingFeedback</b> call.
    /// 					
    /// </remarks>

    StartPriceDescending, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used to sort listings or orders according to listing title in descending (alphabetical) order.
    /// 					
    /// </remarks>

    TitleDescending, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used to sort auction listings according to the number of bids received in descending order.
    /// 						<br/><br/>
    /// 						This enumeration value is only applicable to auction listings, and is not applicable to the <b>GetItemsAwaitingFeedback</b> call.
    /// 					
    /// </remarks>

    BidCountDescending, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used to sort fixed-price listings and orders according to item quantity in descending order.
    /// 						<br/><br/>
    /// 						This enumeration value is only applicable to fixed-price listings, and is not applicable to the <b>GetItemsAwaitingFeedback</b> call.
    /// 					
    /// </remarks>

    QuantityDescending, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used to sort listings and orders according to start time in descending order.
    /// 						<br/><br/>
    /// 						This enumeration value is not applicable to the <b>GetItemsAwaitingFeedback</b> call.
    /// 					
    /// </remarks>

    StartTimeDescending, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used to sort listings and orders according to end time in descending order.
    /// 					
    /// </remarks>

    EndTimeDescending, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used by the <b>GetMyeBayBuying</b> call to sort listings and orders according to the seller's user ID in descending order.
    /// 						<br/><br/>
    /// 						This enumeration value is not applicable to the <b>GetItemsAwaitingFeedback</b> or <b>GetMyeBaySelling</b> calls.
    /// 					
    /// </remarks>

    SellerUserIDDescending, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used to sort active listings and orders according to the time left before listing ends (in descending order).
    /// 						<br/><br/>
    /// 						This enumeration value is not applicable to the <b>GetItemsAwaitingFeedback</b> call.
    /// 					
    /// </remarks>

    TimeLeftDescending, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable as Half.com has been shut down, and eBay marketplace is the only remaining platform.
    /// 					
    /// </remarks>

    WonPlatformDescending, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable as Half.com has been shut down, and eBay marketplace is the only remaining platform.
    /// 					
    /// </remarks>

    SoldPlatformDescending, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used by the seller of a classified ad listing in a <b>GetMyeBaySelling</b> call to sort classified ad listings according to the total number of leads (prospective buyer inquiries) in ascending order. Each lead involves an email to the buyer, and the <b>LeadCount</b> value includes read and unread emails.
    /// 						<br/><br/>
    /// 						This enumeration value is not applicable to the <b>GetItemsAwaitingFeedback</b> or <b>GetMyeBayBuying</b> calls.
    /// 					
    /// </remarks>

    LeadCount, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used by the seller of a classified ad listing in a <b>GetMyeBaySelling</b> call to sort classified ad listings according to the number of new leads (prospective buyer inquiries) in ascending order. Each lead involves an email to the buyer, and the <b>NewLeadCount</b> value only includes unread emails.
    /// 						<br/><br/>
    /// 						This enumeration value is not applicable to the <b>GetItemsAwaitingFeedback</b> or <b>GetMyeBayBuying</b> calls.
    /// 					
    /// </remarks>

    NewLeadCount, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used by the seller of a classified ad listing in a <b>GetMyeBaySelling</b> call to sort classified ad listings according to the total number of leads (prospective buyer inquiries) in descending order. Each lead involves an email to the buyer, and the <b>LeadCount</b> value includes read and unread emails.
    /// 						<br/><br/>
    /// 						This enumeration value is not applicable to the <b>GetItemsAwaitingFeedback</b> or <b>GetMyeBayBuying</b> calls.
    /// 					
    /// </remarks>

    LeadCountDescending, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used by the seller of a classified ad listing in a <b>GetMyeBaySelling</b> call to sort classified ad listings according to the number of new leads (prospective buyer inquiries) in descending order. Each lead involves an email to the buyer, and the <b>NewLeadCount</b> value only includes unread emails.
    /// 						<br/><br/>
    /// 						This enumeration value is not applicable to the <b>GetItemsAwaitingFeedback</b> or <b>GetMyeBayBuying</b> calls.
    /// 					
    /// </remarks>

    NewLeadCountDescending, 
    /// <remarks>
    /// 
    /// 						The pay-per-lead feature is no longer available, so this value is no longer
    /// 						applicable.
    /// 					
    /// </remarks>

    ClassifiedAdPayPerLeadFee, 
    /// <remarks>
    /// 
    /// 						The pay-per-lead feature is no longer available, so this value is no longer
    /// 						applicable.
    /// 					
    /// </remarks>

    ClassifiedAdPayPerLeadFeeDescending, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// Attribute
/// </summary>
/// <remarks>
/// 
/// 				This enumerated type is used by <b>GetItem</b>, and indicates the source for an Item Specific.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum ItemSpecificSourceCodeType
{
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the corresponding Item Specific was specified by the seller in Add/Revise/Relist call or flow. In an Add/Revise/Relist API call, Item Specifics for a listing are specified through the <b>ItemSpecifics.NameValueList</b> or <b>VariationSpecifics.NameValueList</b> (for a variation in a multiple-variation listing) containers.
    /// 					
    /// </remarks>

    ItemSpecific, 
    /// <remarks>
    /// 
    /// 						This value is no longer applicable and should not be returned.
    /// 					
    /// </remarks>

    Attribute, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the corresponding Item Specific was derived from a product in the eBay Catalog, and was automatically picked up by the listing when the seller created, revised, or relisted an item referencing and matching an eBay catalog product through the use of an ePID or GTIN value in the <b>ProductListingDetails</b> container.
    /// 					
    /// </remarks>

    Product, 
    /// <remarks>
    /// 
    /// 						Reserved for future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumerated type is used to indicate whether an eBay marketplace and/or category supports the use of Item Specifics when creating, revising, or relisting an item.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum ItemSpecificsEnabledCodeType
{
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the seller may not use Item Specifics for the specified eBay marketplace or corresponding category.
    /// 					
    /// </remarks>

    Disabled, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the seller may use Item Specifics for the specified eBay marketplace or corresponding category.
    /// 					
    /// </remarks>

    Enabled, 
    /// <remarks>
    /// 
    /// 						(out) Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// FixedPriceExcludeStoreInventory, ExcludeStoreInventory, AllItemTypes, AllFixedPriceItemTypes, AdFormat
/// </summary>
/// <remarks>
/// 
/// 				Enumerated type containing values that provide more information on the type of 
/// 				filtering the buyer used when setting up a Saved Search in My eBay.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum ItemTypeCodeType
{
    /// <remarks>
    /// 
    /// 						When setting up filtering for the Saved Search, the buyer was only looking for 
    /// 						auction items (with or without the Buy It Now option), so only selected the <b>Auction</b> checkbox in the 
    /// 						<b>Format</b> dialog box. When this filter is used in a Saved Search,
    /// 						fixed-price items and classified ad listings are not retrieved for the buyer.
    /// 					
    /// </remarks>

    AuctionItemsOnly, 
    /// <remarks>
    /// 
    /// 						When setting up filtering for the Saved Search, the buyer was looking for all
    /// 						fixed-price items and auction items with Buy It Now available, so only selected the
    /// 						<b>Buy It Now</b> checkbox in the <b>Format</b> dialog box.
    /// 						When this filter is used in a Saved Search, auction items (without the Buy It Now 
    /// 						option) and classified ad listings are not retrieved for the buyer. 
    /// 					
    /// </remarks>

    FixedPricedItem, 
    /// <remarks>
    /// 
    /// 						When setting up filtering for the Saved Search, the buyer was looking for all
    /// 						items closely associated with the search term, so selected all buying formats 
    /// 						(Auction, Buy It Now, and Classified Ads). All items are retrieved for the buyer, 
    /// 						including auction items (with or without the Buy It Now option), fixed-price 
    /// 						items, and classified ad listings.
    /// 					
    /// </remarks>

    AllItems, 
    /// <remarks>
    /// 
    /// 						When setting up filtering for the Saved Search, the buyer was only looking for 
    /// 						items sold by sellers with eBay stores, so selected the 
    /// 						<b>Sellers with eBay stores</b> checkbox in the 
    /// 						<b>Seller</b> dialog box. When this filter is used in a Saved Search,
    /// 						only items for sale in an eBay store are retrieved for the buyer.
    /// 					
    /// </remarks>

    StoreInventoryOnly, 
    /// <remarks>
    /// 
    /// 						Excludes listings that have listing type set to StoresFixedPrice.
    /// 						Excludes listings that have listing type set to AdType.
    /// 						Excludes auction listings in which BuyItNowEnabled is false.
    /// 					
    /// </remarks>

    FixedPriceExcludeStoreInventory, 
    /// <remarks>
    /// 
    /// 						Excludes listings that have listing type set to StoresFixedPrice.
    /// 					
    /// </remarks>

    ExcludeStoreInventory, 
    /// <remarks>
    /// 
    /// 						Retrieves listings whether or not listing type is set to StoresFixedPrice;
    /// 						include auction items. 
    /// 					
    /// </remarks>

    AllItemTypes, 
    /// <remarks>
    /// 
    /// 						Retrieves fixed-price items.
    /// 						Whether StoresFixedPrice items are retrieved does not depend on the site default.
    /// 						The StoresFixedPrice items are retrieved after the basic fixed price items.
    /// 						Items are retrieved whether or not listing type is set to StoresFixedPrice.
    /// 						Does not retrieve items for which listing type is AdType.
    /// 						Does not retrieve auction items for which BuyItNowEnabled is false.
    /// 					
    /// </remarks>

    AllFixedPriceItemTypes, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode, 
    /// <remarks>
    /// 
    /// 						When setting up filtering for the Saved Search, the buyer was only looking for 
    /// 						classified ad listings, so only selected the <b>Classified ads</b> checkbox in the 
    /// 						<b>Format</b> dialog box. When this filter is used in a Saved Search,
    /// 						auction (with or without the Buy It Now option) and fixed-price items 
    /// 						are not retrieved for the buyer.
    /// 					
    /// </remarks>

    ClassifiedItemsOnly, 
    /// <remarks>
    /// 
    /// 						Restricts listings to return only items that have the Ad Format feature.
    /// 					
    /// </remarks>

    AdFormat
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumerated type contains the list of values that can be used by the seller to set the duration (number of days or Good 'Til Cancelled) of a listing.
/// 				<br><br>
/// 				Listing durations available to the seller vary based on the site, category, listing type, and the seller's selling profile, so it is a best practice for the seller to call <b>GetCategoryFeatures</b> with <b>ListingDurations</b> included as a <b>FeatureID</b> value in the call request. The <b>GetCategoryFeatures</b> response will include the complete list of listing duration values that can be used for the various listing types.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum ListingDurationCodeType
{
    /// <remarks>
    /// 
    /// 						This value is used to set the duration of the listing to one day. A one-day listing duration is typically only available to sellers with a Feedback score of 10 or higher, so sellers with a Feedback score of less than 10 may be restricted from using a one-day listing duration. The seller can call <b>GetCategoryFeatures</b> with <b>ListingDurations</b> included as a <b>FeatureID</b> value in the call request to see if the one-day listing duration is available. <br><br>
    /// 						A one-day listing duration is generally applicable to an auction listing or to a Real Estate Classified Ad.
    /// 					
    /// </remarks>

    Days_1, 
    /// <remarks>
    /// 
    /// 						This value is used to set the duration of the listing to three days.
    /// 					
    /// </remarks>

    Days_3, 
    /// <remarks>
    /// 
    /// 						This value is used to set the duration of the listing to five days.
    /// 					
    /// </remarks>

    Days_5, 
    /// <remarks>
    /// 
    /// 						This value is used to set the duration of the listing to seven days.
    /// 					
    /// </remarks>

    Days_7, 
    /// <remarks>
    /// 
    /// 						This value is used to set the duration of the listing to 10 days.
    /// 					
    /// </remarks>

    Days_10, 
    /// <remarks>
    /// 
    /// 						This value is used to set the duration of the listing to 14 days.
    /// 					
    /// </remarks>

    Days_14, 
    /// <remarks>
    /// 
    /// 						This value is used to set the duration of the listing to 21 days. <br/><br/>
    /// 						<span class="tablenote"><b>Note: </b> A 21-day listing duration was typically only applicable to eBay Motors Local Market vehicle listings, but this listing duration is no longer valid/supported. </span>
    /// 					
    /// </remarks>

    Days_21, 
    /// <remarks>
    /// 
    /// 						This value is used to set the duration of the listing to 30 days.
    /// 						<br/><br/>
    /// 						<span class="tablenote"><b>Note: </b> In October 2018, this listing duration was enabled for eBay Motors Local Listings, and replaced the formerly supported <code>Days_21</code> enumeration value.
    /// 						</span>
    /// 					
    /// </remarks>

    Days_30, 
    /// <remarks>
    /// 
    /// 						This value is used to set the duration of the listing to 60 days.
    /// 						<br><br>
    /// 						A 60-day listing duration is typically only applicable to Classified Ad listings in specific categories.
    /// 					
    /// </remarks>

    Days_60, 
    /// <remarks>
    /// 
    /// 						This value is used to set the duration of the listing to 90 days.
    /// 						<br><br>
    /// 						A 90-day listing duration is generally only applicable to a Real Estate Classified Ad.
    /// 					
    /// </remarks>

    Days_90, 
    /// <remarks>
    /// 
    /// 						This value is used to set the duration of the listing to 120 days.
    /// 						<br><br>
    /// 						An 120-day listing duration is typically only applicable to Classified Ad listings in specific categories.
    /// 					
    /// </remarks>

    Days_120, 
    /// <remarks>
    /// 
    /// 						This value is used to set the duration of the listing to 'Good 'Til Cancelled. This option is available for fixed-price and Classified Ad listings. "Good 'Til Cancelled" fixed-price listings will be relisted automatically each month until all inventory is sold out (e.g., <b>Item.Quantity</b>=0 in a single-variation fixed-price listing, or all occurences of <b>Item.Variations.Variation.Quantity</b>=0 in a multi-variation fixed-price listing), or the seller ends the fixed-price listing.
    /// 						<br>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b> 
    /// 							The <code>GTC</code> (Good 'Til Cancelled) value is the only supported listing duration for fixed-price listings on all eBay marketplaces and categories except for motor vehicle listings on eBay Motors US, and on the eBay UK and eBay Italy sites.
    /// 						</span>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b>
    /// 							As long as a fixed-price listing has inventory available, or if the out-of-stock control feature is being used, GTC listings are automatically renewed each month according to the calendar day.
    /// 						</span>
    /// 					
    /// </remarks>

    GTC, 
    /// <remarks>
    /// 
    /// 						This value is reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				<span class="tablenote"><b>Note:</b>
/// 					This enumerated type is no longer applicable, as the Featured First listing feature is deprecated for all sites. If a seller attempts to add Featured First as a listing enhancement (including <b>ListingEnhancement</b> field in an <b>AddItem</b> call and setting its value to <code>Featured</code>), it is allowed, but a warning will be returned announcing the deprecation of the feature. This feature was officially wired off in September 2019.
/// 				</span>
/// 				<br>
/// 				This enumerated type contains the list of values that can be used by the seller to set the duration of a Featured Gallery in a fixed-price listing. Once set for a listing, the Featured Gallery duration can be increased from 'Days_7' to 'Lifetime' (throughout life of listing), but the duration cannot be decreased from 'Lifetime' to 'Days_7'.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum ListingEnhancementDurationCodeType
{
    /// <remarks>
    /// This value sets the Featured Gallery duration to one day. This
    /// 					value is deprecated.
    /// </remarks>

    Days_1, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to two days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_2, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to three days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_3, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to four days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_4, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to five days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_5, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to six days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_6, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to seven days. If a
    /// 					listing has a Featured Gallery duration of seven days, it is possible to revise that
    /// 					item and set the Featured Gallery duration to 'Lifetime' (throughout
    /// 					life of listing) (
    /// </remarks>

    Days_7, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to eight days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_8, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to nine days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_9, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to 10 days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_10, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to 11 days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_11, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to 12 days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_12, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to 13 days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_13, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to 14 days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_14, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to 15 days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_15, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to 16 days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_16, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to 17 days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_17, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to 18 days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_18, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to 19 days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_19, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to 20 days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_20, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to 21 days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_21, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to 22 days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_22, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to 23 days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_23, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to 24 days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_24, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to 25 days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_25, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to 26 days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_26, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to 27 days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_27, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to 28 days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_28, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to 29 days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_29, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to 30 days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_30, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to 31 days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_31, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to 32 days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_32, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to 33 days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_33, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to 34 days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_34, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to 35 days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_35, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to 36 days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_36, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to 37 days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_37, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to 38 days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_38, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to 39 days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_39, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to 40 days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_40, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to 41 days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_41, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to 42 days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_42, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to 43 days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_43, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to 44 days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_44, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to 45 days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_45, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to 46 days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_46, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to 47 days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_47, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to 48 days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_48, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to 49 days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_49, 
    /// <remarks>
    /// This value sets the Featured Gallery duration to 50 days. This
    /// 					value is deprecated.
    /// </remarks>

    Days_50, 
    /// <remarks>
    /// 
    /// 						This duration enables the Featured Gallery feature for the life of the listing. Once the
    /// 						Featured Gallery duration is set to 'Lifetime' for a listing, it cannot be changed.
    /// 					
    /// </remarks>

    Lifetime, 
    /// <remarks>
    /// 
    /// 						This value is reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// BoldTitle, CustomCode
/// </summary>
/// <remarks>
/// 
/// 				Type defining the listing upgrades that may be available to the seller when listing or revising an item.
/// 				<br>
/// 					<span class="tablenote"><b>Note: </b>  <code>BoldTitle</code> is the only enum value that can be used in the <b>ListingEnhancement</b> field.
/// 				</span>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum ListingEnhancementsCodeType
{
    /// <remarks>
    /// 
    /// 						This enumeration value is deprecated.
    /// 					
    /// </remarks>

    Border, 
    /// <remarks>
    /// 
    /// 						This value is used if the seller wants the listing title to
    /// 						be in boldface type. This feature will incur a listing fee.
    /// 						Note that this enhancement will not put the listing subtitle in boldface type (if a subtitle is used).
    /// 					
    /// </remarks>

    BoldTitle, 
    /// <remarks>
    /// 
    /// 						This enumeration value is deprecated.
    /// 					
    /// </remarks>

    Featured, 
    /// <remarks>
    /// 
    /// 						This enumeration value is deprecated.
    /// 					
    /// </remarks>

    Highlight, 
    /// <remarks>
    /// 
    /// 						This enumeration value is deprecated.
    /// 					
    /// </remarks>

    HomePageFeatured, 
    /// <remarks>
    /// 
    /// 						This enumeration value is deprecated.
    /// 					
    /// </remarks>

    ProPackBundle, 
    /// <remarks>
    /// 
    /// 						This enumeration value is deprecated.
    /// 					
    /// </remarks>

    BasicUpgradePackBundle, 
    /// <remarks>
    /// 
    /// 						This enumeration value is deprecated.
    /// 					
    /// </remarks>

    ValuePackBundle, 
    /// <remarks>
    /// 
    /// 						This enumeration value is deprecated.
    /// 					
    /// </remarks>

    ProPackPlusBundle, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Specifies an active or ended listing's status in eBay's processing
/// 				workflow. If a listing ends with a sale (or sales), eBay needs to
/// 				update the sale details (e.g., total price and buyer/high bidder)
/// 				and the transaction fees.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum ListingStatusCodeType
{
    /// <remarks>
    /// 
    /// 						The listing is still active or the listing has ended with
    /// 						a sale but eBay has not completed processing the sale details. If the listing has ended with a sale but this Active
    /// 						status is returned, please allow several minutes for eBay to
    /// 						finish processing the listing.
    /// 					
    /// </remarks>

    Active, 
    /// <remarks>
    /// 
    /// 						The listing has ended. If the listing ended with a sale,
    /// 						eBay has completed processing of the sale. All sale information
    /// 						returned from eBay should be considered accurate and complete. However, the transaction fees are
    /// 						not yet available.
    /// 					
    /// </remarks>

    Ended, 
    /// <remarks>
    /// 
    /// 						The listing has closed and eBay has completed processing the sale. All
    /// 						sale information returned from eBay should be considered accurate and complete. In this state, all transaction fees should be calculated.
    /// 					
    /// </remarks>

    Completed, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    Custom
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 			This enumerated type defines the two subtypes that can be used if the main listing type (in <strong>ListingType</strong> field) is <code>LeadGeneration</code>. A <strong>ListingSubtype2</strong> value must be specified if the <strong>ListingType</strong> value is set to <code>LeadGeneration</code>.
/// 		
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum ListingSubtypeCodeType
{
    /// <remarks>
    /// 
    /// 					This value indicates that the lead generation listing is a classifed ad. Note that only some eBay categories support classified ad listings. Use the <strong>GetCategoryFeatures</strong> call (with <strong>FeatureID</strong> value set to <code>AdFormatEnabled</code>) to see which categories support classified ad listings.
    /// 				
    /// </remarks>

    ClassifiedAd, 
    /// <remarks>
    /// 
    /// 					This value indicates that the lead generation listing is a US Motors Local Market listing. Note that only some eBay Motors categories support Motors Local Market listings. Use the <strong>GetCategoryFeatures</strong> call (with the <strong>SITEID</strong> header set to <code>100</code> and the <strong>FeatureID</strong> value set to <code>LocalMarketAdFormatEnabled</code>) to see which eBay Motors categories support Motors Local Market listings.
    /// 				
    /// </remarks>

    LocalMarketBestOfferOnly, 
    /// <remarks>
    /// 
    /// 					Reserved for internal or future use
    /// 				
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// StoresFixedPrice, Dutch, Live, Express, Half, Shopping
/// </summary>
/// <remarks>
/// 
/// 				This enumerated type contains the valid selling formats for eBay listings.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum ListingTypeCodeType
{
    /// <remarks>
    /// 
    /// 						Unknown or undefined auction type. Applicable to
    /// 						user preferences and other informational use cases.
    /// 					
    /// </remarks>

    Unknown, 
    /// <remarks>
    /// 
    /// 						This value indicates an auction listing. In an auction listing, prospective buyers engage in a competitive bidding process, although Buy It Now may be offered as long as no bids have been placed. Auctions occur on the eBay marketplace site, and the auction listings will also appear in the seller's eBay Store (if the seller has an eBay Store).
    /// 						<br><br>
    /// 						Although listing durations may vary by eBay marketplace and category, typical listing durations for auctions are 3, 5, 7, and 10 days. It is recommended that the seller uses the <b>GetCategoryFeatures</b> call to retrieve the actual listing durations that are supported for auctions on a particular marketplace and category.
    /// 					
    /// </remarks>

    Chinese, 
    /// <remarks>
    /// 
    /// 					 This value is no longer applicable.
    /// 					
    /// </remarks>

    Dutch, 
    /// <remarks>
    /// 
    /// 					 This value is no longer applicable.
    /// 				
    /// </remarks>

    Live, 
    /// <remarks>
    /// 
    /// 						This enumeration value is only applicable to the <b>GetMyeBaySelling</b> call. This value is used in the <b>ActiveList.ListingType</b> field if the seller only wants to retrieve active listings that are in the auction format.
    /// 					
    /// </remarks>

    Auction, 
    /// <remarks>
    /// 
    /// 						This enumeration value represents a classified ad in a Real Estate category. This listing type is only used to solicit inquiries from interested parties. To express interest, a buyer fills in a contact form that eBay forwards to the seller as a lead. This format does not enable buyers and sellers to transact online through eBay, and eBay Feedback is not available for ad format listings.
    /// 						<br><br>
    /// 						Although listing durations may vary by eBay marketplace and category, typical listing durations for real estate ads are 30 and 90 days. It is recommended that the seller uses the <b>GetCategoryFeatures</b> call to retrieve the actual listing durations that are supported for real estate ads on a particular marketplace and category.
    /// 					
    /// </remarks>

    AdType, 
    /// <remarks>
    /// 
    /// 					 This value is no longer applicable.
    ///            
    /// </remarks>

    StoresFixedPrice, 
    /// <remarks>
    /// 
    /// 						Second chance offer made to a non-winning bidder on an ended listing.
    /// 						A seller can make an offer to a non-winning bidder when either the winning bidder
    /// 						has failed to pay for an item or the seller has a duplicate of the item.
    /// 						A seller can create a Second Chance Offer immediately after a listing ends and up to
    /// 						60 days after the end of the listing.
    /// 						<br/><br/>
    /// 						eBay does not charge an Insertion Fee,
    /// 						but if the bidder accepts the offer, the regular Final Value Fee is charged.
    /// 						In the case of an Unpaid Item, the seller should ensure that everything has
    /// 						been done to resolve the issue with the winning bidder before sending a
    /// 						Second Chance Offer to another bidder.
    /// 						<br/><br/>
    /// 						See the Unpaid Items Process for details.
    /// 						Make sure you're aware of other rules and restrictions surrounding Second Chance Offers.
    /// 						Use <b>AddSecondChanceItem</b> to submit Second Chance Offers.
    /// 						Listed on eBay, but does not appear when browsing or searching listings.
    /// 					
    /// </remarks>

    PersonalOffer, 
    /// <remarks>
    /// 
    ///             With this listing format, the selling is offering the item at a fixed price, although it is still possible for the seller to negotiate the price with prospective buyers using the Best Offer feature. A fixed-price listing can offer a single item, or if the seller has multiple quantity of the same item, multiple quantity of that same item can be made available for sale through the same listing. Additionally, the seller can set up a multiple-variation, fixed-price listing, where similar items can be sold through the same listing. An example of a multiple-variation, fixed-price listing might be a t-shirt (or another article of clothing) that is available in multiple color and size combinations.
    ///             <br><br>
    ///             Traditionally, listing durations for fixed-prices listings have varied by eBay marketplace and category. Typical listing durations for fixed-price listings ranged from three to 30 days, or GTC (Good 'Til Cancelled). As of April 1, 2019, 'GTC' is the only supported listing duration for all eBay marketplaces with the following exceptions:
    ///             <ul>
    ///             	<li>The following eBay Motors US categories are exempt from this change: <em>Cars & Trucks</em> (6001), <em>Motorcycles</em> (6024), <em>Other Vehicles & Trailers</em> (6038), <em>Boats</em> (26429), <em>Powersports</em> (66466).</li>
    ///             	<li>All child categories under <em>Cars, Motorcycles & Vehicles</em> (9800) categories on the eBay UK and eBay Italy sites are also exempt from this change. </li>
    ///             </ul>
    ///             <br>
    ///             With the 'GTC' listing duration, the listing will remain active as long as the listing shows that inventory is available for purchase (available quantity is '1' or more). For sellers listing motor vehicles on the eBay US Motors, eBay UK, or eBay Italy sites, it is recommended that the seller uses the <b>GetCategoryFeatures</b> call to retrieve the supported listing durations for their particular marketplace and category.
    ///             <br>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note: </b>
    /// 							As long as a fixed-price listing has inventory available, or if the out-of-stock control feature is being used, GTC listings are automatically renewed each month according to the calendar day.
    /// 						</span>
    ///           
    /// </remarks>

    FixedPriceItem, 
    /// <remarks>
    /// 
    /// 					<span class="tablenote"><b>Note: </b> This listing type is no longer applicable as the Half.com site has been shut down.
    /// 					</span>
    /// 					
    /// </remarks>

    Half, 
    /// <remarks>
    /// 
    /// 						This enumeration value represents a (non-Real Estate) classified ad listing. The <code>AdType</code> enumeration value represents Real Estate classified ads. This listing type is only used to solicit inquiries from interested parties. To express interest, a buyer fills in a contact form that eBay forwards to the seller as a lead. This format does not enable buyers and sellers to transact online through eBay, and eBay Feedback is not available for ad format listings. Non-Real Estate classified ads are only available in a limited number of eBay categories, including Business and Industrial categories, Travel, ans Specialty Services.
    /// 						<br><br>
    /// 						Although listing durations may vary by eBay marketplace and category, typical listing durations for (non-Real Estate) classified ads are 30, 60, and 90 days. It is recommended that the seller uses the <b>GetCategoryFeatures</b> call to retrieve the actual listing durations that are supported for real estate ads on a particular marketplace and category.
    /// 					
    /// </remarks>

    LeadGeneration, 
    /// <remarks>
    /// 
    /// 					 This value is no longer applicable.
    /// 					
    /// </remarks>

    Express, 
    /// <remarks>
    /// 
    /// 						This value is no longer applicable, as Shopping.com is no longer a property of eBay, Inc.
    /// 					
    /// </remarks>

    Shopping, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumerated type is used by <b>OrderType</b> and <b>TransactionType</b> to indicate which logistics plan was selected by the buyer at the order or order line item level. Currently, this type is only supporting the "Click and Collect" and digital gift card use cases, but more logistics plan types may be added in the future.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum LogisticsPlanCodeType
{
    /// <remarks>
    /// 
    /// 						This value indicates that the buyer has selected "Click and Collect" as the logistics plan. With the 'Click and Collect' feature, a buyer can purchase certain items on eBay and collect them at a local store. Buyers are notified by eBay once their items are available. The "Click and Collect" feature is only available to large merchants on the eBay UK (site ID - 3), eBay Australia (Site ID - 15), and eBay Germany (Site ID - 77) sites.
    /// 					
    /// </remarks>

    PickUpDropOff, 
    /// <remarks>
    /// 
    /// 						This value indicates that the order or order line item is a digital gift card that will be delivered to the buyer or the recipient of the gift card by email.
    /// 					
    /// </remarks>

    DigitalDelivery, 
    /// <remarks>
    /// 
    /// 						This value is reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Valid application status codes, either MarkUp (application was marked up,
/// 				communication is restored) or MarkDown (application was marked down, no
/// 				communication).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum MarkUpMarkDownEventTypeCodeType
{
    /// <remarks>
    /// 
    /// 						Status indicating the application was or is marked up.
    /// 					
    /// </remarks>

    MarkUp, 
    /// <remarks>
    /// 
    /// 						Status indicating the application was marked down.
    /// 					
    /// </remarks>

    MarkDown, 
    /// <remarks>
    /// 
    /// 						Reserved for future internal or external use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is deprecated.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum MerchDisplayCodeType
{
    /// <remarks>
    /// 
    /// 						This value is not used.
    /// 					
    /// </remarks>

    DefaultTheme, 
    /// <remarks>
    /// 
    /// 						This value is not used.
    /// 					
    /// </remarks>

    StoreTheme, 
    /// <remarks>
    /// 
    /// 						This value is not used.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumerated type is deprecated.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum MerchandizingPrefCodeType
{
    /// <remarks>
    /// 
    /// 						This value is not used.
    /// 					
    /// </remarks>

    OptIn, 
    /// <remarks>
    /// 
    /// 						This value is not used.
    /// 					
    /// </remarks>

    OptOut, 
    /// <remarks>
    /// 
    /// 						This value is not used.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumerated type is used to indicate whether or not a question has been answered.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum MessageStatusTypeCodeType
{
    /// <remarks>
    /// 
    /// 						The question has been answered at least once.
    /// 					
    /// </remarks>

    Answered, 
    /// <remarks>
    /// 
    /// 						The question has not yet been answered.
    /// 					
    /// </remarks>

    Unanswered, 
    /// <remarks>
    /// 
    /// 						Reserved for future or internal use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum MessageTypeCodeType
{
    /// <remarks>
    /// 
    ///             Member to Member message initiated by bidder/potential bidder
    ///             to a seller of a particular item.
    ///           
    /// </remarks>

    AskSellerQuestion, 
    /// <remarks>
    /// 
    ///             Member to Member message initiated as a response
    ///             to an Ask A Question message.
    /// 			<span class="tablenote"><b>Note:</b> 
    /// 				This value is not supported in the <b>MailMessageType</b> field of a <b>GetMemberMessages</b> request.
    /// 			</span>
    ///           
    /// </remarks>

    ResponseToASQQuestion, 
    /// <remarks>
    /// 
    ///             Member to Member message initiated by any eBay member
    ///             to another eBay member.
    /// 			<span class="tablenote"><b>Note:</b> 
    /// 				This value is not supported in the <b>MailMessageType</b> field of a <b>GetMemberMessages</b> request.
    /// 			</span>			
    ///           
    /// </remarks>

    ContactEbayMember, 
    /// <remarks>
    /// 
    ///             Member message between order partners within 90 days
    ///             after creation of the order.
    /// 			<span class="tablenote"><b>Note:</b> 
    /// 				This value is not supported in the <b>MailMessageType</b> field of a <b>GetMemberMessages</b> request.
    /// 			</span>			
    ///           
    /// </remarks>

    ContactTransactionPartner, 
    /// <summary>
    /// Reserved
    /// </summary>
    /// <remarks>
    /// 
    ///             Member to Member message initiated as a response
    ///             to a Contact eBay Member message.
    /// 			<span class="tablenote"><b>Note:</b> 
    /// 				This value is not supported in the <b>MailMessageType</b> field of a <b>GetMemberMessages</b> request.
    /// 			</span>			
    ///           
    /// </remarks>

    ResponseToContacteBayMember, 
    /// <summary>
    /// Reserved
    /// </summary>
    /// <remarks>
    /// 
    ///             Member to Member message initiated by any eBay member
    ///             to another eBay member who has posted on a community forum
    ///             within the past 7 days.
    /// 			<span class="tablenote"><b>Note:</b> 
    /// 				This value is not supported in the <b>MailMessageType</b> field of a <b>GetMemberMessages</b> request.
    /// 			</span>			
    ///           
    /// </remarks>

    ContacteBayMemberViaCommunityLink, 
    /// <remarks>
    /// 
    ///             Reserved for future or internal use.
    /// 			<span class="tablenote"><b>Note:</b> 
    /// 				This value is not supported in the <b>MailMessageType</b> field of a <b>GetMemberMessages</b> request.
    /// 			</span>			
    ///           
    /// </remarks>

    CustomCode, 
    /// <remarks>
    /// 
    ///             All message types.
    ///           
    /// </remarks>

    All, 
    /// <summary>
    /// Reserved
    /// </summary>
    /// <remarks>
    /// 
    ///             Member to Member message initiated by sellers to their
    ///             bidders during an active listing.
    /// 			<span class="tablenote"><b>Note:</b> 
    /// 				This value is not supported in the <b>MailMessageType</b> field of a <b>GetMemberMessages</b> request.
    /// 			</span>			
    ///           
    /// </remarks>

    ContactMyBidder, 
    /// <remarks>
    /// 
    ///             Member message initiated after eBay receives an email sent by an
    ///             eBay member's email client to another eBay member.
    /// 			<span class="tablenote"><b>Note:</b> 
    /// 				This value is not supported in the <b>MailMessageType</b> field of a <b>GetMemberMessages</b> request.
    /// 			</span>			
    ///           
    /// </remarks>

    ContacteBayMemberViaAnonymousEmail, 
    /// <remarks>
    /// 
    ///             Indicates that an inquiry has been sent to the seller regarding the
    /// 			corresponding classified ad listing.
    /// 			<span class="tablenote"><b>Note:</b> 
    /// 				This value is not supported in the <b>MailMessageType</b> field of a <b>GetMemberMessages</b> request.
    /// 			</span>			
    /// 			
    /// </remarks>

    ClassifiedsContactSeller, 
    /// <remarks>
    /// 
    /// 			Indicates that a Best Offer has been made on the seller's corresponding
    /// 			classified ad listing. This message type is only applicable to Classified
    /// 			categories that allow the Best Offer feature, such as motor vehicles.
    /// 			<span class="tablenote"><b>Note:</b> 
    /// 				This value is not supported in the <b>MailMessageType</b> field of a <b>GetMemberMessages</b> request.
    /// 			</span>			
    ///            
    /// </remarks>

    ClassifiedsBestOffer
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumerated type defines the special price treatments that can be set up for listings enabled with the Minimum Advertised Price feature. The Minimum Advertised Price (MAP) feature is only supported on the eBay US site.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum MinimumAdvertisedPriceExposureCodeType
{
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the buyer must add the item to his/her cart before the discounted price can be displayed. To enable this pricing treatment when adding/revising/relisting an item, include the <b>DiscountPriceInfo.MinimumAdvertisedPriceExposure</b> field in an Add/Revise/Relist calls and set its value to <code>PreCheckout</code>.
    /// 					
    /// </remarks>

    PreCheckout, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the discounted price will only be shown to the buyer once the buyer reaches the eBay Checkout page. To enable this pricing treatment when adding/revising/relisting an item, include the <b>DiscountPriceInfo.MinimumAdvertisedPriceExposure</b> field in an Add/Revise/Relist calls and set its value to <code>DuringCheckout</code>.
    /// 					
    /// </remarks>

    DuringCheckout, 
    /// <remarks>
    /// 
    /// 						The value None is no longer valid. If provided in the request, it will be mapped to <code>PreCheckout</code>.
    /// 					
    /// </remarks>

    None, 
    /// <remarks>
    /// 
    /// 						Reserved for future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumerated type defines the values that can be used when adding, modiying, or
/// 				deleting a shipping discount profile (through the <b>ModifyActionCode</b>
/// 				field in <b>SetShippingDiscountProfiles</b>).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum ModifyActionCodeType
{
    /// <remarks>
    /// 
    /// 						This value is used in a <b>SetShippingDiscountProfiles</b> request
    /// 						to create a new shipping discount profile.
    /// 					
    /// </remarks>

    Add, 
    /// <remarks>
    /// 
    /// 						This value is used in a <b>SetShippingDiscountProfiles</b> request
    /// 						to delete an existing shipping discount profile.
    /// 					
    /// </remarks>

    Delete, 
    /// <remarks>
    /// 
    /// 						This value is used in a <b>SetShippingDiscountProfiles</b> request
    /// 						to modify an existing shipping discount profile.
    /// 					
    /// </remarks>

    Update, 
    /// <remarks>
    /// 
    /// 						Reserved for future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 			This enumerated type contains the operations that can be used in a <b>ReviseMyMessagesFolders</b> call.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum MyMessagesFolderOperationCodeType
{
    /// <remarks>
    /// 
    /// 						This enumeration value is used to create one or more custom folders in <b>My eBay Messages</b>. For a 'Display' operation, the new folder name(s) are specified in  one or more <b>FolderName</b> fields. The maximum length of a folder name is 15 characters. Up to 10 new folders can be created with one <b>ReviseMyMessagesFolders</b> call, but this is also limited by how many custom folders exist at the time of the call, as only a maximum of 10 custom folders are supported in <b>My eBay Messages</b>.
    /// 					
    /// </remarks>

    Display, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used to rename one or more existing folders in <b>My eBay Messages</b>. For a 'Rename' operation, the unique identifier(s) of the message folder(s) to rename are specified in one or more <b>FolderID</b> fields, and the new name for the folder(s) are specified in one or more <b>FolderName</b> fields.
    /// 						<br/><br/>
    /// 						The <b>FolderID</b> and <b>FolderName</b> values can be retrieved by calling <b>GetMyMessages</b> with a <b>DetailLevel</b> value set to <code>ReturnSummary</code>, or these folder names and identifiers can be found by navigating to <b>My eBay Messages</b> (Folder ID values are displayed at the end of the browser's URL when that folder is opened).
    /// 						<br/><br/>
    /// 						The maximum length of a folder name is 15 characters. The Inbox and Sent folders cannot be renamed.
    /// 						<br/><br/>
    /// 							<span class="tablenote"><b>Note: </b> If multiple folders will be renamed with one call, the user must pay close attention to the order of the <b>FolderID</b> and <b>FolderName</b> fields, as eBay will process these requests in order according to the placement of the the <b>FolderID</b> and <b>FolderName</b> fields. So, the existing folder identified by the first <b>FolderID</b> field in the request payload will get renamed to the folder name passed into the first <b>FolderName</b> field in the request payload, and so on.
    /// 						</span>
    /// 					
    /// </remarks>

    Rename, 
    /// <remarks>
    /// 
    /// 						This enumeration value is used to remove one or more custom folders in <b>My eBay Messages</b>. For a 'Remove' operation, the folder(s) to remove are specified in one or more <b>FolderID</b> fields. The <b>FolderID</b> values for a <b>My eBay Messages</b> folders can be retrieved by calling <b>GetMyMessages</b> with a <b>DetailLevel</b> value set to <code>ReturnSummary</code>, or these folder IDs can be found by navigating to a specific folder in <b>My eBay Messages</b>, and the ID value for the opened folder is displayed at the end of the browser's URL.
    /// 						<br/><br/>
    /// 						A <b>My eBay Messages</b> folder must be empty before being removed, and an error is returned if a user tries to remove a non-empty folder.
    /// 						<br/><br/>
    /// 						The Inbox and Sent folders cannot be removed under any circumstance.
    /// 					
    /// </remarks>

    Remove, 
    /// <remarks>
    /// 
    /// 						Reserved for future or internal use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Defines all property names that can be used.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum NotificationEventPropertyNameCodeType
{
    /// <remarks>
    /// 
    /// 						Property name for WatchedItemEndingSoon events, enabling a user to specify a time in minutes
    /// 						before the end of the listing. Acceptable values: 5, 10, 15, 30, 60, 75, and 180. For example,
    /// 						to receive a WatchedItemEndingSoon notification 30 minutes before the item listing ends,
    /// 						specify 30.
    /// 					
    /// </remarks>

    TimeLeft, 
    /// <remarks>
    /// 
    /// 						Reserved for future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// MarkedDown, MarkedDownPending
/// </summary>
/// <remarks>
/// 
/// 				Valid notification status codes
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum NotificationEventStateCodeType
{
    /// <remarks>
    /// 
    /// 						Status indicating the notification is newly created
    /// 					
    /// </remarks>

    New, 
    /// <remarks>
    /// 
    /// 						Status indicating the notification was failed
    /// 					
    /// </remarks>

    Failed, 
    /// <remarks>
    /// 
    /// 						This enumeration value is deprecated and should no longer be used.<br><br>Status indicating the end user application is marked down. 
    /// 					
    /// </remarks>

    MarkedDown, 
    /// <remarks>
    /// 
    /// 						Status indicating the notification is pending
    /// 					
    /// </remarks>

    Pending, 
    /// <remarks>
    /// 
    /// 						Status indicating the notification is failed pending
    /// 					
    /// </remarks>

    FailedPending, 
    /// <remarks>
    /// 
    /// 						This enumeration value is deprecated and should no longer be used. <br><br>Status indicating the notification is marked down pending
    /// 					
    /// </remarks>

    MarkedDownPending, 
    /// <remarks>
    /// 
    /// 						Status indicating the notification was successfully delivered
    /// 					
    /// </remarks>

    Delivered, 
    /// <remarks>
    /// 
    /// 						Status indicating the notification was unable to deliver
    /// 					
    /// </remarks>

    Undeliverable, 
    /// <remarks>
    /// 
    /// 						Status indicating the notification was rejected
    /// 					
    /// </remarks>

    Rejected, 
    /// <remarks>
    /// 
    /// 						Status indicating the notification was cancelled. This can be caused by multiple reasons, such as the destination being marked down or an unknown system error.
    /// 					
    /// </remarks>

    Canceled, 
    /// <remarks>
    /// 
    /// 						Reserved for future internal or external use
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// FeedbackForSeller, MyMessagesAlertHeader, MyMessagesAlert, Checkout, ThirdPartyCartCheckout, ItemAddedToBidGroup, ItemRemovedFromBidGroup, AddToWatchList, PlaceOffer, RemoveFromWatchList, AddToBidGroup, RemoveFromBidGroup, ItemsCanceled, ReadyToShip, ReadyForPayout, UnmatchedPaymentReceived, RefundSuccess, RefundFailure, SellerOpenedDispute, BuyerResponseDispute, SellerRespondedToDispute, SellerClosedDispute, OrderInquiryClosed, OrderInquiryOpened, INRBuyerOpenedDispute, OrderInquiryProvideShipmentInformation, OrderInquiryEscalatedToCase, INRBuyerClosedDispute, INRSellerRespondedToDispute, UserIDChanged
/// </summary>
/// <remarks>
/// 
/// 			  Enumerated type that contains the complete list of platform notifications that can be sent out to subscribed users, servers, or applications. Some notifications are only sent to buyers or sellers, and some are sent to both buyers and sellers.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum NotificationEventTypeCodeType
{
    /// <remarks>
    /// 
    /// 					  This notification is for internal or future use.
    /// 					
    /// </remarks>

    None, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed buyer when another buyer has outbid
    /// 						(placed a higher bid) the subscribed buyer on an auction listing, and
    /// 						the subscribed buyer is no longer the current high bidder.
    /// 						<br><br>
    /// 						This notification is only applicable for auction listings.
    /// 					
    /// </remarks>

    OutBid, 
    /// <remarks>
    /// 
    /// 						This notification is sent to all subscribed bidders of an auction item and to
    /// 						the subscribed seller of the auction item as soon as the auction listing ends
    /// 						with or without a winning bidder. This notification will also be sent to
    /// 						subscribed bidders and the subscribed seller if the auction ends as a
    /// 						result of a buyer using the auction listing's Buy It Now feature.
    /// 						<br><br>
    /// 						This notification is only applicable for auction listings.
    /// 					
    /// </remarks>

    EndOfAuction, 
    /// <remarks>
    /// 
    /// 						This notification is sent to the subscribed seller when the winning bidder
    /// 						or buyer has paid for the auction or fixed-price item and completed the checkout process.
    /// 						<br><br>
    /// 						For multiple line item orders, an <b>AuctionCheckoutComplete</b> notification is only generated for one of the line items in the order.
    /// 					
    /// </remarks>

    AuctionCheckoutComplete, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed seller when a buyer/winning bidder
    /// 						is requesting a total price before paying for the item.
    /// 						<br><br>
    /// 						This notification is applicable for auction listings and for fixed-price listings that do not require immediate payment.
    /// 					
    /// </remarks>

    CheckoutBuyerRequestsTotal, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed buyer or seller when that buyer or seller has left Feedback for the other party in the order, or has received Feedback from the other party in the order. Feedback is given at the order line item level.
    /// 					
    /// </remarks>

    Feedback, 
    /// <summary>
    /// 415
    /// 
    /// Avoid
    /// Feedback
    /// </summary>
    /// <remarks>
    /// 
    /// 						This notification is deprecated. Use the <b>Feedback</b> notification instead.
    /// 					
    /// </remarks>

    FeedbackForSeller, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed seller each time a buyer purchases an item in a single or multiple-quantity, fixed-price listing.
    /// 						<br><br>
    /// 						This notification is only applicable for fixed-price listings.
    /// 					
    /// </remarks>

    FixedPriceTransaction, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed buyer when that buyer is offered a Second Chance Offer from the seller, after that buyer failed to win the original auction of the item.
    /// 						<br><br>
    /// 						If subscribed to by a buyer and when applicable, this notification will appear in the <b>GetItem</b> call response.
    /// 					
    /// </remarks>

    SecondChanceOffer, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed seller when an eBay user has used the Ask a Question feature on the seller's active listing. An eBay user does not have to be an active bidder on an auction listing to ask a seller a question.
    /// 						<br><br>
    /// 						If subscribed to by a seller and when applicable, this notification will appear in the <b>GetMemberMessages</b> call response.
    /// 					
    /// </remarks>

    AskSellerQuestion, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed seller each time one of the subscribed seller's items is listed or relisted. This notification is also triggered when the Unpaid Item preferences relists an item for the seller.
    /// 					
    /// </remarks>

    ItemListed, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed seller when one of the subscribed seller's items is revised.
    /// 						<br><br>
    /// 						If subscribed to by a seller and when applicable, this notification will appear in the <b>GetItem</b> call response.
    /// 					
    /// </remarks>

    ItemRevised, 
    /// <remarks>
    /// 
    /// 						<span class="tablenote"><b>Note: </b> This notification is no longer supported since the Trading API no longer supports seller-initiated cancellation requests.
    /// 						</span>
    /// 						This notification is sent to a subscribed seller each time a buyer responds to a Cancel Transaction request.
    /// 					
    /// </remarks>

    BuyerResponseDispute, 
    /// <remarks>
    /// 
    /// 						<span class="tablenote"><b>Note: </b> This notification is no longer supported since the Trading API no longer supports seller-initiated cancellation requests.
    /// 						</span>
    /// 						This notification is sent to a subscribed buyer if a seller initiates a Cancel Transaction request.
    /// 					
    /// </remarks>

    SellerOpenedDispute, 
    /// <remarks>
    /// 
    /// 						<span class="tablenote"><b>Note: </b> This notification is no longer supported since dispute calls in the Trading API are deprecated.
    /// 						</span>
    /// 						This notification is sent to a subscribed buyer each time a seller responds to an Item Not Received or Return case that the subscribed buyer has opened up against the seller.
    /// 					
    /// </remarks>

    SellerRespondedToDispute, 
    /// <remarks>
    /// 
    /// 						<span class="tablenote"><b>Note: </b> This notification is no longer supported since dispute calls in the Trading API are deprecated.
    /// 						</span>
    /// 						This notification is sent to the subscribed buyer and seller if the seller closes a Cancel Transaction request.
    /// 					
    /// </remarks>

    SellerClosedDispute, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed seller if a potential buyer has made a Best Offer on a Best Offer-enabled listing.
    /// 						<br><br>
    /// 						If subscribed to by a seller and when applicable, this notification will appear in the <b>GetBestOffers</b> call response.
    /// 						<br/><br/>
    /// 						<span class="tablenote"><b>Note: </b>
    /// 						The Best Offer feature can be set for auction listings on the US, Canada, UK, Germany, Australia, France, Italy, and Spain marketplaces, but keep in mind that Best Offer and Buy It Now cannot be used simultaneously in a listing. Also, once a qualifying bid is made on an auction listing, the Best Offer feature is disabled, and any pending offer or counteroffers are no longer valid.
    /// 						</span>
    /// 					
    /// </remarks>

    BestOffer, 
    /// <remarks>
    /// 
    /// 					   This notification is deprecated and can no longer be used.
    /// 					
    /// </remarks>

    MyMessagesAlertHeader, 
    /// <remarks>
    /// 
    /// 					   This notification is deprecated. Use <b>MyMessagesHighPriorityMessage</b> instead.
    /// 					
    /// </remarks>

    MyMessagesAlert, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed buyer or seller when eBay sends a message to that user's InBox.
    /// 						<br><br>
    /// 						If subscribed to by a buyer or seller, and when applicable, this notification will appear in the <b>GetMyMessages</b> call response. For this notification to be returned in <b>GetMyMessages</b>, the <b>DetailLevel</b> value in the <b>GetMyMessages</b> request must be set to <code>ReturnHeaders</code>.
    /// 						<br><br>
    /// 						<b>MyMessageseBayMessageHeader</b> and <b>MyMessageseBayMessage</b> cannot be subscribed
    /// 						to at the same time or specified in the same call.
    /// 					
    /// </remarks>

    MyMessageseBayMessageHeader, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed buyer or seller when eBay sends a message to that user's InBox.
    /// 						<br><br>
    /// 						If subscribed to by a buyer or seller, and when applicable, this notification will appear in the <b>GetMyMessages</b> call response. For this notification to be returned in <b>GetMyMessages</b>, the <b>DetailLevel</b> value in the <b>GetMyMessages</b> request must be set to <code>ReturnMessages</code>.
    /// 						<br><br>
    /// 						<b>MyMessageseBayMessageHeader</b> and <b>MyMessageseBayMessage</b> cannot be subscribed
    /// 						to at the same time or specified in the same call.
    /// 					
    /// </remarks>

    MyMessageseBayMessage, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed buyer or seller when another eBay user sends a message to that user's InBox.
    /// 						<br><br>
    /// 						If subscribed to by a buyer or seller, and when applicable, this notification will appear in the <b>GetMyMessages</b> call response. For this notification to be returned in <b>GetMyMessages</b>, the <b>DetailLevel</b> value in the <b>GetMyMessages</b> request must be set to <code>ReturnHeaders</code>.
    /// 						<br><br>
    /// 						<b>MyMessagesM2MMessageHeader</b> and <b>MyMessagesM2MMessage</b> cannot
    /// 						be subscribed to at the same time or specified in the same call.
    /// 					
    /// </remarks>

    MyMessagesM2MMessageHeader, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed buyer or seller when another eBay user sends a message to that user's InBox.
    /// 						<br><br>
    /// 						If subscribed to by a buyer or seller, and when applicable, this notification will appear in the <b>GetMyMessages</b> call response. For this notification to be returned in <b>GetMyMessages</b>, the <b>DetailLevel</b> value in the <b>GetMyMessages</b> request must be set to <code>ReturnMessages</code>.
    /// 						<br><br>
    /// 						<b>MyMessagesM2MMessageHeader</b> and <b>MyMessagesM2MMessage</b> cannot
    /// 						be subscribed to at the same time or specified in the same call.
    /// 					
    /// </remarks>

    MyMessagesM2MMessage, 
    /// <remarks>
    /// 
    /// 					  This event type has been deprecated along with legacy user disputes. As an alternative, subscribe to <b>EBPMyResponseDue</b> event type.
    /// 					
    /// </remarks>

    INRBuyerOpenedDispute, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed seller when a buyer responds to an Item Not Received case opened by that buyer.
    /// 					
    /// </remarks>

    INRBuyerRespondedToDispute, 
    /// <remarks>
    /// 
    /// 						This event type has been deprecated along with legacy user disputes. As an alternative, subscribe to <b>EBPClosedCase</b> event type.
    /// 					
    /// </remarks>

    INRBuyerClosedDispute, 
    /// <remarks>
    /// 
    /// 						This event type has been deprecated along with legacy user disputes.
    /// 					
    /// </remarks>

    INRSellerRespondedToDispute, 
    /// <remarks>
    /// 
    /// 					   This notification is deprecated. Use <b>AuctionCheckoutComplete</b> instead.
    /// 					
    /// </remarks>

    Checkout, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed buyer when a listing that the buyer is watching is ending soon. This event has a <b>TimeLeft</b> property that defines the 'ending soon' threshold value.
    /// 					
    /// </remarks>

    WatchedItemEndingSoon, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed buyer or seller when a listing ends. This notification can be triggered by an
    /// 						<b>ItemWon</b>, an <b>ItemSold</b>, or an <b>ItemUnsold</b> event.
    /// 					
    /// </remarks>

    ItemClosed, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed buyer or seller when a listing is administratively taken down by eBay.
    /// 					
    /// </remarks>

    ItemSuspended, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed seller when an eBay listing ends in a sale.
    /// 					
    /// </remarks>

    ItemSold, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed seller when the duration of an eBay listing has been extended.
    /// 					
    /// </remarks>

    ItemExtended, 
    /// <remarks>
    /// 
    /// 						This notification is no longer applicable.
    /// 					
    /// </remarks>

    UserIDChanged, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed buyer or seller when that user has changed the email address associated with the user account. This notification is available for Client Alerts and for SMS only. Not applicable to Platform Notifications.
    /// 					
    /// </remarks>

    EmailAddressChanged, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed buyer or seller when that user has changed the password used for login. This notification is available for Client Alerts and for SMS only. Not applicable to Platform Notifications.
    /// 					
    /// </remarks>

    PasswordChanged, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed buyer or seller when that user has changed the password hint. This notification is available for Client Alerts and for SMS only. Not applicable to Platform Notifications.
    /// 					
    /// </remarks>

    PasswordHintChanged, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed seller when that seller has changed the payment methods used to pay seller fees for the account. This notification is available for Client Alerts and for SMS only. Not applicable to Platform Notifications.
    /// 					
    /// </remarks>

    PaymentDetailChanged, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed buyer or seller when that eBay user's account is suspended. This notification is available for Client Alerts and for SMS only. Not applicable to Platform Notifications.
    /// 					
    /// </remarks>

    AccountSuspended, 
    /// <remarks>
    /// 
    /// 						An informational alert about account activity. A buyer or seller can subscribe to receive an account activity summary via SMS or Client Alerts. The user can specify the period (time range) for the account summary and can select how often the summary is to be sent. It is not triggered by an event but rather by an eBay daemon process that monitors a schedule database.
    /// 					
    /// </remarks>

    AccountSummary, 
    /// <summary>
    /// 621
    /// 707
    /// NoOp
    /// </summary>
    /// <remarks>
    /// 
    /// 					   This notification is deprecated.
    /// 					
    /// </remarks>

    ThirdPartyCartCheckout, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed seller when the seller has
    /// 						revised a listing and added a nonprofit organization to receive a percentage (10 percent up to 100 percent) of the proceeds.
    /// 					
    /// </remarks>

    ItemRevisedAddCharity, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed buyer when that buyer adds an item to the Watch List.
    /// 						<br><br>
    /// 						If subscribed to by a buyer and when applicable, this notification will appear in the <b>GetItem</b> call response.
    /// 					
    /// </remarks>

    ItemAddedToWatchList, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed buyer when that buyer removes an item from the Watch List.
    /// 						<br><br>
    /// 						If subscribed to by a buyer and when applicable, this notification will appear in the <b>GetItem</b> call response.
    /// 					
    /// </remarks>

    ItemRemovedFromWatchList, 
    /// <remarks>
    /// 
    /// 					   This notification is deprecated.
    /// 					
    /// </remarks>

    ItemAddedToBidGroup, 
    /// <remarks>
    /// 
    /// 					   This notification is deprecated.
    /// 					
    /// </remarks>

    ItemRemovedFromBidGroup, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed buyer or seller when that user leaves feedback for an order partner.
    /// 						<br><br>
    /// 						If subscribed to by a buyer or seller, and when applicable, this notification will appear in the <b>GetFeedback</b> call response.
    /// 					
    /// </remarks>

    FeedbackLeft, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed buyer or seller when that user receives feedback from an order partner.
    /// 						<br><br>
    /// 						If subscribed to by a buyer or seller, and when applicable, this notification will appear in the <b>GetFeedback</b> call response.
    /// 					
    /// </remarks>

    FeedbackReceived, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed buyer or seller when that user's Feedback star has changed.
    /// 						Sent to a subscribing third party when a user's Feedback star level changes.
    /// 						<br><br>
    /// 						If subscribed to by a buyer or seller, and when applicable, this notification will appear in the <b>GetUser</b> call response.
    /// 					
    /// </remarks>

    FeedbackStarChanged, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed buyer when that buyer places a bid for an auction item.
    /// 					  <br><br>
    /// 						If subscribed to by a buyer and when applicable, this notification will appear in the <b>GetItem</b> call response.
    /// 					
    /// </remarks>

    BidPlaced, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed seller each time a prospective buyer places a bid for the seller's auction item.
    /// 						<br><br>
    /// 						If subscribed to by a seller and when applicable, this notification will appear in the <b>GetItem</b> call response.
    /// 					
    /// </remarks>

    BidReceived, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed buyer if that buyer is the winner of an auction item.
    /// 						<br><br>
    /// 						If subscribed to by a buyer and when applicable, this notification will appear in the <b>GetItem</b> call response.
    /// 					
    /// </remarks>

    ItemWon, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed buyer if that buyer did not end up as the highest bidder for an auction item.
    /// 						<br><br>
    /// 						If subscribed to by a buyer and when applicable, this notification will appear in the <b>GetItem</b> call response.
    /// 					
    /// </remarks>

    ItemLost, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed seller when an auction listing ends with no winning bidder or when a fixed-price listing ends with no sale(s).
    /// 						<br><br>
    /// 						If subscribed to by a seller and when applicable, this notification will appear in the <b>GetItem</b> call response.
    /// 					
    /// </remarks>

    ItemUnsold, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed buyer when a seller makes a counter offer to the buyer's Best Offer on an item.
    /// 						<br><br>
    /// 						If subscribed to by a buyer and when applicable, this notification will appear in the <b>GetBestOffers</b> call response.
    /// 					
    /// </remarks>

    CounterOfferReceived, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed buyer when a seller declines the buyer's Best Offer on an item.
    /// 						<br><br>
    /// 						If subscribed to by a buyer and when applicable, this notification will appear in the <b>GetBestOffers</b> call response.
    /// 					
    /// </remarks>

    BestOfferDeclined, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed seller each time a prospective buyer places a Best Offer on an item.
    /// 					
    /// </remarks>

    BestOfferPlaced, 
    /// <remarks>
    /// 
    /// 						This notification is deprecated. Use <b>ItemAddedToWatchList</b> notification instead.
    /// 					
    /// </remarks>

    AddToWatchList, 
    /// <remarks>
    /// 
    /// 						This notification is deprecated. Use <b>BidPlaced</b>  notification instead.
    /// 					
    /// </remarks>

    PlaceOffer, 
    /// <remarks>
    /// 
    /// 						This notification is deprecated. Use <b>ItemRemovedFromWatchList</b> notification instead. ItemRemovedFromWatchList
    /// 					
    /// </remarks>

    RemoveFromWatchList, 
    /// <remarks>
    /// 
    /// 						This notification is deprecated.
    /// 					
    /// </remarks>

    AddToBidGroup, 
    /// <remarks>
    /// 
    /// 						This notification is deprecated.
    /// 					
    /// </remarks>

    RemoveFromBidGroup, 
    /// <remarks>
    /// 
    /// 						This notification is deprecated.
    /// 					
    /// </remarks>

    ItemsCanceled, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed buyer or seller if that user's authentication token is revoked.
    /// 						<br><br>
    /// 						If subscribed to by a buyer or seller, and when applicable, this notification will appear in the <b>GetTokenStatus</b> call response.
    /// 					
    /// </remarks>

    TokenRevocation, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed seller when that seller's Bulk Data Exchange job completes.
    /// 					
    /// </remarks>

    BulkDataExchangeJobCompleted, 
    /// <remarks>
    /// 
    /// 					  Reserved for future use.
    /// 					
    /// </remarks>

    CustomCode, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed buyer and seller when that seller has marked an item as 'shipped'.
    /// 					
    /// </remarks>

    ItemMarkedShipped, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed buyer and seller when that seller has marked an order as 'paid'.
    /// 					
    /// </remarks>

    ItemMarkedPaid, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribing buyer or seller when a response to the eBay Money Back Guarantee case is due from that user. When an eBay Money Back Guarantee case is opened, this notification is only sent to the seller involved in the case and not the buyer.<br><br>This notification is also sent to a subscribed seller when the buyer has opened up either of the following:<ul><li>an Item Not Received inquiry against an order line item</li><li>an Item Not Received case against that seller.</li></ul>
    /// 		  		
    /// </remarks>

    EBPMyResponseDue, 
    /// <remarks>
    /// 
    /// 						This notification is sent to the subscribed buyer or seller when a response to the eBay Money Back Guarantee case is due from the other party in the case.
    /// 		  		
    /// </remarks>

    EBPOtherPartyResponseDue, 
    /// <remarks>
    /// 
    /// 						This notification is sent to the subscribed buyer or seller when an eBay Money Back Guarantee case is escalated to eBay customer support.<br>This notification is also sent to a subscribed seller when an Item Not Received inquiry against an order line item has been escalated to an eBay Money Back Guarantee case.
    /// 		  		
    /// </remarks>

    EBPEscalatedCase, 
    /// <remarks>
    /// 
    /// 						This notification is sent to the subscribed buyer or seller when the decision of an eBay Money Back Guarantee case is appealed.
    /// 		  		
    /// </remarks>

    EBPAppealedCase, 
    /// <remarks>
    /// 
    /// 						This notification is sent to the subscribed seller when payment (to eBay or buyer) related to the outcome of an eBay Money Back Guarantee case is due.
    /// 		  		
    /// </remarks>

    EBPMyPaymentDue, 
    /// <remarks>
    /// 
    /// 						This notification is sent to the subscribed seller when payment (to eBay or buyer) related to the outcome of an eBay Money Back Guarantee case is processed.
    /// 		  		
    /// </remarks>

    EBPPaymentDone, 
    /// <remarks>
    /// 
    /// 						This notification is sent to the subscribed buyer or seller when an appeal of an eBay Money Back Guarantee case decision has been closed.
    /// 		  		
    /// </remarks>

    EBPClosedAppeal, 
    /// <remarks>
    /// 
    /// 						This notification is sent to the subscribed buyer or seller when an eBay Money Back Guarantee case has been closed.<br><br>This notification can also be sent to the subscribed seller when the buyer has closed either of the following:<ul><li>an Item Not Received inquiry against an order line item</li><li>an Item Not Received case opened by that buyer</li></ul>
    /// 		  		
    /// </remarks>

    EBPClosedCase, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed buyer or seller when that user receives a high-priority message in InBox.
    /// 						<br><br>
    /// 						If subscribed to by a buyer or seller, and when applicable, this notification will appear in the <b>GetMyMessages</b> call response. For this notification to be returned in <b>GetMyMessages</b>, the <b>DetailLevel</b> value in the <b>GetMyMessages</b> request must be set to <code>ReturnMessages</code>.
    /// 						<br><br>
    /// 						<b>MyMessagesHighPriorityMessage</b>,  <b>MyMessagesM2MMessage</b>, and <b>MyMessagesHighPriorityMessageHeader</b> cannot
    /// 						be subscribed to at the same time or specified in the same call.
    /// 					
    /// </remarks>

    MyMessagesHighPriorityMessage, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed buyer or seller when that user receives a high-priority message in InBox.
    /// 						<br><br>
    /// 						If subscribed to by a buyer or seller, and when applicable, this notification will appear in the <b>GetMyMessages</b> call response. For this notification to be returned in <b>GetMyMessages</b>, the <b>DetailLevel</b> value in the <b>GetMyMessages</b> request must be set to <code>ReturnHeaders</code>.
    /// 						<br><br>
    /// 						<b>MyMessagesHighPriorityMessage</b>,  <b>MyMessagesM2MMessage</b>, and <b>MyMessagesHighPriorityMessageHeader</b> cannot
    /// 						be subscribed to at the same time or specified in the same call.
    /// 					
    /// </remarks>

    MyMessagesHighPriorityMessageHeader, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed buyer or seller when an eBay Money Back Guarantee case has been put on hold by eBay customer support.
    /// 		  		
    /// </remarks>

    EBPOnHoldCase, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed seller after the buyer's payment on an order has cleared.
    /// 					
    /// </remarks>

    ReadyToShip, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed seller when eBay is prepared to send the seller's funds for an order that was previously placed on hold.
    /// 					
    /// </remarks>

    ReadyForPayout, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed buyer when the listing of the auction item where the buyer has an active bid is about
    /// 						to end. This event has a <b>TimeLeft</b> property that defines the 'ending soon' threshold value.
    /// 					
    /// </remarks>

    BidItemEndingSoon, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed buyer when an item in the buyer's shopping cart is about
    /// 						to end. This event has a <b>TimeLeft</b> property that defines the 'ending soon' threshold value.
    /// 					
    /// </remarks>

    ShoppingCartItemEndingSoon, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed buyer or seller when a return request involving those users is created.
    /// 					
    /// </remarks>

    ReturnCreated, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed seller when a return request is waiting for information from the seller, like a Return Merchandise Authorization (RMA) number or a correct return address.
    /// 					
    /// </remarks>

    ReturnWaitingForSellerInfo, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed buyer or seller when information from the seller (e.g. a Return Merchandise Authorization number) is overdue.
    /// 					
    /// </remarks>

    ReturnSellerInfoOverdue, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed buyer or seller when the buyer has shipped a return item back to the seller.
    /// 					
    /// </remarks>

    ReturnShipped, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed buyer or seller when a return item is received by the seller.
    /// 					
    /// </remarks>

    ReturnDelivered, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed buyer or seller when a refund to the buyer is overdue on a return.
    /// 					
    /// </remarks>

    ReturnRefundOverdue, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed buyer or seller when a return request is closed.
    /// 					
    /// </remarks>

    ReturnClosed, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed buyer or seller when a return request is escalated into a eBay Money Back Guarantee case.
    /// 					
    /// </remarks>

    ReturnEscalated, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed seller when a buyer has requested an order cancellation.
    /// 					
    /// </remarks>

    BuyerCancelRequested, 
    /// <remarks>
    /// 
    /// 						This notification is no longer applicable. Do not use.
    /// 					
    /// </remarks>

    UnmatchedPaymentReceived, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed seller when a refund to the buyer has been successfully processed.
    /// 					
    /// </remarks>

    RefundSuccess, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed seller when a refund to the buyer has failed.
    /// 					
    /// </remarks>

    RefundFailure, 
    /// <remarks>
    /// 
    /// 						This event type has been deprecated along with legacy user disputes. As an alternative, subscribe to <b>EBPMyResponseDue</b> event type.
    /// 					
    /// </remarks>

    OrderInquiryOpened, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed seller alerting the seller that the buyer will soon be eligible to escalate an Item Not Received inquiry into an eBay Money Back Guarantee case.
    /// 					
    /// </remarks>

    OrderInquiryReminderForEscalation, 
    /// <remarks>
    /// 
    /// 						This event type has been deprecated along with legacy user disputes. 
    /// 					
    /// </remarks>

    OrderInquiryProvideShipmentInformation, 
    /// <remarks>
    /// 
    /// 						This event type has been deprecated along with legacy user disputes. As an alternative, subscribe to <b>EBPClosedCase</b> event type.
    /// 					
    /// </remarks>

    OrderInquiryClosed, 
    /// <remarks>
    /// 
    /// 						This event type has been deprecated along with legacy user disputes. As an alternative, subscribe to <b>EBPEscalatedCase</b> event type.
    /// 					
    /// </remarks>

    OrderInquiryEscalatedToCase, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed buyer when an In-Store Pickup or Click and Collect order is ready to be picked up at the merchant's store.
    /// 					
    /// </remarks>

    ItemReadyForPickup, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed seller when the quantity of a multiple-quantity, Good 'Til Cancelled, fixed-price listing has reached '0'. This notification will only be sent if the seller has the out-of-stock feature turned on in My eBay Preferences.
    /// 					
    /// </remarks>

    ItemOutOfStock, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed seller if an eBay courier was unable to deliver an eBay Scheduled Delivery order to a buyer. This notification is only applicable for eBay Scheduled Delivery orders, which are only available in the London (UK) area.
    /// 					
    /// </remarks>

    BuyerNoShow, 
    /// <remarks>
    /// 
    /// 						This notification is no longer applicable.
    /// 					
    /// </remarks>

    WebnextMobilePhotoSync, 
    /// <remarks>
    /// 
    /// 						This notification is sent to a subscribed buyer if payment is still due for an order.
    /// 					
    /// </remarks>

    PaymentReminder, 
    /// <remarks>
    /// 
    ///             This notification is sent to a subscribed seller if an eBay courier has picked up an eBay On Demand Delivery order from a store for delivery to a buyer. This notification is only applicable for eBay On Demand Delivery orders, which are only available in the London (UK) area.
    /// 					
    /// </remarks>

    EBNOrderPickedUp, 
    /// <remarks>
    /// 
    ///             This notification is sent to a subscribed seller if an eBay On Demand Delivery order has been cancelled. This notification is only applicable for eBay On Demand Delivery orders, which are only available in the London (UK) area.
    /// 					
    /// </remarks>

    EBNOrderCanceled, 
    /// <remarks>
    /// 
    ///              This notification is sent to a subscribed buyer or seller if the status of a member-to-member message has changed.
    /// 					
    /// </remarks>

    M2MMessageStatusChange
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// NonSchemaSOAP
/// </summary>
/// <remarks>
/// 
/// 				This enumeration type contains the payloads to use for delivering platform notifications.
/// 				<br>
/// 				<br>
/// 				<span class="tablenote"><strong>Note:</strong>
/// 					The notification payload type defaults to <code>eBLSchemaSOAP</code>, so the <strong>NotificationPayloadType</strong> field no longer has to be included in a <strong>SetNotificationPreferences</strong> call.
/// 				</span>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum NotificationPayloadTypeCodeType
{
    /// <remarks>
    /// 
    /// 						The only schema format supported for both standard XML and SOAP API payloads.
    /// 					
    /// </remarks>

    eBLSchemaSOAP, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Defines roles for platform notifications.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum NotificationRoleCodeType
{
    /// <remarks>
    /// 
    /// 						(in) Specifies that you want to set or return application-level
    /// 						preferences. Default value.
    /// 					
    /// </remarks>

    Application, 
    /// <remarks>
    /// 
    /// 						(in) Specifies that you want to set or return user-level preferences.
    /// 					
    /// </remarks>

    User, 
    /// <remarks>
    /// 
    /// 						(in) Specifies that you want to set or return user data-level preferences.
    /// 					
    /// </remarks>

    UserData, 
    /// <remarks>
    /// 
    /// 						(in) Specifies that you want to set or return event-level preferences.
    /// 					
    /// </remarks>

    Event, 
    /// <remarks>
    /// 
    /// 						Reserved for future use
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// Authenticated, Default, Invalid, Shipped
/// </summary>
/// <remarks>
/// 
/// 				Enumerated type that defines the possible values for order states. Some of these values can be used as <b>OrderStatus</b> filters in the <b>GetOrders</b> request payload, and some of these values may be returned in any of the order management calls under the <b>OrderStatus</b> field. See the individual value descriptions for more information on how they are used and/or when they are returned.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum OrderStatusCodeType
{
    /// <remarks>
    /// 
    /// 						This value indicates that the order is not yet complete. An order in the <code>Active</code> state means that the buyer has not initiated payment for the order. While an order is in this state, it can be combined into a <a href="https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/manage-fulfill-combine-invoices.html" target="_blank">Combined Invoice</a>, a buyer can request a cancellation, and/or a seller can update payment details (including a change in order price) or shipping details (including shipping cost and shipping service).
    /// 						<br><br>
    /// 						This value can be used a filter value in the <b>OrderStatus</b> field of the <b>GetOrders</b> request payload, and it can also be returned in any of the order management calls.
    /// 					
    /// </remarks>

    Active, 
    /// <remarks>
    /// 
    /// 						This value can be used a filter value in the <b>OrderStatus</b> field, and if used, all inactive orders will be returned.
    /// 					
    /// </remarks>

    Inactive, 
    /// <remarks>
    /// 
    /// 						This value indicates that the order is paid for and complete. An order in the <code>Completed</code> state means that no other changes to the order can be made.
    /// 						<br><br>
    /// 						This value can be used a filter value in the <b>OrderStatus</b> field of the <b>GetOrders</b> request payload, and it can also be returned in any of the order management calls.
    /// 					
    /// </remarks>

    Completed, 
    /// <remarks>
    /// 
    /// 						This value indicates that the order has been cancelled. Depending on whether payment was made or not, the seller may also need to refund the buyer after an order is cancelled.
    /// 						<br><br>
    /// 						This value can be used a filter value in the <b>OrderStatus</b> field of the <b>GetOrders</b> request payload, and it can also be returned in any of the order management calls.
    /// 					
    /// </remarks>

    Cancelled, 
    /// <remarks>
    /// 
    /// 						This enumeration value was only used for the deprecated Half.com site, so is no longer applicable and should not be used as an <b>OrderStatus</b> value in the <b>GetOrders</b> request payload.
    /// 					
    /// </remarks>

    Shipped, 
    /// <remarks>
    /// 
    /// 						This value is not used.
    /// 					
    /// </remarks>

    Default, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable and should not be used as an <b>OrderStatus</b> value in the <b>GetOrders</b> request payload.
    /// 					
    /// </remarks>

    Authenticated, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the order is currently in the state of being processed, but is not yet complete.
    /// 						<br><br>
    /// 						This value is not supported by the <b>OrderStatus</b> field of the <b>GetOrders</b> request payload, but it can be returned in any of the order management calls.
    /// 					
    /// </remarks>

    InProcess, 
    /// <remarks>
    /// 
    /// 						This enumeration value is no longer applicable and should not be used as an <b>OrderStatus</b> value in the <b>GetOrders</b> request payload.
    /// 					
    /// </remarks>

    Invalid, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode, 
    /// <remarks>
    /// 
    /// 						This enumeration value is passed into the <b>OrderStatus</b> of <b>GetOrders</b> to retrieve orders in all states. This is the default value. This value is not applicable to the response payloads of the order management calls.
    /// 					
    /// </remarks>

    All, 
    /// <remarks>
    /// 
    /// 						This value indicates that a buyer has initiated a cancellation request on the order. If a seller sees an order in this state, that seller must either approve or reject the cancellation request through My eBay Web flows or through the Post-Order API cancellation calls.
    /// 						<br/><br/>
    /// 						This enumeration value cannot be used as an <b>OrderStatus</b> value in the <b>GetOrders</b> request payload.
    /// 					
    /// </remarks>

    CancelPending
}

}

namespace eBay.Service.Core.Soap
{

[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum OrderStatusFilterCodeType
{
    /// <remarks>
    /// 
    /// 						All applicable sold listings, regardless of 
    /// 						their Paid or Shipped status.
    /// 					
    /// </remarks>

    All, 
    /// <remarks>
    /// 
    /// 						Sold listings that have not yet been marked as
    /// 						Paid in My eBay.
    /// 					
    /// </remarks>

    AwaitingPayment, 
    /// <remarks>
    /// 
    /// 						Sold listings that have not yet been marked as
    /// 						Shipped in My eBay.
    /// 					
    /// </remarks>

    AwaitingShipment, 
    /// <remarks>
    /// 
    /// 						Sold listings that have been marked as
    /// 						Paid and Shipped in My eBay.
    /// 					
    /// </remarks>

    PaidAndShipped, 
    /// <remarks>
    /// 
    /// 						Reserved for future or internal use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// PaymentPendingWithEscrow, PaidWithEscrow, EscrowPaymentCancelled, PaymentPendingWithPaisaPay, PaidWithPaisaPay, PaymentPendingWithPaisaPayEscrow, PaidWithPaisaPayEscrow, PaisaPayNotPaid, PaymentPendingWithPayPal, PaidWithPayPal
/// </summary>
/// <remarks>
/// 
/// 			Enumerated type that lists the possible states of buyer payment for an order. 
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum PaidStatusCodeType
{
    /// <remarks>
    /// 
    /// 						This enumeration value is returned if the buyer has completed checkout, but eBay cannot confirm whether or not the buyer has paid for the order. It is possible that the buyer has paid with an 'offline' payment method, but the order has not been marked as paid.
    /// 					
    /// </remarks>

    NotPaid, 
    /// <remarks>
    /// 
    /// 						This enumeration value is returned if the buyer has not completed the checkout process and so has not made payment.
    /// 					
    /// </remarks>

    BuyerHasNotCompletedCheckout, 
    /// <remarks>
    /// 
    /// 						This value is deprecated and should no longer be returned.
    /// 					
    /// </remarks>

    PaymentPendingWithPayPal, 
    /// <remarks>
    /// 
    /// 						This value is deprecated and should no longer be returned.
    /// 					
    /// </remarks>

    PaidWithPayPal, 
    /// <remarks>
    /// 
    /// 						This enumeration value is returned if the order was marked as paid by eBay or the seller.
    /// 					
    /// </remarks>

    MarkedAsPaid, 
    /// <remarks>
    /// 
    /// 						No longer an applicable value.
    /// 						
    /// </remarks>

    PaymentPendingWithEscrow, 
    /// <remarks>
    /// 
    /// 						No longer an applicable value.
    /// 						
    /// </remarks>

    PaidWithEscrow, 
    /// <remarks>
    /// 
    /// 						No longer an applicable value.
    /// 						
    /// </remarks>

    EscrowPaymentCancelled, 
    /// <remarks>
    /// 
    /// 						PaisaPay is a deprecated payment method, so this value is no longer applicable.
    /// 						
    /// </remarks>

    PaymentPendingWithPaisaPay, 
    /// <remarks>
    /// 
    /// 						PaisaPay is a deprecated payment method, so this value is no longer applicable.
    /// 						
    /// </remarks>

    PaidWithPaisaPay, 
    /// <remarks>
    /// 
    /// 						This enumeration value is returned if the buyer's payment is in process, but not yet complete.
    /// 					
    /// </remarks>

    PaymentPending, 
    /// <remarks>
    /// 
    /// 						PaisaPay is a deprecated payment method, so this value is no longer applicable.
    /// 						
    /// </remarks>

    PaymentPendingWithPaisaPayEscrow, 
    /// <remarks>
    /// 
    /// 						PaisaPay is a deprecated payment method, so this value is no longer applicable.
    /// 						
    /// </remarks>

    PaidWithPaisaPayEscrow, 
    /// <remarks>
    /// 
    /// 						PaisaPay is a deprecated payment method, so this value is no longer applicable.
    /// 						
    /// </remarks>

    PaisaPayNotPaid, 
    /// <remarks>
    /// 
    /// 						This enumeration value is returned if the buyer's payment was refunded.
    /// 					
    /// </remarks>

    Refunded, 
    /// <remarks>
    /// 
    /// 						The selected payment method is COD and the buyer will make the payment upon delivery.
    /// 					
    /// </remarks>

    WaitingForCODPayment, 
    /// <remarks>
    /// 
    /// 						The buyer has paid for the order with the COD payment method.
    /// 					
    /// </remarks>

    PaidCOD, 
    /// <remarks>
    /// 
    /// 						Reserved for future use.
    /// 					
    /// </remarks>

    CustomCode, 
    /// <remarks>
    /// 
    /// 						This enumeration value is returned if the buyer has paid for the order.
    /// 					
    /// </remarks>

    Paid, 
    /// <remarks>
    /// 
    /// 						This enumeration value is returned if the buyer was offered the 'Pay Upon Invoice' option. The 'Pay Upon Invoice' option is only available to eligible German buyers as part of Progressive Checkout on the German site. If a German buyer is offered the 'Pay Upon Invoice' option, that buyer is not required to pay for the order until after receiving an order invoice from the seller.
    /// 					
    /// </remarks>

    PayUponInvoice
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// ReleaseFailed
/// </summary>
/// <remarks>
/// 
/// 				Enumerated type that contains the list of possible values that can be returned
/// 				in the <b>PaymentHoldStatus</b> container.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum PaymentHoldStatusCodeType
{
    /// <remarks>
    /// 
    /// 						This value indicates a possible issue with the buyer that needs to be reviewed by eBay.
    /// 					
    /// </remarks>

    PaymentReview, 
    /// <remarks>
    /// 
    /// 						This value indicates a possible issue with the seller that needs to be reviewed by eBay.
    /// 					
    /// </remarks>

    MerchantHold, 
    /// <remarks>
    /// 
    /// 						This value indicates that a payment hold on the order has been released.
    /// 					
    /// </remarks>

    Released, 
    /// <remarks>
    /// 
    /// 						This value indicates that there is no payment hold on the order.
    /// 					
    /// </remarks>

    None, 
    /// <remarks>
    /// 
    /// 						This value indicates that there is a "new seller hold" on the order. eBay
    /// 						may hold payments to a new seller for up to 21 days.
    /// 					
    /// </remarks>

    NewSellerHold, 
    /// <remarks>
    /// 
    /// 						This value indicates that there is a payment hold on the order.
    /// 					
    /// </remarks>

    PaymentHold, 
    /// <remarks>
    /// 
    /// 						This value indicates that the process for the release of funds for the
    /// 						order has been initiated.
    /// 					
    /// </remarks>

    ReleasePending, 
    /// <remarks>
    /// 
    /// 						This value indicates that the funds are available in the seller's account.
    /// 					
    /// </remarks>

    ReleaseConfirmed, 
    /// <remarks>
    /// 
    /// 						This value is no longer used.
    /// 					
    /// </remarks>

    ReleaseFailed, 
    /// <remarks>
    /// 
    /// 						This value is reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumerated type indicates the type of payment instructions included in the shipping package.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum PaymentInstructionCodeType
{
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that payment instructions were included in the shipping package for the 'Pay Upon Invoice' order.
    /// 					
    /// </remarks>

    PaymentInstruction, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// BuyerECheckBounced, BuyerCreditCardFailed, PayPalPaymentInProcess
/// </summary>
/// <remarks>
/// 
/// 				Type defining the values that can be returned in the <b>eBayPaymentStatus</b> 
/// 				field of order management calls. These values indicate the current status of the buyer's 
/// 				payment for an order.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum PaymentStatusCodeType
{
    /// <remarks>
    /// 
    /// 						This value indicates that the buyer's payment for the order has cleared. A 
    /// 						<b>CheckoutStatus.eBayPaymentStatus</b> value of 'NoPaymentFailure' 
    /// 						and a <b>CheckoutStatus.Status</b> value of 'Complete' indicates that 
    /// 						checkout is complete.
    /// 					
    /// </remarks>

    NoPaymentFailure, 
    /// <remarks>
    /// 
    /// 						This value should no longer be returned as electronic checks are no longer a valid buyer payment method on any eBay marketplace.
    /// 					
    /// </remarks>

    BuyerECheckBounced, 
    /// <remarks>
    /// 
    /// 						This value should no longer be returned as the buyer's form of electronic payment is no longer exposed to the seller since eBay now receives payment from the buyer.
    /// 					
    /// </remarks>

    BuyerCreditCardFailed, 
    /// <remarks>
    /// 
    /// 						This value indicates that the seller reported the buyer's offline payment as failed. This enumeration value would only be applicable for a sales transaction that occurred off of eBay's platform.
    /// 					
    /// </remarks>

    BuyerFailedPaymentReportedBySeller, 
    /// <remarks>
    /// 
    /// 						This value should no longer be returned as the buyer's form of electronic payment is no longer exposed to the seller since eBay now receives payment from the buyer.
    /// 					
    /// </remarks>

    PayPalPaymentInProcess, 
    /// <remarks>
    /// 
    /// 						This value indicates that the buyer's payment is in process, but has not yet cleared. 
    /// 						<br/>
    /// 						<br/>
    /// 							<span class="tablenote"><b>Note:</b>
    /// 							This value may also get returned for a sales transaction that occurred off of eBay's platform, and the payment status may stay in this state unless the seller marks the order as paid.</span>
    /// 					
    /// </remarks>

    PaymentInProcess, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// Days_1, Days_540
/// </summary>
/// <remarks>
/// 
/// 				Type defining the time periods used when evaluating the number of unpaid item strikes that a buyer has against their account. A seller can set up listing-level Buyer Requirements in an Add/Revise/Relist call that will block a buyer if that buyer has a specified number of unpaid item strikes against their account during a specified time period.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum PeriodCodeType
{
    /// <remarks>
    /// 
    /// 						This value is no longer applicable.
    /// 					
    /// </remarks>

    Days_1, 
    /// <remarks>
    /// 
    /// 						This value indicates that the evaluation period is set back 30 days from the
    /// 						present date.
    /// 					
    /// </remarks>

    Days_30, 
    /// <remarks>
    /// 
    /// 						This value indicates that the evaluation period is set back 180 days (approximately 6 months) from the present date.
    /// 					
    /// </remarks>

    Days_180, 
    /// <remarks>
    /// 
    /// 						This value indicates that the evaluation period is set back 360 days (approximately 12 months) from the present date.
    /// 					
    /// </remarks>

    Days_360, 
    /// <remarks>
    /// 
    /// 						This value is no longer applicable.
    /// 					
    /// </remarks>

    Days_540, 
    /// <remarks>
    /// 
    /// 						This value is reserved for future or internal use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Simple type defining all possible local pickup methods for buyers. A <strong>PickupMethodCodeType</strong> value is always returned under the <strong>PickupOptions</strong> and <strong>PickupMethodSelected</strong> containers.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum PickupMethodCodeType
{
    /// <remarks>
    /// 
    /// 						This value indicates that the buyer will pick up the In-Store Pickup item at the merchant's physical store.
    /// 						<br/><br/>
    /// 						<span class="tablenote">
    /// 						<strong>Note:</strong> A merchant must be eligible for the In-Store Pickup feature to list an item that is eligible for In-Store Pickup. At this time, the In-Store Pickup feature is generally only available to large retail merchants in US, and can only be applied to multi-quantity, fixed-price listings.
    /// 						</span>
    /// 					
    /// </remarks>

    InStorePickup, 
    /// <remarks>
    /// 
    /// 						This value indicates that the buyer will pick up the "Click and Collect" item at the merchant's physical store.
    /// 						<br/><br/>
    /// 						<span class="tablenote">
    /// 						<strong>Note:</strong> A merchant must be eligible for the "Click and Collect" feature to list an item that is eligible for "Click and Collect". At this time, the "Click and Collect" feature is only available to large merchants on the eBay UK (site ID - 3), eBay Australia (Site ID - 15), and eBay Germany (Site ID - 77) sites. sites.
    /// 					
    /// </remarks>

    PickUpDropOff, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Simple type defining all possible states for an In-Store Pickup order. The value of the  <strong>PickupStatus</strong> field (returned under the <strong>PickupMethodSelected</strong> container) can change during the lifecycle of the order based on the notifications that a merchant sends to eBay through the <strong>Inbound Notifications API</strong>.
/// 				<br/><br/>
/// 				<span class="tablenote">
/// 				<strong>Note:</strong> At this time, the In-Store Pickup feature is generally only available to large retail merchants in US, and can only be applied to multi-quantity, fixed-price listings.
/// 				</span>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum PickupStatusCodeType
{
    /// <remarks>
    /// 
    /// 						This value indicates that the current status value of the In-Store Pickup order is invalid.
    /// 					
    /// </remarks>

    Invalid, 
    /// <remarks>
    /// 
    /// 						This value indicates that the current status value of the In-Store Pickup order is not applicable.
    /// 					
    /// </remarks>

    NotApplicable, 
    /// <remarks>
    /// 
    /// 						This status indicates that the In-Store Pickup order has yet to be acknowledged by the merchant. This is typically the state before the merchant sends the <strong>ORDER.READY_FOR_PICKUP</strong> notification to eBay through the <strong>Inbound Notifications API</strong>.
    /// 					
    /// </remarks>

    PendingMerchantConfirmation, 
    /// <remarks>
    /// 
    /// 						This status indicates that the In-Store Pickup order is ready to be picked up by the buyer. This state occurs after the merchant sends the <strong>ORDER.READY_FOR_PICKUP</strong> notification to eBay through the <strong>Inbound Notifications API</strong>.
    /// 					
    /// </remarks>

    ReadyToPickup, 
    /// <remarks>
    /// 
    /// 						This status indicates that the In-Store Pickup order has been picked up by the buyer. This state occurs after the merchant sends the <strong>ORDER.PICKEDUP</strong> notification to eBay through the <strong>Inbound Notifications API</strong>.
    /// 					
    /// </remarks>

    Pickedup, 
    /// <remarks>
    /// 
    /// 						This status indicates that the In-Store Pickup order has been cancelled by the merchant, because the product was out of stock. This state occurs after the merchant sends the <strong>ORDER.PICKUP_CANCELED</strong> notification (with the <strong>CANCEL_TYPE</strong> parameter in the notification payload set to "OUT_OF_STOCK") to eBay through the <strong>Inbound Notifications API</strong>.
    /// 			    
    /// </remarks>

    PickupCancelledOutOfStock, 
    /// <remarks>
    /// 
    /// 						This status indicates that the In-Store Pickup order has been cancelled by the merchant, because the buyer rejected the item. This state occurs after the merchant sends the <strong>ORDER.PICKUP_CANCELED</strong> notification (with the <strong>CANCEL_TYPE</strong> parameter in the notification payload set to "BUYER_REJECTED") to eBay through the <strong>Inbound Notifications API</strong>.
    /// 					
    /// </remarks>

    PickupCancelledBuyerRejected, 
    /// <remarks>
    /// 
    /// 						This status indicates that the In-Store Pickup order has been cancelled by the merchant, because the buyer never showed up to pick up the item. This state occurs after the merchant sends the <strong>ORDER.PICKUP_CANCELED</strong> notification (with the <strong>CANCEL_TYPE</strong> parameter in the notification payload set to "BUYER_NO_SHOW") to eBay through the <strong>Inbound Notifications API</strong>.
    /// 					
    /// </remarks>

    PickupCancelledBuyerNoShow, 
    /// <remarks>
    /// 
    /// 						This status indicates that the In-Store Pickup order has been cancelled, and the exact reason is not available.
    /// 					
    /// </remarks>

    PickupCancelled, 
    /// <remarks>
    /// 
    /// 						This value is reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Indicates the format of the picture returned. Sometimes this is different than the format of the uploaded picture.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum PictureFormatCodeType
{
    /// <remarks>
    /// 
    /// 						Indicates the picture was returned in JPG format. Uploaded pictures in JPG, TIF, or BMP will be returned as JPG.
    /// 					
    /// </remarks>

    JPG, 
    /// <remarks>
    /// 
    /// 						Indicates the picture was returned in GIF format.
    /// 					
    /// </remarks>

    GIF, 
    /// <remarks>
    /// 
    /// 						Indicates the picture was returned in PNG format.
    /// 					
    /// </remarks>

    PNG, 
    /// <remarks>
    /// 
    /// 						Reserved for internal use <b>only</b>.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// Large
/// </summary>
/// <remarks>
/// 
///         Specifies whether to generate the 'standard' set of images for each picture or to also generate a super-sized image.
///         <br/><br/>
///         <b>Note:</b> This type is used only for images that will be used in a listing.
///       
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum PictureSetCodeType
{
    /// <remarks>
    /// 
    ///             Indicates to generate the "Standard" set of images, which is a set of 7 images of various sizes, for each <b>ExternalPictureURL</b> submitted in the request.
    ///             This is the default. <b>Note:</b> This field is used only for images that will be used in a listing.
    ///           
    /// </remarks>

    Standard, 
    /// <remarks>
    /// 
    ///             Indicates to generate the "Standard" set <i>plus</i> a super-sized image for each <b>ExternalPictureURL</b> submitted in the request.
    ///             In order to include the super-sized image in the Add Item calls, you must also specify <b>Item.PictureDetails.PhotoDisplay.Supersize</b> or <b>Item.PictureDetails.PhotoDisplay.PicturePack</b>.
    ///              <b>Note:</b> This field is used only for images that will be used in a listing.
    ///           
    /// </remarks>

    Supersize, 
    /// <remarks>
    /// 
    ///             This field is no longer returned.
    ///           
    /// </remarks>

    Large, 
    /// <remarks>
    /// 
    ///             Reserved for internal use <b>only</b>.
    ///           
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// PictureManager
/// </summary>
/// <remarks>
/// 
/// 				Enumerated type used to specify where a listing's image(s) are hosted.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum PictureSourceCodeType
{
    /// <remarks>
    /// 
    /// 						This value indicates that the image(s) specified in the <b>PictureURL</b> field(s) are hosted by eBay Picture Services.
    /// 					
    /// </remarks>

    EPS, 
    /// <remarks>
    /// 
    /// 						This value is deprecated.
    /// 					
    /// </remarks>

    PictureManager, 
    /// <remarks>
    /// 
    /// 						This value indicates that the image(s) specified in the <b>PictureURL</b> field(s) are hosted by a third-party vendor. Note that if pictures are externally-hosted, they must be hosted on a site that is using the 'https' protocol.
    /// 					
    /// </remarks>

    Vendor, 
    /// <remarks>
    /// 
    /// 						(out) Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Values to be used in choosing that an uploaded picture is added to the available pictures on the eBay site.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum PictureUploadPolicyCodeType
{
    /// <remarks>
    /// 
    /// 						Specifies that an uploaded picture is added to the pictures available to a
    /// 						seller on the eBay site.
    /// 					
    /// </remarks>

    Add, 
    /// <remarks>
    /// 
    /// 						Specifies, first, that all pictures available to a seller on the eBay site are
    /// 						removed, and then second, that the currently uploaded picture is made
    /// 						available to the seller.
    /// 					 
    /// </remarks>

    ClearAndAdd, 
    /// <remarks>
    /// 
    /// 						 Reserved for internal use ONLY.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Specifies the criteria for filtering search results by site, where site is determined by the site ID in the request.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum PreferredLocationCodeType
{
    /// <remarks>
    /// 
    /// 						(in) Items listed in the currency implied by the site specified in the
    /// 						request.
    /// 					
    /// </remarks>

    ListedInCurrencyImplied, 
    /// <remarks>
    /// 
    /// 						(in) Items located in the country implied by the site specified in the
    /// 						request.
    /// 					
    /// </remarks>

    LocatedInCountryImplied, 
    /// <remarks>
    /// 
    /// 						(in) Items available to the country implied by the site specified in the
    /// 						request. For the US site, this implies listings from ALL English-language
    /// 						countries that are available to the US.
    /// 					
    /// </remarks>

    AvailableInCountryImplied, 
    /// <remarks>
    /// 
    /// 						(in) Items listed on the site specified in the request, regardless of listing
    /// 						currency.
    /// 					
    /// </remarks>

    SiteImplied, 
    /// <remarks>
    /// 
    /// 						(in) Items located in Belgium or listed on one of the two Belgian sites.
    /// 					
    /// </remarks>

    BelgiumListing, 
    /// <remarks>
    /// 
    /// 						(out) Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumerated type defines the available discount price treatments that can be set up by eligible sellers.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum PricingTreatmentCodeType
{
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that Strikethrough Pricing is enabled for the order line item. If this value is returned, the price in the <b>OriginalRetailPrice</b> field will be crossed out in the View Item page.
    /// 					
    /// </remarks>

    STP, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that Minimum Advertised Pricing is enabled for the order line item. If this value is returned, the minimum advertised price is found in the <b>MinimumAdvertisedPrice</b> field.
    /// 					
    /// </remarks>

    MAP, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that neither Strikethrough Pricing or Minimum Advertised Pricing is enabled for the order line item.
    /// 					
    /// </remarks>

    None, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that Made For Outlet Comparison Pricing is enabled for the order line item. If this value is returned, the Made For Outlet Comparison price is found in the <b>MadeForOutletComparisonPrice</b> field.
    /// 					
    /// </remarks>

    MFO, 
    /// <remarks>
    /// 
    /// 						Reserved for future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				<span class="tablenote"><b>Note: </b> This enumerated type is deprecated as the Pro Pack Bundle feature is no longer available on any eBay Marketplace sites.
/// 				</span>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum ProPackCodeType
{
    /// <remarks>
    /// 
    /// 						This value indicates that the Pro Pack listing upgrade is available for all sellers on the listing site.
    /// 					
    /// </remarks>

    Enabled, 
    /// <remarks>
    /// 
    /// 						This value indicates that the Pro Pack listing upgrade is not available to any sellers on the listing site.
    /// 					
    /// </remarks>

    Disabled, 
    /// <remarks>
    /// 
    /// 						This value indicates that the Pro Pack listing upgrade is only available to seller with Power Seller status on the listing site.
    /// 					
    /// </remarks>

    PowerSellerOnly, 
    /// <remarks>
    /// 
    /// 						This value indicates that the Pro Pack listing upgrade is only available to Top Rated sellers on the listing site.
    /// 					
    /// </remarks>

    TopRatedSellerOnly, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// Disabled, Enabled, Required, CustomCode
/// </summary>
/// <remarks>
/// 
/// 				This type is deprecated.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum ProductCreationEnabledCodeType
{
    /// <remarks>
    /// 
    /// 						Product creation is not supported for the category. 
    /// 						AddItem family calls can still list with product.
    /// 					
    /// </remarks>

    Disabled, 
    /// <remarks>
    /// 
    /// 						Product Creation is supported for the category. 
    /// 						AddItem family calls can still list with product but can go through new product creation flow.
    /// 					
    /// </remarks>

    Enabled, 
    /// <remarks>
    /// 
    /// 						Product Creation is required for the category. 
    /// 						AddItem family calls have to list with a product. If no product exists can go through new product creation flow.
    /// 					
    /// </remarks>

    Required, 
    /// <remarks>
    /// 
    /// 						(out) Reserved for internal or future use.
    /// 				  
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumeration type contains the values that may be returned in the <b>EANEnabled</b>, <b>ISBNEnabled</b>, and <b>UPCEnabled</b> fields at the site level (<b>SiteDefaults</b> container) and category level (<b>Category</b> nodes) to indicate which sites and categories support, require, or do not support the use of product identifiers to help create a listing.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum ProductIdentiferEnabledCodeType
{
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that a product identifier (EAN, ISBN, UPC) may not be used to help create a listing. If returned at the site level (<b>SiteDefaults</b> container), most categories on the site (specified in the X-EBAY-API-SITEID) do not support the use of product identifiers. If returned at the category level (<b>Category</b> nodes), that specific category does not support the use of product identifiers.
    /// 					
    /// </remarks>

    Disabled, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that a product identifier (EAN, ISBN, UPC) may be used to help create a listing. If returned at the site level (<b>SiteDefaults</b> container), most categories on the site (specified in the X-EBAY-API-SITEID) support the use of product identifiers. If returned at the category level (<b>Category</b> nodes), that specific category supports the use of product identifiers.
    /// 					
    /// </remarks>

    Enabled, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that a product identifier (EAN, ISBN, UPC) is required when creating a listing. If returned at the site level (<b>SiteDefaults</b> container), most categories on the site (specified in the X-EBAY-API-SITEID) require the use of product identifiers. If returned at the category level (<b>Category</b> nodes), that specific category requires the use of product identifiers when creating a listing.
    /// 					
    /// </remarks>

    Required, 
    /// <remarks>
    /// 
    /// 						This value is for future use.
    /// 				  
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumerated type is used by the <b>ProductRequiredEnabled</b>  field that can be returned under the <b>SiteDefaults</b> and/or <b>Category</b> containers of a <b>GetCategoryFeatures</b> response.
/// 				<br>
/// 				<br>
/// 				<span class="tablenote"><b>Note:</b>
/// 				Due to the rollback of the Product-Based Shopping Experience mandate for all eBay categories, the <b>ProductRequiredEnabled</b> field no longer has any practical use since it will show as Disabled for <b>SiteDefaults</b> and all <b>Category</b> nodes. Due to this fact, the <b>ProductRequiredEnabledCodeType</b> is currently not applicable.
/// 				</span>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum ProductRequiredEnabledCodeType
{
    /// <remarks>
    /// 
    /// 						This value indicates that the category does not require product-based listings (associated with an eBay catalog product).
    /// 						<br>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						Due to the rollback of the Product-Based Shopping Experience mandate for all eBay categories, this value should get returned for <b>SiteDefaults</b> and all <b>Category</b> nodes.
    /// 						</span>
    /// 					
    /// </remarks>

    Disabled, 
    /// <remarks>
    /// 
    /// 						This value indicates that the category requires listings within the category to be associated with an eBay catalog product.
    /// 						<br>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						Due to the rollback of the Product-Based Shopping Experience mandate for all eBay categories, this value should never get returned for <b>SiteDefaults</b> or for any <b>Category</b> nodes.
    /// 						</span>
    /// 					
    /// </remarks>

    Enabled, 
    /// <remarks>
    /// 
    /// 						(out) Reserved for internal or future use.
    /// 				  
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Enumerated type that defines the category group values. Business Policies profiles (Payment,
/// 				Shipping, and Return Policy) are linked to category groups.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum ProfileCategoryGroupCodeType
{
    /// <remarks>
    /// 
    /// 						Default value.
    /// 					
    /// </remarks>

    Inherit, 
    /// <remarks>
    /// 
    /// 						None.
    /// 					
    /// </remarks>

    None, 
    /// <remarks>
    /// 
    /// 						For Business Policies, the 'ALL' enumeration value represents all eBay categories except for motor vehicles.
    /// 					
    /// </remarks>

    ALL, 
    /// <remarks>
    /// 
    /// 						For Business Policies, the 'MOTORS_VEHICLE' enumeration value represents all motor vehicle categories.
    /// 				  
    /// </remarks>

    MOTORS_VEHICLE
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Indicates the text message type of the item's quantity availability.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum QuantityAvailableHintCodeType
{
    /// <remarks>
    /// 
    /// 						(out) The message "Limited quantity available" is shown in the web
    /// 						flow (e.g., for a flash sale or a Daily Deal).
    /// 					
    /// </remarks>

    Limited, 
    /// <remarks>
    /// 
    /// 						(out) The message "More than 10 available" is shown in the web flow.
    /// 						10 is the value of QuantityThreshold tag based on the seller's
    /// 						preference.
    /// 					
    /// </remarks>

    MoreThan, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Enumerated type used by the <b>QuantityOperator</b> field that is returned under the <b>FavoriteSearch</b> container in a <b>GetMyeBayBuying</b> call. The values in this type indicate how the quantity of the item that the prospective desires compares to the quantity available.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum QuantityOperatorCodeType
{
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the quantity sought (specified in <b>Quantity</b> field) is less than the quantity available (specified in <b>TotalAvailable</b> field).
    /// 					
    /// </remarks>

    LessThan, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the quantity sought (specified in <b>Quantity</b> field) is less than or equal to the quantity available (specified in <b>TotalAvailable</b> field).
    /// 					
    /// </remarks>

    LessThanOrEqual, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the quantity sought (specified in <b>Quantity</b> field) is equal to the quantity available (specified in <b>TotalAvailable</b> field).
    /// 					
    /// </remarks>

    Equal, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the quantity sought (specified in <b>Quantity</b> field) is greater than the quantity available (specified in <b>TotalAvailable</b> field).
    /// 					
    /// </remarks>

    GreaterThan, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the quantity sought (specified in <b>Quantity</b> field) is greater than or equal to the quantity available (specified in <b>TotalAvailable</b> field).
    /// 					
    /// </remarks>

    GreaterThanOrEqual, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Enumerated type used by the member messaging calls to indicate the type of question that was asked.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum QuestionTypeCodeType
{
    /// <remarks>
    /// 
    /// 			  		This enumeration value indicates that a general question was asked about the order line item.
    /// 			  	
    /// </remarks>

    General, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that a question about shipping the order line item was asked.
    /// 					
    /// </remarks>

    Shipping, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that a payment question was asked about the order line item.
    /// 					
    /// </remarks>

    Payment, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that a question was asked about a shipment that involves multiple packages.
    /// 					
    /// </remarks>

    MultipleItemShipping, 
    /// <summary>
    /// Reserved
    /// </summary>
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that question was asked about a customized subject.
    /// 					
    /// </remarks>

    CustomizedSubject, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that question does not have a subject.
    /// 					
    /// </remarks>

    None, 
    /// <remarks>
    /// 
    /// 						Reserved for future or internal use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Enumerated type that defines the possible reasons why a listing
/// 				is being hidden from search on the eBay site.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum ReasonHideFromSearchCodeType
{
    /// <remarks>
    /// 
    /// 						This value indicates that the listing is being hidden from search on the eBay site because the listing has been determined by eBay to be a duplicate listing.
    /// 						<br/><br/>
    /// 						This enumeration value is associated with eBay Duplicate Listings Policy, which is applicable on the US, CA, CA-FR, and eBay Motors (Parts and Accessories only) sites. Event Tickets, Real Estate, and Motor Vehicle categories are excluded from this policy. For more information, read <a href="http://pages.ebay.com/help/policies/listing-multi.html">eBay's Duplicate Listings Policy</a> help page.
    /// 					
    /// </remarks>

    DuplicateListing, 
    /// <remarks>
    /// 
    /// 						This value indicates that the listing is currently hidden from search because the quantity in the listing is zero. However, the listing is still alive and will reappear in the search results when the quantity is set to something greater than zero. The 'Out-of-stock' option is set by the seller at the account level. This option can be enabled in My eBay Site Preferences, or the seller can use the <a href="https://developer.ebay.com/DevZone/XML/docs/Reference/ebay/SetUserPreferences.html#Request.OutOfStockControlPreference">OutOfStockControlPreference</a> field in the <b>SetUserPreferences</b> call.
    /// 					
    /// </remarks>

    OutOfStock
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// Exchange, MerchandiseCredit
/// </summary>
/// <remarks>
/// 
/// 				This enumerated type contains the possible refund, exchange, or store credit options that a
/// 				seller may offer the buyer as part of the return policy.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum RefundOptionsCodeType
{
    /// <remarks>
    /// 
    /// 						This value indicates that the seller will refund the buyer the cost of the item, excluding shipping and handling costs.
    /// 					
    /// </remarks>

    MoneyBack, 
    /// <remarks>
    /// 
    /// 						This value is deprecated since receiving money back must always be one of the options in a return policy and not just exchanging the item. If a seller wants to make an exchange one of the options, the <code>MoneyBackOrExchange</code> option should be used.
    /// 					
    /// </remarks>

    Exchange, 
    /// <remarks>
    /// 
    /// 						This value is deprecated since receiving money back must always be one of the options in a return policy and not just store credit. 
    /// 					
    /// </remarks>

    MerchandiseCredit, 
    /// <remarks>
    /// 
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						This value has been deprecated and US sellers that are willing to refund buyers or offer an identical replacement item should use the <code>MoneyBackOrReplacement</code> value instead.
    /// 						</span>
    /// 					
    /// </remarks>

    MoneyBackOrExchange, 
    /// <remarks>
    /// 
    /// 						<span class="tablenote"><b>Note:</b>
    /// 						This value is only available on the US site. US sellers should use this value if they are willing to refund buyers or offer an identical replacement item.
    /// 						</span>
    /// 						This value indicates that the seller will refund the buyer the cost of the item (excluding shipping and handling costs) through eBay returns, or the seller will replace the returned item with another identical item if the buyer prefers this.
    /// 					
    /// </remarks>

    MoneyBackOrReplacement, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Enumerated type defining the refund types that a merchant can offer a buyer who is returning an In-Store Pickup item to the store. 
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum RefundSourceTypeCodeType
{
    /// <remarks>
    /// 	
    /// 						This value indicates that the merchant issued a store credit to the buyer for the amount of the returned item(s).
    /// 					
    /// </remarks>

    StoreCredit, 
    /// <remarks>
    /// 	
    /// 						This value indicates that the merchant issued a cash refund (or debit card/credit card reversal) to the buyer for the amount of the returned item(s).
    /// 					
    /// </remarks>

    PaymentRefund, 
    /// <remarks>
    /// 
    /// 						This value is reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumerated type defines the type of responsible person associated with a product.
/// 	            <br />
/// 				<span class="tablenote"><b>Note: </b> Currently, the only supported value is <code>EUResponisblePerson</code>.</span>					
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum ResponsiblePersonCodeType
{
    /// <remarks>
    /// 
    /// 						This value indicates the Responsible person is an EU Responsible Person. An EU Responsible Person is crucial for ensuring that products comply with all relevant regulations and safety standards to protect human health.
    /// 					
    /// </remarks>

    EUResponsiblePerson, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is deprecated, as sellers are no longer allowed to set a restocking fee through a listings's return policy.
/// 
/// 				
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum RestockingFeeCodeType
{
    /// <remarks>
    /// 
    /// 						This value indicates that the seller will not charge a restocking fee to the
    /// 						buyer if the item is returned.
    /// 					
    /// </remarks>

    NoRestockingFee, 
    /// <remarks>
    /// 
    /// 						This value indicates that the seller charges the buyer a restocking fee of 10
    /// 						percent of the item's purchase price if the item is returned.
    /// 					
    /// </remarks>

    Percent_10, 
    /// <remarks>
    /// 
    /// 						This value indicates that the seller charges the buyer a restocking fee of 15
    /// 						percent of the item's purchase price if the item is returned.
    /// 					
    /// </remarks>

    Percent_15, 
    /// <remarks>
    /// 
    /// 						This value indicates that the seller charges the buyer a restocking fee of up to 20
    /// 						percent of the item's purchase price if the item is returned.
    /// 					
    /// </remarks>

    Percent_20, 
    /// <remarks>
    /// 
    /// 						This is no longer a valid value.
    /// 					
    /// </remarks>

    Percent_25, 
    /// <remarks>
    /// 
    /// 						(out) Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Enumerated type that defines the possible states of an eBay return request.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum ReturnStatusCodeType
{
    /// <remarks>
    /// 
    /// 					This value indicates that the return request is invalid.
    /// 				
    /// </remarks>

    Invalid, 
    /// <remarks>
    /// 
    /// 						This value indicates that the return request is not applicable.
    /// 					
    /// </remarks>

    NotApplicable, 
    /// <remarks>
    /// 
    /// 							This value indicates that the return request has been initiated by the buyer and is pending approval by the seller.
    /// 						
    /// </remarks>

    ReturnRequestPendingApproval, 
    /// <remarks>
    /// 
    /// 						This value indicates that the buyer's return request was rejected by the seller or other authorized party.
    /// 					
    /// </remarks>

    ReturnRequestRejected, 
    /// <remarks>
    /// 
    /// 						This value indicates that a return request was successfully opened by the buyer.
    /// 					
    /// </remarks>

    ReturnOpen, 
    /// <remarks>
    /// 
    /// 						This value indicates that the buyer has return shipped the item(s) in the return request back to the seller.
    /// 					
    /// </remarks>

    ReturnShipped, 
    /// <remarks>
    /// 
    /// 						This value indicates that the seller has received the item(s) that the buyer return shipped.
    /// 					
    /// </remarks>

    ReturnDelivered, 
    /// <remarks>
    /// 
    /// 						This value indicates that a return request was closed with a refund issued to the buyer.
    /// 					
    /// </remarks>

    ReturnClosedWithRefund, 
    /// <remarks>
    /// 
    /// 							This value indicates that a return request was closed after being escalated to an eBay return case.
    /// 						
    /// </remarks>

    ReturnClosedEscalated, 
    /// <remarks>
    /// 
    /// 						This value indicates that a return request was closed with no refund issued to the buyer.
    /// 					
    /// </remarks>

    ReturnClosedNoRefund, 
    /// <remarks>
    /// 
    /// 						This value indicates that a return request was escalated to an eBay return case, and the case is awaiting a response from the buyer.
    /// 					
    /// </remarks>

    ReturnEscalatedPendingBuyer, 
    /// <remarks>
    /// 
    /// 						This value indicates that a return request was escalated to an eBay return case, and the case is awaiting a response from the seller.
    /// 					
    /// </remarks>

    ReturnEscalatedPendingSeller, 
    /// <remarks>
    /// 
    /// 						This value indicates that a return request was escalated to an eBay return case, and the case is awaiting a response from eBay Customer Support.
    /// 					
    /// </remarks>

    ReturnEscalatedPendingCS, 
    /// <remarks>
    /// 
    /// 						This value indicates that a return request was escalated to an eBay return case, but the case was closed with a refund issued to the buyer.
    /// 					
    /// </remarks>

    ReturnEscalatedClosedWithRefund, 
    /// <remarks>
    /// 
    /// 						This value indicates that a return request was escalated to an eBay return case, but the case was closed with no refund issued to the buyer.
    /// 					
    /// </remarks>

    ReturnEscalatedClosedNoRefund, 
    /// <remarks>
    /// 
    /// 						This value indicates that a return request was escalated to an eBay return case.
    /// 					
    /// </remarks>

    ReturnEscalated, 
    /// <remarks>
    /// 
    /// 						This value indicates that the return request is currently in the pending state.
    /// 					
    /// </remarks>

    ReturnRequestPending, 
    /// <remarks>
    /// 
    /// 						This value indicates that the return request was closed with a refund to the buyer.
    /// 					
    /// </remarks>

    ReturnRequestClosedWithRefund, 
    /// <remarks>
    /// 
    /// 						This value indicates that the return request was closed with no refund to the buyer.
    /// 					
    /// </remarks>

    ReturnRequestClosedNoRefund, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Specified whether returns are accepted.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum ReturnsAcceptedOptionsCodeType
{
    /// <remarks>
    /// 
    /// 						The seller accepts returns, subject to other details 
    /// 						specified in the policy.
    /// 					
    /// </remarks>

    ReturnsAccepted, 
    /// <remarks>
    /// 
    /// 						The seller does not accept returns.
    /// 					
    /// </remarks>

    ReturnsNotAccepted, 
    /// <remarks>
    /// 
    /// 						(out) Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enum defines the different options that are available for specifying whether or not the seller accepts returns.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum ReturnsAcceptedCodeType
{
    /// <remarks>
    /// 
    /// 						<code>ReturnsAccepted</code> indicates the seller does accept returns.
    /// 					
    /// </remarks>

    ReturnsAccepted, 
    /// <remarks>
    /// 
    /// 						<code>ReturnsNotAccepted</code> indicates the seller does <i>not</i> accept returns.
    /// 					
    /// </remarks>

    ReturnsNotAccepted
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enum defines the different options that are available for specifying the available return durations. This is the amount of time the seller gives the buyer for initiating a return once they receive the item.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum ReturnsDurationCodeType
{
    /// <remarks>
    /// 
    /// 						<code>Days_14</code> indicates the buyer has 14 days to initiate a return.
    /// 					
    /// </remarks>

    Days_14, 
    /// <remarks>
    /// 
    /// 						<code>Days_30</code> indicates the buyer has 30 days to initiate a return.
    /// 					
    /// </remarks>

    Days_30, 
    /// <remarks>
    /// 
    /// 						<code>Days_60</code> indicates the buyer has 60 days to initiate a return.
    /// 				  
    /// </remarks>

    Days_60
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enum defines the different options that are available for specifying the available refund methods.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum ReturnsRefundMethodCodeType
{
    /// <remarks>
    /// 
    /// 						<code>MoneyBack</code> indicates the seller will refund the cost of the item returned.
    /// 					
    /// </remarks>

    MoneyBack, 
    /// <remarks>
    /// 
    /// 						Available on the US marketplace only, <code>MoneyBackorReplacement</code> indicates the seller will refund the cost of the item returned or they will replace the returned item.
    /// 					
    /// </remarks>

    MoneyBackorReplacement
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enum defines the different options that are available for specifying the return shipment payee.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum ReturnsShipmentPayeeCodeType
{
    /// <remarks>
    /// 
    /// 						<code>Buyer</code> indicates the buyer is responsible for paying for the return shipping.
    /// 					
    /// </remarks>

    Buyer, 
    /// <remarks>
    /// 
    /// 						<code>Seller</code> indicates the seller is responsible for paying for the return shipping.
    /// 					
    /// </remarks>

    Seller
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// Days_3, Days_7, Days_10, Months_1
/// </summary>
/// <remarks>
/// 
/// 				This enumerated type contains the list of values that can be used by the seller in an Add/Revise/Relist call to set the number of days (after the purchase date) that a buyer has to return an item (if the return policy states that items can be returned) for a refund or an exchange. These same values are also returned in the <b>GeteBayDetails</b> call.
/// 				<br><br>
/// 				<span class="tablenote"><b>Note:</b> The <b>GeteBayDetails</b> call returns site-default Return Policy settings. For most categories within a given eBay site, the supported Return Policy options/values are the same, but there a few exceptions. To discover what return durations that a particular category supports, call <b>GetCategoryFeatures</b> and include <code>DomesticReturnsDurationValues</code> and/or <code>InternationalReturnsDurationValues</code> as <b>FeatureID</b> values to see the return durations available for domestic and international returns, respectively.
/// 				</span>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum ReturnsWithinOptionsCodeType
{
    /// <remarks>
    /// 
    /// 						This value is deprecated. Listings created or revised with this value will be
    /// 						blocked.
    /// 					
    /// </remarks>

    Days_3, 
    /// <remarks>
    /// 
    /// 						This value is deprecated. Listings created or revised with this value will be
    /// 						blocked.
    /// 					
    /// </remarks>

    Days_7, 
    /// <remarks>
    /// 
    /// 						This value is deprecated. Listings created or revised with this value will be
    /// 						blocked.
    /// 					
    /// </remarks>

    Days_10, 
    /// <remarks>
    /// 
    /// 						The seller specifies this value to enable a 14-day return policy. A buyer must
    /// 						return an item within 14 days after purchase in order to receive a refund or
    /// 						an exchange/replacement item.
    /// 					
    /// </remarks>

    Days_14, 
    /// <remarks>
    /// 
    /// 						The seller specifies this value to enable a 30-day return policy. A buyer must
    /// 						return an item within 30 days after purchase in order to receive a refund or
    /// 						an exchange/replacement item.
    /// 						<br/><br/>
    /// 						<span class="tablenote"><b>Note: </b> To qualify as a Top-Rated Plus listing, a 30-day (or longer) return period must be set.
    /// 						</span>
    /// 					
    /// </remarks>

    Days_30, 
    /// <remarks>
    /// 
    /// 						The seller specifies this value to enable a 60-day return policy. A buyer must
    /// 						return an item within 60 days after purchase in order to receive a refund or
    /// 						an exchange/replacement item.
    /// 					
    /// </remarks>

    Days_60, 
    /// <remarks>
    /// 
    /// 					 The seller specifies this value to enable a one-month return policy. A buyer must return an item within one month after purchase in order to receive a refund or an exchange.
    /// 					 <br/>
    /// 					<span class="tablenote"><b>Note: </b> This value, historically only supported on the DE and AT sites, is scheduled to be deprecated, and DE and AT sellers may be blocked if they do use this value. Use <code>Days_30</code> instead.
    /// 					</span>
    /// 					
    /// </remarks>

    Months_1, 
    /// <remarks>
    /// 
    /// 						This value is reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Type of SMS subscription error.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum SMSSubscriptionErrorCodeCodeType
{
    /// <remarks>
    /// 
    /// 						Aggregator not available.
    /// 					
    /// </remarks>

    SMSAggregatorNotAvailable, 
    /// <remarks>
    /// 
    /// 						Phone number invalid.
    /// 					
    /// </remarks>

    PhoneNumberInvalid, 
    /// <remarks>
    /// 
    /// 						Phone number has changed.
    /// 					
    /// </remarks>

    PhoneNumberChanged, 
    /// <remarks>
    /// 
    /// 						The carrier has changed.
    /// 					
    /// </remarks>

    PhoneNumberCarrierChanged, 
    /// <remarks>
    /// 
    /// 						The user has requested to be unregistered.
    /// 					
    /// </remarks>

    UserRequestedUnregistration, 
    /// <remarks>
    /// 
    /// 						(out) Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				The current state of user SMS subscription.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum SMSSubscriptionUserStatusCodeType
{
    /// <remarks>
    /// 
    /// 						(out) Registered.
    /// 					
    /// </remarks>

    Registered, 
    /// <remarks>
    /// 
    /// 						(out) Unregistered.
    /// 					
    /// </remarks>

    Unregistered, 
    /// <remarks>
    /// 
    /// 						(out) Pending subscription.
    /// 					
    /// </remarks>

    Pending, 
    /// <remarks>
    /// 
    /// 						(out) Subscription failed.
    /// 					
    /// </remarks>

    Failed, 
    /// <remarks>
    /// 
    /// 						(out) Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
///  NowAndNew, DigitalDelivery, Picture, Gallery, WorldOfGood, GetItFast, Gift
/// </summary>
/// <remarks>
/// 
/// 				This enumerated type lists the possible values that can be returned under the
/// 				<b>FavoriteSearch.SearchFlag</b> field of a
/// 				<b>GetMyeBayBuying</b> response. These values are output only and are
/// 				controlled by the filter types used in a buyer's Saved Search.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum SearchFlagCodeType
{
    /// <remarks>
    /// 
    /// 						This value being returned in the <b>FavoriteSearch.SearchFlag</b>
    /// 						field indicates that the buyer selected the <b>eBay for Charity</b>
    /// 						option in the Saved Search.
    /// 					
    /// </remarks>

    Charity, 
    /// <remarks>
    /// 
    /// 						This value is no longer applicable as Gift Icon and Gift Services are deprecated.
    /// 					
    /// </remarks>

    Gift, 
    /// <remarks>
    /// 
    /// 					  This value is no longer applicable as the Now and New feature is deprecated.
    /// 					
    /// </remarks>

    NowAndNew, 
    /// <remarks>
    /// 
    /// 						This value being returned in the <b>FavoriteSearch.SearchFlag</b>
    /// 						field indicates that the buyer selected the <b>Local pickup</b>
    /// 						option in the Saved Search. A buyer would select the <b>Local Pickup</b>
    /// 						filter in a Saved Search to restrict retrieved listings to those that offer 'local pickup'
    /// 						as an option to buyers.
    /// 					
    /// </remarks>

    LocalSearch, 
    /// <remarks>
    /// 
    /// 						This value being returned in the <b>FavoriteSearch.SearchFlag</b>
    /// 						field indicates that the buyer selected the <b>Free shipping</b>
    /// 						option in the Saved Search. A buyer would select the <b>Free shipping</b>
    /// 						filter in a Saved Search to restrict retrieved listings to those that offer a free
    /// 						shipping option to that specific buyer (the availability of free shipping may
    /// 						be dependent on the buyer's location).
    /// 					
    /// </remarks>

    FreeShipping, 
    /// <remarks>
    /// 
    /// 						This value is no longer applicable as there is always a gallery picture by
    /// 						default since all listings must have at least one picture.
    /// 					
    /// </remarks>

    Gallery, 
    /// <remarks>
    /// 
    /// 						This value is no longer applicable as there is now a requirement that all
    /// 						listings have at least one picture.
    /// 					
    /// </remarks>

    Picture, 
    /// <remarks>
    /// 
    /// 						This value is no longer applicable as the Get It Fast feature is deprecated.
    /// 					
    /// </remarks>

    GetItFast, 
    /// <remarks>
    /// 
    /// 						This value being returned in the <b>FavoriteSearch.SearchFlag</b>
    /// 						field indicates that the buyer selected the <b>Items listed as lots</b>
    /// 						option in the Saved Search. A buyer would select the <b>Items listed as lots</b>
    /// 						filter in a Saved Search to restrict retrieved listings to those that are offering
    /// 						a "lot" of items in one listing. Specifically, a "lot" is defined as, "a group of
    /// 						similar or identical items that are sold together to one buyer."
    /// 					
    /// </remarks>

    Lot, 
    /// <remarks>
    /// 
    /// 						This value is only applicable to the German site and if the user is searching for
    /// 						motor vehicle listings. This value being returned in the
    /// 						<b>FavoriteSearch.SearchFlag</b> field indicates that the buyer
    /// 						selected a filter in a Saved Search to restrict retrieved eBay Germany motor
    /// 						vehicle listings that are also being displayed on the mobile.de vehicle
    /// 						marketplace.
    /// 					
    /// </remarks>

    GermanMotorsSearchable, 
    /// <remarks>
    /// 
    /// 						This value is no longer applicable as the World of Good site no longer exists.
    /// 					
    /// </remarks>

    WorldOfGood, 
    /// <remarks>
    /// 
    /// 					This value is no longer applicable.
    /// 					
    /// </remarks>

    DigitalDelivery, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumerated type contains the list of values that can be used by the seller to set the length of time that a Second Chance Offer will be available to a specific recipient to whom the Second Chance Offer was presented. The recipient must purchase the Second Chance item within this time or the offer will expire. Second Chance Offers are only applicable for closed auction listings.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum SecondChanceOfferDurationCodeType
{
    /// <remarks>
    /// 
    /// 						The seller specifies this value to make the Second Chance offer available to the bidder for one day. This value will affect the <b>EndTime</b> value returned in the <b>AddSecondChanceItem</b> response.
    /// 					
    /// </remarks>

    Days_1, 
    /// <remarks>
    /// 
    /// 						The seller specifies this value to make the Second Chance offer available to the bidder for three days. This value will affect the <b>EndTime</b> value returned in the <b>AddSecondChanceItem</b> response.
    /// 					
    /// </remarks>

    Days_3, 
    /// <remarks>
    /// 
    /// 						The seller specifies this value to make the Second Chance offer available to the bidder for five days. This value will affect the <b>AddSecondChanceItem</b> response.
    /// 					
    /// </remarks>

    Days_5, 
    /// <remarks>
    /// 
    /// 						The seller specifies this value to make the Second Chance offer available to the bidder for seven days. This value will affect the <b>EndTime</b> value returned in the <b>AddSecondChanceItem</b> response.
    /// 					
    /// </remarks>

    Days_7, 
    /// <remarks>
    /// 
    /// 						This value is reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 					Type of seller account. This value is returned if the user is a 
/// 					business seller with a site ID of 77 (Germany), 3 (UK), 205 (Ireland) or 0 (US Motors).
/// 				
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum SellerBusinessCodeType
{
    /// <remarks>
    /// 
    /// 							Type of seller account not defined.
    /// 						
    /// </remarks>

    Undefined, 
    /// <remarks>
    /// 
    /// 							Private seller account.
    /// 						
    /// </remarks>

    Private, 
    /// <remarks>
    /// 
    /// 							Commercial seller account.
    /// 						
    /// </remarks>

    Commercial, 
    /// <remarks>
    /// 
    /// 							Reserved for internal or future use.
    /// 						
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type was deprecated along with the Seller Guarantee feature.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum SellerGuaranteeLevelCodeType
{
    /// <remarks>
    /// 
    /// 						(out) Not eligible for Seller Level Guarantee
    /// 					
    /// </remarks>

    NotEligible, 
    /// <remarks>
    /// 
    /// 						(out) Regular eligibility level
    /// 					
    /// </remarks>

    Regular, 
    /// <remarks>
    /// 
    /// 						(out) Premium eligibility level
    /// 					
    /// </remarks>

    Premium, 
    /// <remarks>
    /// 
    /// 						(out) Ultra eligibility level
    /// 					
    /// </remarks>

    Ultra, 
    /// <remarks>
    /// 
    /// 						(out) Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Indicates the user's eBay PowerSeller tier. PowerSellers are distinguished in 5
/// 				tiers based on average monthly sales. Benefits and services vary for each tier.
/// 				eBay calculates eligibility for each tier monthly.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum SellerLevelCodeType
{
    /// <remarks>
    /// 
    /// 						Bronze (lowest tier)
    /// 					
    /// </remarks>

    Bronze, 
    /// <remarks>
    /// 
    /// 						Silver (between Bronze and Gold)
    /// 					
    /// </remarks>

    Silver, 
    /// <remarks>
    /// 
    /// 						Gold (between Silver and Platinum)
    /// 					
    /// </remarks>

    Gold, 
    /// <remarks>
    /// 
    /// 						Platinum (between Gold and Titanium)
    /// 					
    /// </remarks>

    Platinum, 
    /// <remarks>
    /// 
    /// 						Titanium (highest tier)
    /// 					
    /// </remarks>

    Titanium, 
    /// <remarks>
    /// 
    /// 						Not a PowerSeller (eBay has not yet evaluated your PowerSeller status, or
    /// 						you have not chosen to be a member of the PowerSeller program,
    /// 						or you lost your PowerSeller status due to a policy violation.)
    /// 					
    /// </remarks>

    None, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumerated type defines the payment methods that an eBay user can use to pay fees on monthly eBay invoice.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum SellerPaymentMethodCodeType
{
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that eBay does not currently have a payment method on file for the eBay user.
    /// 					
    /// </remarks>

    NothingOnFile, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that eBay will use the credit card on file to process the eBay user's monthly invoice.
    /// 					
    /// </remarks>

    CreditCard, 
    /// <remarks>
    /// 
    /// 						This enumeration value is deprecated.
    /// 					
    /// </remarks>

    PayPal, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that eBay will debit the bank account on file to process the eBay user's monthly invoice.
    /// 					
    /// </remarks>

    DirectDebit, 
    /// <remarks>
    /// 
    /// 						 This enumeration value indicates that eBay will debit the bank account on file to process the eBay user's monthly invoice. A signature will be needed from the eBay user before a payment can be processed.
    /// 					
    /// </remarks>

    DirectDebitPendingSignatureMandate, 
    /// <remarks>
    /// 
    /// 						 This enumeration value indicates that the eBay user will use eBay Direct Pay to pay the monthly invoice.
    /// 					
    /// </remarks>

    eBayDirectPay, 
    /// <remarks>
    /// 
    /// 						(out) Reserved for internal or future use
    /// 					
    /// </remarks>

    CustomCode, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that eBay will debit the bank account on file to process the eBay user's monthly invoice. However, the bank account information must be verified before a payment can be processed.
    /// 					
    /// </remarks>

    DirectDebitPendingVerification
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Specifies the action to take for an item's My eBay notes.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum SetUserNotesActionCodeType
{
    /// <remarks>
    /// 
    /// 						Creates or replaces an item's My eBay notes. Note that if
    /// 						the specified item already has notes in My eBay, the new
    /// 						notes will completely replace the existing notes. They will
    /// 						not be appended.
    /// 					
    /// </remarks>

    AddOrUpdate, 
    /// <remarks>
    /// 
    /// 						Deletes any existing My eBay notes for the specified item.
    /// 						Specifying Delete when no notes exist does nothing, but does
    /// 						not return an error.
    /// 					
    /// </remarks>

    Delete, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
///         Identifies a shipping carrier used to ship an order, and the countries served by that carrier.
///         <br/><br/>
///         <span class="tablenote">
///         <strong>Note:</strong> Commonly used shipping carriers can also be found by calling <b>GeteBayDetails</b> with <b>DetailName</b> set to <b>ShippingCarrierDetails</b> and examining the returned <strong>ShippingCarrierDetails.ShippingCarrier</strong> field.
///         </span>
///       
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum ShippingCarrierCodeType
{
    /// <remarks>
    /// 
    ///             United Parcel Service
    ///             <br/>
    ///             In CompleteSale call requests, the value <code>UPS</code> also represents UPS Mail Innovations. Available in US, IE, UK, FR, IT, DE, CH, ES, AT, CN, BE, PL, NL.
    ///           
    /// </remarks>

    UPS, 
    /// <remarks>
    /// 
    ///             U.S. Postal Service
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, CN, UK, DE.
    ///           
    /// </remarks>

    USPS, 
    /// <remarks>
    /// 
    ///             FedEx
    ///             <br/>
    ///             &nbsp;&nbsp;In CompleteSale call requests, the value <code>FedEx</code> also represents FedEx SmartPost. Available in US, IE, UK, FR, IT, DE, CH, AU, ES, AT, CN, BE, PL, NL.
    ///           
    /// </remarks>

    FedEx, 
    /// <remarks>
    /// 
    ///             Deutsche Post
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, UK, DE.
    ///           
    /// </remarks>

    DeutschePost, 
    /// <remarks>
    /// 
    ///             DHL Express
    ///             <br/>
    ///             &nbsp;&nbsp;Available in IE, US, ID, MX, MY, CA, UK, FR, IT, HK, TW, DE, CH, KR, AU, ES, AT, CN, SG, BE, TH, NL.
    ///           
    /// </remarks>

    DHL, 
    /// <remarks>
    /// 
    ///             Hermes Group
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, AT, UK, DE.
    ///           
    /// </remarks>

    Hermes, 
    /// <remarks>
    /// 
    ///             iloxx eService
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, UK, DE.
    ///           
    /// </remarks>

    iLoxx, 
    /// <remarks>
    /// 
    ///             Use this code for any carrier not listed here.
    ///           
    /// </remarks>

    Other, 
    /// <remarks>
    /// 
    ///             Coliposte Domestic
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, UK, DE.
    ///           
    /// </remarks>

    ColiposteDomestic, 
    /// <remarks>
    /// 
    ///             Coliposte International
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, UK, DE.
    ///           
    /// </remarks>

    ColiposteInternational, 
    /// <remarks>
    /// 
    ///             Chronopost
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, FR, UK, DE.
    ///           
    /// </remarks>

    Chronopost, 
    /// <remarks>
    /// 
    ///             Correos
    ///             <br/>
    ///             &nbsp;&nbsp;Available in ES, US, UK, DE.
    ///           
    /// </remarks>

    Correos, 
    /// <remarks>
    /// 
    ///             Seur (reserved for future use).
    ///           
    /// </remarks>

    Seur, 
    /// <remarks>
    /// 
    ///             Nacex
    ///             <br/>
    ///             &nbsp;&nbsp;Available in ES, US, UK, DE.
    ///           
    /// </remarks>

    Nacex, 
    /// <remarks>
    /// 
    ///             4PX
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US.
    ///           
    /// </remarks>

    FourPX, 
    /// <remarks>
    /// 
    ///             4PX China
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, CN, UK.
    ///           
    /// </remarks>

    FourPXCHINA, 
    /// <remarks>
    /// 
    ///             4PX Express
    ///             <br/>
    ///             &nbsp;&nbsp;Available in UK, DE.
    ///           
    /// </remarks>

    FourPXExpress, 
    /// <remarks>
    /// 
    ///             4PX Express Co. Ltd
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, UK, DE.
    ///           
    /// </remarks>

    FourPXLTD, 
    /// <remarks>
    /// 
    ///             n/a
    ///             <br/>
    ///             &nbsp;&nbsp;Not currently supported.
    ///           
    /// </remarks>

    SevenLSP, 
    /// <remarks>
    /// 
    ///             A-1 Courier
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US.
    ///           
    /// </remarks>

    A1CourierServices, 
    /// <remarks>
    /// 
    ///             ABF Freight
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US.
    ///           
    /// </remarks>

    ABF, 
    /// <remarks>
    /// 
    ///             AeroPost
    ///             <br/>
    ///             &nbsp;&nbsp;Available in JM, GT, CR, PA, TT, SV, CO, HN, CL, DO.
    ///           
    /// </remarks>

    AeroPost, 
    /// <remarks>
    /// 
    ///             Allied Express
    ///             <br/>
    ///             &nbsp;&nbsp;Available in AU.
    ///           
    /// </remarks>

    ALLIEDEXPRESS, 
    /// <remarks>
    /// 
    ///             AMWST
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US.
    ///           
    /// </remarks>

    AMWST, 
    /// <remarks>
    /// 
    ///             An Post
    ///             <br/>
    ///             &nbsp;&nbsp;Available in IE.
    ///           
    /// </remarks>

    AnPost, 
    /// <remarks>
    /// 
    ///             APC Postal Logistics
    ///             <br/>
    ///             &nbsp;&nbsp;Available in UK.
    ///           
    /// </remarks>

    APC, 
    /// <remarks>
    /// 
    ///             Aramex
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, BH, IL, AE, IN, UA, KW, SA, QA.
    ///           
    /// </remarks>

    ARAMEX, 
    /// <remarks>
    /// 
    ///             Arvato
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, CA, UK, FR, IT, GR, DE, CH, AT, BE, NL, SI, LT, SK.
    ///           
    /// </remarks>

    ARVATO, 
    /// <remarks>
    /// 
    ///             ASM
    ///             <br/>
    ///             &nbsp;&nbsp;Available in ES.
    ///           
    /// </remarks>

    ASM, 
    /// <remarks>
    /// 
    ///             Australia Post
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, UK, DE, AU.
    ///           
    /// </remarks>

    AustraliaPost, 
    /// <remarks>
    /// 
    ///             Australian Air Express
    ///             <br/>
    ///             &nbsp;&nbsp;Available in AU.
    ///           
    /// </remarks>

    AustralianAirExpress, 
    /// <remarks>
    /// 
    ///             Averitt Express
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US.
    ///           
    /// </remarks>

    AVRT, 
    /// <remarks>
    /// 
    ///             bpost
    ///             <br/>
    ///             &nbsp;&nbsp;Also coded as <code>BELGIANPOST</code>. Available in US, UK, DE, MO, BE.
    ///           
    /// </remarks>

    BPost, 
    /// <remarks>
    /// 
    ///             BRT Bartolini
    ///             <br/>
    ///             &nbsp;&nbsp;Available in IT.
    ///           
    /// </remarks>

    Bartolini, 
    /// <remarks>
    /// 
    ///             Belgian Post Group
    ///             <br/>
    ///             &nbsp;&nbsp;Also coded as <code>BPost</code>. Available in US, UK, DE MO, BE.
    ///           
    /// </remarks>

    BELGIANPOST, 
    /// <remarks>
    /// 
    ///             BKNS
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US.
    ///           
    /// </remarks>

    BKNS, 
    /// <remarks>
    /// 
    ///             Blue Package Delivery
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US.
    ///           
    /// </remarks>

    BluePackage, 
    /// <remarks>
    /// 
    ///             BusinessPost
    ///             <br/>
    ///             &nbsp;&nbsp;Available in UK.
    ///           
    /// </remarks>

    BusinessPost, 
    /// <remarks>
    /// 
    ///             Canpar Courier
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, CA, IT, UK, DE, AU
    ///           
    /// </remarks>

    CanPar, 
    /// <remarks>
    /// 
    ///             Central Freight Lines
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US.
    ///           
    /// </remarks>

    CENF, 
    /// <remarks>
    /// 
    ///             CEVA Logistics
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, IT.
    ///           
    /// </remarks>

    CEVA, 
    /// <remarks>
    /// 
    ///             China Post
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, UK, DE.
    ///           
    /// </remarks>

    ChinaPost, 
    /// <remarks>
    /// 
    ///             Chronoexpres
    ///             <br/>
    ///             &nbsp;&nbsp;Available in ES.
    ///           
    /// </remarks>

    Chronoexpres, 
    /// <remarks>
    /// 
    ///             Chukou1
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US.
    ///           
    /// </remarks>

    CHUKOU1, 
    /// <remarks>
    /// 
    ///             Chunghwa Post
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, UK, DE.
    ///           
    /// </remarks>

    ChunghwaPost, 
    /// <remarks>
    /// 
    ///             CitiPost
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, IE, CA, UK, FR, IT, HK, DE, AU, ES, CN, BE, UZ, PL, NL.
    ///           
    /// </remarks>

    CitiPost, 
    /// <remarks>
    /// 
    ///             Citylink
    ///             <br/>
    ///             &nbsp;&nbsp;Available in IE.
    ///           
    /// </remarks>

    CityLink, 
    /// <remarks>
    /// 
    ///             Click & Quick
    ///             <br/>
    ///             &nbsp;&nbsp;Available in IT.
    ///           
    /// </remarks>

    ClickandQuick, 
    /// <remarks>
    /// 
    ///             XPO Logistics (formerly Con-way Freight)
    ///             <br/>
    ///             &nbsp;&nbsp;Con-way Freight is now part of XPO Logistics. Available in US.
    ///           
    /// </remarks>

    CNWY, 
    /// <remarks>
    /// 
    ///             Colissimo
    ///             <br/>
    ///             &nbsp;&nbsp;Available in FR.
    ///           
    /// </remarks>

    Colissimo, 
    /// <remarks>
    /// 
    ///             CollectPlus
    ///             <br/>
    ///             &nbsp;&nbsp;Available in UK.
    ///           
    /// </remarks>

    CollectPlus, 
    /// <remarks>
    /// 
    ///             CPC Logistics
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, CA, UK, DE.
    ///           
    /// </remarks>

    CPC, 
    /// <remarks>
    /// 
    ///             DAI Post
    ///             <br/>
    ///             &nbsp;&nbsp;Available in UK, AU.
    ///           
    /// </remarks>

    DAIPost, 
    /// <remarks>
    /// 
    ///             Day & Ross
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, CA, UK, AU.
    ///           
    /// </remarks>

    DayandRoss, 
    /// <remarks>
    /// 
    ///             DB Schenker
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US.
    ///           
    /// </remarks>

    DBSchenker, 
    /// <remarks>
    /// 
    ///             DHL Express
    ///             <br/>
    ///             &nbsp;&nbsp;Available in IT, DE.
    ///           
    /// </remarks>

    DHLEXPRESS, 
    /// <remarks>
    /// 
    ///             DHL Global Mail
    ///             <br/>
    ///             &nbsp;&nbsp;Formerly coded as <code>DHLG</code>. Available in US, UK, DE.
    ///           
    /// </remarks>

    DHLGlobalMail, 
    /// <remarks>
    /// 
    ///             DHL EKB
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US.
    ///           
    /// </remarks>

    DHLEKB, 
    /// <remarks>
    /// 
    ///             n/a
    ///             <br/>
    ///             &nbsp;&nbsp;Use <code>DHLGlobalMail</code> instead.
    ///           
    /// </remarks>

    DHLG, 
    /// <remarks>
    /// 
    ///             Die Schweizerische Post
    ///             <br/>
    ///             &nbsp;&nbsp;Available in CH.
    ///           
    /// </remarks>

    DieSchweizerischePost, 
    /// <remarks>
    /// 
    ///             DPD (Dynamic Parcel Distribution)
    ///             <br/>
    ///             &nbsp;&nbsp;Available in IE, BG, AT, UK, HR, BE, HU, PL, CZ, DE, NL, CH.
    ///           
    /// </remarks>

    DPD, 
    /// <remarks>
    /// 
    ///             DPX Thailand
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, TH.
    ///           
    /// </remarks>

    DPXThailand, 
    /// <remarks>
    /// 
    ///             n/a
    ///             <br/>
    ///             &nbsp;&nbsp;Not currently supported.
    ///           
    /// </remarks>

    Ducros, 
    /// <remarks>
    /// 
    ///             E-go
    ///             <br/>
    ///             &nbsp;&nbsp;Available in AU.
    ///           
    /// </remarks>

    EGO, 
    /// <remarks>
    /// 
    ///             n/a
    ///             <br/>
    ///             &nbsp;&nbsp;Not currently supported.
    ///           
    /// </remarks>

    EMF, 
    /// <remarks>
    /// 
    ///             DPD France (formerly Exapaq)
    ///             <br/>
    ///             &nbsp;&nbsp;Exapaq is now part of DPD France. Available in FR.
    ///           
    /// </remarks>

    Exapaq, 
    /// <remarks>
    /// 
    ///             Fastway
    ///             <br/>
    ///             &nbsp;&nbsp;Available in IE.
    ///           
    /// </remarks>

    Fastway, 
    /// <remarks>
    /// 
    ///             Fastway Couriers
    ///             <br/>
    ///             &nbsp;&nbsp;Available in AU.
    ///           
    /// </remarks>

    FASTWAYCOURIERS, 
    /// <remarks>
    /// 
    ///             FedEx SmartPost
    ///             <br/>
    ///             &nbsp;&nbsp;In CompleteSale call requests only, specify FedEx SmartPost with the value <code>FedEx</code>. Available in US, UK, DE.
    ///           
    /// </remarks>

    FedExSmartPost, 
    /// <remarks>
    /// 
    ///             Flyt
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US.
    ///           
    /// </remarks>

    FLYT, 
    /// <remarks>
    /// 
    ///             Flyt Express
    ///             <br/>
    ///             &nbsp;&nbsp;Available in UK, DE.
    ///           
    /// </remarks>

    FLYTExpress, 
    /// <remarks>
    /// 
    ///             Flyt Express US Direct line
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, UK, DE.
    ///           
    /// </remarks>

    FlytExpressUSDirectline, 
    /// <remarks>
    /// 
    ///             n/a
    ///             <br/>
    ///             &nbsp;&nbsp;Not currently supported.
    ///           
    /// </remarks>

    FTFT, 
    /// <remarks>
    /// 
    ///             FulfilExpress-AccStation
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, UK, DE.
    ///           
    /// </remarks>

    FulfilExpressAccStation, 
    /// <remarks>
    /// 
    ///             FulfilExpress-eForCity
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, UK, DE.
    ///           
    /// </remarks>

    FulfilExpresseForCity, 
    /// <remarks>
    /// 
    ///             FulfilExpress-EverydaySource
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, UK, DE.
    ///           
    /// </remarks>

    FulfilExpressEverydaySource, 
    /// <remarks>
    /// 
    ///             FulfilExpress-iTrimming
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, UK, DE.
    ///           
    /// </remarks>

    FulfilExpressiTrimming, 
    /// <remarks>
    /// 
    ///             GLS (General Logistics Systems)
    ///             <br/>
    ///             &nbsp;&nbsp;Available in IE, ES, AT, IT, FR, BE, DE, NL.
    ///           
    /// </remarks>

    GLS, 
    /// <remarks>
    /// 
    ///             MXD Group (formerly Home Direct USA)
    ///             <br/>
    ///             &nbsp;&nbsp;Home Direct USA is now part of MXD Group. Available in US.
    ///           
    /// </remarks>

    HDUSA, 
    /// <remarks>
    /// 
    ///             n/a
    ///             <br/>
    ///             Use <code>Yodel</code> instead.
    ///           
    /// </remarks>

    HomeDeliveryNetwork, 
    /// <remarks>
    /// 
    ///             Hong Kong Post
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, UK, DE, AU.
    ///           
    /// </remarks>

    HongKongPost, 
    /// <remarks>
    /// 
    ///             Hunter Express
    ///             <br/>
    ///             &nbsp;&nbsp;Available in AU.
    ///           
    /// </remarks>

    HUNTEREXPRESS, 
    /// <remarks>
    /// 
    ///             India Post
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, UK, DE.
    ///           
    /// </remarks>

    IndiaPost, 
    /// <remarks>
    /// 
    ///             Indonesia Post
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, UK, DE.
    ///           
    /// </remarks>

    IndonesiaPost, 
    /// <remarks>
    /// 
    ///             Interlink Express
    ///             <br/>
    ///             &nbsp;&nbsp;Available in UK.
    ///           
    /// </remarks>

    Interlink, 
    /// <remarks>
    /// 
    ///             InterPost
    ///             <br/>
    ///             &nbsp;&nbsp;Available in IE, US, CA, UK, FR, IT, HK, DE, RO, AU, ES, AT, CN, CY, BE, PL, NL.
    ///           
    /// </remarks>

    InterPost, 
    /// <remarks>
    /// 
    ///             IoInvio
    ///             <br/>
    ///             &nbsp;&nbsp;Available in IT.
    ///           
    /// </remarks>

    IoInvio, 
    /// <remarks>
    /// 
    ///             UPS i-parcel
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, MX, MY, SG, HK, ZA, TR, CH, JP, BR.
    ///           
    /// </remarks>

    Iparcel, 
    /// <remarks>
    /// 
    ///             Israel Post
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US.
    ///           
    /// </remarks>

    IsraelPost, 
    /// <remarks>
    /// 
    ///             Japan Post
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, UK, DE.
    ///           
    /// </remarks>

    JapanPost, 
    /// <remarks>
    /// 
    ///             Kiala (UPS Access Point)
    ///             <br/>
    ///             &nbsp;&nbsp;Available in ES, US, FR, UK, BE, DE, NL.
    ///           
    /// </remarks>

    KIALA, 
    /// <remarks>
    /// 
    ///             Korea Post
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, UK, DE.
    ///           
    /// </remarks>

    KoreaPost, 
    /// <remarks>
    /// 
    ///             La Poste
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, FR, UK, DE.
    ///           
    /// </remarks>

    LAPOSTE, 
    /// <remarks>
    /// 
    ///             Landmark Global
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, NZ, NO.
    ///           
    /// </remarks>

    Landmark, 
    /// <remarks>
    /// 
    ///             n/a
    ///             <br/>
    ///             &nbsp;&nbsp;Not currently supported.
    ///           
    /// </remarks>

    LDSO, 
    /// <remarks>
    /// 
    ///             n/a
    ///             <br/>
    ///             &nbsp;&nbsp;Not currently supported.
    ///           
    /// </remarks>

    LTL, 
    /// <remarks>
    /// 
    ///             Malaysia Post
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, UK, DE.
    ///           
    /// </remarks>

    MALAYSIAPOST, 
    /// <remarks>
    /// 
    ///             Manna Distribution Services
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US.
    ///           
    /// </remarks>

    MannaFreight, 
    /// <remarks>
    /// 
    ///             Metapack
    ///             <br/>
    ///             &nbsp;&nbsp;Available in UK.
    ///           
    /// </remarks>

    Metapack, 
    /// <remarks>
    /// 
    ///             MNG Kargo
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, UK, TR.
    ///           
    /// </remarks>

    MNGTurkey, 
    /// <remarks>
    /// 
    ///             Mondial Relay
    ///             <br/>
    ///             &nbsp;&nbsp;Available in FR.
    ///           
    /// </remarks>

    MondialRelay, 
    /// <remarks>
    /// 
    ///             MRW
    ///             <br/>
    ///             &nbsp;&nbsp;Available in ES.
    ///           
    /// </remarks>

    MRW, 
    /// <remarks>
    /// 
    ///             MSI Transportation
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US.
    ///           
    /// </remarks>

    MSI, 
    /// <remarks>
    /// 
    ///             New England Motor Freight
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US.
    ///           
    /// </remarks>

    NEMF, 
    /// <remarks>
    /// 
    ///             Old Dominion Freight Line
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US.
    ///           
    /// </remarks>

    ODFL, 
    /// <remarks>
    /// 
    ///             n/a
    ///             <br/>
    ///             &nbsp;&nbsp;Not currently supported.
    ///           
    /// </remarks>

    OFFD, 
    /// <remarks>
    /// 
    ///             OnTrac Shipping
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US.
    ///           
    /// </remarks>

    ONTRACK, 
    /// <remarks>
    /// 
    ///             Osterreichische Post
    ///             <br/>
    ///             &nbsp;&nbsp;Available in AT.
    ///           
    /// </remarks>

    OsterreichischePostAG, 
    /// <remarks>
    /// 
    ///             UPS Freight (formerly Overnite)
    ///             <br/>
    ///             &nbsp;&nbsp;Overnite is now part of UPS Freight. Available in US.
    ///           
    /// </remarks>

    OVNT, 
    /// <remarks>
    /// 
    ///             International Bridge Domestic delivery
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US.
    ///           
    /// </remarks>

    ParcelPool, 
    /// <remarks>
    /// 
    ///             Parcelforce
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, UK, DE.
    ///           
    /// </remarks>

    Parcelforce, 
    /// <remarks>
    /// 
    ///             PHLPost (Philippine Postal Corporation)
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, UK, DE.
    ///           
    /// </remarks>

    Philpost, 
    /// <remarks>
    /// 
    ///             Pilot Freight Services
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US.
    ///           
    /// </remarks>

    Pilot, 
    /// <remarks>
    /// 
    ///             PITT OHIO
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US.
    ///           
    /// </remarks>

    PITD, 
    /// <remarks>
    /// 
    ///             Poczta Polska
    ///             <br/>
    ///             &nbsp;&nbsp;Available in PL.
    ///           
    /// </remarks>

    PocztaPolska, 
    /// <remarks>
    /// 
    ///             Pocztex
    ///             <br/>
    ///             &nbsp;&nbsp;Available in PL.
    ///           
    /// </remarks>

    Pocztex, 
    /// <remarks>
    /// 
    ///             Post Italiano
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, UK, DE.
    ///           
    /// </remarks>

    POSTITALIANO, 
    /// <remarks>
    /// 
    ///             PostNL
    ///             <br/>
    ///             &nbsp;&nbsp;Available in NL.
    ///           
    /// </remarks>

    PostNL, 
    /// <remarks>
    /// 
    ///             PostNord
    ///             <br/>
    ///             &nbsp;&nbsp;Available in UK, NO.
    ///           
    /// </remarks>

    PostNordNorway, 
    /// <remarks>
    /// 
    ///             Poste Italiane
    ///             <br/>
    ///             &nbsp;&nbsp;Available in IT.
    ///           
    /// </remarks>

    PosteItaliane, 
    /// <remarks>
    /// 
    ///             LaserShip (formerly Prestige Expedite)
    ///             <br/>
    ///             &nbsp;&nbsp;Prestige Expedite is now part of LaserShip. Available in US.
    ///           
    /// </remarks>

    Prestige, 
    /// <remarks>
    /// 
    ///             Quantium Solutions
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, UK, DE, AU.
    ///           
    /// </remarks>

    Quantium, 
    /// <remarks>
    /// 
    ///             Reddaway
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US.
    ///           
    /// </remarks>

    RETL, 
    /// <remarks>
    /// 
    ///             Royal Mail
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, UK, DE.
    ///           
    /// </remarks>

    RoyalMail, 
    /// <remarks>
    /// 
    ///             n/a
    ///             <br/>
    ///             &nbsp;&nbsp;Not currently supported.
    ///           
    /// </remarks>

    RRUN, 
    /// <remarks>
    /// 
    ///             Saia LTL Freight
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US.
    ///           
    /// </remarks>

    SAIA, 
    /// <remarks>
    /// 
    ///             SDA Express Courier
    ///             <br/>
    ///             &nbsp;&nbsp;Available in IT.
    ///           
    /// </remarks>

    SDA, 
    /// <remarks>
    /// 
    ///             n/a
    ///             <br/>
    ///             &nbsp;&nbsp;Not currently supported.
    ///           
    /// </remarks>

    SFC, 
    /// <remarks>
    /// 
    ///             n/a
    ///             <br/>
    ///             &nbsp;&nbsp;Not currently supported.
    ///           
    /// </remarks>

    SFCExpress, 
    /// <remarks>
    /// 
    ///             Singapore Post
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, UK, DE.
    ///           
    /// </remarks>

    SINGAPOREPOST, 
    /// <remarks>
    /// 
    ///             Siodemka (DPD Poland)
    ///             <br/>
    ///             &nbsp;&nbsp;Available in PL.
    ///           
    /// </remarks>

    Siodemka, 
    /// <remarks>
    /// 
    ///             Sioli & Fontana
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, CA, IT.
    ///           
    /// </remarks>

    SioliandFontana, 
    /// <remarks>
    /// 
    ///             Skynet (Malaysia)
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, MY.
    ///           
    /// </remarks>

    SkynetMalaysia, 
    /// <remarks>
    /// 
    ///             Smart Send Courier Service
    ///             <br/>
    ///             &nbsp;&nbsp;Available in AU.
    ///           
    /// </remarks>

    SMARTSEND, 
    /// <remarks>
    /// 
    ///             SGT Corriere Espresso
    ///             <br/>
    ///             &nbsp;&nbsp;Available in IT.
    ///           
    /// </remarks>

    Sogetras, 
    /// <remarks>
    /// 
    ///             Spediamo
    ///             <br/>
    ///             &nbsp;&nbsp;Available in IT.
    ///           
    /// </remarks>

    Spediamo, 
    /// <remarks>
    /// 
    ///             Spee-Dee Delivery Service
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US.
    ///           
    /// </remarks>

    SpeeDee, 
    /// <remarks>
    /// 
    ///             StarTrack
    ///             <br/>
    ///             &nbsp;&nbsp;Available in AU.
    ///           
    /// </remarks>

    StarTrack, 
    /// <remarks>
    /// 
    ///             Suntek Express LTD
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, UK, DE.
    ///           
    /// </remarks>

    SuntekExpressLTD, 
    /// <remarks>
    /// 
    ///             Swiss Post
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, UK, CH.
    ///           
    /// </remarks>

    SwissPost, 
    /// <remarks>
    /// 
    ///             TELE
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US.
    ///           
    /// </remarks>

    TELE, 
    /// <remarks>
    /// 
    ///             Temando (shipping broker)
    ///             <br/>
    ///             &nbsp;&nbsp;Available in AU.
    ///           
    /// </remarks>

    TEMANDO, 
    /// <remarks>
    /// 
    ///             Thailand Post
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, UK, DE.
    ///           
    /// </remarks>

    THAILANDPOST, 
    /// <remarks>
    /// 
    ///             n/a
    ///             <br/>
    ///             &nbsp;&nbsp;Not currently supported.
    ///           
    /// </remarks>

    TNT, 
    /// <remarks>
    /// 
    ///             n/a
    ///             <br/>
    ///             &nbsp;&nbsp;Not currently supported.
    ///           
    /// </remarks>

    TNTEXPRESS, 
    /// <remarks>
    /// 
    ///             n/a
    ///             <br/>
    ///             &nbsp;&nbsp;Not currently supported.
    ///           
    /// </remarks>

    TNTPost, 
    /// <remarks>
    /// 
    ///             Toll (Japan Post)
    ///             <br/>
    ///             &nbsp;&nbsp;Available in AU.
    ///           
    /// </remarks>

    Toll, 
    /// <remarks>
    /// 
    ///             TPG Logistics
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, UK, DE.
    ///           
    /// </remarks>

    TPG, 
    /// <remarks>
    /// 
    ///             n/a
    ///             <br/>
    ///             &nbsp;&nbsp;Not currently supported.
    ///           
    /// </remarks>

    TWW, 
    /// <remarks>
    /// 
    ///             UBI Smart Parcel
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US.
    ///           
    /// </remarks>

    UBI, 
    /// <remarks>
    /// 
    ///             UK Mail
    ///             <br/>
    ///             &nbsp;&nbsp;Available in UK.
    ///           
    /// </remarks>

    UKMail, 
    /// <remarks>
    /// 
    ///             UPS Mail Innovations
    ///             <br/>
    ///             &nbsp;&nbsp;In CompleteSale call requests only, specify UPS Mail Innovations with the value <code>UPS</code>. Available in US, UK, DE.
    ///           
    /// </remarks>

    UPSMailInnovations, 
    /// <remarks>
    /// 
    ///             n/a
    ///             <br/>
    ///             &nbsp;&nbsp;Not currently supported.
    ///           
    /// </remarks>

    UPSC, 
    /// <remarks>
    /// 
    ///             n/a
    ///             <br/>
    ///             &nbsp;&nbsp;Not currently supported.
    ///           
    /// </remarks>

    USFG, 
    /// <remarks>
    /// 
    ///             USPS Commercial ePacket
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, CA.
    ///           
    /// </remarks>

    USPSCeP, 
    /// <remarks>
    /// 
    ///             USPS Priority Mail International
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, CA.
    ///           
    /// </remarks>

    USPSPMI, 
    /// <remarks>
    /// 
    ///             Vietnam Post
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, UK, DE.
    ///           
    /// </remarks>

    VietnamPost, 
    /// <remarks>
    /// 
    ///             Vitran Express
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US.
    ///           
    /// </remarks>

    VITR, 
    /// <remarks>
    /// 
    ///             n/a
    ///             <br/>
    ///             &nbsp;&nbsp;Not currently supported.
    ///           
    /// </remarks>

    WATKINS, 
    /// <remarks>
    /// 
    ///             WIN.IT America
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, UK, DE, AU.
    ///           
    /// </remarks>

    Winit, 
    /// <remarks>
    /// 
    ///             n/a
    ///             <br/>
    ///             &nbsp;&nbsp;Not currently supported.
    ///           
    /// </remarks>

    Wise, 
    /// <remarks>
    /// 
    ///             wnDirect
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, CA, IT, FR, UK, RU, AU.
    ///           
    /// </remarks>

    WNdirect, 
    /// <remarks>
    /// 
    ///             WPX Delivery Solutions
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US.
    ///           
    /// </remarks>

    WPX, 
    /// <remarks>
    /// 
    ///             YANWEN Express
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US, UK, DE.
    ///           
    /// </remarks>

    YANWEN, 
    /// <remarks>
    /// 
    ///             Yodel
    ///             <br/>
    ///             &nbsp;&nbsp;Available in UK.
    ///           
    /// </remarks>

    Yodel, 
    /// <remarks>
    /// 
    ///             YRC Freight
    ///             <br/>
    ///             &nbsp;&nbsp;Available in US.
    ///           
    /// </remarks>

    YRC, 
    /// <remarks>
    /// 
    ///             Reserved for internal or future use
    ///           
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// EUBuyer_CancelRightsUnder40, EUSeller_CancelRights, EUSeller_ReturnRights
/// </summary>
/// <remarks>
/// 
/// 				This enumerated type contains the values that specify the party (seller/buyer) who will be responsible for paying the return shipping cost if an item is returned. One of these values is set by the seller when establishing/setting a return policy for an item.
/// 				<br><br>
/// 				<span class="tablenote"><b>Note:</b> The <b>GeteBayDetails</b> call returns site-default Return Policy settings. For most categories within a given eBay site, the supported Return Policy options/values are the same, but there a few exceptions. To discover what return shipping 'payee' values that a particular category supports, call <b>GetCategoryFeatures</b> and include <code>DomesticReturnsShipmentPayeeValues</code> and/or <code>InternationalReturnsShipmentPayeeValues</code> as <b>FeatureID</b> values to see the return shipping 'payee' values available for domestic and international returns, respectively.
/// 				</span>
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum ShippingCostPaidByOptionsCodeType
{
    /// <remarks>
    /// 
    /// 						This value indicates that the buyer is responsible for paying the return shipping cost. Note that the buyer will not be responsible for return shipping cost if the the buyer's reason for the return is related to the received item not being as described in the listing, or if the item has arrived damaged or with missing parts.
    /// 					
    /// </remarks>

    Buyer, 
    /// <remarks>
    /// 
    /// 						This value indicates that the seller is responsible for paying the return shipping cost.
    /// 					
    /// </remarks>

    Seller, 
    /// <remarks>
    /// 
    /// 						(out) Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode, 
    /// <remarks>
    /// 
    /// 						This value is no longer applicable.
    /// 					
    /// </remarks>

    EUSeller_ReturnRights, 
    /// <remarks>
    /// 
    /// 						This value is no longer applicable.
    /// 					
    /// </remarks>

    EUSeller_CancelRights, 
    /// <remarks>
    /// 
    /// 						This value is no longer applicable.
    /// 					
    /// </remarks>

    EUBuyer_CancelRightsUnder40
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				The nature of the package used to ship the item(s).
/// 				Required for calculated shipping only. Not all package types
/// 				are supported by a specific shipping service (ShippingServiceCodeType).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum ShippingPackageCodeType
{
    /// <remarks>
    /// 
    /// 						None
    /// 					
    /// </remarks>

    None, 
    /// <remarks>
    /// 
    /// 						Letter
    /// 					
    /// </remarks>

    Letter, 
    /// <remarks>
    /// 
    /// 						LargeEnvelope
    /// 					
    /// </remarks>

    LargeEnvelope, 
    /// <remarks>
    /// 
    /// 						USPS Large Package/Oversize 1
    /// 					
    /// </remarks>

    USPSLargePack, 
    /// <remarks>
    /// 
    /// 						Very Large Package/Oversize 2
    /// 					
    /// </remarks>

    VeryLargePack, 
    /// <remarks>
    /// 
    /// 						Extra Large Package/Oversize 3
    /// 					
    /// </remarks>

    ExtraLargePack, 
    /// <remarks>
    /// 
    /// 						UPS Letter
    /// 					
    /// </remarks>

    UPSLetter, 
    /// <remarks>
    /// 
    /// 						USPS Flat Rate Envelope
    /// 					
    /// </remarks>

    USPSFlatRateEnvelope, 
    /// <remarks>
    /// 
    /// 						Package/thick envelope
    /// 					
    /// </remarks>

    PackageThickEnvelope, 
    /// <remarks>
    /// 
    /// 						Roll
    /// 					
    /// </remarks>

    Roll, 
    /// <remarks>
    /// 
    /// 						Europallet
    /// 					
    /// </remarks>

    Europallet, 
    /// <remarks>
    /// 
    /// 						Onewaypallet
    /// 					
    /// </remarks>

    OneWayPallet, 
    /// <remarks>
    /// 
    /// 						Bulky goods
    /// 					
    /// </remarks>

    BulkyGoods, 
    /// <remarks>
    /// 
    /// 						Furniture
    /// 					
    /// </remarks>

    Furniture, 
    /// <remarks>
    /// 
    /// 						Cars
    /// 					
    /// </remarks>

    Cars, 
    /// <remarks>
    /// 
    /// 						Motorbikes
    /// 					
    /// </remarks>

    Motorbikes, 
    /// <remarks>
    /// 
    /// 						Caravan
    /// 					
    /// </remarks>

    Caravan, 
    /// <remarks>
    /// 
    /// 						Industry vehicles
    /// 					
    /// </remarks>

    IndustryVehicles, 
    /// <remarks>
    /// 
    /// 						Parcel or padded Envelope
    /// 					
    /// </remarks>

    ParcelOrPaddedEnvelope, 
    /// <remarks>
    /// 
    /// 						Small Canada Post Box
    /// 					
    /// </remarks>

    SmallCanadaPostBox, 
    /// <remarks>
    /// 
    /// 						Medium Canada Post Box
    /// 					
    /// </remarks>

    MediumCanadaPostBox, 
    /// <remarks>
    /// 
    /// 						Large Canada Post Box
    /// 					
    /// </remarks>

    LargeCanadaPostBox, 
    /// <remarks>
    /// 
    /// 						Small Canada Post Bubble Mailer
    /// 					
    /// </remarks>

    SmallCanadaPostBubbleMailer, 
    /// <remarks>
    /// 
    /// 						Medium Canada Post Bubble Mailer
    /// 					
    /// </remarks>

    MediumCanadaPostBubbleMailer, 
    /// <remarks>
    /// 
    /// 						Large Canada Post Bubble Mailer
    /// 					
    /// </remarks>

    LargeCanadaPostBubbleMailer, 
    /// <remarks>
    /// 
    /// 						Padded Bags
    /// 					
    /// </remarks>

    PaddedBags, 
    /// <remarks>
    /// 
    /// 						Tough Bags
    /// 					
    /// </remarks>

    ToughBags, 
    /// <remarks>
    /// 
    /// 						Expandable Tough Bags
    /// 					
    /// </remarks>

    ExpandableToughBags, 
    /// <remarks>
    /// 
    /// 						Mailing Boxes
    /// 					
    /// </remarks>

    MailingBoxes, 
    /// <remarks>
    /// 
    /// 						Winepak
    /// 					
    /// </remarks>

    Winepak, 
    /// <remarks>
    /// 
    ///  						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				A shipping rate scale for shipping through UPS that affects the shipping cost calculated for UPS (lower if <strong>ShippingRateType</strong> is <code>DailyPickup</code>). For calculated shipping only.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum ShippingRateTypeCodeType
{
    /// <remarks>
    /// 
    /// 						"On-demand" shipping rate scale.
    /// 					
    /// </remarks>

    OnDemand, 
    /// <remarks>
    /// 
    /// 						"Daily pickup" shipping rate scale.
    /// 					
    /// </remarks>

    DailyPickup, 
    /// <remarks>
    /// 
    /// 						"Standard List" shipping rate scale.
    /// 					
    /// </remarks>

    StandardList, 
    /// <remarks>
    /// 
    /// 						"Counter" shipping rate scale.
    /// 					
    /// </remarks>

    Counter, 
    /// <remarks>
    /// 
    /// 						"Discounted" shipping rate scale.
    /// 					
    /// </remarks>

    Discounted, 
    /// <remarks>
    /// 
    /// 						"Commercial Plus" shipping rate scale.
    /// 					
    /// </remarks>

    CommercialPlus, 
    /// <remarks>
    /// 
    /// 						"Commercial Plus Discounted Rate1" shipping rate scale.
    /// 					
    /// </remarks>

    GoldSilver, 
    /// <remarks>
    /// 
    /// 						"Commercial Plus Discounted Rate2" shipping rate scale.
    /// 					
    /// </remarks>

    PlatTitanium, 
    /// <remarks>
    /// 
    /// 						(out) Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Regions to which the seller is willing to ship the item.
/// 				These values are applicable to ShipToLocation.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum ShippingRegionCodeType
{
    /// <remarks>
    /// 
    /// 						Africa
    /// 					
    /// </remarks>

    Africa, 
    /// <remarks>
    /// 
    /// 						Asia
    /// 					
    /// </remarks>

    Asia, 
    /// <remarks>
    /// 
    /// 						Caribbean
    /// 					
    /// </remarks>

    Caribbean, 
    /// <remarks>
    /// 
    /// 						Europe
    /// 					
    /// </remarks>

    Europe, 
    /// <remarks>
    /// 
    /// 						Latin America
    /// 					
    /// </remarks>

    LatinAmerica, 
    /// <remarks>
    /// 
    /// 						Middle East
    /// 					
    /// </remarks>

    MiddleEast, 
    /// <remarks>
    /// 
    /// 						North America
    /// 					
    /// </remarks>

    NorthAmerica, 
    /// <remarks>
    /// 
    /// 						Oceania (Pacific region other than Asia)
    /// 					
    /// </remarks>

    Oceania, 
    /// <remarks>
    /// 
    /// 						South America
    /// 					
    /// </remarks>

    SouthAmerica, 
    /// <remarks>
    /// 
    /// 						European Union
    /// 					
    /// </remarks>

    EuropeanUnion, 
    /// <remarks>
    /// 
    /// 						Seller will not ship the item.
    /// 					
    /// </remarks>

    WillNotShip, 
    /// <remarks>
    /// 
    /// 						Seller has specified Worldwide or eBay has
    /// 						determined that the specified regions add up to Worldwide.
    /// 					
    /// </remarks>

    Worldwide, 
    /// <remarks>
    /// 
    /// 						Americas
    /// 					
    /// </remarks>

    Americas, 

    None, 
    /// <remarks>
    /// 
    /// 					  Reserved for internal or future use
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// 
/// CA_PostExpeditedFlatRateBox, CA_PostExpeditedFlatRateBoxUSA, FreightOtherShipping, SameDayShipping, UK_RoyalMailStandardParcel
/// </summary>
/// <remarks>
/// 
/// 				A shipping service used to ship an item. Applications should not depend on the completeness of <strong>ShippingServiceCodeType</strong>. Instead, applications should call GeteBayDetails, with a <strong>DetailName</strong> value of <code>ShippingServiceDetails</code>, to return the complete list of shipping services. To check for the shipping services available for a specific site, specify the site ID in the header.
/// 				<br/><br/>
/// 				<span class="tablenote">
/// 				<strong>Note:</strong> It is possible that some of the returned shipping services can no longer be used in the AddItem family of calls. To distinguish between the valid and invalid shipping services, look for the <strong>ValidForSellingFlow</strong> flag in the <strong>ShippingServiceDetails</strong> node. If this flag is not returned for a specific shipping service, that shipping service can no longer be used in the AddItem family of calls.
/// 				</span>
/// 
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum ShippingServiceCodeType
{
    /// <remarks>
    /// 
    /// 						UPS Ground
    /// 					
    /// </remarks>

    UPSGround, 
    /// <remarks>
    /// 
    /// 						UPS 3rd Day
    /// 					
    /// </remarks>

    UPS3rdDay, 
    /// <remarks>
    /// 
    /// 						UPS 2nd Day
    /// 					
    /// </remarks>

    UPS2ndDay, 
    /// <remarks>
    /// 
    /// 						UPS Next Day
    /// 					
    /// </remarks>

    UPSNextDay, 
    /// <remarks>
    /// 
    /// 						USPS Priority
    /// 					
    /// </remarks>

    USPSPriority, 
    /// <remarks>
    /// 
    /// 						USPS Parcel Select Non-Presort
    /// 					
    /// </remarks>

    USPSParcel, 
    /// <remarks>
    /// 
    /// 						USPS Standard Post
    /// 					
    /// </remarks>

    USPSStandardPost, 
    /// <remarks>
    /// 
    /// 						USPS Media
    /// 					
    /// </remarks>

    USPSMedia, 
    /// <remarks>
    /// 
    /// 						USPS First Class
    /// 					
    /// </remarks>

    USPSFirstClass, 
    /// <remarks>
    /// 
    /// 						Standard shipping method
    /// 					
    /// </remarks>

    ShippingMethodStandard, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use
    /// 					
    /// </remarks>

    ShippingMethodExpress, 
    /// <remarks>
    /// 
    /// 						USPS Priority Mail Express
    /// 					
    /// </remarks>

    USPSExpressMail, 
    /// <remarks>
    /// 
    /// 						UPS Next Day Air
    /// 					
    /// </remarks>

    UPSNextDayAir, 
    /// <remarks>
    /// 
    /// 						UPS Next Day Air
    /// 					
    /// </remarks>

    UPS2DayAirAM, 
    /// <remarks>
    /// 
    /// 						USPS Priority Mail Express Flat Rate Envelope
    /// 						To use this service, a seller must specify the package weight so that eBay
    /// 						can validate the weight against the maximum weight limit for the service.
    /// 						The seller must also specify a package size of Package/Thick Envelope when
    /// 						using a calculated shipping service.
    /// 					
    /// </remarks>

    USPSExpressMailFlatRateEnvelope, 
    /// <remarks>
    /// 
    /// 						USPS Priority Mail Express Padded Flat Rate Envelope
    /// 						To use this service, a seller must specify the package weight so that eBay
    /// 						can validate the weight against the maximum weight limit for the service.
    /// 						The seller must also specify a package size of Package/Thick Envelope when
    /// 						using a calculated shipping service.
    /// 					
    /// </remarks>

    USPSExpressMailPaddedFlatRateEnvelope, 
    /// <remarks>
    /// 
    /// 						USPS Priority Mail Flat Rate Envelope
    /// 						To use this service, a seller must specify the package weight so that eBay
    /// 						can validate the weight against the maximum weight limit for the service.
    /// 						The seller must also specify a package size of Package/Thick Envelope when
    /// 						using a calculated shipping service.
    /// 					
    /// </remarks>

    USPSPriorityMailFlatRateEnvelope, 
    /// <remarks>
    /// 
    /// 						USPS Priority Mail Small Flat Rate Box
    /// 						To use this service, a seller must specify the package weight so that eBay
    /// 						can validate the weight against the maximum weight limit for the service.
    /// 						The seller must also specify a package size of Package/Thick Envelope when
    /// 						using a calculated shipping service.
    /// 					
    /// </remarks>

    USPSPriorityMailSmallFlatRateBox, 
    /// <remarks>
    /// 
    /// 						USPS Priority Mail Flat Rate Box
    /// 						To use this service, a seller must specify the package weight so that eBay
    /// 						can validate the weight against the maximum weight limit for the service.
    /// 						The seller must also specify a package size of Package/Thick Envelope when
    /// 						using a calculated shipping service.
    /// 					
    /// </remarks>

    USPSPriorityMailFlatRateBox, 
    /// <remarks>
    /// 
    /// 						USPS Priority Mail Large Flat Rate Box
    /// 						To use this service, a seller must specify the package weight so that eBay
    /// 						can validate the weight against the maximum weight limit for the service.
    /// 					
    /// </remarks>

    USPSPriorityMailLargeFlatRateBox, 
    /// <remarks>
    /// 
    /// 						USPS Priority Mail Padded Flat Rate Envelope
    /// 						To use this service, a seller must specify the package weight so that eBay
    /// 						can validate the weight against the maximum weight limit for the service.
    /// 					
    /// </remarks>

    USPSPriorityMailPaddedFlatRateEnvelope, 
    /// <remarks>
    /// 
    /// 						USPS Priority Mail Legal Flat Rate Envelope
    /// 						To use this service, a seller must specify the package weight so that eBay
    /// 						can validate the weight against the maximum weight limit for the service.
    /// 					
    /// </remarks>

    USPSPriorityMailLegalFlatRateEnvelope, 
    /// <remarks>
    /// 
    /// 						USPS Priority Mail Express Legal Flat Rate Envelope
    /// 						To use this service, a seller must specify the package weight so that eBay
    /// 						can validate the weight against the maximum weight limit for the service.
    /// 					
    /// </remarks>

    USPSExpressMailLegalFlatRateEnvelope, 
    /// <remarks>
    /// 
    /// 						USPS Priority Mail Regional Box A
    /// 						To use this service, a seller must specify the package weight so that eBay
    /// 						can validate the weight against the maximum weight limit for the service.
    /// 					
    /// </remarks>

    USPSPriorityMailRegionalBoxA, 
    /// <remarks>
    /// 
    /// 						USPS Priority Mail Regional Box B
    /// 						To use this service, a seller must specify the package weight so that eBay
    /// 						can validate the weight against the maximum weight limit for the service.
    /// 					
    /// </remarks>

    USPSPriorityMailRegionalBoxB, 
    /// <remarks>
    /// 
    /// 						USPS Priority Mail Regional Box C
    /// 						To use this service, a seller must specify the package weight so that eBay
    /// 						can validate the weight against the maximum weight limit for the service.
    /// 					
    /// </remarks>

    USPSPriorityMailRegionalBoxC, 
    /// <remarks>
    /// 
    /// 						USPS Priority Mail Express Flat Rate Box
    /// 						To use this service, a seller must specify the package weight so that eBay
    /// 						can validate the weight against the maximum weight limit for the service.
    /// 					
    /// </remarks>

    USPSExpressMailFlatRateBox, 
    /// <remarks>
    /// 
    /// 						Other (see description)
    /// 					
    /// </remarks>

    Other, 
    /// <remarks>
    /// 
    /// 						Local Delivery/Pickup
    /// 					
    /// </remarks>

    LocalDelivery, 
    /// <remarks>
    /// 
    /// 						Not Selected
    /// 					
    /// </remarks>

    NotSelected, 
    /// <remarks>
    /// 
    /// 						International Not Selected
    /// 					
    /// </remarks>

    InternationalNotSelected, 
    /// <remarks>
    /// 
    /// 						Standard International Flat Rate Shipping
    /// 					
    /// </remarks>

    StandardInternational, 
    /// <remarks>
    /// 
    /// 						Expedited International Flat Rate Shipping
    /// 					
    /// </remarks>

    ExpeditedInternational, 
    /// <remarks>
    /// 
    /// 						USPS Global Express Mail
    /// 					
    /// </remarks>

    USPSGlobalExpress, 
    /// <remarks>
    /// 
    /// 						USPS Global Priority Mail
    /// 					
    /// </remarks>

    USPSGlobalPriority, 
    /// <remarks>
    /// 
    /// 						USPS Economy Parcel Post
    /// 					
    /// </remarks>

    USPSEconomyParcel, 
    /// <remarks>
    /// 
    /// 						USPS Economy Letter Post
    /// 					
    /// </remarks>

    USPSEconomyLetter, 
    /// <remarks>
    /// 
    /// 						USPS Airmail Letter Post
    /// 					
    /// </remarks>

    USPSAirmailLetter, 
    /// <remarks>
    /// 
    /// 						USPS Airmail Parcel Post
    /// 					
    /// </remarks>

    USPSAirmailParcel, 
    /// <remarks>
    /// 
    /// 						UPS Worldwide Express Plus
    /// 					
    /// </remarks>

    UPSWorldWideExpressPlus, 
    /// <remarks>
    /// 
    /// 						UPS Worldwide Express
    /// 					
    /// </remarks>

    UPSWorldWideExpress, 
    /// <remarks>
    /// 
    /// 						UPS Worldwide Expedited
    /// 					
    /// </remarks>

    UPSWorldWideExpedited, 
    /// <remarks>
    /// 
    /// 						UPS Worldwide Saver
    /// 					
    /// </remarks>

    UPSWorldwideSaver, 
    /// <remarks>
    /// 
    /// 						UPS Standard To Canada
    /// 					
    /// </remarks>

    UPSStandardToCanada, 
    /// <remarks>
    /// 
    /// 						USPS Priority Mail Express International Flat Rate Envelope
    /// 						To use this service, a seller must specify the package weight so that eBay
    /// 						can validate the weight against the maximum weight limit for the service.
    /// 						The seller must also specify a package size of Package/Thick Envelope when
    /// 						using a calculated shipping service.
    /// 					
    /// </remarks>

    USPSExpressMailInternationalFlatRateEnvelope, 
    /// <remarks>
    /// 
    /// 						USPS Priority Mail Express International Padded Flat Rate Envelope
    /// 						To use this service, a seller must specify the package weight so that eBay
    /// 						can validate the weight against the maximum weight limit for the service.
    /// 						The seller must also specify a package size of Package/Thick Envelope when
    /// 						using a calculated shipping service.
    /// 					
    /// </remarks>

    USPSExpressMailInternationalPaddedFlatRateEnvelope, 
    /// <remarks>
    /// 
    /// 						USPS Priority Mail International Flat Rate Envelope
    /// 						To use this service, a seller must specify the package weight so that eBay
    /// 						can validate the weight against the maximum weight limit for the service.
    /// 						The seller must also specify a package size of Package/Thick Envelope when
    /// 						using a calculated shipping service.
    /// 					
    /// </remarks>

    USPSPriorityMailInternationalFlatRateEnvelope, 
    /// <remarks>
    /// 
    /// 						USPS Priority Mail International Small Flat Rate Box
    /// 						To use this service, a seller must specify the package weight so that eBay
    /// 						can validate the weight against the maximum weight limit for the service.
    /// 						The seller must also specify a package size of Package/Thick Envelope when
    /// 						using a calculated shipping service.
    /// 					
    /// </remarks>

    USPSPriorityMailInternationalSmallFlatRateBox, 
    /// <remarks>
    /// 
    /// 						USPS Priority Mail International Flat Rate Box
    /// 						To use this service, a seller must specify the package weight so that eBay
    /// 						can validate the weight against the maximum weight limit for the service.
    /// 						The seller must also specify a package size of Package/Thick Envelope when
    /// 						using a calculated shipping service.
    /// 					
    /// </remarks>

    USPSPriorityMailInternationalFlatRateBox, 
    /// <remarks>
    /// 
    /// 						USPS Priority Mail International Large Flat Rate Box
    /// 						To use this service, a seller must specify the package weight so that eBay
    /// 						can validate the weight against the maximum weight limit for the service.
    /// 					
    /// </remarks>

    USPSPriorityMailInternationalLargeFlatRateBox, 
    /// <remarks>
    /// 
    /// 						USPS Priority Mail International Padded Flat Rate Envelope
    /// 						To use this service, a seller must specify the package weight so that eBay
    /// 						can validate the weight against the maximum weight limit for the service.
    /// 					
    /// </remarks>

    USPSPriorityMailInternationalPaddedFlatRateEnvelope, 
    /// <remarks>
    /// 
    /// 						USPS Priority Mail International Legal Flat Rate Envelope
    /// 						To use this service, a seller must specify the package weight so that eBay
    /// 						can validate the weight against the maximum weight limit for the service.
    /// 					
    /// </remarks>

    USPSPriorityMailInternationalLegalFlatRateEnvelope, 
    /// <remarks>
    /// 
    /// 						USPS Priority Mail Express International Legal Flat Rate Envelope
    /// 						To use this service, a seller must specify the package weight so that eBay
    /// 						can validate the weight against the maximum weight limit for the service.
    /// 					
    /// </remarks>

    USPSExpressMailInternationalLegalFlatRateEnvelope, 
    /// <remarks>
    /// 
    /// 						USPS Priority Mail Express International Flat Rate Box
    /// 						To use this service, a seller must specify the package weight so that eBay
    /// 						can validate the weight against the maximum weight limit for the service.
    /// 					
    /// </remarks>

    USPSExpressMailInternationalFlatRateBox, 
    /// <remarks>
    /// 
    /// 						Other International Shipping (see description)
    /// 					
    /// </remarks>

    OtherInternational, 
    /// <remarks>
    /// 
    /// 						Standardversand (unversichert)
    /// 					
    /// </remarks>

    AT_StandardDispatch, 
    /// <remarks>
    /// 
    /// 						Versicherter Versand
    /// 					
    /// </remarks>

    AT_InsuredDispatch, 
    /// <remarks>
    /// 
    /// 						Einschreiben (Versand inkl. Einschreibengebuhr)
    /// 					
    /// </remarks>

    AT_Writing, 
    /// <remarks>
    /// 
    /// 						Nachnahme (Versand inkl. Nachnahmegebuhr)
    /// 					
    /// </remarks>

    AT_COD, 
    /// <remarks>
    /// 
    /// 						Express- oder Kurierversand
    /// 					
    /// </remarks>

    AT_ExpressOrCourier, 
    /// <remarks>
    /// 
    /// 						Versicherter Express- oder Kurierversand
    /// 					
    /// </remarks>

    AT_InsuredExpressOrCourier, 
    /// <remarks>
    /// 
    /// 						Sonder-/Speditionsversand (z.B. Mobel, KFZ)
    /// 					
    /// </remarks>

    AT_SpecialDispatch, 
    /// <remarks>
    /// 
    /// 						Versicherter Sonder-/Speditionsversand (z.B. Mobel, KFZ)
    /// 					
    /// </remarks>

    AT_InsuredSpecialDispatch, 
    /// <remarks>
    /// 
    /// 						Sonstige (Siehe Artikelbeschreibung)
    /// 					
    /// </remarks>

    AT_Sonstige, 
    /// <remarks>
    /// 
    /// 						Unversicherter Versand International
    /// 					
    /// </remarks>

    AT_UnversicherterVersandInternational, 
    /// <remarks>
    /// 
    /// 						Versicherter Versand International
    /// 					
    /// </remarks>

    AT_VersicherterVersandInternational, 
    /// <remarks>
    /// 
    /// 						Sonstiger Versand International
    /// 					
    /// </remarks>

    AT_SonstigerVersandInternational, 
    /// <remarks>
    /// 
    /// 						Unversicherter Express Versand International
    /// 					
    /// </remarks>

    AT_UnversicherterExpressVersandInternational, 
    /// <remarks>
    /// 
    /// 						Versicherter Express Versand International
    /// 					
    /// </remarks>

    AT_VersicherterExpressVersandInternational, 
    /// <remarks>
    /// 
    /// 						Sparversand aus dem Ausland
    /// 					
    /// </remarks>

    AT_EconomyDeliveryFromAbroad, 
    /// <remarks>
    /// 
    /// 						Standardversand aus dem Ausland
    /// 					
    /// </remarks>

    AT_StandardDeliveryFromAbroad, 
    /// <remarks>
    /// 
    /// 						Expressversand aus dem Ausland
    /// 					
    /// </remarks>

    AT_ExpressDeliveryFromAbroad, 
    /// <remarks>
    /// 
    /// 						Versand mit Nachverfolgung aus dem Ausland
    /// 					
    /// </remarks>

    AT_TrackedDeliveryFromAbroad, 
    /// <remarks>
    /// 
    /// 						Regular
    /// 					
    /// </remarks>

    AU_Regular, 
    /// <remarks>
    /// 
    /// 						Express
    /// 					
    /// </remarks>

    AU_Express, 
    /// <remarks>
    /// 
    /// 						Registered
    /// 					
    /// </remarks>

    AU_Registered, 
    /// <remarks>
    /// 
    /// 						Courier
    /// 					
    /// </remarks>

    AU_Courier, 
    /// <remarks>
    /// 
    /// 						Other
    /// 					
    /// </remarks>

    AU_Other, 
    /// <remarks>
    /// 
    /// 						EMS International Courier - Parcels
    /// 					
    /// </remarks>

    AU_EMSInternationalCourierParcels, 
    /// <remarks>
    /// 
    /// 						EMS International Courier - Documents
    /// 					
    /// </remarks>

    AU_EMSInternationalCourierDocuments, 
    /// <remarks>
    /// 
    /// 						Express Post International - Documents
    /// 					
    /// </remarks>

    AU_ExpressPostInternationalDocuments, 
    /// <remarks>
    /// 
    /// 						Air Mail
    /// 					
    /// </remarks>

    AU_AirMailInternational, 
    /// <remarks>
    /// 
    /// 						Economy Air
    /// 					
    /// </remarks>

    AU_EconomyAirInternational, 
    /// <remarks>
    /// 
    /// 						Sea Mail
    /// 					
    /// </remarks>

    AU_SeaMailInternational, 
    /// <remarks>
    /// 
    /// 						Standard International Flat Rate Postage
    /// 					
    /// </remarks>

    AU_StandardInternational, 
    /// <remarks>
    /// 
    /// 						Expedited international flat rate postage
    /// 					
    /// </remarks>

    AU_ExpeditedInternational, 
    /// <remarks>
    /// 
    /// 						Other international postage
    /// 					
    /// </remarks>

    AU_OtherInternational, 
    /// <remarks>
    /// 
    /// 						Australia Post Registered Post International Padded Bag 1 kg
    /// 					
    /// </remarks>

    AU_AusPostRegisteredPostInternationalPaddedBag1kg, 
    /// <remarks>
    /// 
    /// 						Australia Post Registered Post International Padded Bag 500 g
    /// 					
    /// </remarks>

    AU_AusPostRegisteredPostInternationalPaddedBag500g, 
    /// <remarks>
    /// 
    /// 						Australia Post Registered Post International Parcel
    /// 					
    /// </remarks>

    AU_AusPostRegisteredPostInternationalParcel, 
    /// <remarks>
    /// 
    /// 						Expedited delivery from outside Australia
    /// 					
    /// </remarks>

    AU_ExpeditedDeliveryFromOutsideAU, 
    /// <remarks>
    /// 
    /// 						Economy delivery from outside Australia
    /// 					
    /// </remarks>

    AU_EconomyDeliveryFromOutsideAU, 
    /// <remarks>
    /// 
    /// 						Standard Delivery From Outside AU
    /// 					
    /// </remarks>

    AU_StandardDeliveryFromOutsideAU, 
    /// <remarks>
    /// 
    /// 						Australian Air Express Metro 15 kg
    /// 					
    /// </remarks>

    AU_AustralianAirExpressMetro15kg, 
    /// <remarks>
    /// 
    /// 						Australian Air Express Flat Rate 5 kg
    /// 					
    /// </remarks>

    AU_AustralianAirExpressFlatRate5kg, 
    /// <remarks>
    /// 
    /// 						Australian Air Express Flat Rate 3 kg
    /// 					
    /// </remarks>

    AU_AustralianAirExpressFlatRate3kg, 
    /// <remarks>
    /// 
    /// 						Australian Air Express Flat Rate 1 kg
    /// 					
    /// </remarks>

    AU_AustralianAirExpressFlatRate1kg, 
    /// <remarks>
    /// 
    /// 						Express delivery (1-3 business days) in Australia
    /// 					
    /// </remarks>

    AU_ExpressDelivery, 
    /// <remarks>
    /// 
    /// 						Standard delivery (1-6 business days) in Australia
    /// 					
    /// </remarks>

    AU_StandardDelivery, 
    /// <remarks>
    /// 
    /// 						eBay/Australian Post 3 kg Flat Rate Satchel
    /// 					
    /// </remarks>

    AU_eBayAusPost3kgFlatRateSatchel, 
    /// <remarks>
    /// 
    /// 						eBay/Australian Post 500 g Flat Rate Satchel
    /// 					
    /// </remarks>

    AU_eBayAusPost500gFlatRateSatchel, 
    /// <remarks>
    /// 
    /// 						Freight delivery in Australia. Used for heavy and bulky items.
    /// 					
    /// </remarks>

    AU_Freight, 
    /// <remarks>
    /// 
    /// 						Livraison standard a partir de l'etranger
    /// 					
    /// </remarks>

    BEFR_StandardDelivery, 
    /// <remarks>
    /// 
    /// 						Livraison express
    /// 					
    /// </remarks>

    BEFR_PriorityDelivery, 
    /// <remarks>
    /// 
    /// 						Colis
    /// 					
    /// </remarks>

    BEFR_ParcelPost, 
    /// <remarks>
    /// 
    /// 						Courrier en recommande
    /// 					
    /// </remarks>

    BEFR_RegisteredMail, 
    /// <remarks>
    /// 
    /// 						Autre service de livraison
    /// 					
    /// </remarks>

    BEFR_Other, 
    /// <remarks>
    /// 
    /// 						De Post
    /// 					
    /// </remarks>

    BEFR_DePostInternational, 
    /// <remarks>
    /// 
    /// 						UPS
    /// 					
    /// </remarks>

    BEFR_UPSInternational, 
    /// <remarks>
    /// 
    /// 						FedEx
    /// 					
    /// </remarks>

    BEFR_FedExInternational, 
    /// <remarks>
    /// 
    /// 						DHL
    /// 					
    /// </remarks>

    BEFR_DHLInternational, 
    /// <remarks>
    /// 
    /// 						TPG Post/TNT (Netherlands)
    /// 					
    /// </remarks>

    BEFR_TPGPostTNTInternational, 
    /// <remarks>
    /// 
    /// 						Frais de livraison internationale fixes
    /// 					
    /// </remarks>

    BEFR_StandardInternational, 
    /// <remarks>
    /// 
    /// 						Frais fixes pour livraison internationale express
    /// 					
    /// </remarks>

    BEFR_ExpeditedInternational, 
    /// <remarks>
    /// 
    /// 						Autres livraisons internationales (voir description)
    /// 					
    /// </remarks>

    BEFR_OtherInternational, 
    /// <remarks>
    /// 
    /// 						La Poste (France)
    /// 					
    /// </remarks>

    BEFR_LaPosteInternational, 
    /// <remarks>
    /// La Poste - livraison standard (1 a 2 jours ouvrables)
    /// </remarks>

    BEFR_LaPosteStandardShipping, 
    /// <remarks>
    /// La Poste - envoi recommande (1 jour ouvrable)
    /// </remarks>

    BEFR_LaPosteCertifiedShipping, 
    /// <remarks>
    /// La Poste - Taxipost LLS (2 jours ouvrables)
    /// </remarks>

    BEFR_LaPosteTaxipostLLS, 
    /// <remarks>
    /// La Poste - Taxipost 24h (1 jour ouvrable)
    /// </remarks>

    BEFR_LaPosteTaxipost24h, 
    /// <remarks>
    /// Autres livraisons
    /// </remarks>

    BEFR_LaPosteTaxipostSecur, 
    /// <remarks>
    /// La Poste - livraison standard
    /// </remarks>

    BEFR_PostInternationalStandard, 
    /// <remarks>
    /// La Poste - envoi recommande
    /// </remarks>

    BEFR_PostInternationalRegistered, 
    /// <remarks>
    /// TNT
    /// </remarks>

    BEFR_TNTInternational, 
    /// <remarks>
    /// 
    /// 						Livraison economique a partir de l'etranger
    /// 					
    /// </remarks>

    BEFR_EconomyDeliveryFromAbroad, 
    /// <remarks>
    /// 
    /// 						Livraison standard a partir de l'etranger
    /// 					
    /// </remarks>

    BEFR_StandardDeliveryFromAbroad, 
    /// <remarks>
    /// 
    /// 						Livraison express a partir de l'etranger
    /// 					
    /// </remarks>

    BEFR_ExpressDeliveryFromAbroad, 
    /// <remarks>
    /// 
    /// 						Livraison a partir de l'etranger avec suivi de commande
    /// 					
    /// </remarks>

    BEFR_TrackedDeliveryFromAbroad, 
    /// <remarks>
    /// 
    /// 						Standard Delivery
    /// 					
    /// </remarks>

    BENL_StandardDelivery, 
    /// <remarks>
    /// 
    /// 						Priority Delivery
    /// 					
    /// </remarks>

    BENL_PriorityDelivery, 
    /// <remarks>
    /// 
    /// 						Parcel Post
    /// 					
    /// </remarks>

    BENL_ParcelPost, 
    /// <remarks>
    /// 
    /// 						Registered Mail
    /// 					
    /// </remarks>

    BENL_RegisteredMail, 
    /// <remarks>
    /// 
    /// 						Other Shipping Service
    /// 					
    /// </remarks>

    BENL_Other, 
    /// <remarks>
    /// 
    /// 						De Post
    /// 					
    /// </remarks>

    BENL_DePostInternational, 
    /// <remarks>
    /// 
    /// 						UPS
    /// 					
    /// </remarks>

    BENL_UPSInternational, 
    /// <remarks>
    /// 
    /// 						FedEx
    /// 					
    /// </remarks>

    BENL_FedExInternational, 
    /// <remarks>
    /// 
    /// 						DHL
    /// 					
    /// </remarks>

    BENL_DHLInternational, 
    /// <remarks>
    /// 
    /// 						TPG Post/TNT (Netherlands)
    /// 					
    /// </remarks>

    BENL_TPGPostTNTInternational, 
    /// <remarks>
    /// 
    /// 						Standard International
    /// 					
    /// </remarks>

    BENL_StandardInternational, 
    /// <remarks>
    /// 
    /// 						Expedited International
    /// 					
    /// </remarks>

    BENL_ExpeditedInternational, 
    /// <remarks>
    /// 
    /// 						Other International Shipping Services
    /// 					
    /// </remarks>

    BENL_OtherInternational, 
    /// <remarks>
    /// 
    /// 						La Poste (France)
    /// 					
    /// </remarks>

    BENL_LaPosteInternational, 
    /// <remarks>
    /// De Post - standaardverzending (1 tot 2 werkdagen)
    /// </remarks>

    BENL_DePostStandardShipping, 
    /// <remarks>
    /// De Post - aangetekende zending (1 werkdag)
    /// </remarks>

    BENL_DePostCertifiedShipping, 
    /// <remarks>
    /// De Post - Taxipost LLS (2 werkdagen)
    /// </remarks>

    BENL_DePostTaxipostLLS, 
    /// <remarks>
    /// De Post - Taxipost 24u (1 werkdag)
    /// </remarks>

    BENL_DePostTaxipost24h, 
    /// <remarks>
    /// De Post - Taxipost Secur (1 werkdag)
    /// </remarks>

    BENL_DePostTaxipostSecur, 
    /// <remarks>
    /// Andere verzending
    /// </remarks>

    BENL_OtherShippingMethods, 
    /// <remarks>
    /// De Post - standaardverzending
    /// </remarks>

    BENL_PostInternationalStandard, 
    /// <remarks>
    /// De Post - aangetekende zending
    /// </remarks>

    BENL_PostInternationalRegistered, 
    /// <remarks>
    /// TNT
    /// </remarks>

    BENL_TNTInternational, 
    /// <remarks>
    /// Voordelige verzending uit het buitenland
    /// </remarks>

    BENL_EconomyDeliveryFromAbroad, 
    /// <remarks>
    /// Standaardverzending uit het buitenland
    /// </remarks>

    BENL_StandardDeliveryFromAbroad, 
    /// <remarks>
    /// Express verzending uit het buitenland
    /// </remarks>

    BENL_ExpressDeliveryFromAbroad, 
    /// <remarks>
    /// Verzending uit het buitenland met internationale tracking
    /// </remarks>

    BENL_TrackedDeliveryFromAbroad, 
    /// <remarks>
    /// 
    /// 						Standard Delivery
    /// 					
    /// </remarks>

    CA_StandardDelivery, 
    /// <remarks>
    /// 
    /// 						Expedited delivery
    /// 					
    /// </remarks>

    CA_ExpeditedDelivery, 
    /// <remarks>
    /// 
    /// 						Canada Post Lettermail
    /// 					
    /// </remarks>

    CA_PostLettermail, 
    /// <remarks>
    /// 
    /// 						Canada Post Regular Parcel
    /// 					
    /// </remarks>

    CA_PostRegularParcel, 
    /// <remarks>
    /// 
    /// 						Canada Post Expedited Parcel
    /// 					
    /// </remarks>

    CA_PostExpeditedParcel, 
    /// <remarks>
    /// 
    /// 						Canada Post Xpresspost - International
    /// 					
    /// </remarks>

    CA_PostXpresspost, 
    /// <remarks>
    /// 
    /// 						Canada Post Priority Courier
    /// 					
    /// </remarks>

    CA_PostPriorityCourier, 
    /// <remarks>
    /// 
    /// 						Canada Post Expedited Flat Rate Box
    /// 					
    /// </remarks>

    CanadaPostExpeditedFlatRateBox, 
    /// <remarks>
    /// 
    /// 						(This value is no longer used.)
    /// 					
    /// </remarks>

    CA_PostExpeditedFlatRateBox, 
    /// <remarks>
    /// 
    /// 						Standard International Flat Rate Shipping
    /// 					
    /// </remarks>

    CA_StandardInternational, 
    /// <remarks>
    /// 
    /// 						Expedited International Flat Rate Shipping
    /// 					
    /// </remarks>

    CA_ExpeditedInternational, 
    /// <remarks>
    /// 
    /// 						Other International Shipping (see description)
    /// 					
    /// </remarks>

    CA_OtherInternational, 
    /// <remarks>
    /// 
    /// 						Canada Post Expedited Parcel - USA
    /// 					
    /// </remarks>

    CA_PostExpeditedParcelUSA, 
    /// <remarks>
    /// 
    /// 						Canada Post Small Packets - USA
    /// 					
    /// </remarks>

    CA_PostSmallPacketsUSA, 
    /// <remarks>
    /// 
    /// 						Canada Post Xpresspost - USA
    /// 					
    /// </remarks>

    CA_PostXpresspostUSA, 
    /// <remarks>
    /// 
    /// 						Canada Post Xpresspost - International
    /// 					
    /// </remarks>

    CA_PostXpresspostInternational, 
    /// <remarks>
    /// 
    /// 						Canada Post International Parcel - Surface
    /// 					
    /// </remarks>

    CA_PostInternationalParcelSurface, 
    /// <remarks>
    /// 
    /// 						Canada Post International Parcel - Air
    /// 					
    /// </remarks>

    CA_PostInternationalParcelAir, 
    /// <remarks>
    /// 
    /// 						Small Packets - International
    /// 					
    /// </remarks>

    CA_SmallPacketsInternational, 
    /// <remarks>
    /// 
    /// 						Purolator International
    /// 					
    /// </remarks>

    CA_PurolatorInternational, 
    /// <remarks>
    /// 
    /// 						Canada Post Small Packets - USA - Ground
    /// 					
    /// </remarks>

    CA_PostSmallPacketsUSAGround, 
    /// <remarks>
    /// 
    /// 						Canada Post Small Packets - USA - Air
    /// 					
    /// </remarks>

    CA_PostSmallPacketsUSAAir, 
    /// <remarks>
    /// 
    /// 						Small Packets - International - Ground
    /// 					
    /// </remarks>

    CA_SmallPacketsInternationalGround, 
    /// <remarks>
    /// 
    /// 						Small Packets - International - Air
    /// 					
    /// </remarks>

    CA_SmallPacketsInternationalAir, 
    /// <remarks>
    /// 
    /// 						Canada Post USA Letter-post
    /// 					
    /// </remarks>

    CA_PostUSALetterPost, 
    /// <remarks>
    /// 
    /// 						Canada Post International Letter-post
    /// 					
    /// </remarks>

    CA_PostInternationalLetterPost, 
    /// <remarks>
    /// 
    /// 						(This value is no longer used.)
    /// 					
    /// </remarks>

    CA_PostExpeditedFlatRateBoxUSA, 
    /// <remarks>
    /// 
    /// 						UPS Express Canada
    /// 					
    /// </remarks>

    CA_UPSExpressCanada, 
    /// <remarks>
    /// 
    /// 						UPS Express Saver Canada
    /// 					
    /// </remarks>

    CA_UPSExpressSaverCanada, 
    /// <remarks>
    /// 
    /// 						UPS Expedited Canada
    /// 					
    /// </remarks>

    CA_UPSExpeditedCanada, 
    /// <remarks>
    /// 
    /// 						UPS Standard Canada
    /// 					
    /// </remarks>

    CA_UPSStandardCanada, 
    /// <remarks>
    /// 
    /// 						UPS Express United States
    /// 					
    /// </remarks>

    CA_UPSExpressUnitedStates, 
    /// <remarks>
    /// 
    /// 						UPS Expedited United States
    /// 					
    /// </remarks>

    CA_UPSExpeditedUnitedStates, 
    /// <remarks>
    /// 
    /// 						UPS 3 Day Select United States
    /// 					
    /// </remarks>

    CA_UPS3DaySelectUnitedStates, 
    /// <remarks>
    /// 
    /// 						UPS Standard United States
    /// 					
    /// </remarks>

    CA_UPSStandardUnitedStates, 
    /// <remarks>
    /// 
    /// 						UPS Worldwide Express
    /// 					
    /// </remarks>

    CA_UPSWorldWideExpress, 
    /// <remarks>
    /// 
    /// 						UPS Worldwide Expedited
    /// 					
    /// </remarks>

    CA_UPSWorldWideExpedited, 
    /// <remarks>
    /// 
    /// 						Canada Post Priority Worldwide
    /// 					
    /// </remarks>

    CA_PriorityWorldwide, 
    /// <remarks>
    /// 
    /// 						Canada Post Expedited Flat Rate Box USA
    /// 					
    /// </remarks>

    CanadaPostExpeditedFlatRateBoxUSA, 
    /// <remarks>
    /// 
    /// 						Canada Post Tracked Packet - USA
    /// 					
    /// </remarks>

    CA_PostTrackedPacketsUSA, 
    /// <remarks>
    /// 
    /// 						Canada Post Tracked Packet - International
    /// 					
    /// </remarks>

    CA_PostTrackedPacketsInternational, 
    /// <remarks>
    /// 
    /// 						Freight
    /// 					
    /// </remarks>

    CA_Freight, 
    /// <remarks>
    /// 
    /// 						Standardversand (A-Post/Priority)
    /// 					
    /// </remarks>

    CH_StandardDispatchAPost, 
    /// <remarks>
    /// 
    /// 						Standardversand (B-Post/Economy)
    /// 					
    /// </remarks>

    CH_StandardDispatchBPost, 
    /// <remarks>
    /// 
    /// 						Versicherter Versand (z.B. Assurance/Fragile)
    /// 					
    /// </remarks>

    CH_InsuredDispatch, 
    /// <remarks>
    /// 
    /// 						Einschreiben (Versand inkl. Einschreibengebuhr)
    /// 					
    /// </remarks>

    CH_Writing, 
    /// <remarks>
    /// 
    /// 						Nachnahme (Versand inkl. Nachnahmegebuhr)
    /// 					
    /// </remarks>

    CH_COD, 
    /// <remarks>
    /// 
    /// 						Express- oder Kurierversand
    /// 					
    /// </remarks>

    CH_ExpressOrCourier, 
    /// <remarks>
    /// 
    /// 						Versicherter Express- oder Kurierversand
    /// 					
    /// </remarks>

    CH_InsuredExpressOrCourier, 
    /// <remarks>
    /// 
    /// 						Sonder-/Speditionsversand (z.B. Mobel, KFZ)
    /// 					
    /// </remarks>

    CH_SpecialDispatch, 
    /// <remarks>
    /// 
    /// 						Versicherter Sonder-/Speditionsversand (z.B. Mobel, KFZ)
    /// 					
    /// </remarks>

    CH_InsuredSpecialDispatch, 
    /// <remarks>
    /// 
    /// 						Sonstige (Siehe Artikelbeschreibung)
    /// 					
    /// </remarks>

    CH_Sonstige, 
    /// <remarks>
    /// 
    /// 						Sonstiger Versand (Siehe Artikelbeschreibung)
    /// 					
    /// </remarks>

    CH_SonstigerVersandInternational, 
    /// <remarks>
    /// 
    /// 						ECONOMY Sendungen
    /// 					
    /// </remarks>

    CH_EconomySendungenInternational, 
    /// <remarks>
    /// 
    /// 						PRIORITY Sendungen
    /// 					
    /// </remarks>

    CH_PrioritySendungenInternational, 
    /// <remarks>
    /// 
    /// 						URGENT Sendungen
    /// 					
    /// </remarks>

    CH_UrgentSendungenInternational, 
    /// <remarks>
    /// 
    /// 						Sparversand aus dem Ausland
    /// 					
    /// </remarks>

    CH_EconomyDeliveryFromAbroad, 
    /// <remarks>
    /// 
    /// 						Standardversand aus dem Ausland
    /// 					
    /// </remarks>

    CH_StandardDeliveryFromAbroad, 
    /// <remarks>
    /// 
    /// 						Expressversand aus dem Ausland
    /// 					
    /// </remarks>

    CH_ExpressDeliveryFromAbroad, 
    /// <remarks>
    /// 
    /// 						Versand mit Nachverfolgung aus dem Ausland
    /// 					
    /// </remarks>

    CH_TrackedDeliveryFromAbroad, 
    /// <remarks>
    /// 
    /// 						Seller door delivery (limited to the city)
    /// 					
    /// </remarks>

    CN_PersonalDelivery, 
    /// <remarks>
    /// 
    /// 						China Post Post Office
    /// 					
    /// </remarks>

    CN_RegularPackage, 
    /// <remarks>
    /// 
    /// 						Logistics company express
    /// 					
    /// </remarks>

    CN_DeliveryCompanyExpress, 
    /// <remarks>
    /// 
    /// 						EMS Express
    /// 					
    /// </remarks>

    CN_PostOfficeExpress, 
    /// <remarks>
    /// 
    /// 						Other (see item description)
    /// 					
    /// </remarks>

    CN_Others, 
    /// <remarks>
    /// 
    /// 						China Post Express Mail
    /// 					
    /// </remarks>

    CN_FastPostOffice, 
    /// <remarks>
    /// 
    /// 						City Express
    /// 					
    /// </remarks>

    CN_ExpressDeliverySameCity, 
    /// <remarks>
    /// 
    /// 						Off-site delivery
    /// 					
    /// </remarks>

    CN_ExpressDeliveryOtherCities, 
    /// <remarks>
    /// 
    /// 						International Standard Fixed Freight
    /// 					
    /// </remarks>

    CN_StandardInternational, 
    /// <remarks>
    /// 
    /// 						International courier fixed freight
    /// 					
    /// </remarks>

    CN_ExpeditedInternational, 
    /// <remarks>
    /// 
    /// 						Other international shipping charges (see note)
    /// 					
    /// </remarks>

    CN_OtherInternational, 
    /// <remarks>
    /// 
    /// 						COD (same city only)
    /// 					
    /// </remarks>

    CN_CODInternational, 
    /// <remarks>
    /// 
    /// 						Standard Mailing
    /// 					
    /// </remarks>

    CN_StandardMailingInternational, 
    /// <remarks>
    /// 
    /// 						Regular logistics
    /// 					
    /// </remarks>

    CN_RegularLogisticsInternational, 
    /// <remarks>
    /// 
    /// 						EMS
    /// 					
    /// </remarks>

    CN_EMSInternational, 
    /// <remarks>
    /// 
    /// 						Others (see description)
    /// 					
    /// </remarks>

    CN_OthersInternational, 
    /// <remarks>
    /// 
    /// 						Unversicherter Versand
    /// 					
    /// </remarks>

    DE_StandardDispatch, 
    /// <remarks>
    /// 
    /// 						Versicherter Versand
    /// 					
    /// </remarks>

    DE_InsuredDispatch, 
    /// <remarks>
    /// 
    /// 						Einschreiben (Versand inkl. Einschreibengebuhr)
    /// 					
    /// </remarks>

    DE_Writing, 
    /// <remarks>
    /// 
    /// 						Nachnahme (Versand inkl. Nachnahmegebuhr)
    /// 					
    /// </remarks>

    DE_COD, 
    /// <remarks>
    /// 
    /// 						Express- oder Kurierversand
    /// 					
    /// </remarks>

    DE_ExpressOrCourier, 
    /// <remarks>
    /// 
    /// 						Versicherter Express- oder Kurierversand
    /// 					
    /// </remarks>

    DE_InsuredExpressOrCourier, 
    /// <remarks>
    /// 
    /// 						Sonderversand (z.B. Mobel, KFZ)DE_DHLPackchen
    /// 					
    /// </remarks>

    DE_SpecialDispatch, 
    /// <remarks>
    /// 
    /// 						Versicherter Sonderversand (z.B. Mobel, KFZ)
    /// 					
    /// </remarks>

    DE_InsuredSpecialDispatch, 
    /// <remarks>
    /// 
    /// 						Unversicherter Versand
    /// 					
    /// </remarks>

    DE_UnversicherterVersand, 
    /// <remarks>
    /// 
    /// 						Deutsche Post Brief
    /// 					
    /// </remarks>

    DE_DeutschePostBrief, 
    /// <remarks>
    /// 
    /// 						eBay DHL Paket 24/7 (Abgabe und Lieferung an Packstation)
    /// 					
    /// </remarks>

    DE_eBayDHLPaket24x7, 
    /// <remarks>
    /// 
    /// 						DHL Postpaket
    /// 					
    /// </remarks>

    DE_DHLPostpaket, 
    /// <remarks>
    /// 
    /// 						DHL Packchen International
    /// 					
    /// </remarks>

    DE_DHLPackchen, 
    /// <remarks>
    /// 
    /// 						Deutsche Post Warensendung
    /// 					
    /// </remarks>

    DE_DeutschePostWarensendung, 
    /// <remarks>
    /// 
    /// 						Deutsche Post Buchersendung
    /// 					
    /// </remarks>

    DE_DeutschePostBuchersendung, 
    /// <remarks>
    /// 
    /// 						Hermes Paket (unversichert)
    /// 					
    /// </remarks>

    DE_HermesPaketUnversichert, 
    /// <remarks>
    /// 
    /// 						Hermes Paket (versichert)
    /// 					
    /// </remarks>

    DE_HermesPaketVersichert, 
    /// <remarks>
    /// 
    /// 						iloxx Transport XXL
    /// 					
    /// </remarks>

    DE_IloxxTransportXXL, 
    /// <remarks>
    /// 
    /// 						iloxx Express
    /// 					
    /// </remarks>

    DE_IloxxUbernachtExpress, 
    /// <remarks>
    /// 
    /// 						iloxx Standard
    /// 					
    /// </remarks>

    DE_IloxxStandard, 
    /// <remarks>
    /// 
    /// 						Sonstige (Siehe Artikelbeschreibung)
    /// 					
    /// </remarks>

    DE_Sonstige, 
    /// <remarks>
    /// 
    /// 						Unversicherter Versand
    /// 					
    /// </remarks>

    DE_UnversicherterVersandInternational, 
    /// <remarks>
    /// 
    /// 						Versicherter Versand
    /// 					
    /// </remarks>

    DE_VersicherterVersandInternational, 
    /// <remarks>
    /// 
    /// 						DHL Postpaket International
    /// 					
    /// </remarks>

    DE_DHLPostpaketInternational, 
    /// <remarks>
    /// 
    /// 						DHL Packchen International
    /// 					
    /// </remarks>

    DE_DHLPackchenInternational, 
    /// <remarks>
    /// 
    /// 						Sonstiger Versand (Siehe Artikelbeschreibung)
    /// 					
    /// </remarks>

    DE_SonstigerVersandInternational, 
    /// <remarks>
    /// 
    /// 						Unversicherter Express - Versand
    /// 					
    /// </remarks>

    DE_UnversicherterExpressVersandInternational, 
    /// <remarks>
    /// 
    /// 						Versicherter Express - Versand
    /// 					
    /// </remarks>

    DE_VersicherterExpressVersandInternational, 
    /// <remarks>
    /// 
    /// 						Deutsche Post Brief (Land)
    /// 					
    /// </remarks>

    DE_DeutschePostBriefLandInternational, 
    /// <remarks>
    /// 
    /// 						Deutsche Post Brief (Luft)
    /// 					
    /// </remarks>

    DE_DeutschePostBriefLuftInternational, 
    /// <remarks>
    /// 
    /// 						iloxx Europa
    /// 					
    /// </remarks>

    DE_IloxxEuropaInternational, 
    /// <remarks>
    /// 
    /// 						iloxx World Wide
    /// 					
    /// </remarks>

    DE_IloxxWorldWideInternational, 
    /// <remarks>
    /// Paketversand
    /// </remarks>

    DE_Paket, 
    /// <remarks>
    /// Expressversand
    /// </remarks>

    DE_Express, 
    /// <remarks>
    /// DHL Paket
    /// </remarks>

    DE_DHLPaket, 
    /// <remarks>
    /// Deutsche Post Buecher-/Warensendung
    /// </remarks>

    DE_DPBuecherWarensendung, 
    /// <remarks>
    /// Hermes Paket
    /// </remarks>

    DE_HermesPaket, 
    /// <remarks>
    /// iloxx Transport
    /// </remarks>

    DE_IloxxTransport, 
    /// <remarks>
    /// Sonstige
    /// </remarks>

    DE_SonstigeDomestic, 
    /// <remarks>
    /// Einschreiben (inkl. aller Gebuehren)
    /// </remarks>

    DE_Einschreiben, 
    /// <remarks>
    /// Nachnahme (inkl. aller Gebuehren)
    /// </remarks>

    DE_Nachname, 
    /// <remarks>
    /// Sonderversand
    /// </remarks>

    DE_SpecialDelivery, 
    /// <remarks>
    /// UPS
    /// </remarks>

    DE_UPS, 
    /// <remarks>
    /// DPD
    /// </remarks>

    DE_DPD, 
    /// <remarks>
    /// GLS
    /// </remarks>

    DE_GLS, 
    /// <remarks>
    /// Paketversand
    /// </remarks>

    DE_PaketInternational, 
    /// <remarks>
    /// DHL Paket International
    /// </remarks>

    DE_DHLPaketInternational, 
    /// <remarks>
    /// DHL Paket International Express
    /// </remarks>

    DE_DHLPaketIntlExpress, 
    /// <remarks>
    /// Sonstige
    /// </remarks>

    DE_SonstigeInternational, 
    /// <remarks>
    /// Expressversand
    /// </remarks>

    DE_ExpressInternational, 
    /// <remarks>
    /// Deutsche Post Brief
    /// </remarks>

    DE_DPBriefInternational, 
    /// <remarks>
    /// iloxx Transport International
    /// </remarks>

    DE_IloxxTransportInternational, 
    /// <remarks>
    /// Hermes Paket International
    /// </remarks>

    DE_HermesPaketInternational, 
    /// <remarks>
    /// UPS International
    /// </remarks>

    DE_UPSInternational, 
    /// <remarks>
    /// DPD International
    /// </remarks>

    DE_DPDInternational, 
    /// <remarks>
    /// GLS International
    /// </remarks>

    DE_GLSInternational, 
    /// <remarks>
    /// 
    /// 						eBay Hermes Paket Shop2Shop (Kaeufer erhaelt E-Mail von Hermes bei Zustellung)
    /// 					
    /// </remarks>

    DE_eBayHermesPaketShop2ShopKaeufer, 
    /// <remarks>
    /// 
    /// 						Hermes Paket Shop2Shop (Kaeufer erhaelt E-Mail von Hermes bei Zustellung)
    /// 					
    /// </remarks>

    DE_HermesPaketShop2ShopKaeufer, 
    /// <remarks>
    /// 
    /// 						eBay Hermes Paket Shop2Shop
    /// 					
    /// </remarks>

    DE_eBayHermesPaketShop2Shop, 
    /// <remarks>
    /// 
    /// 						Hermes Paket Shop2Shop
    /// 					
    /// </remarks>

    DE_HermesPaketShop2Shop, 
    /// <remarks>
    /// 
    /// 						Hermes Paket Sperrgut
    /// 					
    /// </remarks>

    DE_HermesPaketSperrgut, 
    /// <remarks>
    /// 
    /// 						eBay Hermes Paket Sperrgut Shop2Shop (Abgabe und Zustellung im Paketshop)
    /// 					
    /// </remarks>

    DE_eBayHermesPaketSperrgutShop2Shop, 
    /// <remarks>
    /// 
    /// 						DHL Paeckchen Packstation
    /// 					
    /// </remarks>

    DE_DHLPaeckchenPackstation, 
    /// <remarks>
    /// 
    /// 						DHL Paket Packstation
    /// 					
    /// </remarks>

    DE_DHLPaketPackstation, 
    /// <remarks>
    /// 
    /// 						eBay DHL Paeckchen
    /// 					
    /// </remarks>

    DE_eBayDHLPaeckchen, 
    /// <remarks>
    /// 
    /// 						DHL Star-Paeckchen
    /// 					
    /// </remarks>

    DE_DHLStarPaeckchen, 
    /// <remarks>
    /// 
    /// 						Versand mit Nachverfolgung aus dem Ausland
    /// 					
    /// </remarks>

    DE_TrackedDeliveryFromAbroad, 
    /// <remarks>
    /// 
    /// 						Cartas nacionales hasta 20 gr
    /// 					
    /// </remarks>

    ES_CartasNacionalesHasta20, 
    /// <remarks>
    /// 
    /// 						Correos: cartas ordinarias
    /// 					
    /// </remarks>

    ES_CartasNacionalesDeMas20, 
    /// <remarks>
    /// 
    /// 						Cartas internacionales hasta 20 gr
    /// 					
    /// </remarks>

    ES_CartasInternacionalesHasta20, 
    /// <remarks>
    /// 
    /// 						Cartas internacionales de mas de 20 gr
    /// 					
    /// </remarks>

    ES_CartasInternacionalesDeMas20, 
    /// <remarks>
    /// 
    /// 						Paquete Azul (nacional) hasta 2 kg
    /// 					
    /// </remarks>

    ES_PaqueteAzulHasta2kg, 
    /// <remarks>
    /// 
    /// 						Correos: Postal Expres
    /// 					
    /// </remarks>

    ES_PaqueteAzulDeMas2kg, 
    /// <remarks>
    /// 
    /// 						Paquete Internacional Economico
    /// 					
    /// </remarks>

    ES_PaqueteInternacionalEconomico, 
    /// <remarks>
    /// 
    /// 						Otro courier 24 horas
    /// 					
    /// </remarks>

    ES_Urgente, 
    /// <remarks>
    /// 
    /// 						Otros (ver descripcion)
    /// 					
    /// </remarks>

    ES_Otros, 
    /// <remarks>
    /// 
    /// 						Envio internacional estandar
    /// 					
    /// </remarks>

    ES_StandardInternational, 
    /// <remarks>
    /// 
    /// 						Envio internacional urgente
    /// 					
    /// </remarks>

    ES_ExpeditedInternational, 
    /// <remarks>
    /// 
    /// 						Envio internacional economico
    /// 					
    /// </remarks>

    ES_OtherInternational, 
    /// <remarks>
    /// 
    /// 						Cartas y tarjetas postales internacionales
    /// 					
    /// </remarks>

    ES_CartasPostalInternational, 
    /// <remarks>
    /// 
    /// 						Ems postal expres internacional
    /// 					
    /// </remarks>

    ES_EmsPostalExpressInternational, 
    /// <remarks>
    /// 
    /// 						Paquete internacional economico
    /// 					
    /// </remarks>

    ES_EconomyPacketInternational, 
    /// <remarks>
    /// 
    /// 						Envio economico desde el extranjero
    /// 					
    /// </remarks>

    ES_EconomyDeliveryFromAbroad, 
    /// <remarks>
    /// 
    /// 						Envio estandar desde el extranjero
    /// 					
    /// </remarks>

    ES_StandardDeliveryFromAbroad, 
    /// <remarks>
    /// 
    /// 						Envio urgente desde el extranjero
    /// 					
    /// </remarks>

    ES_ExpressDeliveryFromAbroad, 
    /// <remarks>
    /// 
    /// 						Envio desde el extranjero con seguimiento
    /// 					
    /// </remarks>

    ES_TrackedDeliveryFromAbroad, 
    /// <remarks>
    /// 
    /// 						Entrega a un Kiala point hasta 8 kg
    /// 					
    /// </remarks>

    ES_ENTREGA_KIALA_8KG, 
    /// <remarks>
    /// 
    /// 						Chronoposte International Classic
    /// 					
    /// </remarks>

    FR_ChronoposteInternationalClassic, 
    /// <remarks>
    /// 
    /// 						Coliposte Colissimo Direct
    /// 					
    /// </remarks>

    FR_ColiposteColissimoDirect, 
    /// <remarks>
    /// 
    /// 						DHL Express Europack
    /// 					
    /// </remarks>

    FR_DHLExpressEuropack, 
    /// <remarks>
    /// 
    /// 						UPS Standard
    /// 					
    /// </remarks>

    FR_UPSStandard, 
    /// <remarks>
    /// 
    /// 						Lettre
    /// 					
    /// </remarks>

    FR_PostOfficeLetter, 
    /// <remarks>
    /// 
    /// 						Lettre avec suivi
    /// 					
    /// </remarks>

    FR_PostOfficeLetterFollowed, 
    /// <remarks>
    /// 
    /// 						Lettre recommandee
    /// 					
    /// </remarks>

    FR_PostOfficeLetterRecommended, 
    /// <remarks>
    /// 
    /// 						Colissimo
    /// 					
    /// </remarks>

    FR_ColiposteColissimo, 
    /// <remarks>
    /// 
    /// 						Colissimo Recommande
    /// 					
    /// </remarks>

    FR_ColiposteColissimoRecommended, 
    /// <remarks>
    /// 
    /// 						Contre remboursement
    /// 					
    /// </remarks>

    FR_UPSStandardAgainstRefund, 
    /// <remarks>
    /// 
    /// 						Autre mode d'envoi de courrier
    /// 					
    /// </remarks>

    FR_Autre, 
    /// <remarks>
    /// 
    /// 						Ecopli
    /// 					
    /// </remarks>

    FR_Ecopli, 
    /// <remarks>
    /// 
    /// 						Colieco
    /// 					
    /// </remarks>

    FR_Colieco, 
    /// <remarks>
    /// 
    /// 						Autre mode d'envoi de colis
    /// 					
    /// </remarks>

    FR_AuteModeDenvoiDeColis, 
    /// <remarks>
    /// 
    /// 						Remise en main propre
    /// 					
    /// </remarks>

    FR_RemiseEnMainPropre, 
    /// <remarks>
    /// 
    /// 						Autre livraison internationale standard
    /// 					
    /// </remarks>

    FR_StandardInternational, 
    /// <remarks>
    /// 
    /// 						Autre livraison internationale express
    /// 					
    /// </remarks>

    FR_ExpeditedInternational, 
    /// <remarks>
    /// 
    /// 						Autre livraison internationale economique
    /// 					
    /// </remarks>

    FR_OtherInternational, 
    /// <remarks>
    /// 
    /// 						La Poste - Courrier International Prioritaire
    /// 					
    /// </remarks>

    FR_LaPosteInternationalPriorityCourier, 
    /// <remarks>
    /// 
    /// 						La Poste - Courrier International Economique
    /// 					
    /// </remarks>

    FR_LaPosteInternationalEconomyCourier, 
    /// <remarks>
    /// 
    /// 						La Poste - Colissimo International
    /// 					
    /// </remarks>

    FR_LaPosteColissimoInternational, 
    /// <remarks>
    /// 
    /// 						La Poste - Colis Economique International
    /// 					
    /// </remarks>

    FR_LaPosteColisEconomiqueInternational, 
    /// <remarks>
    /// 
    /// 						La Poste - Colissimo Emballage International
    /// 					
    /// </remarks>

    FR_LaPosteColissimoEmballageInternational, 
    /// <remarks>
    /// 
    /// 						Chronopost Classic International
    /// 					
    /// </remarks>

    FR_ChronopostClassicInternational, 
    /// <remarks>
    /// 
    /// 						Chronopost Premium International
    /// 					
    /// </remarks>

    FR_ChronopostPremiumInternational, 
    /// <remarks>
    /// 
    /// 						UPS Standard
    /// 					
    /// </remarks>

    FR_UPSStandardInternational, 
    /// <remarks>
    /// 
    /// 						UPS Express
    /// 					
    /// </remarks>

    FR_UPSExpressInternational, 
    /// <remarks>
    /// 
    /// 						DHL
    /// 					
    /// </remarks>

    FR_DHLInternational, 
    /// <remarks>
    /// 
    /// 						La Poste Lettre Max
    /// 					
    /// </remarks>

    FR_LaPosteLetterMax, 
    /// <remarks>
    /// 
    /// 						Livraison en Relais Kiala
    /// 					
    /// </remarks>

    FR_KIALA_DELIVERY, 
    /// <remarks>
    /// 
    /// 						Livraison a partir de l'etranger avec suivi de commande
    /// 					
    /// </remarks>

    FR_TrackedDeliveryFromAbroad, 
    /// <remarks>
    /// 
    /// 						National - Regular
    /// 					
    /// </remarks>

    IN_Regular, 
    /// <remarks>
    /// 
    /// 						National - Express
    /// 					
    /// </remarks>

    IN_Express, 
    /// <remarks>
    /// 
    /// 						National - COD
    /// 					
    /// </remarks>

    IN_NationalCOD, 
    /// <remarks>
    /// 
    /// 						Local - Courier
    /// 					
    /// </remarks>

    IN_Courier, 
    /// <remarks>
    /// 
    /// 						Local - COD
    /// 					
    /// </remarks>

    IN_LocalCOD, 
    /// <remarks>
    /// 
    /// 						International - Standard
    /// 					
    /// </remarks>

    IN_StandardInternational, 
    /// <remarks>
    /// 
    /// 						International - Expedited
    /// 					
    /// </remarks>

    IN_ExpeditedInternational, 
    /// <remarks>
    /// 
    /// 						International - other
    /// 					
    /// </remarks>

    IN_OtherInternational, 
    /// <remarks>
    /// 
    /// 						Flat Rate COD
    /// 					
    /// </remarks>

    IN_FlatRateCOD, 
    /// <remarks>
    /// 
    /// 						Buyer picks up and pays
    /// 					
    /// </remarks>

    IN_BuyerPicksUpAndPays, 
    /// <remarks>
    /// 
    /// 						Posta ordinaria
    /// 					
    /// </remarks>

    IT_RegularMail, 
    /// <remarks>
    /// 
    /// 						Posta prioritaria
    /// 					
    /// </remarks>

    IT_PriorityMail, 
    /// <remarks>
    /// 
    /// 						Posta raccomandata
    /// 					
    /// </remarks>

    IT_MailRegisteredLetter, 
    /// <remarks>
    /// 
    /// 						Posta raccomandata con contrassegno
    /// 					
    /// </remarks>

    IT_MailRegisteredLetterWithMark, 
    /// <remarks>
    /// 
    /// 						Posta assicurata
    /// 					
    /// </remarks>

    IT_InsuredMail, 
    /// <remarks>
    /// 
    /// 						Posta celere
    /// 					
    /// </remarks>

    IT_QuickMail, 
    /// <remarks>
    /// 
    /// 						Pacco ordinario
    /// 					
    /// </remarks>

    IT_RegularPackage, 
    /// <remarks>
    /// 
    /// 						Pacco celere 1
    /// 					
    /// </remarks>

    IT_QuickPackage1, 
    /// <remarks>
    /// 
    /// 						Pacco celere 3
    /// 					
    /// </remarks>

    IT_QuickPackage3, 
    /// <remarks>
    /// 
    /// 						Corriere espresso
    /// 					
    /// </remarks>

    IT_ExpressCourier, 
    /// <remarks>
    /// 
    /// 						Paccocelere Maxi
    /// 					
    /// </remarks>

    IT_ExpressPackageMaxi, 
    /// <remarks>
    /// 
    /// 						Spedizione internazionale standard a prezzo fisso
    /// 					
    /// </remarks>

    IT_StandardInternational, 
    /// <remarks>
    /// 
    /// 						Spedizione internazionale celere a prezzo fisso
    /// 					
    /// </remarks>

    IT_ExpeditedInternational, 
    /// <remarks>
    /// 
    /// 						Altre spedizioni internazionali (vedi descrizione)
    /// 					
    /// </remarks>

    IT_OtherInternational, 
    /// <remarks>
    /// 
    /// 						Spedizione tracciata dall estero
    /// 					
    /// </remarks>

    IT_TrackedDeliveryFromAbroad, 
    /// <remarks>
    /// 
    /// 						Standaardverzending
    /// 					
    /// </remarks>

    NL_StandardDelivery, 
    /// <remarks>
    /// 
    /// 						Pakketpost
    /// 					
    /// </remarks>

    NL_ParcelPost, 
    /// <remarks>
    /// 
    /// 						Verzending met ontvangstbevestiging
    /// 					
    /// </remarks>

    NL_RegisteredMail, 
    /// <remarks>
    /// 
    /// 						Andere verzendservice
    /// 					
    /// </remarks>

    NL_Other, 
    /// <remarks>
    /// 
    /// 						TPG Post/TNT
    /// 					
    /// </remarks>

    NL_TPGPostTNTInternational, 
    /// <remarks>
    /// 
    /// 						UPS
    /// 					
    /// </remarks>

    NL_UPSInternational, 
    /// <remarks>
    /// 
    /// 						FedEx
    /// 					
    /// </remarks>

    NL_FedExInternational, 
    /// <remarks>
    /// 
    /// 						DHL
    /// 					
    /// </remarks>

    NL_DHLInternational, 
    /// <remarks>
    /// 
    /// 						DPD (Germany)
    /// 					
    /// </remarks>

    NL_DPDGBRInternational, 
    /// <remarks>
    /// 
    /// 						GLS (Business only)
    /// 					
    /// </remarks>

    NL_GLSBusinessInternational, 
    /// <remarks>
    /// 
    /// 						Vaste kosten standaard internationale verzending
    /// 					
    /// </remarks>

    NL_StandardInternational, 
    /// <remarks>
    /// 
    /// 						Vaste kosten versnelde internationale verzending
    /// 					
    /// </remarks>

    NL_ExpeditedInternational, 
    /// <remarks>
    /// 
    /// 						Andere internationale verzending (zie beschrijving)
    /// 					
    /// </remarks>

    NL_OtherInternational, 
    /// <remarks>
    /// 
    /// 						Voordelige verzending uit het buitenland
    /// 					
    /// </remarks>

    NL_EconomyDeliveryFromAbroad, 
    /// <remarks>
    /// 
    /// 						Standaardverzending uit het buitenland
    /// 					
    /// </remarks>

    NL_StandardDeliveryFromAbroad, 
    /// <remarks>
    /// 
    /// 						Verzending per expresse uit het buitenland
    /// 					
    /// </remarks>

    NL_ExpressDeliveryFromAbroad, 
    /// <remarks>
    /// 
    /// 						Verzending met internationale tracering uit het buitenland
    /// 					
    /// </remarks>

    NL_TrackedDeliveryFromAbroad, 
    /// <remarks>
    /// 
    /// 						Post office plus registration
    /// 					
    /// </remarks>

    TW_RegisteredMail, 
    /// <remarks>
    /// 
    /// 						Post office without registration
    /// 					
    /// </remarks>

    TW_UnregisteredMail, 
    /// <remarks>
    /// 
    /// 						Post office cash on delivery
    /// 					
    /// </remarks>

    TW_COD, 
    /// <remarks>
    /// 
    /// 						Home delivery
    /// 					
    /// </remarks>

    TW_DwellingMatchPost, 
    /// <remarks>
    /// 
    /// 						Home delivery cash on delivery
    /// 					
    /// </remarks>

    TW_DwellingMatchCOD, 
    /// <remarks>
    /// 
    /// 						Face to face
    /// 					
    /// </remarks>

    TW_SelfPickup, 
    /// <remarks>
    /// 
    /// 						Freight delivery
    /// 					
    /// </remarks>

    TW_ParcelPost, 
    /// <remarks>
    /// 
    /// 						Express delivery
    /// 					
    /// </remarks>

    TW_ExpressMail, 
    /// <remarks>
    /// 
    /// 						Other
    /// 					
    /// </remarks>

    TW_Other, 
    /// <remarks>
    /// 
    /// 						Post Office Airbag
    /// 					
    /// </remarks>

    TW_CPInternationalLetterPost, 
    /// <remarks>
    /// 
    /// 						Post office air parcel
    /// 					
    /// </remarks>

    TW_CPInternationalParcelPost, 
    /// <remarks>
    /// 
    /// 						Post office aviation registered packet
    /// 					
    /// </remarks>

    TW_CPInternationalRegisteredLetterPost, 
    /// <remarks>
    /// 
    /// 						Post office aviation registration package
    /// 					
    /// </remarks>

    TW_CPInternationalRegisteredParcelPost, 
    /// <remarks>
    /// 
    /// 						Post Office International Express EMS
    /// 					
    /// </remarks>

    TW_CPInternationalEMS, 
    /// <remarks>
    /// 
    /// 						Post office international land and water package
    /// 					
    /// </remarks>

    TW_CPInternationalOceanShippingParcel, 
    /// <remarks>
    /// 
    /// 						FedEx International Priority
    /// 					
    /// </remarks>

    TW_FedExInternationalPriority, 
    /// <remarks>
    /// 
    /// 						FedEx International Economy
    /// 					
    /// </remarks>

    TW_FedExInternationalEconomy, 
    /// <remarks>
    /// 
    /// 						UPS Worldwide Expedited
    /// 					
    /// </remarks>

    TW_UPSWorldwideExpedited, 
    /// <remarks>
    /// 
    /// 						UPS Worldwide Express
    /// 					
    /// </remarks>

    TW_UPSWorldwideExpress, 
    /// <remarks>
    /// 
    /// 						UPS Worldwide Express Plus
    /// 					
    /// </remarks>

    TW_UPSWorldwideExpressPlus, 
    /// <remarks>
    /// 
    /// 						Other international shipping charges (see description)
    /// 					
    /// </remarks>

    TW_OtherInternational, 
    /// <remarks>
    /// 
    /// 						Royal Mail 1st Class
    /// 					
    /// </remarks>

    UK_RoyalMailFirstClassStandard, 
    /// <remarks>
    /// 
    /// 						Royal Mail 2nd Class
    /// 					
    /// </remarks>

    UK_RoyalMailSecondClassStandard, 
    /// <remarks>
    /// 
    /// 						Royal Mail 1st Class Signed For
    /// 					
    /// </remarks>

    UK_RoyalMailFirstClassRecorded, 
    /// <remarks>
    /// 
    /// 						Royal Mail 2nd Class Signed For
    /// 					
    /// </remarks>

    UK_RoyalMailSecondClassRecorded, 
    /// <remarks>
    /// 
    /// 						Royal Mail Special Delivery
    /// 					
    /// </remarks>

    UK_RoyalMailSpecialDelivery, 
    /// <remarks>
    /// 
    /// 						(This value is no longer used.)
    /// 					
    /// </remarks>

    UK_RoyalMailStandardParcel, 
    /// <remarks>
    /// 
    /// 						Parcelforce 24
    /// 					
    /// </remarks>

    UK_Parcelforce24, 
    /// <remarks>
    /// 
    /// 						Parcelforce 48
    /// 					
    /// </remarks>

    UK_Parcelforce48, 
    /// <remarks>
    /// 
    /// 						Other Courier
    /// 					
    /// </remarks>

    UK_OtherCourier, 
    /// <remarks>
    /// 
    /// 						Hermes Tracked
    /// 					
    /// </remarks>

    UK_myHermesDoorToDoorService, 
    /// <remarks>
    /// 
    /// 						Collect+ : drop at store-delivery to door
    /// 					
    /// </remarks>

    UK_CollectDropAtStoreDeliveryToDoor, 
    /// <remarks>
    /// 
    /// 						Seller's Standard Rate
    /// 					
    /// </remarks>

    UK_SellersStandardRate, 
    /// <remarks>
    /// 
    /// 						Collection in Person
    /// 					
    /// </remarks>

    UK_CollectInPerson, 
    /// <remarks>
    /// 
    /// 						Sellers Standard International Rate
    /// 					
    /// </remarks>

    UK_SellersStandardInternationalRate, 
    /// <remarks>
    /// 
    /// 						Royal Mail Airmail
    /// 					
    /// </remarks>

    UK_RoyalMailAirmailInternational, 
    /// <remarks>
    /// 
    /// 						Royal Mail Airsure
    /// 					
    /// </remarks>

    UK_RoyalMailAirsureInternational, 
    /// <remarks>
    /// 
    /// 						Royal Mail Surface Mail
    /// 					
    /// </remarks>

    UK_RoyalMailSurfaceMailInternational, 
    /// <remarks>
    /// 
    /// 						Royal Mail International Signed-for
    /// 					
    /// </remarks>

    UK_RoyalMailInternationalSignedFor, 
    /// <remarks>
    /// 
    /// 						Royal Mail HM Forces Mail
    /// 					
    /// </remarks>

    UK_RoyalMailHMForcesMailInternational, 
    /// <remarks>
    /// 
    /// 						Parcelforce International Datapost
    /// 					
    /// </remarks>

    UK_ParcelForceInternationalDatapost, 
    /// <remarks>
    /// 
    /// 						Parcelforce Ireland 24
    /// 					
    /// </remarks>

    UK_ParcelForceIreland24International, 
    /// <remarks>
    /// 
    /// 						Parcelforce Euro 48
    /// 					
    /// </remarks>

    UK_ParcelForceEuro48International, 
    /// <remarks>
    /// 
    /// 						Parcelforce International Scheduled
    /// 					
    /// </remarks>

    UK_ParcelForceInternationalScheduled, 
    /// <remarks>
    /// 
    /// 						Other courier or delivery service
    /// 					
    /// </remarks>

    UK_OtherCourierOrDeliveryInternational, 
    /// <remarks>
    /// 
    /// 						Collect in person
    /// 					
    /// </remarks>

    UK_CollectInPersonInternational, 
    /// <remarks>
    /// 
    /// 						Parcelforce Global Express
    /// 					
    /// </remarks>

    UK_ParcelForceIntlExpress, 
    /// <remarks>
    /// 
    /// 						Parcelforce Global Value
    /// 					
    /// </remarks>

    UK_ParcelForceIntlValue, 
    /// <remarks>
    /// 
    /// 						Parcelforce Global Economy (Not available for destinations in Europe)
    /// 					
    /// </remarks>

    UK_ParcelForceIntlEconomy, 
    /// <remarks>
    /// 
    /// 						Tracked delivery from outside abroad
    /// 					
    /// </remarks>

    UK_TrackedDeliveryFromAbroad, 
    /// <remarks>
    /// 
    /// 						International tracked postage
    /// 					
    /// </remarks>

    UK_IntlTrackedPostage, 
    /// <remarks>
    /// 
    /// 						Seller's standard rate
    /// 					
    /// </remarks>

    IE_SellersStandardRate, 
    /// <remarks>
    /// 
    /// 						First Class Letter Service
    /// 					
    /// </remarks>

    IE_FirstClassLetterService, 
    /// <remarks>
    /// 
    /// 						SwiftPost National
    /// 					
    /// </remarks>

    IE_SwiftPostNational, 
    /// <remarks>
    /// 
    /// 						Registered Post
    /// 					
    /// </remarks>

    IE_RegisteredPost, 
    /// <remarks>
    /// 
    /// 						EMS SDS Courier
    /// 					
    /// </remarks>

    IE_EMSSDSCourier, 
    /// <remarks>
    /// 
    /// 						Economy SDS Courier
    /// 					
    /// </remarks>

    IE_EconomySDSCourier, 
    /// <remarks>
    /// 
    /// 						Other courier
    /// 					
    /// </remarks>

    IE_OtherCourier, 
    /// <remarks>
    /// 
    /// 						Collection in person
    /// 					
    /// </remarks>

    IE_CollectionInPerson, 
    /// <remarks>
    /// 
    /// 						Seller's Standard International Rate
    /// 					
    /// </remarks>

    IE_SellersStandardRateInternational, 
    /// <remarks>
    /// 
    /// 						International Economy Service
    /// 					
    /// </remarks>

    IE_InternationalEconomyService, 
    /// <remarks>
    /// 
    /// 						International Priority Service
    /// 					
    /// </remarks>

    IE_InternationalPriorityService, 
    /// <remarks>
    /// 
    /// 						SwiftPost Express
    /// 					
    /// </remarks>

    IE_SwiftPostExpressInternational, 
    /// <remarks>
    /// 
    /// 						SwiftPost International
    /// 					
    /// </remarks>

    IE_SwiftPostInternational, 
    /// <remarks>
    /// 
    /// 						EMS SDS Courier
    /// 					
    /// </remarks>

    IE_EMSSDSCourierInternational, 
    /// <remarks>
    /// 
    /// 						Economy SDS Courier
    /// 					
    /// </remarks>

    IE_EconomySDSCourierInternational, 
    /// <remarks>
    /// 
    /// 						Other courier or delivery service
    /// 					
    /// </remarks>

    IE_OtherCourierInternational, 
    /// <remarks>
    /// 
    /// 						International collection in person
    /// 					
    /// </remarks>

    IE_CollectionInPersonInternational, 
    /// <remarks>
    /// 
    /// 						Economy delivery from abroad
    /// 					
    /// </remarks>

    IE_EconomyDeliveryFromAbroad, 
    /// <remarks>
    /// 
    /// 						Standard delivery from abroad
    /// 					
    /// </remarks>

    IE_StandardDeliveryFromAbroad, 
    /// <remarks>
    /// 
    /// 						Express delivery from abroad
    /// 					
    /// </remarks>

    IE_ExpressDeliveryFromAbroad, 
    /// <remarks>
    /// 
    /// 						Tracked delivery from abroad
    /// 					
    /// </remarks>

    IE_TrackedDeliveryFromAbroad, 
    /// <remarks>
    /// 
    /// 						Domestic Regular shipping
    /// 					
    /// </remarks>

    PL_DomesticRegular, 
    /// <remarks>
    /// 
    /// 						Domestic Special shipping
    /// 					
    /// </remarks>

    PL_DomesticSpecial, 
    /// <remarks>
    /// 
    /// 						Przesylka z zagranicy - ekonomiczna
    /// 					
    /// </remarks>

    PL_EconomyDeliveryFromAbroad, 
    /// <remarks>
    /// 
    /// 						Przesylka z zagranicy - standardowa
    /// 					
    /// </remarks>

    PL_StandardDeliveryFromAbroad, 
    /// <remarks>
    /// 
    /// 						Przesylka z zagranicy - ekspresowa
    /// 					
    /// </remarks>

    PL_ExpressDeliveryFromAbroad, 
    /// <remarks>
    /// 
    /// 						Przesylka z zagranicy - ze sledzeniem
    /// 					
    /// </remarks>

    PL_TrackedDeliveryFromAbroad, 
    /// <remarks>
    /// 
    /// 						Service associated with FreightQuote.com
    /// 					
    /// </remarks>

    FreightShipping, 
    /// <remarks>
    /// 
    /// 						(This value is no longer used.)
    /// 					
    /// </remarks>

    FreightOtherShipping, 
    /// <remarks>
    /// 
    /// 						Service associated with any freight service other than FreightQuote.com
    /// 						<br/>
    /// 						<span class="tablenote">
    /// 						<strong>Note:</strong> Sellers offering freight shipping on the following marketplaces should use the <b>Shipping service code value</b> listed below and not use the <code>Freight</code> value that is used for freight shipping on other marketplaces. For example, sellers offering freight shipping on the Australia (AU) marketplace should use the <code>AU_Freight</code> value for <b>ShippingServiceCodeType</b> and not use the <code>Freight</code> value.
    /// 						<br/><br/>
    /// 							<table>
    /// 								<tr>
    /// 								<th>SiteID</th>
    /// 								<th>Site name</th>
    /// 								<th>Shipping service code value</th>
    /// 								</tr>
    /// 								<tr><td><code>0</code></td>
    /// 									<td>US</td>
    /// 									<td><code>Freight</code></code></td>
    /// 								</tr>
    /// 								<tr><td><code>3</code></td>
    /// 									<td>UK</td>
    /// 									<td><code>Courier</code></code></td>
    /// 								</tr>
    /// 								<tr><td><code>2</code></td>
    /// 									<td>CA</td>
    /// 									<td><code>CA_Freight</code></code></td>
    /// 								</tr>
    /// 								<tr><td><code>15</code></td>
    /// 									<td>AU</td>
    /// 									<td><code>AU_Freight</code></code></td>
    /// 								</tr>
    /// 								<tr><td><code>210</code></td>
    /// 									<td>CA_FR</td>
    /// 									<td><code>CA_Freight</code></code></td>
    /// 								</tr>		
    /// 							</table>
    /// 						</span>
    /// 					
    /// </remarks>

    Freight, 
    /// <remarks>
    /// 
    /// 						Freight Shipping International
    /// 					
    /// </remarks>

    FreightShippingInternational, 
    /// <remarks>
    /// 
    /// 						US Postal Service Ground
    /// 					
    /// </remarks>

    USPSGround, 
    /// <remarks>
    /// 
    /// 						Overnight flat rate shipping service (domestic only)
    /// 					
    /// </remarks>

    ShippingMethodOvernight, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use
    /// 					
    /// </remarks>

    CustomCode, 
    /// <remarks>
    /// 
    /// 						USPS Priority Flat Rate Envelope
    /// 					
    /// </remarks>

    USPSPriorityFlatRateEnvelope, 
    /// <remarks>
    /// 
    /// 						USPS Priority Flat Rate Box
    /// 					
    /// </remarks>

    USPSPriorityFlatRateBox, 
    /// <remarks>
    /// 
    /// 						USPS Global Priority Mail Small Envelope
    /// 					
    /// </remarks>

    USPSGlobalPrioritySmallEnvelope, 
    /// <remarks>
    /// 
    /// 						USPS Global Priority Mail Large Envelope
    /// 					
    /// </remarks>

    USPSGlobalPriorityLargeEnvelope, 
    /// <remarks>
    /// 
    /// 						USPS Priority Mail Express Flat Rate Envelope
    /// 					
    /// </remarks>

    USPSExpressFlatRateEnvelope, 
    /// <remarks>
    /// 
    /// 						UPS Worldwide Express Box 10 Kg
    /// 					
    /// </remarks>

    UPSWorldWideExpressBox10kg, 
    /// <remarks>
    /// 
    /// 						UPS Worldwide Express Box 25 Kg
    /// 					
    /// </remarks>

    UPSWorldWideExpressBox25kg, 
    /// <remarks>
    /// 
    /// 						UPS Worldwide Express Plus Box 10 Kg
    /// 					
    /// </remarks>

    UPSWorldWideExpressPlusBox10kg, 
    /// <remarks>
    /// 
    /// 						UPS Worldwide Express Plus box 25 Kg
    /// 					
    /// </remarks>

    UPSWorldWideExpressPlusBox25kg, 
    /// <remarks>
    /// 
    /// 						Local pick up only
    /// 					
    /// </remarks>

    HK_LocalPickUpOnly, 
    /// <remarks>
    /// 
    /// 						Local courier
    /// 					
    /// </remarks>

    HK_LocalCourier, 
    /// <remarks>
    /// 
    /// 						Domestic regular shipping
    /// 					
    /// </remarks>

    HK_DomesticRegularShipping, 
    /// <remarks>
    /// 
    /// 						Domestic special shipping
    /// 					
    /// </remarks>

    HK_DomesticSpecialShipping, 
    /// <remarks>
    /// 
    /// 						International regular shipping
    /// 					
    /// </remarks>

    HK_InternationalRegularShipping, 
    /// <remarks>
    /// 
    /// 						International special shipping
    /// 					
    /// </remarks>

    HK_InternationalSpecialShipping, 
    /// <remarks>
    /// 
    /// 						Local pick up only
    /// 					
    /// </remarks>

    SG_LocalPickUpOnly, 
    /// <remarks>
    /// 
    /// 						Local courier
    /// 					
    /// </remarks>

    SG_LocalCourier, 
    /// <remarks>
    /// 
    /// 						Domestic standard mail
    /// 					
    /// </remarks>

    SG_DomesticStandardMail, 
    /// <remarks>
    /// 
    /// 						Domestic non standard mail
    /// 					
    /// </remarks>

    SG_DomesticNonStandardMail, 
    /// <remarks>
    /// 
    /// 						Domestic Speedpost Islandwide
    /// 					
    /// </remarks>

    SG_DomesticSpeedpostIslandwide, 
    /// <remarks>
    /// 
    /// 						International standard mail
    /// 					
    /// </remarks>

    SG_InternationalStandardMail, 
    /// <remarks>
    /// 
    /// 						International Express Mail Service (EMS)
    /// 					
    /// </remarks>

    SG_InternationalExpressMailService, 
    /// <remarks>
    /// 
    /// 						International courier (DHL, FedEx, UPS)
    /// 					
    /// </remarks>

    SG_InternationalCourier, 
    /// <remarks>
    /// 
    /// 						De Post zending - NON PRIOR (2 werkdagen)
    /// 					
    /// </remarks>

    BENL_DePostZendingNONPRIOR, 
    /// <remarks>
    /// 
    /// 						De Post zending - PRIOR (1 werkdag)
    /// 					
    /// </remarks>

    BENL_DePostZendingPRIOR, 
    /// <remarks>
    /// 
    /// 						De Post zending - aangetekend (1 werkdag)
    /// 					
    /// </remarks>

    BENL_DePostZendingAangetekend, 
    /// <remarks>
    /// 
    /// 						Kilopost pakje (2 werkdagen)
    /// 					
    /// </remarks>

    BENL_KilopostPakje, 
    /// <remarks>
    /// 
    /// 						Taxipost (express)
    /// 					
    /// </remarks>

    BENL_Taxipost, 
    /// <remarks>
    /// 
    /// 						Kiala afhaalpunt (1 tot 4 werkdagen)
    /// 					
    /// </remarks>

    BENL_KialaAfhaalpunt, 
    /// <remarks>
    /// 
    /// 						Vaste kosten standaard verzending
    /// 					
    /// </remarks>

    BENL_VasteKostenStandaardVerzending, 
    /// <remarks>
    /// 
    /// 						Vaste kosten versnelde verzending
    /// 					
    /// </remarks>

    BENL_VasteKostenVersneldeVerzending, 
    /// <remarks>
    /// 
    /// 						Verzekerde verzending
    /// 					
    /// </remarks>

    BENL_VerzekerdeVerzending, 
    /// <remarks>
    /// 
    /// 						La Poste envoi NON PRIOR (2 jours ouvrables)
    /// 					
    /// </remarks>

    BEFR_LaPosteEnvoiNONPRIOR, 
    /// <remarks>
    /// 
    /// 						La Poste envoi PRIOR (1 jour ouvrable)
    /// 					
    /// </remarks>

    BEFR_LaPosteEnvoiPRIOR, 
    /// <remarks>
    /// 
    /// 						La Poste envoi recommande (1 jour ouvrable)
    /// 					
    /// </remarks>

    BEFR_LaPosteEnvoiRecommande, 
    /// <remarks>
    /// 
    /// 						Paquet Kilopost (2 jours ouvrables)
    /// 					
    /// </remarks>

    BEFR_PaquetKilopost, 
    /// <remarks>
    /// 
    /// 						Taxipost (express)
    /// 					
    /// </remarks>

    BEFR_Taxipost, 
    /// <remarks>
    /// 
    /// 						Point retrait Kiala (1 a 4 jours ouvrables)
    /// 					
    /// </remarks>

    BEFR_PointRetraitKiala, 
    /// <remarks>
    /// 
    /// 						Livraison standard - prix forfaitaire
    /// 					
    /// </remarks>

    BEFR_LivraisonStandardPrixforFaitaire, 
    /// <remarks>
    /// 
    /// 						Livraison express - prix forfaitaire
    /// 					
    /// </remarks>

    BEFR_LivraisonExpressPrixforFaitaire, 
    /// <remarks>
    /// 
    /// 						Livraison securisee
    /// 					
    /// </remarks>

    BEFR_LivraisonSecurise, 
    /// <remarks>
    /// 
    /// 						De Post zending - PRIOR
    /// 					
    /// </remarks>

    BENL_DePostZendingPRIORInternational, 
    /// <remarks>
    /// 
    /// 						De Post zending - NON PRIOR
    /// 					
    /// </remarks>

    BENL_DePostZendingNONPRIORInternational, 
    /// <remarks>
    /// 
    /// 						De Post zending - aangetekend
    /// 					
    /// </remarks>

    BENL_DePostZendingAangetekendInternational, 
    /// <remarks>
    /// 
    /// 						Kilopost pakje Internationaal
    /// 					
    /// </remarks>

    BENL_KilopostPakjeInternational, 
    /// <remarks>
    /// 
    /// 						Taxipost expressverzending
    /// 					
    /// </remarks>

    BENL_TaxipostExpressverzending, 
    /// <remarks>
    /// 
    /// 						Verzekerde verzending
    /// 					
    /// </remarks>

    BENL_VerzekerdeVerzendingInternational, 
    /// <remarks>
    /// 
    /// 						La Poste envoie PRIOR
    /// 					
    /// </remarks>

    BEFR_LaPosteenvoiePRIOR, 
    /// <remarks>
    /// 
    /// 						La Poste envoie NON PRIOR
    /// 					
    /// </remarks>

    BEFR_LaPosteenvoieNONPRIOR, 
    /// <remarks>
    /// 
    /// 						La Poste envoie recommande
    /// 					
    /// </remarks>

    BEFR_LaPosteenvoieRecommande, 
    /// <remarks>
    /// 
    /// 						Paquet  Kilopost Internationale
    /// 					
    /// </remarks>

    BEFR_PaquetKilopostInternationale, 
    /// <remarks>
    /// 
    /// 						BEFR_Express Taxipost
    /// 					
    /// </remarks>

    BEFR_ExpressTaxipost, 
    /// <remarks>
    /// 
    /// 						Livraison standard internationale - prix forfaitaire
    /// 					
    /// </remarks>

    BEFR_LivraisonStandardInternationalePrixforFaitaire, 
    /// <remarks>
    /// 
    /// 						Livraison express internationale - prix forfaitaire
    /// 					
    /// </remarks>

    BEFR_LivraisonExpressInternationalePrixforFaitaire, 
    /// <remarks>
    /// 
    /// 						Livraison securisee
    /// 					
    /// </remarks>

    BEFR_LivraisonSecuriseInternational, 
    /// <remarks>
    /// 
    /// 						Chronopost
    /// 					
    /// </remarks>

    FR_Chronopost, 
    /// <remarks>
    /// 
    /// 						Royal Mail Special Delivery; 1:00 pm
    /// 					
    /// </remarks>

    UK_RoyalMailSpecialDeliveryNextDay, 
    /// <remarks>
    /// 
    /// 						Canada Post Light Packet International
    /// 					
    /// </remarks>

    CA_PostLightPacketInternational, 
    /// <remarks>
    /// 
    /// 						Canada Post Light Packet USA
    /// 					
    /// </remarks>

    CA_PostLightPacketUSA, 
    /// <remarks>
    /// 
    /// 						DHL
    /// 					
    /// </remarks>

    PL_DHLInternational, 
    /// <remarks>
    /// 
    /// 						Przesylka zagraniczna - zwykla
    /// 					
    /// </remarks>

    PL_InternationalRegular, 
    /// <remarks>
    /// 
    /// 						Przesylka zagraniczna - priorytetowa
    /// 					
    /// </remarks>

    PL_InternationalSpecial, 
    /// <remarks>
    /// 
    /// 						UPS
    /// 					
    /// </remarks>

    PL_UPSInternational, 
    /// <remarks>
    /// 
    /// 						Normes de livraison postale
    /// 					
    /// </remarks>

    CAFR_StandardDelivery, 
    /// <remarks>
    /// 
    /// 						Expedition acceleree
    /// 					
    /// </remarks>

    CAFR_ExpeditedDelivery, 
    /// <remarks>
    /// 
    /// 						Postes Canada, Poste-lettres
    /// 					
    /// </remarks>

    CAFR_PostLettermail, 
    /// <remarks>
    /// 
    /// 						Postes Canada, Colis standard
    /// 					
    /// </remarks>

    CAFR_PostRegularParcel, 
    /// <remarks>
    /// 
    /// 						Postes Canada, Colis acceleres
    /// 					
    /// </remarks>

    CAFR_PostExpeditedParcel, 
    /// <remarks>
    /// 
    /// 						Postes Canada, Xpresspost
    /// 					
    /// </remarks>

    CAFR_PostXpresspost, 
    /// <remarks>
    /// 
    /// 						Postes Canada, Messageries prioritaires
    /// 					
    /// </remarks>

    CAFR_PostPriorityCourier, 
    /// <remarks>
    /// 
    /// 						Expedition standard - International, tarif fixe
    /// 					
    /// </remarks>

    CAFR_StandardInternational, 
    /// <remarks>
    /// 
    /// 						Expedition acceleree - International, tarif fixe
    /// 					
    /// </remarks>

    CAFR_ExpeditedInternational, 
    /// <remarks>
    /// 
    /// 						Autres services d'expedition internationale (voir description)
    /// 					
    /// </remarks>

    CAFR_OtherInternational, 
    /// <remarks>
    /// 
    /// 						Postes Canada, Colis acceleres - E.U.
    /// 					
    /// </remarks>

    CAFR_PostExpeditedParcelUSA, 
    /// <remarks>
    /// 
    /// 						Postes Canada, Petits paquets - E.U.
    /// 					
    /// </remarks>

    CAFR_PostSmallPacketsUSA, 
    /// <remarks>
    /// 
    /// 						Postes Canada, Xpresspost - E.U.
    /// 					
    /// </remarks>

    CAFR_PostXpresspostUSA, 
    /// <remarks>
    /// 
    /// 						Postes Canada, Xpresspost - International
    /// 					
    /// </remarks>

    CAFR_PostXpresspostInternational, 
    /// <remarks>
    /// 
    /// 						Postes Canada, Colis international de surface
    /// 					
    /// </remarks>

    CAFR_PostInternationalParcelSurface, 
    /// <remarks>
    /// 
    /// 						Postes Canada, Colis-avion - International
    /// 					
    /// </remarks>

    CAFR_PostInternationalParcelAir, 
    /// <remarks>
    /// 
    /// 						Petits paquets - International
    /// 					
    /// </remarks>

    CAFR_SmallPacketsInternational, 
    /// <remarks>
    /// 
    /// 						Purolator International
    /// 					
    /// </remarks>

    CAFR_PurolatorInternational, 
    /// <remarks>
    /// 
    /// 						Postes Canada, Petits paquets - E.U. service de surface
    /// 					
    /// </remarks>

    CAFR_PostSmallPacketsUSAGround, 
    /// <remarks>
    /// 
    /// 						Postes Canada, Petits paquets - E.U. par avion
    /// 					
    /// </remarks>

    CAFR_PostSmallPacketsUSAAir, 
    /// <remarks>
    /// 
    /// 						Petits paquets - International, courrier-surface
    /// 					
    /// </remarks>

    CAFR_SmallPacketsInternationalGround, 
    /// <remarks>
    /// 
    /// 						Petits paquets - International, courrier-avion
    /// 					
    /// </remarks>

    CAFR_SmallPacketsInternationalAir, 
    /// <remarks>
    /// 
    /// 						Postes Canada, Poste aux lettres - E.U.
    /// 					
    /// </remarks>

    CAFR_PostUSALetterPost, 
    /// <remarks>
    /// 
    /// 						Postes Canada, Poste aux lettres - International
    /// 					
    /// </remarks>

    CAFR_PostInternationalLetterPost, 
    /// <remarks>
    /// 
    /// 						UPS Express Saver
    /// 					
    /// </remarks>

    CAFR_UPSExpressCanada, 
    /// <remarks>
    /// 
    /// 						UPS Express Saver Canada
    /// 					
    /// </remarks>

    CAFR_UPSExpressSaverCanada, 
    /// <remarks>
    /// 
    /// 						UPS Expedited Canada
    /// 					
    /// </remarks>

    CAFR_UPSExpeditedCanada, 
    /// <remarks>
    /// 
    /// 						UPS Standard au Canada
    /// 					
    /// </remarks>

    CAFR_UPSStandardCanada, 
    /// <remarks>
    /// 
    /// 						UPS Express Etats-Unis
    /// 					
    /// </remarks>

    CAFR_UPSExpressUnitedStates, 
    /// <remarks>
    /// 
    /// 						UPS Expedited Etats-Unis
    /// 					
    /// </remarks>

    CAFR_UPSExpeditedUnitedStates, 
    /// <remarks>
    /// 
    /// 						3Day Select aux Etats-Unis
    /// 					
    /// </remarks>

    CAFR_UPS3DaySelectUnitedStates, 
    /// <remarks>
    /// 
    /// 						UPS Standard aux Etats-Unis
    /// 					
    /// </remarks>

    CAFR_UPSStandardUnitedStates, 
    /// <remarks>
    /// 
    /// 						UPS Worlwide Express
    /// 					
    /// </remarks>

    CAFR_UPSWorldWideExpress, 
    /// <remarks>
    /// 
    /// 						UPS Worlwide Expedited
    /// 					
    /// </remarks>

    CAFR_UPSWorldWideExpedited, 
    /// <remarks>
    /// 
    /// 						Royal Mail Special Delivery 9:00 am
    /// 					
    /// </remarks>

    UK_RoyalMailSpecialDelivery9am, 
    /// <remarks>
    /// 
    /// 						USPS First Class Mail Intl / First Class Package Intl Service
    /// 					
    /// </remarks>

    USPSFirstClassMailInternational, 
    /// <remarks>
    /// 
    /// 						USPS Priority Mail International
    /// 					
    /// </remarks>

    USPSPriorityMailInternational, 
    /// <remarks>
    /// 
    /// 						USPS Priority Mail Express International
    /// 					
    /// </remarks>

    USPSExpressMailInternational, 
    /// <remarks>
    /// 
    /// 						Standardpauschale fur internationalen Versand
    /// 					
    /// </remarks>

    CH_StandardInternational, 
    /// <remarks>
    /// 
    /// 						Expresspauschale fur internationalen Versand
    /// 					
    /// </remarks>

    CH_ExpeditedInternational, 
    /// <remarks>
    /// 
    /// 						Sonstiger Versand (Siehe Artikelbeschreibung)
    /// 					
    /// </remarks>

    CH_SonstigerVersandSieheArtikelbeschreibung, 
    /// <remarks>
    /// 
    /// 						 International Standard Fixed Rate for Taiwan
    /// 					
    /// </remarks>

    TW_StandardInternationalFixedRate, 
    /// <remarks>
    /// 
    /// 						 International Express Fixed Rate for Taiwan
    /// 					
    /// </remarks>

    TW_ExpeditedInternationalFixedRate, 
    /// <remarks>
    /// 
    /// 						USPS Global Express Guaranteed
    /// 					
    /// </remarks>

    USPSGlobalExpressGuaranteed, 
    /// <remarks>
    /// 
    /// 						Regular with Insurance
    /// 					
    /// </remarks>

    AU_RegularWithInsurance, 
    /// <remarks>
    /// 
    /// 						Express with Insurance
    /// 					
    /// </remarks>

    AU_ExpressWithInsurance, 
    /// <remarks>
    /// 
    /// 						Deutsche Post Warensendung
    /// 					
    /// </remarks>

    DE_DeutschePostWarensendungInternational, 
    /// <remarks>
    /// 
    /// 						Deutsche Post Byendung
    /// 					
    /// </remarks>

    DE_DeutschePostByendung, 
    /// <remarks>
    /// 
    /// 						Hermes Paket (unversichert)
    /// 					
    /// </remarks>

    DE_HermesPaketUnversichertInternational, 
    /// <remarks>
    /// 
    /// 						Hermes Paket (versichert)
    /// 					
    /// </remarks>

    DE_HermesPaketVersichertInternational, 
    /// <remarks>
    /// 
    /// 						iloxx Transport XXL
    /// 					
    /// </remarks>

    DE_iLoxxTransportXXLInternational, 
    /// <remarks>
    /// 
    /// 						iloxx Ubernacht Express
    /// 					
    /// </remarks>

    DE_iLoxxUbernachtExpressInternational, 
    /// <remarks>
    /// 
    /// 						iloxx Standard
    /// 					
    /// </remarks>

    DE_iLoxxStandardInternational, 
    /// <remarks>
    /// 
    /// 						Standardpauschale fur internationalen Versand
    /// 					
    /// </remarks>

    DE_StandardInternational, 
    /// <remarks>
    /// 
    /// 						Expresspauschale fur internationalen Versand
    /// 					
    /// </remarks>

    DE_ExpeditedInternational, 
    /// <remarks>
    /// 
    /// 						Deutsche Post Presse & Bucher Economy
    /// 					
    /// </remarks>

    DE_DeutschePostBriefIntlEcon, 
    /// <remarks>
    /// 
    /// 						Deutsche Post Presse & Bucher Priority
    /// 					
    /// </remarks>

    DE_DeutschePostBriefIntlPri, 
    /// <remarks>
    /// 
    /// 						AT_BITTE_TREFFEN_SIE_EINE_AUSWAHL
    /// 					
    /// </remarks>

    AT_BitteTreffenSieEineAuswahl, 
    /// <remarks>
    /// 
    /// 						Einschreiben (Versand inkl. Einschreibengebuhr)
    /// 					
    /// </remarks>

    AT_EinschreibenVersandInklEinschreibengebuhr, 
    /// <remarks>
    /// 
    /// 						Nachnahme (Versand inkl. Nachnahmegebuhr)
    /// 					
    /// </remarks>

    AT_NachnahmeVersandInklNachnahmegebuhr, 
    /// <remarks>
    /// 
    /// 						Express- oder Kurierversand
    /// 					
    /// </remarks>

    AT_ExpressOrCourierInternational, 
    /// <remarks>
    /// 
    /// 						Versicherter Express- oder Kurierversand
    /// 					
    /// </remarks>

    AT_InsuredExpressOrCourierInternational, 
    /// <remarks>
    /// 
    /// 						Sonderversand (z.B. Sperrgut, KFZ)
    /// 					
    /// </remarks>

    AT_SpecialDispatchInternational, 
    /// <remarks>
    /// 
    /// 						Versicherter Sonderversand (z.B. Sperrgut, KFZ)
    /// 					
    /// </remarks>

    AT_InsuredSpecialDispatchInternational, 
    /// <remarks>
    /// 
    /// 						Standardpauschale fur internationalen Versand
    /// 					
    /// </remarks>

    AT_StandardInternational, 
    /// <remarks>
    /// 
    /// 						 Expresspauschale fur internationalen Versand
    /// 					
    /// </remarks>

    AT_ExpeditedInternational, 
    /// <remarks>
    /// 
    /// 						Sonstiger Versand (Siehe Artikelbeschreibung)
    /// 					
    /// </remarks>

    AT_OtherInternationalShipping, 
    /// <remarks>
    /// 
    /// 						CH_BITTE_TREFFEN_SIE_EINE_AUSWAHL
    /// 					
    /// </remarks>

    CH_BitteTreffenSieEineAuswahl, 
    /// <remarks>
    /// 
    /// 						Unversicherter Versand
    /// 					
    /// </remarks>

    CH_UnversicherterVersand, 
    /// <remarks>
    /// 
    /// 						Versicherter Versand
    /// 					
    /// </remarks>

    CH_VersicherterVersand, 
    /// <remarks>
    /// 
    /// 						 Einschreiben (Versand inkl. Einschreibengebuhr)
    /// 					
    /// </remarks>

    CH_EinschreibenVersandInklEinschreibengebuhr, 
    /// <remarks>
    /// 
    /// 						Nachnahme (Versand inkl. Nachnahmegebuhr)
    /// 					
    /// </remarks>

    CH_NachnahmeVersandInklNachnahmegebuhr, 
    /// <remarks>
    /// 
    /// 						Express- oder Kurierversand
    /// 					
    /// </remarks>

    CH_ExpressOrCourierInternational, 
    /// <remarks>
    /// 
    /// 						Versicherter Express- oder Kurierversand
    /// 					
    /// </remarks>

    CH_InsuredExpressOrCourierInternational, 
    /// <remarks>
    /// 
    /// 						Sonderversand (z.B. Sperrgut, KFZ)
    /// 					
    /// </remarks>

    CH_SonderversandZBSperrgutKFZ, 
    /// <remarks>
    /// 
    /// 						Versicherter Sonderversand (z.B. Sperrgut, KFZ)
    /// 					
    /// </remarks>

    CH_VersicherterSonderversandZBSperrgutKFZ, 
    /// <remarks>
    /// 
    /// 						Standardversand (A-Post/Priority)
    /// 					
    /// </remarks>

    CH_StandardversandAPostPriority, 
    /// <remarks>
    /// 
    /// 						Standardversand (B-Post/Economy)
    /// 					
    /// </remarks>

    CH_StandardversandBPostEconomy, 
    /// <remarks>
    /// 
    /// 						DE_BITTE_TREFFEN_SIE_EINE_AUSWAHL
    /// 					
    /// </remarks>

    DE_BitteTreffenSieEineAuswahl, 
    /// <remarks>
    /// 
    /// 						Einschreiben (Versand inkl. Einschreibengebuhr)
    /// 					
    /// </remarks>

    DE_EinschreibenVersandInklEinschreibengebuhr, 
    /// <remarks>
    /// 
    /// 						Nachnahme (Versand inkl. Nachnahmegebuhr)
    /// 					
    /// </remarks>

    DE_NachnahmeVersandInklNachnahmegebuhr, 
    /// <remarks>
    /// 
    /// 						Express- oder Kurierversand
    /// 					
    /// </remarks>

    DE_ExpressOrCourierInternational, 
    /// <remarks>
    /// 
    /// 						Versicherter Express- oder Kurierversand
    /// 					
    /// </remarks>

    DE_InsuredExpressOrCourierInternational, 
    /// <remarks>
    /// 
    /// 						Sonderversand (z.B. Mobel, KFZ)
    /// 					
    /// </remarks>

    DE_SonderversandZBMobelKFZ, 
    /// <remarks>
    /// 
    /// 						Versicherter Sonderversand (z.B. Mobel, KFZ)
    /// 					
    /// </remarks>

    DE_VersicherterSonderversandZBMobelKFZ, 
    /// <remarks>
    /// 
    /// 						Deutsche Post Brief
    /// 					
    /// </remarks>

    DE_DeutschePostBriefInternational, 
    /// <remarks>
    /// 
    /// 						Standard Int'l Flat Rate Postage
    /// 					
    /// </remarks>

    IE_StandardInternationalFlatRatePostage, 
    /// <remarks>
    /// 
    /// 						Expedited Int'l Flat Rate Postage
    /// 					
    /// </remarks>

    IE_ExpeditedInternationalFlatRatePostage, 
    /// <remarks>
    /// 
    /// 						Other Int'l Postage (see description)
    /// 					
    /// </remarks>

    IE_OtherInternationalPostage, 
    /// <remarks>
    /// 
    /// 						Standard Int'l Flat Rate Postage
    /// 					
    /// </remarks>

    UK_StandardInternationalFlatRatePostage, 
    /// <remarks>
    /// 
    /// 						Expedited Int'l Flat Rate Postage
    /// 					
    /// </remarks>

    UK_ExpeditedInternationalFlatRatePostage, 
    /// <remarks>
    /// 
    /// 						Other Int'l Postage (see description)
    /// 					
    /// </remarks>

    UK_OtherInternationalPostage, 
    /// <remarks>
    /// 
    /// 						Chronopost - Chrono Relais
    /// 					
    /// </remarks>

    FR_ChronopostChronoRelais, 
    /// <remarks>
    /// 
    /// 						Chrono 10
    /// 					
    /// </remarks>

    FR_Chrono10, 
    /// <remarks>
    /// 
    /// 						Chrono 13
    /// 					
    /// </remarks>

    FR_Chrono13, 
    /// <remarks>
    /// 
    /// 						Chrono 18
    /// 					
    /// </remarks>

    FR_Chrono18, 
    /// <remarks>
    /// 
    /// 						Chronopost Express International
    /// 					
    /// </remarks>

    FR_ChronopostExpressInternational, 
    /// <remarks>
    /// 
    /// 						PickUp Only Service
    /// 					
    /// </remarks>

    Pickup, 
    /// <remarks>
    /// 
    /// 						Delivery
    /// 					
    /// </remarks>

    Delivery, 
    /// <remarks>
    /// 
    /// 						Pickup Only Service
    /// 					
    /// </remarks>

    CA_Pickup, 
    /// <remarks>
    /// 
    /// 						Abholung
    /// 					
    /// </remarks>

    DE_Pickup, 
    /// <remarks>
    /// 
    /// 						Pickup
    /// 					
    /// </remarks>

    AU_Pickup, 
    /// <remarks>
    /// 
    /// 						Small Parcels
    /// 					
    /// </remarks>

    AU_SmallParcels, 
    /// <remarks>
    /// Small Parcel With Tracking
    /// </remarks>

    AU_SmallParcelWithTracking, 
    /// <remarks>
    /// Small Parcel With Tracking And Signature
    /// </remarks>

    AU_SmallParcelWithTrackingAndSignature, 
    /// <remarks>
    /// Regular Parcel With Tracking
    /// </remarks>

    AU_RegularParcelWithTracking, 
    /// <remarks>
    /// Regular Parcel With Tracking And Signature
    /// </remarks>

    AU_RegularParcelWithTrackingAndSignature, 
    /// <remarks>
    /// PrePaid Express Post Satchel 5kg
    /// </remarks>

    AU_PrePaidExpressPostSatchel5kg, 
    /// <remarks>
    /// 
    /// 						PrePaid Parcel Post Satchels 500g
    /// 					
    /// </remarks>

    AU_PrePaidParcelPostSatchels500g, 
    /// <remarks>
    /// 
    /// 						PrePaid Parcel Post Satchels 3kg
    /// 					
    /// </remarks>

    AU_PrePaidParcelPostSatchels3kg, 
    /// <remarks>
    /// 
    /// 						PrePaid Parcel Post Satchels 5kg
    /// 					
    /// </remarks>

    AU_PrePaidParcelPostSatchels5kg, 
    /// <remarks>
    /// 
    /// 						PrePaid Express Post Satchel 500g
    /// 					
    /// </remarks>

    AU_PrePaidExpressPostSatchel500g, 
    /// <remarks>
    /// 
    /// 						PrePaid Express Post Satchel 3kg
    /// 					
    /// </remarks>

    AU_PrePaidExpressPostSatchel3kg, 
    /// <remarks>
    /// 
    /// 						PrePaid Express Post Platinum 500g
    /// 					
    /// </remarks>

    AU_PrePaidExpressPostPlatinum500g, 
    /// <remarks>
    /// 
    /// 						PrePaid Express Post Platinum 3kg
    /// 					
    /// </remarks>

    AU_PrePaidExpressPostPlatinum3kg, 
    /// <remarks>
    /// 
    /// 						Express Courier International
    /// 					
    /// </remarks>

    AU_ExpressCourierInternational, 
    /// <remarks>
    /// 
    /// 						Express Post International
    /// 					
    /// </remarks>

    AU_ExpressPostInternational, 
    /// <remarks>
    /// 
    /// 						PrePaid Express Post International Envelope C5
    /// 					
    /// </remarks>

    AU_PrePaidExpressPostInternationalEnvelopeC5, 
    /// <remarks>
    /// 
    /// 						PrePaid Express Post International Envelope B4
    /// 					
    /// </remarks>

    AU_PrePaidExpressPostInternationalEnvelopeB4, 
    /// <remarks>
    /// 
    /// 						PrePaid Express Post International Satchels 2kg
    /// 					
    /// </remarks>

    AU_PrePaidExpressPostInternationalSatchels2kg, 
    /// <remarks>
    /// 
    /// 						PrePaid Express Post International Satchels 3kg
    /// 					
    /// </remarks>

    AU_PrePaidExpressPostInternationalSatchels3kg, 
    /// <remarks>
    /// 
    /// 						PrePaid Express Post International Box 5kg
    /// 					
    /// </remarks>

    AU_PrePaidExpressPostInternationalBox5kg, 
    /// <remarks>
    /// 
    /// 						PrePaid Express Post International Box 10kg
    /// 					
    /// </remarks>

    AU_PrePaidExpressPostInternationalBox10kg, 
    /// <remarks>
    /// 
    /// 						PrePaid Express Post International Box 20kg
    /// 					
    /// </remarks>

    AU_PrePaidExpressPostInternationalBox20kg, 
    /// <remarks>
    /// 
    /// 						Registered Parcel Post
    /// 					
    /// </remarks>

    AU_RegisteredParcelPost, 
    /// <remarks>
    /// 
    /// 						Registered Small Parcel
    /// 					
    /// </remarks>

    AU_RegisteredSmallParcel, 
    /// <remarks>
    /// 
    /// 						Registered Parcel Post Prepaid Satchel 500g
    /// 					
    /// </remarks>

    AU_RegisteredParcelPostPrepaidSatchel500g, 
    /// <remarks>
    /// 
    /// 						Registered Parcel Post Prepaid Satchel 3kg
    /// 					
    /// </remarks>

    AU_RegisteredParcelPostPrepaidSatchel3kg, 
    /// <remarks>
    /// 
    /// 						Registered Parcel Post Prepaid Satchel 5kg
    /// 					
    /// </remarks>

    AU_RegisteredParcelPostPrepaidSatchel5kg, 
    /// <remarks>
    /// 
    /// 						eBay Australia Post Express Post 500g Satchel
    /// 					
    /// </remarks>

    AU_ExpressPostSatchel500g, 
    /// <remarks>
    /// 
    /// 						eBay Australia Post Express Post 3kg Satchel
    /// 					
    /// </remarks>

    AU_ExpressPostSatchel3kg, 
    /// <remarks>
    /// 
    /// 						Enlevement
    /// 					
    /// </remarks>

    FR_Pickup, 
    /// <remarks>
    /// 
    /// 						Pickup
    /// 					
    /// </remarks>

    AT_Pickup, 
    /// <remarks>
    /// 
    /// 						Afhalen
    /// 					
    /// </remarks>

    BENL_Pickup, 
    /// <remarks>
    /// 
    /// 						Pickup
    /// 					
    /// </remarks>

    BEFR_Pickup, 
    /// <remarks>
    /// 
    /// 						Pickup
    /// 					
    /// </remarks>

    CH_Pickup, 
    /// <remarks>
    /// 
    /// 						Pickup
    /// 					
    /// </remarks>

    IT_Pickup, 
    /// <remarks>
    /// 
    /// 						Pickup
    /// 					
    /// </remarks>

    NL_Pickup, 
    /// <remarks>
    /// 
    /// 						Pickup
    /// 					
    /// </remarks>

    PL_Pickup, 
    /// <remarks>
    /// 
    /// 						Pickup
    /// 					
    /// </remarks>

    ES_Pickup, 
    /// <remarks>
    /// 
    /// 						Pickup
    /// 					
    /// </remarks>

    SG_Delivery, 
    /// <remarks>
    /// 
    /// 						Other 24 Hour Courier
    /// 					
    /// </remarks>

    UK_OtherCourier24, 
    /// <remarks>
    /// 
    /// 						Other 48 Hour Courier
    /// 					
    /// </remarks>

    UK_OtherCourier48, 
    /// <remarks>
    /// 
    /// 						Other Courier 3 days
    /// 					
    /// </remarks>

    UK_OtherCourier3Days, 
    /// <remarks>
    /// 
    /// 						Other Courier 5 days
    /// 					
    /// </remarks>

    UK_OtherCourier5Days, 
    /// <remarks>
    /// 
    /// 						Courier Shipping
    /// 					
    /// </remarks>

    Courier, 
    /// <remarks>
    /// 
    /// 						FedEx Priority Overnight
    /// 					
    /// </remarks>

    FedExPriorityOvernight, 
    /// <remarks>
    /// 
    /// 						FedEx Standard Overnight
    /// 					
    /// </remarks>

    FedExStandardOvernight, 
    /// <remarks>
    /// 
    /// 						FedEx 2Day
    /// 					
    /// </remarks>

    FedEx2Day, 
    /// <remarks>
    /// 
    /// 						FedEx Ground
    /// 					
    /// </remarks>

    FedExGround, 
    /// <remarks>
    /// 
    /// 						FedEx Home Delivery
    /// 					
    /// </remarks>

    FedExHomeDelivery, 
    /// <remarks>
    /// 
    /// 						FedEx Express Saver
    /// 					
    /// </remarks>

    FedExExpressSaver, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use
    /// 					
    /// </remarks>

    FedExGroundDisabled, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use
    /// 					
    /// </remarks>

    FedExHomeDeliveryDisabled, 
    /// <remarks>
    /// 
    /// 						FedEx International First
    /// 					
    /// </remarks>

    FedExInternationalFirst, 
    /// <remarks>
    /// 
    /// 						FedEx International Priority
    /// 					
    /// </remarks>

    FedExInternationalPriority, 
    /// <remarks>
    /// 
    /// 						FedEx International Economy
    /// 					
    /// </remarks>

    FedExInternationalEconomy, 
    /// <remarks>
    /// 
    /// 						FedEx International Ground
    /// 					
    /// </remarks>

    FedExInternationalGround, 
    /// <remarks>
    /// 
    /// 						Economy shipping from outside US
    /// 					
    /// </remarks>

    EconomyShippingFromOutsideUS, 
    /// <remarks>
    /// 
    /// 						Expedited shipping from outside US
    /// 					
    /// </remarks>

    ExpeditedShippingFromOutsideUS, 
    /// <remarks>
    /// 
    /// 						Standard shipping from outside US
    /// 					
    /// </remarks>

    StandardShippingFromOutsideUS, 
    /// <remarks>
    /// 
    /// 						Economy postage from outside UK
    /// 					
    /// </remarks>

    UK_EconomyShippingFromOutside, 
    /// <remarks>
    /// 
    /// 						Express postage from outside UK
    /// 					
    /// </remarks>

    UK_ExpeditedShippingFromOutside, 
    /// <remarks>
    /// 
    /// 						Standard postage from outside UK
    /// 					
    /// </remarks>

    UK_StandardShippingFromOutside, 
    /// <remarks>
    /// 
    /// 						Economy postage from outside DE
    /// 					
    /// </remarks>

    DE_SparversandAusDemAusland, 
    /// <remarks>
    /// 
    /// 						Standard postage from outside DE
    /// 					
    /// </remarks>

    DE_StandardversandAusDemAusland, 
    /// <remarks>
    /// 
    /// 						Express postage from outside DE
    /// 					
    /// </remarks>

    DE_ExpressversandAusDemAusland, 
    /// <remarks>
    /// 
    /// 						DHL 2kg Paket (nur fuer kurze Zeit)
    /// 					
    /// </remarks>

    DE_DHL2KGPaket, 
    /// <remarks>
    /// 
    /// 						Global Shipping Program
    /// 						<br/>
    /// 						This shipping service must be selected for the international leg of the shipment.
    /// 					
    /// </remarks>

    InternationalPriorityShipping, 
    /// <remarks>
    /// 
    /// 						Reserved for future use.
    /// 					
    /// </remarks>

    SameDayShipping, 
    /// <remarks>
    /// 
    /// 						Royal Mail Tracked 24
    /// 					
    /// </remarks>

    UK_RoyalMailNextDay, 
    /// <remarks>
    /// 
    /// 						Royal Mail Tracked 48
    /// 					
    /// </remarks>

    UK_RoyalMailTracked, 
    /// <remarks>
    /// 
    /// 					 This value indicates that the order will be delivered by an eBay On Demand valet through the eBay On Demand Delivery program.
    /// 					
    /// </remarks>

    eBayNowImmediateDelivery
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumerated type defines the possible values that can be used in the <b>ShippingServiceType</b> field of the <b>ShippingServiceCostOverride</b> container. 
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum ShippingServiceType
{
    /// <remarks>
    /// 
    /// 						This value should be used if the seller is overriding shipping costs for all domestic shipping services defined in the Business Policies shipping profile. 
    /// 					
    /// </remarks>

    Domestic, 
    /// <remarks>
    /// 
    /// 						This value should be used if the seller is overriding shipping costs for all international shipping services defined in the Business Policies shipping profile. 
    /// 					
    /// </remarks>

    International
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is no longer applicable as it only pertained to eBay Now orders, and eBay Now has been discontinued.
/// 				
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum ShippingTrackingEventCodeType
{
    /// <remarks>
    /// 
    /// 						This value indicates that the eBay Now order is ready for pickup by the eBay Now valet at the store.
    /// 					
    /// </remarks>

    ValetReadyForPickup, 
    /// <remarks>
    /// 
    /// 					  This value indicates that the eBay Now order was picked up by the eBay Now valet.
    /// 					
    /// </remarks>

    ValetPickedUpOrder, 
    /// <remarks>
    /// 
    /// 						This value is reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				The shipping cost model offered by the seller.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum ShippingTypeCodeType
{
    /// <remarks>
    /// 
    /// 						Flat shipping model: the seller establishes the cost of shipping and cost of shipping insurance, regardless of what any buyer-selected shipping service might charge the seller.
    /// 						<br/><br/>
    /// 						<span class="tablenote">
    /// 						<strong>Note:</strong> This shipping type includes an option for a <em>Flat Rate Freight</em> shipping service. For details about freight shipping, see <a href="https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/shipping-types-rates.html#SpecifyingFreightShipping">Specifying Freight Shipping</a> in the eBay Features Guide.
    /// 						</span>
    /// 					
    /// </remarks>

    Flat, 
    /// <remarks>
    /// 
    /// 						Calculated shipping model: the cost of shipping is
    /// 						determined in large part by the seller-offered and
    /// 						buyer-selected shipping service. The seller might assess an
    /// 						additional fee via PackagingHandlingCosts.
    /// 					
    /// </remarks>

    Calculated, 
    /// <remarks>
    /// 
    /// 						Freight shipping model. Available only for US domestic shipping. The cost of shipping is automatically determined by an affiliated third party, FreightQuote.com, based on the item location (postal code).
    /// 						<br/><br/>
    /// 						<span class="tablenote">
    /// 						<strong>Note:</strong> This shipping type cannot be set via API, but it is automatically set by eBay when a buyer selects the FreightQuote.com option on the US eBay website.
    /// 						<br/><br/>
    /// 						For details about types of freight shipping that you can specify via API, see <a href="https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/shipping-freight.html" target="_blank"> Freight shipping</a> in the Trading API User Guide.
    /// 						</span>
    /// 					
    /// </remarks>

    Freight, 
    /// <remarks>
    /// 
    /// 						Free shipping.
    /// 						This field is output-only so if you want to use AddItem to specify a free
    /// 						Shipping Cost, specify 0 in
    /// 						Item.ShippingDetails.ShippingServiceOptions.ShippingServiceCost.
    /// 					
    /// </remarks>

    Free, 
    /// <remarks>
    /// 
    /// 						The seller did not specify the shipping type.
    /// 					
    /// </remarks>

    NotSpecified, 
    /// <remarks>
    /// 
    /// 						The seller specified one or more flat domestic shipping services
    /// 						and one or more calculated international shipping services.
    /// 					
    /// </remarks>

    FlatDomesticCalculatedInternational, 
    /// <remarks>
    /// 
    /// 						The seller specified one or more calculated domestic shipping services
    /// 						and one or more flat international shipping services.
    /// 					
    /// </remarks>

    CalculatedDomesticFlatInternational, 
    /// <remarks>
    /// 
    /// 						Freight shipping model. Available only for the US, UK, AU, CA and CAFR sites, and only for domestic shipping. <code>FreightFlat</code> applies to shipping with carriers that are not affiliated with eBay. It is negotiated freight, not a flat rate. Sellers negotiate the shipping cost with their chosen carrier and the buyer before completing the sale. FreightFlat shipping may be used when calculated shipping cannot be used due to the greater weight of the item.
    /// 						<br/><br/>
    /// 						For details about freight shipping, see <a href="https://developer.ebay.com/api-docs/user-guides/static/trading-user-guide/shipping-freight.html" target="_blank">Freight shipping</a> in the Trading API User Guide.
    /// 					
    /// </remarks>

    FreightFlat, 
    /// <remarks>
    /// 
    /// 						Reserved for future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumerated type defines the sort values that can be used in the 
/// 				<b>FavoriteSearch.ItemSort</b> filter in a <b>GetMyeBayBuying</b> 
/// 				request.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum SimpleItemSortCodeType
{
    /// <remarks>
    /// 
    /// 						Sorts items by Best Match, and no sort order applies. If specified, 
    /// 						then Best Match sort also applies to CategoryHistogram.
    /// 					
    /// </remarks>

    BestMatch, 
    /// <remarks>
    /// 
    /// 						This value is reserved for future or internal use.
    /// 					
    /// </remarks>

    CustomCode, 
    /// <remarks>
    /// 
    /// 						Sorts by the end time of the listing, in ascending or descending order according to the 
    /// 						<b>SortOrder</b> value.
    /// 					
    /// </remarks>

    EndTime, 
    /// <remarks>
    /// 
    /// 						Sorts by number of bids on the item, in ascending or descending order according to the 
    /// 						<b>SortOrder</b> value.
    /// 					
    /// </remarks>

    BidCount, 
    /// <remarks>
    /// 
    /// 						Sorts by country; no sort order can be specified.
    /// 					
    /// </remarks>

    Country, 
    /// <remarks>
    /// 
    /// 						Sorts by current bid; descending order only.
    /// 					
    /// </remarks>

    CurrentBid, 
    /// <remarks>
    /// 
    /// 						Sorts by distance; ascending order only.
    /// 					
    /// </remarks>

    Distance, 
    /// <remarks>
    /// 
    /// 						Sorts by the start time of the listing; recently-listed first.
    /// 					
    /// </remarks>

    StartDate, 
    /// <remarks>
    /// 
    /// 						Sorts by BestMatchCategoryGroup, so results are grouped by Best Match within a category.
    /// 					
    /// </remarks>

    BestMatchCategoryGroup, 
    /// <remarks>
    /// 
    /// 						Sorts by total cost, which is item cost plus shipping cost. If
    /// 						<b>SortOrder</b> is included and set to 'Ascending', items are sorted 
    /// 						in the following order: Lowest total cost (for items where shipping was
    /// 						properly specified); then freight-shipping items (lowest to highest); and finally, 
    /// 						items for which shipping was not specified (lowest to highest).
    /// 					
    /// </remarks>

    PricePlusShipping
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// China, Sweden, Taiwan
/// </summary>
/// <remarks>
/// 
/// 				eBay sites (by the country in which each resides) on which a user is registered
/// 				and on which items can be listed through the Trading API.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum SiteCodeType
{
    /// <remarks>
    /// 
    /// 						USA, site ID 0, abbreviation US, currency USD.
    /// 						<br/>(<a href="http://www.ebay.com" target="_blank">http://www.ebay.com</a>)
    /// 					
    /// </remarks>

    US, 
    /// <remarks>
    /// 
    /// 						Canada, site ID 2, abbreviation CA, currencies CAD and USD.
    /// 						<br/>(<a href="http://www.ebay.ca" target="_blank">http://www.ebay.ca</a>)
    /// 					
    /// </remarks>

    Canada, 
    /// <remarks>
    /// 
    /// 						United Kingdom, site ID 3, abbreviation UK, currency GBP.
    /// 						<br/>(<a href="http://www.ebay.co.uk" target="_blank">http://www.ebay.co.uk</a>)
    /// 					
    /// </remarks>

    UK, 
    /// <remarks>
    /// 
    /// 						Australia, site ID 15, abbreviation AU, currency AUD.
    /// 						<br/>(<a href="http://www.ebay.com.au" target="_blank">http://www.ebay.com.au</a>)
    /// 					
    /// </remarks>

    Australia, 
    /// <remarks>
    /// 
    /// 						Austria, site ID 16, abbreviation AT, currency EUR.
    /// 						<br/>(<a href="http://www.ebay.at" target="_blank">http://www.ebay.at</a>)
    /// 					
    /// </remarks>

    Austria, 
    /// <remarks>
    /// 
    /// 						Belgium (French), site ID 23, abbreviation BEFR, currency EUR.
    /// 						<br/>(<a href="http://www.ebay.be" target="_blank">http://www.ebay.be</a>)
    /// 					
    /// </remarks>

    Belgium_French, 
    /// <remarks>
    /// 
    /// 						France, site ID 71, abbreviation FR, currency EUR.
    /// 						<br/>(<a href="http://www.ebay.fr" target="_blank">http://www.ebay.fr</a>)
    /// 					
    /// </remarks>

    France, 
    /// <remarks>
    /// 
    /// 						Germany, site ID 77, abbreviation DE, currency EUR.
    /// 						<br/>(<a href="http://www.ebay.de" target="_blank">http://www.ebay.de</a>)
    /// 					
    /// </remarks>

    Germany, 
    /// <remarks>
    /// 
    /// 						Italy, site ID 101, abbreviation IT, currency EUR.
    /// 						<br/>(<a href="http://www.ebay.it" target="_blank">http://www.ebay.it</a>)
    /// 					
    /// </remarks>

    Italy, 
    /// <remarks>
    /// 
    /// 						Belgium (Dutch), site ID 123, abbreviation BENL, currency EUR.
    /// 						<br/>(<a href="http://www.ebay.be" target="_blank">http://www.ebay.be</a>)
    /// 					
    /// </remarks>

    Belgium_Dutch, 
    /// <remarks>
    /// 
    /// 						Netherlands, site ID 146, abbreviation NL, currency EUR.
    /// 						<br/>(<a href="http://www.ebay.nl" target="_blank">http://www.ebay.nl</a>)
    /// 					
    /// </remarks>

    Netherlands, 
    /// <remarks>
    /// 
    /// 						Spain, site ID 186, abbreviation ES, currency EUR.
    /// 						<br/>(<a href="http://www.ebay.es" target="_blank">http://www.ebay.es</a>)
    /// 					
    /// </remarks>

    Spain, 
    /// <remarks>
    /// 
    /// 						Switzerland, site ID 193, abbreviation CH, currency CHF.
    /// 						<br/>(<a href="http://www.ebay.ch" target="_blank">http://www.ebay.ch</a>)
    /// 					
    /// </remarks>

    Switzerland, 
    /// <remarks>
    /// 
    /// 						Taiwan, currency TWD. Note that the old eBay Taiwan site is no longer in operation, and the new site does not use this API.
    /// 					
    /// </remarks>

    Taiwan, 
    /// <remarks>
    /// 
    /// 						Although Site ID 100 is still valid in APIs, eBay Motors US is no longer its own site, but just a vertical within the eBay US site.
    /// 					
    /// </remarks>

    eBayMotors, 
    /// <remarks>
    /// 
    /// 						Hong Kong, site ID 201, abbreviation HK, currency HKD.
    /// 						<br/>(<a href="http://www.ebay.com.hk" target="_blank">http://www.ebay.com.hk</a>)
    /// 					
    /// </remarks>

    HongKong, 
    /// <remarks>
    /// 
    /// 						Singapore, site ID 216, abbreviation SG, currency SGD.
    /// 						<br/>(<a href="http://www.ebay.com.sg" target="_blank">http://www.ebay.com.sg</a>)
    /// 					
    /// </remarks>

    Singapore, 
    /// <remarks>
    /// 
    /// 						India, site ID 203, abbreviation IN, currency INR.
    /// 						<br/>(<a href="http://www.ebay.in" target="_blank">http://www.ebay.in</a>)
    /// 					
    /// </remarks>

    India, 

    China, 
    /// <remarks>
    /// 
    /// 						Ireland, site ID 205, abbreviation IE, currency EUR.
    /// 						<br/>(<a href="http://www.ebay.ie" target="_blank">http://www.ebay.ie</a>)
    /// 					
    /// </remarks>

    Ireland, 
    /// <remarks>
    /// 
    /// 						Malaysia, site ID 207, abbreviation MY, currency MYR.
    /// 						<br/>(<a href="http://www.ebay.com.my" target="_blank">http://www.ebay.com.my</a>)
    /// 					
    /// </remarks>

    Malaysia, 
    /// <remarks>
    /// 
    /// 						Philippines, site ID 211, abbreviation PH, currency PHP.
    /// 						<br/>(<a href="http://www.ebay.ph" target="_blank">http://www.ebay.ph</a>)
    /// 					
    /// </remarks>

    Philippines, 
    /// <remarks>
    /// 
    /// 						Poland, site ID 212, abbreviation PL, currency PLN.
    /// 						<br/>(<a href="http://www.ebay.pl" target="_blank">http://www.ebay.pl</a>)
    /// 					
    /// </remarks>

    Poland, 

    Sweden, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode, 
    /// <remarks>
    /// 
    /// 						Canada French, site ID 210, abbreviation CAFR, currencies CAD and USD.
    /// 					
    /// </remarks>

    CanadaFrench, 
    /// <remarks>
    /// 
    /// 						Russia, site ID 215, abbreviation RU, currency RUB. Sellers must use Merchant Integration Platform (MIP) to create and revise listings on the Russia site. Russian listings cannot be created or revised through the Trading API's add and revise calls, so 'Russia' would not be a valid value to pass in through <b>Item.Site</b> field of an Add or Revise Trading API call.
    /// 					
    /// </remarks>

    Russia, 
    /// <remarks>
    /// 
    /// 						Czechia, site ID 197, abbreviation CZ, currency CZK. This site cannot be set in the <b>X-EBAY-API-SITEID header</b>, nor in the <b>Site</b> field of a request payload. This enumeration value will only be returned in output fields if applicable.
    /// 					
    /// </remarks>

    Czechia, 
    /// <remarks>
    /// 
    /// 						Cyprus, abbreviation CY, currency CYP. This site cannot be set in the <b>X-EBAY-API-SITEID header</b>, nor in the <b>Site</b> field of a request payload. This enumeration value will only be returned in output fields if applicable.
    /// 					
    /// </remarks>

    Cyprus
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type specifies the sort order of a returned array of elements. The array or list to be sorted, the sort key, and the default sort order depend on the call.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum SortOrderCodeType
{
    /// <remarks>
    /// 
    /// 						The results will be sorted by the specified key in ascending (low to high) order.
    /// 					
    /// </remarks>

    Ascending, 
    /// <remarks>
    /// 
    /// 						The results will be sorted by the specified key in descending (high to low) order.
    /// 					
    /// </remarks>

    Descending, 
    /// <remarks>
    /// 
    /// 						(out) Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This type is no longer used and was replaced by <b>ShippingLocationDetails</b>.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum StatusCodeType
{
    /// <remarks>
    /// 
    /// 						 This field is deprecated. 
    /// 					
    /// </remarks>

    Active, 
    /// <remarks>
    /// 
    /// 						 This field is deprecated. 
    /// 					
    /// </remarks>

    Inactive, 
    /// <remarks>
    /// 
    /// 						 This field is deprecated. 
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Specifies the type of action to carry out with SetStoreCategories.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum StoreCategoryUpdateActionCodeType
{
    /// <remarks>
    /// 
    /// 						(in) Add the listed categories to the store.
    /// 					
    /// </remarks>

    Add, 
    /// <remarks>
    /// 
    /// 						(in) Delete the listed categories from the store.
    /// 					
    /// </remarks>

    Delete, 
    /// <remarks>
    /// 
    /// 						(in) Move the listed categories from one place in the store category
    /// 						structure to another.
    /// 					
    /// </remarks>

    Move, 
    /// <remarks>
    /// 
    /// 						(in) Rename the listed store categories to the names provided.
    /// 					
    /// </remarks>

    Rename, 
    /// <remarks>
    /// 
    /// 						(out) Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				List of available options for how items are sorted in an eBay Store.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum StoreItemListSortOrderCodeType
{
    /// <remarks>
    /// 
    /// 						Lists items with those ending soon listed first.
    /// 					
    /// </remarks>

    EndingFirst, 
    /// <remarks>
    /// 
    /// 						Lists items with those newly listed appearing in the list first.
    /// 					
    /// </remarks>

    NewlyListed, 
    /// <remarks>
    /// 
    /// 						Lists items by price in ascending order. The item with the lowest
    /// 						starting price is listed first.
    /// 					
    /// </remarks>

    LowestPriced, 
    /// <remarks>
    /// 
    /// 						Lists items by price in descending order. The item with the highest
    /// 						starting price is listed first.
    /// 					
    /// </remarks>

    HighestPriced, 
    /// <remarks>
    /// 
    /// 						Lists items by combined price and shipping cost in ascending order. The item 
    /// 						with the lowest combined starting price plus shipping cost is listed first.
    /// 					
    /// </remarks>

    LowestPricedPlusShipping, 
    /// <remarks>
    /// 
    /// 						Reserved for future use.
    /// 						Lists items by combined price and shipping cost in descending order. The item 
    /// 						with the highest combined starting price plus shipping cost is listed first.
    /// 					
    /// </remarks>

    HighestPricedPlusShipping, 
    /// <remarks>
    /// 
    /// 					   (out) Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				How often the summary is to be delivered.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum SummaryFrequencyCodeType
{
    /// <remarks>
    /// 
    /// 						Deliver every Sunday.
    /// 					
    /// </remarks>

    EverySunday, 
    /// <remarks>
    /// 
    /// 						Deliver every Monday.
    /// 					
    /// </remarks>

    EveryMonday, 
    /// <remarks>
    /// 
    /// 						Deliver every Tuesday.
    /// 					
    /// </remarks>

    EveryTuesday, 
    /// <remarks>
    /// 
    /// 						Deliver every Wednesday.
    /// 					
    /// </remarks>

    EveryWednesday, 
    /// <remarks>
    /// 
    /// 						Deliver every Thursday.
    /// 					
    /// </remarks>

    EveryThursday, 
    /// <remarks>
    /// 
    /// 						Deliver every Friday.
    /// 					
    /// </remarks>

    EveryFriday, 
    /// <remarks>
    /// 
    /// 						Deliver every Saturday.
    /// 					
    /// </remarks>

    EverySaturday, 
    /// <remarks>
    /// 
    /// 						On day 1 of the month.
    /// 					
    /// </remarks>

    MonthlyOn1st, 
    /// <remarks>
    /// 
    /// 						On day 2 of the month.
    /// 					
    /// </remarks>

    MonthlyOn2nd, 
    /// <remarks>
    /// 
    /// 						On day 3 of the month.
    /// 					
    /// </remarks>

    MonthlyOn3rd, 
    /// <remarks>
    /// 
    /// 						On day 4 of the month.
    /// 					
    /// </remarks>

    MonthlyOn4th, 
    /// <remarks>
    /// 
    /// 						On day 5 of the month.
    /// 					
    /// </remarks>

    MonthlyOn5th, 
    /// <remarks>
    /// 
    /// 						On day 6 of the month.
    /// 					
    /// </remarks>

    MonthlyOn6th, 
    /// <remarks>
    /// 
    /// 						On day 7 of the month.
    /// 					
    /// </remarks>

    MonthlyOn7th, 
    /// <remarks>
    /// 
    /// 						On day 8 of the month.
    /// 					
    /// </remarks>

    MonthlyOn8th, 
    /// <remarks>
    /// 
    /// 						On day 9 of the month.
    /// 					
    /// </remarks>

    MonthlyOn9th, 
    /// <remarks>
    /// 
    /// 						On day 10 of the month.
    /// 					
    /// </remarks>

    MonthlyOn10th, 
    /// <remarks>
    /// 
    /// 						On day 11 of the month.
    /// 					
    /// </remarks>

    MonthlyOn11th, 
    /// <remarks>
    /// 
    /// 						On day 12 of the month.
    /// 					
    /// </remarks>

    MonthlyOn12th, 
    /// <remarks>
    /// 
    /// 						On day 13 of the month.
    /// 					
    /// </remarks>

    MonthlyOn13th, 
    /// <remarks>
    /// 
    /// 						On day 14 of the month.
    /// 					
    /// </remarks>

    MonthlyOn14th, 
    /// <remarks>
    /// 
    /// 						On day 15 of the month.
    /// 					
    /// </remarks>

    MonthlyOn15th, 
    /// <remarks>
    /// 
    /// 						On day 16 of the month.
    /// 					
    /// </remarks>

    MonthlyOn16th, 
    /// <remarks>
    /// 
    /// 						On day 17 of the month.
    /// 					
    /// </remarks>

    MonthlyOn17th, 
    /// <remarks>
    /// 
    /// 						On day 18 of the month.
    /// 					
    /// </remarks>

    MonthlyOn18th, 
    /// <remarks>
    /// 
    /// 						On day 19 of the month.
    /// 					
    /// </remarks>

    MonthlyOn19th, 
    /// <remarks>
    /// 
    /// 						On day 20 of the month.
    /// 					
    /// </remarks>

    MonthlyOn20th, 
    /// <remarks>
    /// 
    /// 						On day 21 of the month.
    /// 					
    /// </remarks>

    MonthlyOn21st, 
    /// <remarks>
    /// 
    /// 						On day 22 of the month.
    /// 					
    /// </remarks>

    MonthlyOn22nd, 
    /// <remarks>
    /// 
    /// 						On day 23 of the month.
    /// 					
    /// </remarks>

    MonthlyOn23rd, 
    /// <remarks>
    /// 
    /// 						On day 24 of the month.
    /// 					
    /// </remarks>

    MonthlyOn24th, 
    /// <remarks>
    /// 
    /// 						On day 25 of the month.
    /// 					
    /// </remarks>

    MonthlyOn25th, 
    /// <remarks>
    /// 
    /// 						On day 26 of the month.
    /// 					
    /// </remarks>

    MonthlyOn26th, 
    /// <remarks>
    /// 
    /// 						On day 27 of the month.
    /// 					
    /// </remarks>

    MonthlyOn27th, 
    /// <remarks>
    /// 
    /// 						On day 28 of the month.
    /// 					
    /// </remarks>

    MonthlyOn28th, 
    /// <remarks>
    /// 
    /// 						On day 29 of the month.
    /// 					
    /// </remarks>

    MonthlyOn29th, 
    /// <remarks>
    /// 
    /// 						On day 30 of the month.
    /// 					
    /// </remarks>

    MonthlyOn30th, 
    /// <remarks>
    /// 
    /// 						On day 31 of the month.
    /// 					
    /// </remarks>

    MonthlyOn31st, 
    /// <remarks>
    /// 
    /// 						Every 31 days.
    /// 					
    /// </remarks>

    Every31Days, 
    /// <remarks>
    /// 
    /// 						Every 60 days.
    /// 					
    /// </remarks>

    Every60Days, 

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				The period of time for which to create a summary.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum SummaryWindowPeriodCodeType
{
    /// <remarks>
    /// 
    /// 						The last 24 hours.
    /// 					
    /// </remarks>

    Last24Hours, 
    /// <remarks>
    /// 
    /// 						The last 7 days.
    /// 					
    /// </remarks>

    Last7Days, 
    /// <remarks>
    /// 
    /// 						The last 31 days.
    /// 					
    /// </remarks>

    Last31Days, 
    /// <remarks>
    /// 
    /// 						The current week.
    /// 					
    /// </remarks>

    CurrentWeek, 
    /// <remarks>
    /// 
    /// 						The prior week.
    /// 					
    /// </remarks>

    LastWeek, 
    /// <remarks>
    /// 
    /// 						The current month.
    /// 					
    /// </remarks>

    CurrentMonth, 
    /// <remarks>
    /// 
    /// 						The prior month.
    /// 					
    /// </remarks>

    LastMonth, 
    /// <remarks>
    /// 
    /// 						The last 60 days.
    /// 					
    /// </remarks>

    Last60Days, 

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Status values for the processing progress for the category structure changes
/// 				specified by a SetStoreCategories request. If the SetStoreCategories call is
/// 				processed asynchronously, then the status is returned by
/// 				GetStoreCategoryUpdateStatus, otherwise, the status is returned in the
/// 				SetStoreCategories response.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum TaskStatusCodeType
{
    /// <remarks>
    /// 
    /// 						(out) The category changes have not started.
    /// 					
    /// </remarks>

    Pending, 
    /// <remarks>
    /// 
    /// 						(out) The category changes are in progress.
    /// 					
    /// </remarks>

    InProgress, 
    /// <remarks>
    /// 
    /// 						(out) The category changes completed successfully.
    /// 					
    /// </remarks>

    Complete, 
    /// <remarks>
    /// 
    /// 						(out) The category changes failed.
    /// 					
    /// </remarks>

    Failed, 
    /// <remarks>
    /// 
    /// 						(out) Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
///         Enumerated type that lists the types of taxes that may be charged to the buyer for each order line item purchased.
///       
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum TaxDescriptionCodeType
{
    /// <remarks>
    /// 
    ///            This enumeration value indicates that standard sales tax was charged to the buyer against the order line item.
    ///           
    /// </remarks>

    SalesTax, 
    /// <remarks>
    /// 
    ///             This enumeration value indicates that an electronic waste recycling fee was charged to the buyer against the order line item.
    ///           
    /// </remarks>

    ElectronicWasteRecyclingFee, 
    /// <remarks>
    /// 
    ///             This enumeration value indicates that a tire recycling fee was charged to the buyer against the order line item.
    ///           
    /// </remarks>

    TireRecyclingFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that a Goods and Services import tax was charged to the buyer against the order line item.
    /// 						<br/><br/>
    /// 						<span class="tablenote"><b>Note: </b> At this time, this tax type is only applicable to the Australia site.
    /// 						</span>
    /// 					
    /// </remarks>

    GST, 
    /// <remarks>
    /// 
    ///             Reserved for internal or future use.
    ///           
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumerated type contains the possible values that can be returned in the <b>name</b> attribute of the <b>BuyerTaxIdentifier.Attribute</b> field. Currently, this type only contains one enumeration value, but in the future, other attributes related to the tax ID may be created for this type.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum TaxIdentifierAttributeCodeType
{
    /// <remarks>
    /// 
    /// 						This value indicates that the value returned in the <b>BuyerTaxIdentifier.Attribute</b> field is the country that issued the buyer tax ID.
    /// 					
    /// </remarks>

    IssuingCountry, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
///         Enumerated type that lists the types of taxes that may be charged to the buyer for each order line item purchased.
///       
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum TaxTypeCodeType
{
    /// <remarks>
    /// 
    ///             This enumeration value indicates that standard sales tax was charged to the buyer against the order line item.
    ///           
    /// </remarks>

    SalesTax, 
    /// <remarks>
    /// 
    ///             This enumeration value indicates that an electronic waste recycling fee was charged to the buyer against the order line item.
    ///            
    /// </remarks>

    WasteRecyclingFee, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that a Goods and Services import tax was charged to the buyer against the order line item.
    /// 						<br/><br/>
    /// 						This tax type is only applicable for items being sold by Australian or New Zealand sellers.
    /// 					
    /// </remarks>

    GST, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that French VAT tax was charged to the buyer against the order line item.
    /// 						<br/><br/>
    /// 						This tax type is only applicable for items sold on the eBay France marketplaces.
    /// 					
    /// </remarks>

    ImportVAT, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that European VAT tax was charged to the buyer against the order line item.
    /// 						<br/><br/>
    /// 						This enumeration applies to VAT tax on the UK marketplace, the Norway marketplace, and other EU marketplaces (except for France). 
    /// 					
    /// </remarks>

    VAT, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Contains the status of the token
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum TokenStatusCodeType
{
    /// <remarks>
    /// 
    /// 					Token is Active
    /// 				
    /// </remarks>

    Active, 
    /// <remarks>
    /// 
    /// 					Token is Expired
    /// 				
    /// </remarks>

    Expired, 
    /// <remarks>
    /// 
    /// 					Token is revoked by eBay
    /// 				
    /// </remarks>

    RevokedByeBay, 
    /// <remarks>
    /// 
    /// 					Token is revoked by user
    /// 				
    /// </remarks>

    RevokedByUser, 
    /// <remarks>
    /// 
    /// 					Token is revoked by Application
    /// 				
    /// </remarks>

    RevokedByApp, 
    /// <remarks>
    /// 
    /// 					Token is Invalid
    /// 				
    /// </remarks>

    Invalid, 
    /// <remarks>
    /// 
    /// 					Reserved for internal or future use
    /// 				
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Enumerated type that consists of the Top-Rated Seller programs that exist around the world.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum TopRatedProgramCodeType
{
    /// <remarks>
    /// 
    /// 						If this enumeration value is returned, it indicates that the eBay user is in the US Top-Rated Seller program.
    /// 					
    /// </remarks>

    US, 
    /// <remarks>
    /// 
    /// 						If this enumeration value is returned, it indicates that the eBay user is in the UK Top-Rated Seller program.
    /// 					
    /// </remarks>

    UK, 
    /// <remarks>
    /// 
    /// 						If this enumeration value is returned, it indicates that the eBay user is in the Germany Top-Rated Seller program.
    /// 					
    /// </remarks>

    DE, 
    /// <remarks>
    /// 
    /// 						If this enumeration value is returned, it indicates that the eBay user is in the Global Top-Rated Seller program.
    /// 					
    /// </remarks>

    Global, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Enumerated type listing the possible roles an eBay user may have in regards to an 
/// 				eBay order. 
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum TradingRoleCodeType
{
    /// <remarks>
    /// 
    /// 						The eBay user is acting as the buyer for the order(s). In <b>GetOrders</b>, 
    /// 						this value should be passed into the <b>OrderRole</b> field in the 
    /// 						request to retrieve orders in which the calling eBay user is the buyer in the order.
    /// 					
    /// </remarks>

    Buyer, 
    /// <remarks>
    /// 
    /// 						The eBay user is acting as the seller for the order(s). In <b>GetOrders</b>, 
    /// 						this value should be passed into the <b>OrderRole</b> field in the 
    /// 						request to retrieve orders in which the calling eBay user is the seller in the order.
    /// 					
    /// </remarks>

    Seller, 
    /// <remarks>
    /// 
    /// 						This value is reserved for future or internal use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// eBay
/// </summary>
/// <remarks>
/// 
/// 				<span class="tablenote"><b>Note: </b> Currently, the only supported value for this enumeration type is <code>eBay</code>. Half.com listings will no longer be supported in APIs.
/// 				</span>
/// 				Specifies the site on which the purchase was made.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum TransactionPlatformCodeType
{
    /// <remarks>
    /// 
    /// 						This value indicates the purchase occurred on an eBay marketplace site.
    /// 					
    /// </remarks>

    eBay, 
    /// <remarks>
    /// 
    /// 						<span class="tablenote"><b>Note: </b> eBay Express no longer exists.
    /// 						</span>
    /// 						The order line item was created on the eBay Express site.
    /// 					
    /// </remarks>

    Express, 
    /// <remarks>
    /// 
    /// 						<span class="tablenote"><b>Note: </b> Half.com listings will no longer be supported in APIs.
    /// 						</span>
    /// 						The order line item was created on Half.com site.
    /// 					
    /// </remarks>

    Half, 
    /// <remarks>
    /// 
    /// 						<span class="tablenote"><b>Note: </b> Shopping.com listings are no longer supported in APIs.
    /// 						</span>
    /// 						The order line item was created on the Shopping.com site.
    /// 					
    /// </remarks>

    Shopping, 
    /// <remarks>
    /// 
    /// 						<span class="tablenote"><b>Note: </b> World Of Good is no longer associated with eBay.
    /// 						</span>
    /// 						The order line item was created on the WorldOfGood site.
    /// 					
    /// </remarks>

    WorldOfGood, 
    /// <remarks>
    /// 
    /// 						 Reserved for future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// MandateReferenceNumber
/// </summary>
/// <remarks>
/// 
/// 				Enumerated type defining the possible values that can returned in the attribute of the <b>Payment.ReferenceID</b> and <b>Payment.PaymentReferenceID</b> field.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum TransactionReferenceCodeType
{
    /// <remarks>
    /// 
    /// 						This value is the unique identifier of an external payment transaction.
    /// 					
    /// </remarks>

    ExternalTransactionID, 
    /// <remarks>
    /// 
    /// 						No longer applicable as the eBay Now service is no longer available to buyers and sellers.
    /// 					
    /// </remarks>

    MandateReferenceNumber, 
    /// <remarks>
    /// 
    /// 						This value is reserved for future or internal use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumerated type defines the rate types that United Parcel Service (UPS) can offer to sellers for shipping.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum UPSRateOptionCodeType
{
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the seller is currently receiving the UPS Daily Rate for shipping items.
    /// 					
    /// </remarks>

    UPSDailyRates, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the seller is currently receiving the UPS On-Demand Rate for shipping items.
    /// 					
    /// </remarks>

    UPSOnDemandRates, 
    /// <remarks>
    /// 
    /// 						 Reserved for internal or future use
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// AppealProductUrl, CreateProductUrl, ManageProductUrl
/// </summary>
/// <remarks>
/// 
/// 				This enumerated type consists of the different eBay URLs that can be returned under the <b>URLDetails</b> containers of a <b>GeteBayDetails</b> response.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum URLTypeCodeType
{
    /// <remarks>
    /// 
    /// 						This value indicates that the URL in the corresponding <b>URL</b> field is the base URL for the View Item page. The user will just input the Item ID for a listing at the end of the URL to retrieve the View Item page for that listing.
    /// 					
    /// </remarks>

    ViewItemURL, 
    /// <remarks>
    /// 
    /// 						This value indicates that the URL in the corresponding <b>URL</b> field is the base URL for the eBay User page. The user will just input the user ID for an eBay user at the end of the URL to retrieve the eBay User page.
    /// 					
    /// </remarks>

    ViewUserURL, 
    /// <remarks>
    /// 
    /// 						This value indicates that the URL in the corresponding <b>URL</b> field is the URL for the My eBay home page.
    /// 					
    /// </remarks>

    MyeBayURL, 
    /// <remarks>
    /// 
    /// 						This value indicates that the URL in the corresponding <b>URL</b> field is the URL for the user's My eBay Bids/Offer page.
    /// 					
    /// </remarks>

    MyeBayBiddingURL, 
    /// <remarks>
    /// 
    /// 						This value indicates that the URL in the corresponding <b>URL</b> field is the URL to the 'Didn't Win' section on the user's My eBay Bids/Offer page.
    /// 					
    /// </remarks>

    MyeBayNotWonURL, 
    /// <remarks>
    /// 
    /// 						This value indicates that the URL in the corresponding <b>URL</b> field is the URL to the 'Bidding' section on the user's My eBay Bids/Offer page.
    /// 					
    /// </remarks>

    MyeBayWonURL, 
    /// <remarks>
    /// 
    /// 						This value indicates that the URL in the corresponding <b>URL</b> field is the URL to the user's My eBay Watch List page.
    /// 					
    /// </remarks>

    MyeBayWatchingURL, 
    /// <remarks>
    /// 
    /// 						This value indicates that the URL in the corresponding <b>URL</b> field is the base URL to the user's eBay Store page. The seller will just add a forward slash (/) and their eBay Store name to get to their eBay Store home page.
    /// 					
    /// </remarks>

    eBayStoreURL, 
    /// <remarks>
    /// 
    /// 						This value indicates that the URL in the corresponding <b>URL</b> field is the full URL to the small version of the eBay Marketplace logo.
    /// 					
    /// </remarks>

    SmallLogoURL, 
    /// <remarks>
    /// 
    /// 						This value indicates that the URL in the corresponding <b>URL</b> field is the full URL to the medium version of the eBay Marketplace logo.
    /// 					
    /// </remarks>

    MediumLogoURL, 
    /// <remarks>
    /// 
    /// 						This value indicates that the URL in the corresponding <b>URL</b> field is the full URL to the large version of the eBay Marketplace logo.
    /// 					
    /// </remarks>

    LargeLogoURL, 
    /// <remarks>
    /// 
    /// 						This value indicates that the URL in the corresponding <b>URL</b> field is the base URL that a seller needs to enter the UI flow to make a request that a missing product be added to the eBay Catalog.
    /// 						<br>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 							Catalog change requests through the UI flow are currently not available, so this URL will not be returned in <b>GeteBayDetails</b>.
    /// 						</span>
    /// 					
    /// </remarks>

    CreateProductUrl, 
    /// <remarks>
    /// 
    /// 						This value indicates that the URL in the corresponding <b>URL</b> field is the base URL that a seller needs to enter the UI flow to make a request that an existing eBay Catalog product be revised. The seller will have to append the ePID value of the catalog product to the end of the URL.
    /// 						<br>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 							Catalog change requests through the UI flow are currently not available, so this URL will not be returned in <b>GeteBayDetails</b>.
    /// 						</span>
    /// 					
    /// </remarks>

    AppealProductUrl, 
    /// <remarks>
    /// 
    /// 						This value indicates that the URL in the corresponding <b>URL</b> field is the base URL that a seller needs to enter the UI flow to get the status of a catalog change request (request for a new catalog product or request to revise an existing product). The seller will have to append the identifier of the catalog change request to the end of the URL.
    /// 						<br>
    /// 						<br>
    /// 						<span class="tablenote"><b>Note:</b>
    /// 							Catalog change requests through the UI flow are currently not available, so this URL will not be returned in <b>GeteBayDetails</b>.
    /// 						</span>
    /// 					
    /// </remarks>

    ManageProductUrl, 
    /// <remarks>
    /// 
    /// 						Reserved for future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				This enumerated type defines the rate types that United States Postal Service (USPS) can offer to sellers for shipping.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum USPSRateOptionCodeType
{
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the seller is currently receiving the USPS Discounted Rate for shipping items.
    /// 					
    /// </remarks>

    USPSDiscounted, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that the seller is currently receiving the USPS Retail Rate for shipping items.
    /// 					
    /// </remarks>

    USPSRetail, 
    /// <remarks>
    /// 
    /// 						 Reserved for internal or future use
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Units of measure that you can use to specify properties such as weight and size
/// 				dimensions.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum UnitCodeType
{
    /// <remarks>
    /// 
    /// 						Kilograms
    /// 					
    /// </remarks>

    kg, 
    /// <remarks>
    /// 
    /// 						Grams
    /// 					
    /// </remarks>

    gm, 
    /// <remarks>
    /// 
    /// 						Pounds
    /// 					
    /// </remarks>

    lbs, 
    /// <remarks>
    /// 
    /// 						Ounces
    /// 					
    /// </remarks>

    oz, 
    /// <remarks>
    /// 
    /// 						Centimeters
    /// 					
    /// </remarks>

    cm, 
    /// <remarks>
    /// 
    /// 						Milimeters
    /// 					
    /// </remarks>

    mm, 
    /// <remarks>
    /// 
    /// 						Inches
    /// 					
    /// </remarks>

    inches, 
    /// <remarks>
    /// 
    /// 						Feet
    /// 					
    /// </remarks>

    ft, 
    /// <remarks>
    /// 
    /// 						Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Enumerated type this is used to indicate the type of user that initiated a monetary transaction.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum UserIdentityCodeType
{
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that an eBay user initiated the monetary transaction.
    /// 					
    /// </remarks>

    eBayUser, 
    /// <remarks>
    /// 
    /// 						This enumeration value indicates that an eBay partner (such as Pitney Bowes) initiated the monetary transaction.
    /// 					
    /// </remarks>

    eBayPartner, 
    /// <remarks>
    /// 
    /// 						This value is reserved for future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// UnconfirmedPassport, CreditCardVerifyPassport, UnconfirmedExpress, CreditCardVerifyHalfOptIn, UnconfirmedHalfOptIn
/// </summary>
/// <remarks>
/// 
/// 				These codes indicate the current state or status of an eBay
/// 				user account.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum UserStatusCodeType
{
    /// <remarks>
    /// 
    /// 						This value indicates that the status of the user's eBay account is unknown. This value should seldom, if ever, be returned and typically represents a problem.
    /// 					
    /// </remarks>

    Unknown, 
    /// <remarks>
    /// 
    /// 						This value indicates that the eBay user's account is suspended. A user with a suspended account cannot participate in buying or selling activity.
    /// 					
    /// </remarks>

    Suspended, 
    /// <remarks>
    /// 
    /// 						This value indicates that the eBay user's account is a confirmed, active account.
    /// 					
    /// </remarks>

    Confirmed, 
    /// <remarks>
    /// 
    /// 						This value indicates that the eBay User has completed online registration, but has either not responded to confirmation email or has not yet been sent the confirmation email. Or, if this user began registration as a seller but did not complete it, the user will have this status. A seller with this status can begin to list an item but cannot complete the listing until the seller completes seller registration.
    /// 					
    /// </remarks>

    Unconfirmed, 
    /// <remarks>
    /// 
    /// 						This value indicates that the user originally registered on AuctionWeb (pre-eBay), but that user never re-registered on eBay. Note that there are very few (if any) eBay accounts in the 'Ghost' state.
    /// 					
    /// </remarks>

    Ghost, 
    /// <remarks>
    /// 
    /// 						This value indicates that the eBay user's account is in maintenance mode.
    /// 					
    /// </remarks>

    InMaintenance, 
    /// <remarks>
    /// 
    /// 						This value indicates that the eBay user's account has been deleted.
    /// 					
    /// </remarks>

    Deleted, 
    /// <remarks>
    /// 
    /// 						This value indicates that the user has completed the registration and confirmation process, but needs to complete verification of credit card information. A user has this status if this user began registration as a seller but did not complete it. A seller with this status can begin to list an item but cannot complete the listing until the seller completes seller registration.
    /// 					
    /// </remarks>

    CreditCardVerify, 
    /// <remarks>
    /// 
    /// 						This value indicates that the eBay user's account is currently on hold. A common reason for a user's account to go on hold is a non-payment of the monthly eBay invoice. A user cannot sell or buy items if their account is on hold.
    /// 					
    /// </remarks>

    AccountOnHold, 
    /// <remarks>
    /// 
    /// 						This value indicates that the user record has been merged with another account record for the same user
    /// 					
    /// </remarks>

    Merged, 
    /// <remarks>
    /// 
    /// 						This value indicates that the eBay User has completed online registration, and eBay has just sent the user a registration code in a confirmation email. The eBay user will have to respond to the confirmation email to get their account confirmed.
    /// 					
    /// </remarks>

    RegistrationCodeMailOut, 
    /// <remarks>
    /// 
    /// 						This value indicates that the user has scheduled an account closure but eBay has yet to process the closure request.
    /// 					
    /// </remarks>

    TermPending, 
    /// <remarks>
    /// 
    /// 						<span class="tablenote"><b>Note: </b> The Half.com site has been shut down, so this value is no longer applicable.
    /// 						</span>
    /// 						User has completed the registration for Half.com and opted
    /// 						to automatically also be registered with eBay, but the
    /// 						registration confirmation is still pending
    /// 					
    /// </remarks>

    UnconfirmedHalfOptIn, 
    /// <remarks>
    /// 
    /// 						<span class="tablenote"><b>Note: </b> The Half.com site has been shut down, so this value is no longer applicable.
    /// 						</span>
    /// 						User has completed the registration for Half.com and opted to automatically also be registered with eBay, but the user needs to complete verification of credit card information. A user has this status on eBay if this user began registration as a seller but did not complete it. A seller with this status can begin to list an item but cannot complete the listing until the seller completes seller registration.
    /// 					
    /// </remarks>

    CreditCardVerifyHalfOptIn, 
    /// <remarks>
    /// 
    /// 						This value is no longer applicable.
    /// 					
    /// </remarks>

    UnconfirmedPassport, 
    /// <remarks>
    /// 
    /// 						This value is no longer applicable.
    /// 					
    /// </remarks>

    CreditCardVerifyPassport, 
    /// <remarks>
    /// 
    /// 						This value is no longer applicable.
    /// 					
    /// </remarks>

    UnconfirmedExpress, 
    /// <remarks>
    /// 
    /// 						This value indicates that the user is a guest user. The user has not added a password and has not confirmed an email address.
    /// 						The user has not signed up as a regular user, but has agreed to the User Agreement and Privacy Policy.
    /// 						The user has been through the buying flow for a guest;
    /// 						the user has been through checkout using the streamlined Buy-It-Now flow.
    /// 					
    /// </remarks>

    Guest, 
    /// <remarks>
    /// 
    /// 						  Reserved for internal or future use
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Indicates whether or not the user is subject to VAT.
/// 				Users who have registered with eBay as VAT-exempt are not
/// 				subject to VAT. See documentation on Value-Added Tax (VAT).
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum VATStatusCodeType
{
    /// <remarks>
    /// 
    /// 						(out) VAT is not applicable
    /// 					
    /// </remarks>

    NoVATTax, 
    /// <remarks>
    /// 
    /// 						(out) Residence in a country with VAT and user is not registered as VAT-exempt
    /// 					
    /// </remarks>

    VATTax, 
    /// <remarks>
    /// 
    /// 						(out) Residence in a country with VAT and user is registered as VAT-exempt
    /// 					
    /// </remarks>

    VATExempt, 
    /// <remarks>
    /// 
    /// 						(out) Reserved for internal or future use
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// Decimal,Numeric,Text,ISBN,UPC,EAN,Date
/// </summary>
/// <remarks>
/// 
/// 				This enumeration type is used by the order management calls (like <b>GetOrders</b>), and indicates the type of tax ID used in the <strong>BuyerTaxIdentifier</strong> container..
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum ValueTypeCodeType
{
    /// <remarks>
    /// 
    /// 						This value is deprecated.
    /// 					
    /// </remarks>

    Decimal, 
    /// <remarks>
    /// 
    /// 						This value is deprecated.
    /// 					
    /// </remarks>

    Numeric, 
    /// <remarks>
    /// 
    /// 						This value is deprecated.
    /// 					
    /// </remarks>

    Text, 
    /// <remarks>
    /// 
    /// 						This value is deprecated.
    /// 					
    /// </remarks>

    ISBN, 
    /// <remarks>
    /// 
    /// 						This value is deprecated.
    /// 					
    /// </remarks>

    UPC, 
    /// <remarks>
    /// 
    /// 						This value is deprecated.
    /// 					
    /// </remarks>

    EAN, 
    /// <remarks>
    /// 
    /// 						This value is deprecated.
    /// 					
    /// </remarks>

    Date, 
    /// <remarks>
    /// 
    /// 						This value indicates that the tax ID in the <b>ID</b> field is a Codice Fiscale ID, which is an identifier used by the Italian government to identify taxpayers in Italy.
    /// 					
    /// </remarks>

    CodiceFiscale, 
    /// <remarks>
    /// 
    /// 						 This value indicates that the tax ID in the <b>ID</b> field is a Spanish National Identity Number, which is one identifier used by the Spanish government to identify taxpayers in Spain. In Spanish, this ID is known as the 'Documento nacional de identidad'. The other tax identifier for Spanish residents is the NIE number, or 'Numero de Identidad de Extranjero'.
    /// 					
    /// </remarks>

    DNI, 
    /// <remarks>
    /// 
    /// 						This value indicates that the tax ID in the <b>ID</b> field is a Russian Passport number.
    /// 					
    /// </remarks>

    RussianPassport, 
    /// <remarks>
    /// 
    /// 							This value indicates that the tax ID in the <b>ID</b> field is a Tax Registration Number, which is an identifier used by the Brazilian government to identify taxpayers in Brazil. In Portuguese, this ID is known as the 'Cadastro de Pessoas Fisicas', or 'CPF'.
    /// 						
    /// </remarks>

    CPFTaxID, 
    /// <remarks>
    /// 
    /// 							This value indicates that the tax ID in the <b>ID</b> field is a Turkish Identification Number, which is an identifier used by the Turkish government to identify taxpayers in Turkey. In Turkish, this ID is known as the 'Turkiye Cumhuriyeti Kimlik Numarasi', often abbreviated as T.C. Kimlik No.
    /// 					
    /// </remarks>

    TurkeyID, 
    /// <remarks>
    /// 
    /// 							This value indicates that the tax ID in the <b>ID</b> field is a NIE Number, which is one identifier used by the Spanish government to identify taxpayers in Spain. 'NIE' stands for 'Numero de Identidad de Extranjero'. The other tax identifier for Spanish residents is the DNI number, or 'Documento nacional de identidad'. Spanish residents can also be identified by their Spanish VAT (Value-Added Tax) number, which is also called the 'Numero de Identificacion Fiscal' or NIF.
    /// 						
    /// </remarks>

    NIE, 
    /// <remarks>
    /// 
    /// 							This value indicates that the ID in the <b>ID</b> field is an NIF Number, which is also known as their Spanish VAT (Value-Added Tax) number. 'NIF' stands for 'Numero de Identificacion Fiscal'. Spanish residents can also be identified by their DNI ('Documento nacional de identidad') number or their NIE ('Numero de Identidad de Extranjero') number.
    /// 						
    /// </remarks>

    NIF, 
    /// <remarks>
    /// 
    /// 							 	This value indicates that the tax ID in the <b>ID</b> field is a Cedula number, which is an identifier used by the Chilean, Columbian, and Dominican Republic governments to identify taxpayers in those countries. This ID is sometimes referred to as a 'Cedula de Identidad'.
    /// 							
    /// </remarks>

    CEDULA, 
    /// <remarks>
    /// 
    /// 						 This value indicates that the tax ID in the <b>ID</b> field is a NIT number, which is an identifier used by the Guatemalan government to identify taxpayers in Guatemala. In Spanish, this ID is known as the 'Numero de identificacion tributaria'.
    /// 					
    /// </remarks>

    NIT, 
    /// <remarks>
    /// 
    /// 						 This value indicates that the identifier in the <b>ID</b> field is a driver's license number.
    /// 					
    /// </remarks>

    DriverLicense, 
    /// <remarks>
    /// 
    /// 						This value indicates that the tax ID in the <b>ID</b> field is a CNPJ number, which is an identifier used by the Brazilian government to identify taxpayers in Brazil. In Portuguese, this ID is known as the 'Cadastro Nacional da Pessoa Juridica'.
    /// 					
    /// </remarks>

    CNPJ, 
    /// <remarks>
    /// 
    /// 						This value indicates that the tax ID in the <b>ID</b> field is a VAT Identification Number for the buyer.
    /// 					
    /// </remarks>

    VATIN, 
    /// <remarks>
    /// 
    /// 						Reserved for future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				The VeRO reporting status for an item.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum VeROItemStatusCodeType
{
    /// <remarks>
    /// 
    /// 						(out) The VeRO report request for the item has been received by eBay.
    /// 					
    /// </remarks>

    Received, 
    /// <remarks>
    /// 
    /// 						(out) The VeRO report request for the item has been submitted to eBay.
    /// 					
    /// </remarks>

    Submitted, 
    /// <remarks>
    /// 
    /// 						(out) The reported item has been ended by eBay.
    /// 					
    /// </remarks>

    Removed, 
    /// <remarks>
    /// 
    /// 						(out) The VeRO report request for the item failed.
    /// 					
    /// </remarks>

    SubmissionFailed, 
    /// <remarks>
    /// 
    /// 						(out) The VeRO report request for the item has been received by eBay, but 
    /// 						additional clarification is needed before eBay can end the item. 
    /// 					
    /// </remarks>

    ClarificationRequired, 
    /// <remarks>
    /// 
    /// 						(out) Reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <remarks>
/// 
/// 				Enumerated type that contains the possible states of a VeRO Report packet. A VeRO Report packet is a set of one or more items that have been reported by a Verified Rights Owner as infringing upon the owner's intellectual property rights.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum VeROReportPacketStatusCodeType
{
    /// <remarks>
    /// 
    /// 						This value indicates that the VeRO Report packet has been received by eBay.
    /// 					
    /// </remarks>

    Received, 
    /// <remarks>
    /// 
    /// 						This value indicates that eBay is in the process of reviewing the VeRO Report packet. For a VeRO Report packet consisting of multiple items, the call user can look at the <b>ReportedItemDetails</b> container in the <b>GetVeROReportStatus</b> response to get more details about individual items in the VeRO Report packet.
    /// 					
    /// </remarks>

    InProcess, 
    /// <remarks>
    /// 
    /// 						This value indicates that the VeRO Report packet has been processed by eBay.
    /// 					
    /// </remarks>

    Processed, 
    /// <remarks>
    /// 
    /// 						This value is reserved for internal or future use.
    /// 					
    /// </remarks>

    CustomCode
}

}

namespace eBay.Service.Core.Soap
{

/// <summary>
/// Cingular, Dobson, Alltel, Leap, Amena
/// </summary>
/// <remarks>
/// 
/// 				This enumerated type contains a list of wireless carriers that may be providing SMS messages for a Platform Notifications subscriber.
/// 			
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.7.3056.0")]
[System.Serializable()]
[System.Xml.Serialization.XmlType(Namespace = "urn:ebay:apis:eBLBaseComponents")]
public enum WirelessCarrierIDCodeType
{
    /// <remarks>
    /// 
    /// 						This value is no longer applicable, as Cingular is no longer in existence.
    /// 					
    /// </remarks>

    Cingular, 
    /// <remarks>
    /// 
    /// 						This value indicates that T-Mobile is providing SMS messages for the Platform Notifications subscriber.
    /// 					
    /// </remarks>

    TMobile, 
    /// <remarks>
    /// 
    /// 						This value indicates that Sprint is providing SMS messages for the Platform Notifications subscriber.
    /// 					
    /// </remarks>

    Sprint, 
    /// <remarks>
    /// 
    /// 						This value is no longer applicable, as Nextel was purchased by Sprint.
    /// 					
    /// </remarks>

    Nextel, 
    /// <remarks>
    /// 
    /// 						This value indicates that Verizon is providing SMS messages for the Platform Notifications subscriber.
    /// 					
    /// </remarks>

    Verizon, 
    /// <remarks>
    /// 
    /// 						This value indicates that Cincinnati Bell is providing SMS messages for the Platform Notifications subscriber.
    /// 					
    /// </remarks>

    CincinnatiBell, 
    /// <remarks>
    /// 
    /// 						This value is no longer applicable, as Dobson is no longer in existence.
    /// 					
    /// </remarks>

    Dobson, 
    /// <remarks>
    /// 
    /// 						This value is no longer applicable, as Alltel is no longer in existence.
    /// 					
    /// </remarks>

    Alltel, 
    /// <remarks>
    /// 
    /// 						This value is no longer applicable, as Leap is no longer in existence.
    /// 					
    /// </remarks>

    Leap, 
    /// <remarks>
    /// 
    /// 						This value indicates that US Cellular is providing SMS messages for the Platform Notifications subscriber.
    /// 					
    /// </remarks>

    USCellular, 
    /// <remarks>
    /// 
    /// 						This value indicates that Movistar is providing SMS messages for the Platform Notifications subscriber.
    /// 					
    /// </remarks>

    Movistar, 
    /// <remarks>
    /// 
    /// 						This value is no longer applicable, as Amena is no longer in existence.
    /// 					
    /// </remarks>

    Amena, 
    /// <remarks>
    /// 
    /// 						This value indicates that Vodafone is providing SMS messages for the Platform Notifications subscriber.
    /// 					
    /// </remarks>

    Vodafone, 
    /// <remarks>
    /// 
    /// 						This value indicates that AT&T is providing SMS messages for the Platform Notifications subscriber.
    /// 					
    /// </remarks>

    ATT, 
    /// <remarks>
    /// 
    /// 						This value is reserved for future use.
    /// 					
    /// </remarks>

    CustomCode
}

}
