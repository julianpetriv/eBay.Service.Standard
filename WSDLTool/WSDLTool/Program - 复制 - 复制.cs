// Generated by Xamasoft JSON Class Generator
// http://www.xamasoft.com/json-class-generator

using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using Example.SampleResponse1JsonTypes;

namespace Example.SampleResponse1JsonTypes
{

    internal class FirstName
    {

        [JsonProperty("type")]
        public string[] Type { get; set; }
    }

    internal class MiddleName
    {

        [JsonProperty("type")]
        public string[] Type { get; set; }
    }

    internal class LastName
    {

        [JsonProperty("type")]
        public string[] Type { get; set; }
    }

    internal class Gender
    {

        [JsonProperty("$ref")]
        public string Ref { get; set; }
    }

    internal class NumberWithRange
    {

        [JsonProperty("type")]
        public string Type { get; set; }

        [JsonProperty("format")]
        public string Format { get; set; }
    }

    internal class Birthday
    {

        [JsonProperty("type")]
        public string Type { get; set; }

        [JsonProperty("format")]
        public string Format { get; set; }
    }

    internal class OneOf
    {

        [JsonProperty("type")]
        public string Type { get; set; }

        [JsonProperty("$ref")]
        public string Ref { get; set; }
    }

    internal class Company
    {

        [JsonProperty("oneOf")]
        public OneOf[] OneOf { get; set; }
    }

    internal class Items
    {

        [JsonProperty("$ref")]
        public string Ref { get; set; }
    }

    internal class Cars
    {

        [JsonProperty("type")]
        public string[] Type { get; set; }

        [JsonProperty("items")]
        public Items Items { get; set; }
    }

    internal class Properties
    {

        [JsonProperty("FirstName")]
        public FirstName FirstName { get; set; }

        [JsonProperty("MiddleName")]
        public MiddleName MiddleName { get; set; }

        [JsonProperty("LastName")]
        public LastName LastName { get; set; }

        [JsonProperty("Gender")]
        public Gender Gender { get; set; }

        [JsonProperty("NumberWithRange")]
        public NumberWithRange NumberWithRange { get; set; }

        [JsonProperty("Birthday")]
        public Birthday Birthday { get; set; }

        [JsonProperty("Company")]
        public Company Company { get; set; }

        [JsonProperty("Cars")]
        public Cars Cars { get; set; }
    }

    internal class Gender2
    {

        [JsonProperty("type")]
        public string Type { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("x-enumNames")]
        public string[] XEnumNames { get; set; }

        [JsonProperty("enum")]
        public int[] Enum { get; set; }
    }

    internal class Name
    {

        [JsonProperty("type")]
        public string[] Type { get; set; }
    }

    internal class Properties2
    {

        [JsonProperty("Name")]
        public Name Name { get; set; }
    }

    internal class Company2
    {

        [JsonProperty("type")]
        public string Type { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public Properties2 Properties { get; set; }
    }

    internal class Name2
    {

        [JsonProperty("type")]
        public string[] Type { get; set; }
    }

    internal class OneOf2
    {

        [JsonProperty("type")]
        public string Type { get; set; }

        [JsonProperty("$ref")]
        public string Ref { get; set; }
    }

    internal class Manufacturer
    {

        [JsonProperty("oneOf")]
        public OneOf2[] OneOf { get; set; }
    }

    internal class Properties3
    {

        [JsonProperty("Name")]
        public Name2 Name { get; set; }

        [JsonProperty("Manufacturer")]
        public Manufacturer Manufacturer { get; set; }
    }

    internal class Car
    {

        [JsonProperty("type")]
        public string Type { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public Properties3 Properties { get; set; }
    }

    internal class Definitions
    {

        [JsonProperty("Gender")]
        public Gender2 Gender { get; set; }

        [JsonProperty("Company")]
        public Company2 Company { get; set; }

        [JsonProperty("Car")]
        public Car Car { get; set; }
    }

}

namespace Example
{

    internal class SampleResponse1
    {

        [JsonProperty("$schema")]
        public string Schema { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("type")]
        public string Type { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public Properties Properties { get; set; }

        [JsonProperty("definitions")]
        public Definitions Definitions { get; set; }
    }

}
